= V4 Outline MultiLine NoSorting TabWidth=30

H="Project Notes"


/* Libraries */
libname hrsclean 'E:\data\hrs_cleaned';
libname maid 'E:\data\CMS_DUA_51675_2014\Medicaid_merged';
libname mcare 'E:\data\CMS_DUA_51675_2014\Merged\SAS'

H="********"


H="Create IAH Flags"
libname hrs 'E:\data\hrs_cleaned';
libname maid 'E:\data\CMS_DUA_51675_2014\Medicaid_merged';
libname medcare 'E:\data\CMS_DUA_51675_2014\Merged\SAS';

proc import datafile="E:\data\CMS_DUA_51675_2014\Medicaid_merged\MedicaidXref2012_old.dta" out=medicaidxwalk dbms=stata replace; run;

proc sql;
create table hrs_medicaid as select a.*, b.bid_hrs_23
from hrs.core_00_to_14 a
inner join medicaidxwalk b
on a.id=b.id;
quit;

data ot_file;
set maid.hrs_max_ot_99_12;
beg_dos = input(put(beginning_date_of_service,8.),YYMMDD8.);
end_dos = input(put(ending_date_of_service,8.),YYMMDD8.);
where msis_type_of_service = 13; *home health claims code;
run;

proc freq data=ot_file; tables beginning_date_of_service beg_dos / missprint; run;

proc freq data=ot_file; tables msis_type_of_service / missprint; run;

proc sql;
create table hrs_medicaid_hh as select a.*, b.beg_dos, b.end_dos, b.msis_type_of_service
from hrs_medicaid a
inner join ot_file b
on a.bid_hrs_23=b.bid_hrs_23; *and -90<=a.c_ivw_date-b.beg_dos<=90;
quit;
run;

proc sort data=hrs_medicaid_hh nodupkey; by bid_hrs_23; run;

/* People with at least 1 Medicaid HH claim 98-2012 */
data hrs_medicaid_hh;
set hrs_medicaid_hh;
maid_hh = 1;
run;

proc export data=hrs_medicaid_hh (keep = id maid_hh) outfile="E:\data\HBMC_HRS\int_data\any_maid_hh.dta" dbms=stata replace; run;

/* Number of Medicaid beneficiaries */
proc sort data=hrs_medicaid nodupkey; by bid_hrs_23; run;

proc export data=hrs_medicaid (keep = id bid_hrs_23) outfile="E:\data\HBMC_HRS\int_data\any_maid.dta" dbms=stata replace; run;


/* Merge with Medicare crosswalk */

proc sql;
create table hrs_mcare as select a.*, b.bid_hrs_22
from hrs.core_00_to_14 a
inner join medcare.xref2015medicare b
on a.id=b.hhidpn;
quit;

/* Check for cpt and pos codes in carrier file */

* Split carrier file into half due to size;
data carrier_06 (keep = bid_hrs_22 admit_date disch_date admit_year hcpcs_cd PLCRVC01-PLCRVC13);
set medcare.pb_1998_2015;
array dx hcpscd01--hcpscd13;
do over dx;
hcpcs_cd = dx;
output;
end;
where admit_year<=2006;
run;

data carrier_06 (drop = PLCRVC01-PLCRVC13);
set carrier_06;
cptcodes1 = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
posflag = 0;
array dx PLCRVC01-PLCRVC13;
do over dx;
if dx in:(12,13,14) then posflag =1;
end;
run;

data carrier_06;
set carrier_06;
cptflag = 0;
if 99341<=cptcodes1<=99350 or 99324<=cptcodes1<=99328 or 99334<=cptcodes1<=99337 then cptflag = 1;
run; 

data carrier_06;
set carrier_06;
where cptflag=1 or posflag = 1;
run;

proc sort data=carrier_06 nodupkey; by bid_hrs_22 admit_date disch_date; run;

* other half;

data carrier_15 (keep = bid_hrs_22 admit_date disch_date admit_year hcpcs_cd PLCRVC01-PLCRVC13);
set medcare.pb_1998_2015;
array dx hcpscd01--hcpscd13;
do over dx;
hcpcs_cd = dx;
output;
end;
where 2007<=admit_year<=2015;
run;

data carrier_15 (drop = PLCRVC01-PLCRVC13);
set carrier_15;
cptcodes1 = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
posflag = 0;
array dx PLCRVC01-PLCRVC13;
do over dx;
if dx in:(12,13,14) then posflag =1;
end;
run;

data carrier_15;
set carrier_15;
cptflag = 0;
if 99341<=cptcodes1<=99350 or 99324<=cptcodes1<=99328 or 99334<=cptcodes1<=99337 then cptflag = 1;
run; 

data carrier_15;
set carrier_15;
where cptflag=1 or posflag = 1;
run;


proc sort data=carrier_15 nodupkey; by bid_hrs_22 admit_date disch_date; run;

data carrier2;
set carrier_06 carrier_15;
by bid_hrs_22;
housecall = 1;
run;

/* Merge back with HRS dataset */

proc sql;
create table hrs_housecalls as select a.*, b.housecall
from hrs_mcare a
inner join carrier2 b
on a.bid_hrs_22=b.bid_hrs_22 and -90<=a.c_ivw_date-b.admit_date<=90;
quit;

proc sort data=hrs_housecalls nodupkey; by descending c_ivw_date bid_hrs_22; run;

proc export data=hrs_housecalls (keep = bid_hrs_22 id core_year housecall) outfile="E:\data\HBMC_HRS\int_data\hrs_housecalls.dta" dbms=stata replace; run;



/*
data hrs_medicaid_hh;
set hrs_medicaid_hh;
los = (end_dos - beg_dos) + 1;
run;

proc freq data = hrs_medicaid_hh; tables los; run;


proc sort data=hrs_medicaid_hh nodupkey; by id beg_dos end_dos; run;
proc sort data=hrs_medicaid_hh nodupkey; by id beg_dos; run;

proc sql;
create table total_hhdays as select distinct id, c_ivw_date,
sum(los) as total_hh
from hrs_medicaid_hh
group by id, c_ivw_date;
quit;

proc sql;
create table core_hh as select a.*, b.*
from hrs.core_00_to_14 a
left join total_hhdays b
on a.id=b.id and a.c_ivw_date=b.c_ivw_date;
quit;

proc export data=core_hh outfile="E:\data\HBMC_HRS\core_0014_hbmc.dta" dbms=stata replace; run;


H="Data Setup"
use "E:\data\hrs_cleaned\core_00_to_14.dta" , clear 

merge 1:1 id core_year using "E:\data\HBMC_HRS\int_data\hrs_housecalls.dta"

/* Only keeping most recent ivws for people without housecall */

gen hcall = .
preserve
keep if _m==3
replace hcall = 1
drop _m
tempfile hcalls
save `hcalls'
restore

levelsof id if _m==3, local(match)

foreach x of local match {
replace hcall= 1 if id=="`x'"
}

drop _m
drop if hcall==1
gsort id -core_year
by id: keep if _n==1

append using "`hcalls'"

replace hcall = 0 if hcall==.
label var hcall "Medicare House call +/- 90 days of iw"

save "E:\data\HBMC_HRS\int_data\hrs_merged.dta", replace

use "E:\data\HBMC_HRS\int_data\hrs_merged.dta", replace

drop bid_hrs_22

merge 1:1 hhid pn using "E:\data\CMS_DUA_51675_2014\Merged\Stata\xref2015medicare.dta", keepus(BID_HRS_22)
drop if _m==2

gen mcare_claims = 0
replace mcare_claims = 1 if BID_HRS_22!=""
label var mcare_claims "Has Medicare Claims"
cap drop _m

merge 1:1 hhid pn using "E:\data\CMS_DUA_51675_2014\Medicaid_merged\MedicaidXref2012.dta", keepus(bid_hrs_23)
drop if _m==2

gen maid_claims = 0
replace maid_claims = 1 if _m==3
label var maid_claims "Has Medicaid Claims"
drop _m

merge 1:1 id using "E:\data\HBMC_HRS\int_data\any_maid_hh.dta", keepus(maid_hh)
replace maid_hh = 0 if maid_hh==.
label var maid_hh "Has any Medicaid HH claim"
drop _m

rename *, l

save "E:\data\HBMC_HRS\int_data\hrs_merged2.dta", replace 

use "E:\data\CMS_DUA_51675_2014\Merged\Stata\hh_1998_2015.dta", clear
keep bid_hrs_22
duplicates drop

tempfile mcarehh
save `mcarehh'

use "E:\data\HBMC_HRS\int_data\hrs_merged2.dta", replace 


preserve
keep if bid_hrs_22==""
tempfile applater
save `applater'
restore 

drop if bid_hrs_22==""

merge 1:m bid_hrs_22 using "`mcarehh'", keepus(bid_hrs_22)
drop if _m==2

gen mcare_hh = .
replace mcare_hh = 1 if _m==3

append using "`applater'"

replace mcare_hh = 0 if mcare_hh==.
label var mcare_hh "Has any Medicare HH claim"
drop _m

save "E:\data\HBMC_HRS\int_data\hrs_merged2.dta", replace  

/* Merge with rest. tracker for demographics */

use "E:\data\HBMC_HRS\int_data\hrs_merged2.dta", replace  

merge m:1 hhid pn using "E:\data\hrs_cleaned\restr_tracker_v2014.dta", keepus(birth_date hisp_eth white black degree gender)
drop if _m==2
drop _m

cap drop female
gen female = 0 if gender!=.
replace female = 1 if gender==2

gen age = ((c_ivw_date - birth_date)/365.25)
replace age = ceil(age)

gen livealone = 0 if hhm!=. & nhres!=1
replace livealone = 1 if hhm==0

gen adl_dep_core = 0 if adl_index_core!=.
replace adl_dep_core = 1 if  adl_index_core>0 & adl_index_core!=.
label var adl_dep_core "ADL dependent at core"

gen iadl_dep_core = 0 if iadl_ind_core!=.
replace iadl_dep_core = 1 if  iadl_ind_core>0 & iadl_ind_core!=.
label var iadl_dep_core "IADL dependent at core"

gen all = 1

replace hseduc = 0
replace hseduc = 1 if degree>0


local ivars female married hisp_eth black white nhres nhres_2yr resspouse livealone adl_dep_core iadl_dep_core adl_sp_helper iadl_sp_helper hh_worker hseduc srh_pf cesd_tot_ge3
local cvars reschil comor_in_hrs age networth_adj2012 
local ivars2 mcare_claims maid_claims maid_hh mcare_hh

local rd: word count `ivars' `cvars' `ivars2' 1

mat tab1=J(`rd', 2, .)
mat stars=J(`rd',2,0)

local r = 1

foreach x of local ivars {


sum `x' if hcall==1
mat tab1[`r',1] = r(mean)*100

sum `x' if hcall==0
mat tab1[`r',2] = r(mean)*100

tab `x' hcall, chi2
mat stars[`r',2] = (r(p)<.01) + (r(p)<0.05)

local ++r

}

foreach x of local cvars {

sum `x' if hcall==1
mat tab1[`r',1] = r(mean)

sum `x' if hcall==0
mat tab1[`r',2] = r(mean)

ttest `x', by(hcall)
mat stars[`r',2] = (r(p)<.01) + (r(p)<0.05)
local ++r
}

foreach x of local ivars2 {

sum `x' if hcall==1
mat tab1[`r',1] = r(mean)*100

sum `x' if hcall==0
mat tab1[`r',2] = r(mean)*100

tab `x' hcall, chi2
mat stars[`r',2] = (r(p)<.01) + (r(p)<0.05)

local ++r

}

sum all if hcall==1
mat tab1[`r',1] = r(N)

sum all if hcall==0
mat tab1[`r',2] = r(N)

mat rownames tab1 = `ivars' `cvars' `ivars2' "Sample Size"

frmttable using "E:\projects\HBMC_HRS\logs\table1.doc", replace statmat(tab1) ///
varlabels title("HRS 1998-2014: HBMC based on CPT/POS codes in Medicare Carrier") ctitles("", "HBMC", "No HBMC") sdec(2) ///
annotate(stars) asymbol(*,**) ///
note("These are unique people, and only survey data from their most recent HRS interview was used. Housecalls are +/- 90 days of ivw date. *p<0.05, **p<0.01")


H="P01 - HRS Data pull"
libname hrs 'E:\data\hrs_cleaned';
libname maid 'E:\data\CMS_DUA_51675_2014\Medicaid_merged';
libname medcare 'E:\data\CMS_DUA_51675_2014\Merged\SAS';

proc import datafile="E:\data\CMS_DUA_51675_2014\Medicaid_merged\MedicaidXref2012_old.dta" out=medicaidxwalk dbms=stata replace; run;

proc import datafile="E:\data\HBMC_HRS\int_data\hrs_incident_dem.dta" out=firstdem dbms=stata replace; run;


proc sql; /* Community dwelling with any dementia  */
create table hrs_firstdem as select a.*, b.first_dem
from hrs.core_00_to_14 a
inner join firstdem b
on a.id=b.id and a.nhres<1;
quit;

proc sql;
create table hrs_firstdem2 as select a.*, b.bid_hrs_23, c.bid_hrs_22
from hrs.core_00_to_14 a
left join medicaidxwalk b
on a.id=b.id
left join medcare.Xref2015medicare c
on a.id=c.hhidpn;
quit;


proc export data=hrs_firstdem2 outfile="E:\data\HBMC_HRS\int_data\hrs_core_dementiaonly.dta" dbms=stata replace; run;

proc sql;
create table hrs_medicaid as select a.*, b.bid_hrs_23
from hrs_firstdem a
inner join medicaidxwalk b
on a.id=b.id;
quit;

data ot_file;
set maid.hrs_max_ot_99_12;
beg_dos = input(put(beginning_date_of_service,8.),YYMMDD8.);
end_dos = input(put(ending_date_of_service,8.),YYMMDD8.);
admit_year = year(beg_dos);
where msis_type_of_service in:(30,51,13,31,33,26,38,54); *home health claims code;
run;

proc freq data=ot_file; tables beginning_date_of_service beg_dos / missprint; run;

proc freq data=ot_file; tables msis_type_of_service / missprint; run;

proc sql;
create table hrs_medicaid_hh as select a.id, a.core_year, a.bid_hrs_23, b.beg_dos, b.end_dos, b.msis_type_of_service, b.admit_year
from hrs_medicaid a
inner join ot_file b
on a.bid_hrs_23=b.bid_hrs_23 and b.admit_year=a.core_year;
quit;

proc freq data=hrs_medicaid_hh; tables msis_type_of_service; run;

data hrs_medicaid_hh;
set hrs_medicaid_hh;
if msis_type_of_service=13 then medicaid_hh = 1;
if msis_type_of_service=26 then medicaid_trn = 1;
if msis_type_of_service=30 then medicaid_pc = 1;
if msis_type_of_service=31 then medicaid_tcm = 1;
if msis_type_of_service=33 then medicaid_reh = 1;
if msis_type_of_service=38 then medicaid_pdn = 1;
if msis_type_of_service ne . then medicaid_hbmc = 1;
run;

proc sql; /* sample size for hh per year */
create table hh_annual as select distinct bid_hrs_23, core_year,
sum(medicaid_hh) as medicaid_hh,
sum(medicaid_trn) as medicaid_trn,
sum(medicaid_pc) as medicaid_pc,
sum(medicaid_tcm) as medicaid_tcm,
sum(medicaid_reh) as medicaid_reh,
sum(medicaid_pdn) as medicaid_pdn,
sum(medicaid_hbmc) as medicaid_hbmc
from hrs_medicaid_hh group by bid_hrs_23, core_year;
quit;

data hh_annual2;
set hh_annual;
array list medicaid_hh--medicaid_hbmc;
do over list;
if list>=1 then list=1;
end;
run;

proc sort data=hh_annual2 nodupkey; by bid_hrs_23 core_year; run;

proc export data=hh_annual2 outfile="E:\data\HBMC_HRS\int_data\medicaid_hh_annual.dta" dbms=stata replace; run; /*annualized medicaid hh */


/* Merge with Medicare crosswalk */

proc sql;
create table hrs_mcare as select a.*, b.bid_hrs_22
from hrs.core_00_to_14 a
inner join medcare.xref2015medicare b
on a.id=b.hhidpn;
quit;

/* Check for cpt and pos codes in carrier file */

* Split carrier file into half due to size;
data carrier_06 (keep = bid_hrs_22 admit_date disch_date admit_year hcpcs_cd PLCRVC01-PLCRVC13);
set medcare.pb_1998_2015;
array dx hcpscd01--hcpscd13;
do over dx;
hcpcs_cd = dx;
output;
end;
where admit_year<=2006;
run;

data carrier_06 (drop = PLCRVC01-PLCRVC13);
set carrier_06;
cptcodes1 = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
posflag = 0;
array dx PLCRVC01-PLCRVC13;
do over dx;
if dx in:(12,13,14) then posflag =1;
end;
run;

data carrier_06;
set carrier_06;
cptflag = 0;
if 99341<=cptcodes1<=99350 or 99324<=cptcodes1<=99328 or 99334<=cptcodes1<=99337 then cptflag = 1;
run; 

data carrier_06;
set carrier_06;
where cptflag=1 or posflag = 1;
run;

proc sort data=carrier_06 nodupkey; by bid_hrs_22 admit_date disch_date; run;

* other half;

data carrier_15 (keep = bid_hrs_22 admit_date disch_date admit_year hcpcs_cd PLCRVC01-PLCRVC13);
set medcare.pb_1998_2015;
array dx hcpscd01--hcpscd13;
do over dx;
hcpcs_cd = dx;
output;
end;
where 2007<=admit_year<=2015;
run;

data carrier_15 (drop = PLCRVC01-PLCRVC13);
set carrier_15;
cptcodes1 = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
posflag = 0;
array dx PLCRVC01-PLCRVC13;
do over dx;
if dx in:(12,13,14) then posflag =1;
end;
run;

data carrier_15;
set carrier_15;
cptflag = 0;
if 99341<=cptcodes1<=99350 or 99324<=cptcodes1<=99328 or 99334<=cptcodes1<=99337 then cptflag = 1;
run; 

data carrier_15;
set carrier_15;
where cptflag=1 or posflag = 1;
run;

proc sort data=carrier_15 nodupkey; by bid_hrs_22 admit_date disch_date; run;

data carrier2;
set carrier_06 carrier_15;
by bid_hrs_22;
if cptflag=1 and posflag=1 then housecall = 1;
admit_year = year(admit_date);
run;

proc sql;
create table carrier3_dem as select a.*, b.core_year
from carrier2 a
inner join hrs_firstdem2 b
on a.bid_hrs_22=b.bid_hrs_22 and a.admit_year=b.core_year;
quit;


proc sql; /* collapse into single row per person per year */
create table mcare_annual as select distinct bid_hrs_22, core_year,
sum(cptflag) as cpt_flag,
sum(posflag) as pos_flag,
sum(housecall) as both_flag
from carrier3_dem group by bid_hrs_22, core_year;
quit;

proc sort data=mcare_annual out=mcare_total nodupkey; by bid_hrs_22; run; 

data mcare_annual;
set mcare_annual;
if cpt_flag>=1 then cpt_flag=1;
if pos_flag>=1 then pos_flag=1;
if both_flag>=1 then both_flag=1;
run;

proc sort data=mcare_annual nodupkey; by bid_hrs_22 core_year; run;

proc export data=mcare_annual outfile="E:\data\HBMC_HRS\int_data\medicare_carrier_annual.dta" dbms=stata replace; run;

/* Medicare home health */

data hrs_hh (keep = bid_hrs_22 admit_date disch_date admit_year);
set medcare.hh_1998_2015;
run;

proc sql;
create table hrs_hh2 as select a.*, b.core_year
from hrs_hh a
inner join hrs_firstdem2 b
on a.bid_hrs_22=b.bid_hrs_22 and a.admit_year=b.core_year;
quit;

proc sql; /*unique people per year */
create table hrs_hh_annual as select bid_hrs_22, core_year,
count(admit_year ne .) as hh_claim
from hrs_hh2 group by bid_hrs_22, core_year;
quit;

data hrs_hh_annual;
set hrs_hh_annual;
hh_claim = 1;
run;

proc sort data=hrs_hh_annual nodupkey; by bid_hrs_22 core_year; run

proc export data=hrs_hh_annual outfile="E:\data\HBMC_HRS\int_data\medicare_hh_annual.dta" dbms=stata replace; run;

/* Merge back with HRS dataset */

proc sql;
create table hh_join as select a.*, b.*, c.both_flag, d.hh_claim
from hrs_firstdem2 a 
left join hh_annual2 b
on a.bid_hrs_23=b.bid_hrs_23 and a.core_year=b.core_year
left join mcare_annual c
on a.bid_hrs_22=c.bid_hrs_22 and a.core_year=c.core_year
left join hrs_hh_annual d
on a.bid_hrs_22=d.bid_hrs_22 and a.core_year=d.core_year;
quit;

proc export data=hh_join outfile="E:\data\HBMC_HRS\int_data\hrs_p01.dta" dbms=stata replace; run;

H="P01 - HRS Sample Size Table"
use "E:\data\HBMC_HRS\int_data\hrs_p01.dta", replace

cap drop _m
merge 1:1 id core_year using "E:\data\hrs_public_2014\dementia\pdem_withvarnames_00_14.dta", keepus(pdem)

keep if nhres==0

gen dementia = 0
replace dementia = 1 if pdem>=0.5 & pdem!=.

local logpath "E:\data\HBMC_HRS\logs"
local date=subinstr("$S_DATE"," ","_",.)

gen all = 1



local cvars all dementia medicaid_hh medicaid_trn medicaid_pc medicaid_tcm medicaid_reh medicaid_pdn medicaid_hbmc // hh_claim both_flag
local full: word count `cvars'
mat tab1=J(9,`full',.)
local r = 1
local c = 1

forvalues i=1998(2)2014 {

	foreach x of local cvars {
	
sum `x' if core_year==`i'
mat tab1[`r',`c'] = r(sum)

local ++c
}

local c = 1
local ++r
}

mat rownames tab1 = "1998" "2000" "2002" "2004" "2006" "2008" "2010" "2012" "2014" 

frmttable using `logpath'\HRS_P01_SampleSize_`date'.doc, replace statmat(tab1) ///
varlabels title("HRS 1998-2014 with Dementia: Medicaid HBMC Breakdown") ctitles("Year", "Full Sample", "Dementia (N)", "Medicaid HH" "Transport" "Personal Care" "Targeted Case Mang." "Rehab Services" "Priv. Duty Nurse" "Any HBCS") sdec(0) //




local cvars all dementia medicaid_hbmc hh_claim both_flag
local full: word count `cvars'
mat tab1=J(9,`full',.)
local r = 1
local c = 1

forvalues i=1998(2)2014 {

	foreach x of local cvars {
	
sum `x' if core_year==`i'
mat tab1[`r',`c'] = r(sum)

local ++c
}

local c = 1
local ++r
}

mat rownames tab1 = "1998" "2000" "2002" "2004" "2006" "2008" "2010" "2012" "2014" 

frmttable using `logpath'\HRS_P01_SampleSize_`date'.doc, addtable statmat(tab1) ///
varlabels title("HRS 1998-2014 with Dementia: Sample Size") ctitles("Year", "Full Sample", "Dementia (N)", "Any Medicaid HCBS" "Medicare HH" "Medicare HBMC" ) sdec(0) //



H="P01 - NHATS Sample Pull"
libname claims "E:\nhats\data\20180625 NHATS CMS Data\merged";
libname cyears "E:\nhats\data\20180625 NHATS CMS Data\Cumulative";

proc import datafile="E:\nhats\data\Projects\IAH\final_data\iah_wave1-5.dta" out=iv_mb2 dbms=stata replace; run; 



/* Checking for HH/SNF within 7 days of disch_date */

data nhats_hh;
set claims.hh_09_16;
admit_year = year(admit_date);
run;


proc sql; /*unique people per year */
create table nhats_hh_annual as select bene_id, admit_year,
count(admit_year ne .) as hh_claim
from nhats_hh group by bene_id, admit_year;
quit;

proc sort data=nhats_hh_annual out=nhats_hh_total nodupkey; by bene_id; run; /* unique people */

data nhats_hh_annual;
set nhats_hh_annual;
hh_claim = 1;
run;

/*
proc sql;
create table nhats_hh_annual2 as select distinct admit_year,
sum(hh_claim) as mc_hh_claim
from nhats_hh_annual group by admit_year;
quit;

data nhats_hh_total;
set nhats_hh_total;
hh_claim = 1;
admit_year = 2018;
run;

proc sql;
create table nhats_hh_total2 as select distinct admit_year,
sum(hh_claim) as mc_hh_claim
from nhats_hh_total group by admit_year;
quit;

data nhats_hh_annual3;
set nhats_hh_annual2 nhats_hh_total2;
by admit_year;
run; 


proc export data=nhats_hh_annual3 outfile="E:\data\HBMC_HRS\int_data\nhats_hh.dta" dbms=stata replace; run;

*/



/********** Identifying house calls ************/

/* Identifying house calls */

data carrier;
set claims.pb_09_16;
admit_year = year(admit_date);
array dx hcpcscd1--hcpcscd13;
do over dx;
hcpcs_cd=dx;
output;
end;
run;

data carrier1;
set carrier;
cptcodes1 = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
run;

data carrier1;
set carrier1;
cpt1flag = 0;
if 99341<=cptcodes1<=99350 or 99324<=cptcodes1<=99328 or 99334<=cptcodes1<=99337 then cpt1flag = 1;
run;

proc sort data=carrier1 nodupkey; by bene_id clm_id; run;

data carrierline (keep = bene_id clm_id LINE_PLACE_OF_SRVC_CD cptcodes);
set cyears.bcarrier_line_j_09_16;
cptcodes = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
run;

data carrierline;
set carrierline;
if 99341<=cptcodes<=99350 or 99324<=cptcodes<=99328 or 99334<=cptcodes<=99337 then cptflag=1;
if LINE_PLACE_OF_SRVC_CD in:(12,13,14) then posflag=1;
run;

proc freq data=carrierline; tables cptflag posflag; run;

data linecalls;
set carrierline;
where cptflag = 1 or posflag = 1;
run;

proc sql;
create table carrier2 as select a.*, b.*
from carrier1 a
full outer join linecalls b
on a.bene_id=b.bene_id and a.clm_id = b.clm_id;
quit;

data carrier2;
set carrier2;
where cptflag = 1 or cpt1flag = 1 or posflag = 1;
admit_year = year(admit_date);
run;

proc sort data=carrier2 nodupkey; by bene_id clm_id; run;

proc sort data=carrier2 out=carrier3 nodupkey; by bene_id; run;

proc freq data=carrier2; tables cptflag cpt1flag; run;

data carrier2;
set carrier2;
both_flag = 0;
if (cptflag=1 or cpt1flag=1) and posflag=1 then both_flag =1;
if (cptflag=1 or cpt1flag=1) then cptflag=1;
run;

proc sql;
create table pb_annual as select distinct bene_id, admit_year,
sum(cptflag) as cptflag,
sum(posflag) as posflag,
sum(both_flag) as both_flag
from carrier2
group by bene_id, admit_year;
quit;

data pb_annual;
set pb_annual;
if cptflag>=1 then cptflag=1;
if posflag>=1 then posflag=1;
if both_flag>=1 then both_flag=1;
run;

proc sql;
create table nhats as select a.*, b.both_flag
from nhats_hh_annual a
left join pb_annual b 
on a.bene_id=b.bene_id and a.admit_year=b.admit_year;
quit;

data nhats (rename=(admit_year=index_year));
set nhats;
run;

proc export data=nhats outfile="E:\data\HBMC_HRS\int_data\nhats_claims.dta" replace; run;

H="P01 - NHATS Sample Size Table"


H="*********************"


H="P01 Sample Size - HRS"
libname hrs 'E:\data\hrs_cleaned';
libname maid 'E:\data\CMS_DUA_51675_2014\Medicaid_merged';
libname medcare 'E:\data\CMS_DUA_51675_2014\Merged\SAS';

proc import datafile="E:\data\CMS_DUA_51675_2014\Medicaid_merged\MedicaidXref2012_old.dta" out=medicaidxwalk dbms=stata replace; run;

proc sql;
create table hrs_medicaid as select a.*, b.bid_hrs_23
from hrs.core_00_to_14 a
inner join medicaidxwalk b
on a.id=b.id;
quit;

data ot_file;
set maid.hrs_max_ot_99_12;
beg_dos = input(put(beginning_date_of_service,8.),YYMMDD8.);
end_dos = input(put(ending_date_of_service,8.),YYMMDD8.);
admit_year = year(beg_dos);
where msis_type_of_service = 13; *home health claims code;
run;

proc freq data=ot_file; tables beginning_date_of_service beg_dos / missprint; run;

proc freq data=ot_file; tables msis_type_of_service / missprint; run;

proc sql;
create table hrs_medicaid_hh as select a.*, b.beg_dos, b.end_dos, b.msis_type_of_service, b.admit_year
from hrs_medicaid a
inner join ot_file b
on a.bid_hrs_23=b.bid_hrs_23; *and -90<=a.c_ivw_date-b.beg_dos<=90;
quit;
run;

proc sql; /* sample size for hh per year */
create table hh_annual as select distinct bid_hrs_23, admit_year,
count(msis_type_of_service=13) as medicaid_hh
from hrs_medicaid_hh group by bid_hrs_23, admit_year;
quit;

data hh_annual2;
set hh_annual;
if medicaid_hh>=1 then medicaid_hh=1;
run;

proc sql;
create table hh_annual3 as select distinct admit_year,
sum(medicaid_hh) as medicaid_hh
from hh_annual2 group by admit_year;
quit; 


proc sort data=hh_annual out=hh_total nodupkey; by bid_hrs_23; run;

data hh_total;
set hh_total;
medicaid_hh = 1;
admit_year = 2016;
run;

proc sql;
create table hh_total2 as select distinct admit_year,
sum(medicaid_hh) as medicaid_hh
from hh_total group by admit_year;
quit;


data hh_annual4;
set hh_annual3 hh_total2;
by admit_year;
run;

proc export data=hh_annual4 outfile="E:\data\HBMC_HRS\int_data\medicaid_hh_annual.dta" dbms=stata replace; run; /*annualized medicaid hh */




/* Number of Medicaid beneficiaries 
proc sort data=hrs_medicaid nodupkey; by bid_hrs_23; run;

proc export data=hrs_medicaid (keep = id bid_hrs_23) outfile="E:\data\HBMC_HRS\int_data\any_maid.dta" dbms=stata replace; run;
*/

/* Merge with Medicare crosswalk */

proc sql;
create table hrs_mcare as select a.*, b.bid_hrs_22
from hrs.core_00_to_14 a
inner join medcare.xref2015medicare b
on a.id=b.hhidpn;
quit;

/* Check for cpt and pos codes in carrier file */

* Split carrier file into half due to size;
data carrier_06 (keep = bid_hrs_22 admit_date disch_date admit_year hcpcs_cd PLCRVC01-PLCRVC13);
set medcare.pb_1998_2015;
array dx hcpscd01--hcpscd13;
do over dx;
hcpcs_cd = dx;
output;
end;
where admit_year<=2006;
run;

data carrier_06 (drop = PLCRVC01-PLCRVC13);
set carrier_06;
cptcodes1 = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
posflag = 0;
array dx PLCRVC01-PLCRVC13;
do over dx;
if dx in:(12,13,14) then posflag =1;
end;
run;

data carrier_06;
set carrier_06;
cptflag = 0;
if 99341<=cptcodes1<=99350 or 99324<=cptcodes1<=99328 or 99334<=cptcodes1<=99337 then cptflag = 1;
run; 

data carrier_06;
set carrier_06;
where cptflag=1 or posflag = 1;
run;

proc sort data=carrier_06 nodupkey; by bid_hrs_22 admit_date disch_date; run;

* other half;

data carrier_15 (keep = bid_hrs_22 admit_date disch_date admit_year hcpcs_cd PLCRVC01-PLCRVC13);
set medcare.pb_1998_2015;
array dx hcpscd01--hcpscd13;
do over dx;
hcpcs_cd = dx;
output;
end;
where 2007<=admit_year<=2015;
run;

data carrier_15 (drop = PLCRVC01-PLCRVC13);
set carrier_15;
cptcodes1 = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
posflag = 0;
array dx PLCRVC01-PLCRVC13;
do over dx;
if dx in:(12,13,14) then posflag =1;
end;
run;

data carrier_15;
set carrier_15;
cptflag = 0;
if 99341<=cptcodes1<=99350 or 99324<=cptcodes1<=99328 or 99334<=cptcodes1<=99337 then cptflag = 1;
run; 

data carrier_15;
set carrier_15;
where cptflag=1 or posflag = 1;
run;

proc sort data=carrier_15 nodupkey; by bid_hrs_22 admit_date disch_date; run;

data carrier2;
set carrier_06 carrier_15;
by bid_hrs_22;
if cptflag=1 and posflag=1 then housecall = 1;
admit_year = year(admit_date);
run;

proc sql; /* collapse into single row per person per year */
create table mcare_annual as select distinct bid_hrs_22, admit_year,
sum(cptflag) as cpt_hh,
sum(posflag) as pos_hh,
sum(housecall) as both_hh
from carrier2 group by bid_hrs_22, admit_year;
quit;

proc sort data=mcare_annual out=mcare_total nodupkey; by bid_hrs_22; run; 

data mcare_annual;
set mcare_annual;
if cpt_hh>=1 then cpt_hh=1;
if pos_hh>=1 then pos_hh=1;
if both_hh>=1 then both_hh=1;
run;

proc sql; /* single row per year, sum of all persons */
create table mcare_annual2 as select distinct admit_year,
sum(cpt_hh) as cpt_hh,
sum(pos_hh) as pos_hh,
sum(both_hh) as both_hh
from mcare_annual group by admit_year;
quit;

data mcare_total;
set mcare_total;
admit_year = 2016;
if cpt_hh>=1 then cpt_hh=1;
if pos_hh>=1 then pos_hh=1;
if both_hh>=1 then both_hh=1;
run;

proc sql;
create table mcare_total2 as select distinct admit_year,
sum(cpt_hh) as cpt_hh,
sum(pos_hh) as pos_hh,
sum(both_hh) as both_hh
from mcare_total group by admit_year;
quit;

data mcare_total3;
set mcare_annual2 mcare_total2;
by admit_year;
run;

proc export data=mcare_total3 outfile="E:\data\HBMC_HRS\int_data\medicare_carrier_annual.dta" dbms=stata replace; run;

/* Medicare home health */

data hrs_hh (keep = bid_hrs_22 admit_date disch_date admit_year);
set medcare.hh_1998_2015;
run;

proc sql; /*unique people per year */
create table hrs_hh_annual as select bid_hrs_22, admit_year,
count(admit_year ne .) as hh_claim
from hrs_hh group by bid_hrs_22, admit_year;
quit;

proc sort data=hrs_hh_annual out=hrs_hh_total nodupkey; by bid_hrs_22; run; /* unique people */

data hrs_hh_annual;
set hrs_hh_annual;
hh_claim = 1;
run;

proc sql;
create table hrs_hh_annual2 as select distinct admit_year,
sum(hh_claim) as mc_hh_claim
from hrs_hh_annual group by admit_year;
quit;

data hrs_hh_total;
set hrs_hh_total;
hh_claim = 1;
admit_year = 2016;
run;

proc sql;
create table hrs_hh_total2 as select distinct admit_year,
sum(hh_claim) as mc_hh_claim
from hrs_hh_total group by admit_year;
quit;

data hrs_hh_annual3;
set hrs_hh_annual2 hrs_hh_total2;
by admit_year;
run; 

proc export data=hrs_hh_annual3 outfile="E:\data\HBMC_HRS\int_data\medicare_hh_annual.dta" dbms=stata replace; run;

/* Merge back with HRS dataset */

proc sql;
create table hrs_housecalls as select a.*, b.housecall
from hrs_mcare a
inner join carrier2 b
on a.bid_hrs_22=b.bid_hrs_22 and -90<=a.c_ivw_date-b.admit_date<=90;
quit;

proc sort data=hrs_housecalls nodupkey; by descending c_ivw_date bid_hrs_22; run;

proc export data=hrs_housecalls (keep = bid_hrs_22 id core_year housecall) outfile="E:\data\HBMC_HRS\int_data\hrs_housecalls.dta" dbms=stata replace; run;



/*
data hrs_medicaid_hh;
set hrs_medicaid_hh;
los = (end_dos - beg_dos) + 1;
run;

proc freq data = hrs_medicaid_hh; tables los; run;


proc sort data=hrs_medicaid_hh nodupkey; by id beg_dos end_dos; run;
proc sort data=hrs_medicaid_hh nodupkey; by id beg_dos; run;

proc sql;
create table total_hhdays as select distinct id, c_ivw_date,
sum(los) as total_hh
from hrs_medicaid_hh
group by id, c_ivw_date;
quit;

proc sql;
create table core_hh as select a.*, b.*
from hrs.core_00_to_14 a
left join total_hhdays b
on a.id=b.id and a.c_ivw_date=b.c_ivw_date;
quit;

proc export data=core_hh outfile="E:\data\HBMC_HRS\core_0014_hbmc.dta" dbms=stata replace; run;


H="P01 Sample Size - HRS (Dementia)"
libname hrs 'E:\data\hrs_cleaned';
libname maid 'E:\data\CMS_DUA_51675_2014\Medicaid_merged';
libname medcare 'E:\data\CMS_DUA_51675_2014\Merged\SAS';
libname xwalk 'E:\data\CMS_DUA_51675_2014\Merged\SAS';


proc import datafile="E:\data\CMS_DUA_51675_2014\Medicaid_merged\MedicaidXref2012_old.dta" out=medicaidxwalk dbms=stata replace; run;

proc import datafile="E:\data\HBMC_HRS\int_data\hrs_incident_dem.dta" out=firstdem dbms=stata replace; run;


proc sql; /* Community dwelling */
create table hrs_firstdem as select a.*, b.first_dem
from hrs.core_00_to_14 a
inner join firstdem b
on a.id=b.id and a.core_year=b.core_year and a.nhres<1;
quit;


proc sql;
create table hrs_medicaid as select a.*, b.bid_hrs_23
from hrs_firstdem a
inner join medicaidxwalk b
on a.id=b.id;
quit;


data ot_file;
set maid.hrs_max_ot_99_12;
beg_dos = input(put(beginning_date_of_service,8.),YYMMDD8.);
end_dos = input(put(ending_date_of_service,8.),YYMMDD8.);
admit_year = year(beg_dos);
where msis_type_of_service = 13; *home health claims code;
run;

proc freq data=ot_file; tables beginning_date_of_service beg_dos / missprint; run;

proc freq data=ot_file; tables msis_type_of_service / missprint; run;

proc sql;
create table hrs_medicaid_hh as select a.*, b.beg_dos, b.end_dos, b.msis_type_of_service, b.admit_year
from hrs_medicaid a
inner join ot_file b
on a.bid_hrs_23=b.bid_hrs_23; *and -90<=a.c_ivw_date-b.beg_dos<=90;
quit;
run;

proc sql; /* sample size for hh per year */
create table hh_annual as select distinct bid_hrs_23, admit_year,
count(msis_type_of_service=13) as medicaid_hh
from hrs_medicaid_hh group by bid_hrs_23, admit_year;
quit;

data hh_annual2;
set hh_annual;
if medicaid_hh>=1 then medicaid_hh=1;
run;

proc sql;
create table hh_annual3 as select distinct admit_year,
sum(medicaid_hh) as medicaid_hh
from hh_annual2 group by admit_year;
quit; 


proc sort data=hh_annual out=hh_total nodupkey; by bid_hrs_23; run;

data hh_total;
set hh_total;
medicaid_hh = 1;
admit_year = 2016;
run;

proc sql;
create table hh_total2 as select distinct admit_year,
sum(medicaid_hh) as medicaid_hh
from hh_total group by admit_year;
quit;


data hh_annual4;
set hh_annual3 hh_total2;
by admit_year;
run;

proc export data=hh_annual4 outfile="E:\data\HBMC_HRS\int_data\medicaid_hh_annual_dem.dta" dbms=stata replace; run; /*annualized medicaid hh */




/* Number of Medicaid beneficiaries 
proc sort data=hrs_medicaid nodupkey; by bid_hrs_23; run;

proc export data=hrs_medicaid (keep = id bid_hrs_23) outfile="E:\data\HBMC_HRS\int_data\any_maid.dta" dbms=stata replace; run;
*/

/* Merge with Medicare crosswalk */

proc sql;
create table hrs_mcare as select a.*, b.bid_hrs_22
from hrs_firstdem a
inner join medcare.xref2015medicare b
on a.id=b.hhidpn;
quit;

/* Check for cpt and pos codes in carrier file */

* Split carrier file into half due to size;
data carrier_06 (keep = bid_hrs_22 admit_date disch_date admit_year hcpcs_cd PLCRVC01-PLCRVC13);
set medcare.pb_1998_2015;
array dx hcpscd01--hcpscd13;
do over dx;
hcpcs_cd = dx;
output;
end;
where admit_year<=2006;
run;

data carrier_06 (drop = PLCRVC01-PLCRVC13);
set carrier_06;
cptcodes1 = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
posflag = 0;
array dx PLCRVC01-PLCRVC13;
do over dx;
if dx in:(12,13,14) then posflag =1;
end;
run;

data carrier_06;
set carrier_06;
cptflag = 0;
if 99341<=cptcodes1<=99350 or 99324<=cptcodes1<=99328 or 99334<=cptcodes1<=99337 then cptflag = 1;
run; 

data carrier_06;
set carrier_06;
where cptflag=1 or posflag = 1;
run;

proc sort data=carrier_06 nodupkey; by bid_hrs_22 admit_date disch_date; run;

* other half;

data carrier_15 (keep = bid_hrs_22 admit_date disch_date admit_year hcpcs_cd PLCRVC01-PLCRVC13);
set medcare.pb_1998_2015;
array dx hcpscd01--hcpscd13;
do over dx;
hcpcs_cd = dx;
output;
end;
where 2007<=admit_year<=2015;
run;

data carrier_15 (drop = PLCRVC01-PLCRVC13);
set carrier_15;
cptcodes1 = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
posflag = 0;
array dx PLCRVC01-PLCRVC13;
do over dx;
if dx in:(12,13,14) then posflag =1;
end;
run;

data carrier_15;
set carrier_15;
cptflag = 0;
if 99341<=cptcodes1<=99350 or 99324<=cptcodes1<=99328 or 99334<=cptcodes1<=99337 then cptflag = 1;
run; 

data carrier_15;
set carrier_15;
where cptflag=1 or posflag = 1;
run;

proc sort data=carrier_15 nodupkey; by bid_hrs_22 admit_date disch_date; run;

data carrier2;
set carrier_06 carrier_15;
by bid_hrs_22;
if cptflag=1 and posflag=1 then housecall = 1;
admit_year = year(admit_date);
run;

proc sql;
create table carrier3_dem as select a.*, b.first_dem
from carrier2 a
inner join hrs_mcare b
on a.bid_hrs_22=b.bid_hrs_22;
quit;


proc sql; /* collapse into single row per person per year */
create table mcare_annual as select distinct bid_hrs_22, admit_year,
sum(cptflag) as cpt_hh,
sum(posflag) as pos_hh,
sum(housecall) as both_hh
from carrier3_dem group by bid_hrs_22, admit_year;
quit;

proc sort data=mcare_annual out=mcare_total nodupkey; by bid_hrs_22; run; 

data mcare_annual;
set mcare_annual;
if cpt_hh>=1 then cpt_hh=1;
if pos_hh>=1 then pos_hh=1;
if both_hh>=1 then both_hh=1;
run;

proc sql; /* single row per year, sum of all persons */
create table mcare_annual2 as select distinct admit_year,
sum(cpt_hh) as cpt_hh,
sum(pos_hh) as pos_hh,
sum(both_hh) as both_hh
from mcare_annual group by admit_year;
quit;

data mcare_total;
set mcare_total;
admit_year = 2016;
if cpt_hh>=1 then cpt_hh=1;
if pos_hh>=1 then pos_hh=1;
if both_hh>=1 then both_hh=1;
run;

proc sql;
create table mcare_total2 as select distinct admit_year,
sum(cpt_hh) as cpt_hh,
sum(pos_hh) as pos_hh,
sum(both_hh) as both_hh
from mcare_total group by admit_year;
quit;

data mcare_total3;
set mcare_annual2 mcare_total2;
by admit_year;
run;

proc export data=mcare_total3 outfile="E:\data\HBMC_HRS\int_data\medicare_carrier_annual_dem.dta" dbms=stata replace; run;

/* Medicare home health */

data hrs_hh (keep = bid_hrs_22 admit_date disch_date admit_year);
set medcare.hh_1998_2015;
run;

proc sql;
create table hrs_hh_dem as select a.*, b.first_dem
from hrs_hh a
inner join hrs_mcare b
on a.bid_hrs_22=b.bid_hrs_22;
quit;

proc sql; /*unique people per year */
create table hrs_hh_annual as select bid_hrs_22, admit_year,
count(admit_year ne .) as hh_claim
from hrs_hh_dem group by bid_hrs_22, admit_year;
quit;

proc sort data=hrs_hh_annual out=hrs_hh_total nodupkey; by bid_hrs_22; run; /* unique people */

data hrs_hh_annual;
set hrs_hh_annual;
hh_claim = 1;
run;

proc sql;
create table hrs_hh_annual2 as select distinct admit_year,
sum(hh_claim) as mc_hh_claim
from hrs_hh_annual group by admit_year;
quit;

data hrs_hh_total;
set hrs_hh_total;
hh_claim = 1;
admit_year = 2016;
run;

proc sql;
create table hrs_hh_total2 as select distinct admit_year,
sum(hh_claim) as mc_hh_claim
from hrs_hh_total group by admit_year;
quit;

data hrs_hh_annual3;
set hrs_hh_annual2 hrs_hh_total2;
by admit_year;
run; 

proc export data=hrs_hh_annual3 outfile="E:\data\HBMC_HRS\int_data\medicare_hh_annual_dem.dta" dbms=stata replace; run;

H="P01 Table - HRS"
use "E:\data\HBMC_HRS\int_data\medicaid_hh_annual.dta", replace

merge 1:1 admit_year using "E:\data\HBMC_HRS\int_data\medicare_hh_annual.dta"
drop _m
merge 1:1 admit_year using "E:\data\HBMC_HRS\int_data\medicare_carrier_annual.dta"
drop _m


drop if admit_year==1997

mat tab1=J(19,5,.)

local cvars medicaid_hh mc_hh_claim cpt_hh pos_hh both_hh

local r = 1
local c = 1

forvalues i=1998/2016 {

	foreach x of local cvars {
	
sum `x' if admit_year==`i'
mat tab1[`r',`c'] = r(mean)

local ++c
}

local c = 1
local ++r
}

mat rownames tab1 = "1998" "1999" "2000" "2001" "2002" "2003" "2004" "2005" "2006" "2007" "2008" "2009" "2010" "2011" "2012" "2013" "2014" "2015" "Total Unique 1998-2015"

frmttable using "E:\projects\HBMC_HRS\logs\HRS_P01_SampleSize.doc", replace statmat(tab1) ///
varlabels title("HRS 1998-2015: Unique respondents across years") ctitles("Year", "Medicaid HH", "Medicare HH" "Carrier CPT" "Carrier POS" "CPT + POS") sdec(0) //

use "E:\data\HBMC_HRS\int_data\medicaid_hh_annual_dem.dta", replace

merge 1:1 admit_year using "E:\data\HBMC_HRS\int_data\medicare_hh_annual_dem.dta"
drop _m
merge 1:1 admit_year using "E:\data\HBMC_HRS\int_data\medicare_carrier_annual_dem.dta"
drop _m


drop if admit_year==1997

mat tab1=J(19,5,.)

local cvars medicaid_hh mc_hh_claim cpt_hh pos_hh both_hh

local r = 1
local c = 1

forvalues i=1998/2016 {

	foreach x of local cvars {
	
sum `x' if admit_year==`i'
mat tab1[`r',`c'] = r(mean)

local ++c
}

local c = 1
local ++r
}

mat rownames tab1 = "1998" "1999" "2000" "2001" "2002" "2003" "2004" "2005" "2006" "2007" "2008" "2009" "2010" "2011" "2012" "2013" "2014" "2015" "Total Unique 1998-2015"

frmttable using "E:\projects\HBMC_HRS\logs\HRS_P01_SampleSize.doc", addtable statmat(tab1) ///
varlabels title("HRS 1998-2015: Community Dwelling with any Hurd Probable Dementia") ctitles("Year", "Medicaid HH", "Medicare HH" "Carrier CPT" "Carrier POS" "CPT + POS") sdec(0) ///
note("Total number of community dwelling people with any probable dementia = 2885")


H="HRS - first dem"
libname hrs 'E:\data\hrs_cleaned';
libname maid 'E:\data\CMS_DUA_51675_2014\Medicaid_merged';
libname medcare 'E:\data\CMS_DUA_51675_2014\Merged\SAS';

proc import datafile="E:\data\CMS_DUA_51675_2014\Medicaid_merged\MedicaidXref2012_old.dta" out=medicaidxwalk dbms=stata replace; run;

proc import datafile="E:\data\HBMC_HRS\int_data\hrs_incident_dem.dta" out=firstdem dbms=stata replace; run;

proc sql;
create table hrs_firstdem as select a.*, b.first_dem
from hrs.core_00_to_14 a
inner join firstdem b
on a.id=b.id and a.core_year=b.core_year;
quit;


proc sql;
create table hrs_medicaid as select a.*, b.bid_hrs_23
from hrs_firstdem a
inner join medicaidxwalk b
on a.id=b.id;
quit;


data ot_file;
set maid.hrs_max_ot_99_12;
beg_dos = input(put(beginning_date_of_service,8.),YYMMDD8.);
end_dos = input(put(ending_date_of_service,8.),YYMMDD8.);
admit_year = year(beg_dos);
where msis_type_of_service = 13; *home health claims code;
run;

proc freq data=ot_file; tables beginning_date_of_service beg_dos / missprint; run;

proc freq data=ot_file; tables msis_type_of_service / missprint; run;

proc sql;
create table hrs_medicaid_hh as select a.*, b.beg_dos, b.end_dos, b.msis_type_of_service, b.admit_year
from hrs_medicaid a
inner join ot_file b
on a.bid_hrs_23=b.bid_hrs_23; *and -90<=a.c_ivw_date-b.beg_dos<=90;
quit;
run;

proc sql; /* sample size for hh per year */
create table hh_annual as select distinct bid_hrs_23, admit_year,
count(msis_type_of_service=13) as medicaid_hh
from hrs_medicaid_hh group by bid_hrs_23, admit_year;
quit;

data hh_annual2;
set hh_annual;
if medicaid_hh>=1 then medicaid_hh=1;
run;

proc sql;
create table hh_annual3 as select distinct admit_year,
sum(medicaid_hh) as medicaid_hh
from hh_annual2 group by admit_year;
quit; 


proc sort data=hh_annual out=hh_total nodupkey; by bid_hrs_23; run;

data hh_total;
set hh_total;
medicaid_hh = 1;
admit_year = 2016;
run;

proc sql;
create table hh_total2 as select distinct admit_year,
sum(medicaid_hh) as medicaid_hh
from hh_total group by admit_year;
quit;


data hh_annual4;
set hh_annual3 hh_total2;
by admit_year;
run;

proc export data=hh_annual4 outfile="E:\data\HBMC_HRS\int_data\medicaid_hh_annual.dta" dbms=stata replace; run; /*annualized medicaid hh */




/* Number of Medicaid beneficiaries 
proc sort data=hrs_medicaid nodupkey; by bid_hrs_23; run;

proc export data=hrs_medicaid (keep = id bid_hrs_23) outfile="E:\data\HBMC_HRS\int_data\any_maid.dta" dbms=stata replace; run;
*/

/* Merge with Medicare crosswalk */

proc sql;
create table hrs_mcare as select a.*, b.bid_hrs_22
from hrs.core_00_to_14 a
inner join medcare.xref2015medicare b
on a.id=b.hhidpn;
quit;

/* Check for cpt and pos codes in carrier file */

* Split carrier file into half due to size;
data carrier_06 (keep = bid_hrs_22 admit_date disch_date admit_year hcpcs_cd PLCRVC01-PLCRVC13);
set medcare.pb_1998_2015;
array dx hcpscd01--hcpscd13;
do over dx;
hcpcs_cd = dx;
output;
end;
where admit_year<=2006;
run;

data carrier_06 (drop = PLCRVC01-PLCRVC13);
set carrier_06;
cptcodes1 = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
posflag = 0;
array dx PLCRVC01-PLCRVC13;
do over dx;
if dx in:(12,13,14) then posflag =1;
end;
run;

data carrier_06;
set carrier_06;
cptflag = 0;
if 99341<=cptcodes1<=99350 or 99324<=cptcodes1<=99328 or 99334<=cptcodes1<=99337 then cptflag = 1;
run; 

data carrier_06;
set carrier_06;
where cptflag=1 or posflag = 1;
run;

proc sort data=carrier_06 nodupkey; by bid_hrs_22 admit_date disch_date; run;

* other half;

data carrier_15 (keep = bid_hrs_22 admit_date disch_date admit_year hcpcs_cd PLCRVC01-PLCRVC13);
set medcare.pb_1998_2015;
array dx hcpscd01--hcpscd13;
do over dx;
hcpcs_cd = dx;
output;
end;
where 2007<=admit_year<=2015;
run;

data carrier_15 (drop = PLCRVC01-PLCRVC13);
set carrier_15;
cptcodes1 = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
posflag = 0;
array dx PLCRVC01-PLCRVC13;
do over dx;
if dx in:(12,13,14) then posflag =1;
end;
run;

data carrier_15;
set carrier_15;
cptflag = 0;
if 99341<=cptcodes1<=99350 or 99324<=cptcodes1<=99328 or 99334<=cptcodes1<=99337 then cptflag = 1;
run; 

data carrier_15;
set carrier_15;
where cptflag=1 or posflag = 1;
run;

proc sort data=carrier_15 nodupkey; by bid_hrs_22 admit_date disch_date; run;

data carrier2;
set carrier_06 carrier_15;
by bid_hrs_22;
if cptflag=1 and posflag=1 then housecall = 1;
admit_year = year(admit_date);
run;

proc sql; /* collapse into single row per person per year */
create table mcare_annual as select distinct bid_hrs_22, admit_year,
sum(cptflag) as cpt_hh,
sum(posflag) as pos_hh,
sum(housecall) as both_hh
from carrier2 group by bid_hrs_22, admit_year;
quit;

proc sort data=mcare_annual out=mcare_total nodupkey; by bid_hrs_22; run; 

data mcare_annual;
set mcare_annual;
if cpt_hh>=1 then cpt_hh=1;
if pos_hh>=1 then pos_hh=1;
if both_hh>=1 then both_hh=1;
run;

proc sql; /* single row per year, sum of all persons */
create table mcare_annual2 as select distinct admit_year,
sum(cpt_hh) as cpt_hh,
sum(pos_hh) as pos_hh,
sum(both_hh) as both_hh
from mcare_annual group by admit_year;
quit;

data mcare_total;
set mcare_total;
admit_year = 2016;
if cpt_hh>=1 then cpt_hh=1;
if pos_hh>=1 then pos_hh=1;
if both_hh>=1 then both_hh=1;
run;

proc sql;
create table mcare_total2 as select distinct admit_year,
sum(cpt_hh) as cpt_hh,
sum(pos_hh) as pos_hh,
sum(both_hh) as both_hh
from mcare_total group by admit_year;
quit;

data mcare_total3;
set mcare_annual2 mcare_total2;
by admit_year;
run;

proc export data=mcare_total3 outfile="E:\data\HBMC_HRS\int_data\medicare_carrier_annual.dta" dbms=stata replace; run;

/* Medicare home health */

data hrs_hh (keep = bid_hrs_22 admit_date disch_date admit_year);
set medcare.hh_1998_2015;
run;

proc sql; /*unique people per year */
create table hrs_hh_annual as select bid_hrs_22, admit_year,
count(admit_year ne .) as hh_claim
from hrs_hh group by bid_hrs_22, admit_year;
quit;

proc sort data=hrs_hh_annual out=hrs_hh_total nodupkey; by bid_hrs_22; run; /* unique people */

data hrs_hh_annual;
set hrs_hh_annual;
hh_claim = 1;
run;

proc sql;
create table hrs_hh_annual2 as select distinct admit_year,
sum(hh_claim) as mc_hh_claim
from hrs_hh_annual group by admit_year;
quit;

data hrs_hh_total;
set hrs_hh_total;
hh_claim = 1;
admit_year = 2016;
run;

proc sql;
create table hrs_hh_total2 as select distinct admit_year,
sum(hh_claim) as mc_hh_claim
from hrs_hh_total group by admit_year;
quit;

data hrs_hh_annual3;
set hrs_hh_annual2 hrs_hh_total2;
by admit_year;
run; 

proc export data=hrs_hh_annual3 outfile="E:\data\HBMC_HRS\int_data\medicare_hh_annual.dta" dbms=stata replace; run;

/* Merge back with HRS dataset */

proc sql;
create table hrs_housecalls as select a.*, b.housecall
from hrs_mcare a
inner join carrier2 b
on a.bid_hrs_22=b.bid_hrs_22 and -90<=a.c_ivw_date-b.admit_date<=90;
quit;

proc sort data=hrs_housecalls nodupkey; by descending c_ivw_date bid_hrs_22; run;

proc export data=hrs_housecalls (keep = bid_hrs_22 id core_year housecall) outfile="E:\data\HBMC_HRS\int_data\hrs_housecalls.dta" dbms=stata replace; run;



/*
data hrs_medicaid_hh;
set hrs_medicaid_hh;
los = (end_dos - beg_dos) + 1;
run;

proc freq data = hrs_medicaid_hh; tables los; run;


proc sort data=hrs_medicaid_hh nodupkey; by id beg_dos end_dos; run;
proc sort data=hrs_medicaid_hh nodupkey; by id beg_dos; run;

proc sql;
create table total_hhdays as select distinct id, c_ivw_date,
sum(los) as total_hh
from hrs_medicaid_hh
group by id, c_ivw_date;
quit;

proc sql;
create table core_hh as select a.*, b.*
from hrs.core_00_to_14 a
left join total_hhdays b
on a.id=b.id and a.c_ivw_date=b.c_ivw_date;
quit;

proc export data=core_hh outfile="E:\data\HBMC_HRS\core_0014_hbmc.dta" dbms=stata replace; run;


H="P01 Sample Size - NHATS"
libname claims "E:\nhats\data\20180625 NHATS CMS Data\merged";
libname cyears "E:\nhats\data\20180625 NHATS CMS Data\Cumulative";

proc import datafile="E:\nhats\data\Projects\IAH\final_data\iah_wave1-5.dta" out=iv_mb2 dbms=stata replace; run; 



/* Checking for HH/SNF within 7 days of disch_date */

data nhats_hh;
set claims.hh_09_16;
admit_year = year(admit_date);
run;


proc sql; /*unique people per year */
create table nhats_hh_annual as select bene_id, admit_year,
count(admit_year ne .) as hh_claim
from nhats_hh group by bene_id, admit_year;
quit;

proc sort data=nhats_hh_annual out=nhats_hh_total nodupkey; by bene_id; run; /* unique people */

data nhats_hh_annual;
set nhats_hh_annual;
hh_claim = 1;
run;

proc sql;
create table nhats_hh_annual2 as select distinct admit_year,
sum(hh_claim) as mc_hh_claim
from nhats_hh_annual group by admit_year;
quit;

data nhats_hh_total;
set nhats_hh_total;
hh_claim = 1;
admit_year = 2018;
run;

proc sql;
create table nhats_hh_total2 as select distinct admit_year,
sum(hh_claim) as mc_hh_claim
from nhats_hh_total group by admit_year;
quit;

data nhats_hh_annual3;
set nhats_hh_annual2 nhats_hh_total2;
by admit_year;
run; 


proc export data=nhats_hh_annual3 outfile="E:\data\HBMC_HRS\int_data\nhats_hh.dta" dbms=stata replace; run;





/********** Identifying house calls ************/

/* Identifying house calls */

data carrier;
set claims.pb_09_16;
admit_year = year(admit_date);
array dx hcpcscd1--hcpcscd13;
do over dx;
hcpcs_cd=dx;
output;
end;
run;

data carrier1;
set carrier;
cptcodes1 = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
run;

data carrier1;
set carrier1;
cpt1flag = 0;
if 99341<=cptcodes1<=99350 or 99324<=cptcodes1<=99328 or 99334<=cptcodes1<=99337 then cpt1flag = 1;
run;

proc sort data=carrier1 nodupkey; by bene_id clm_id; run;

data carrierline (keep = bene_id clm_id LINE_PLACE_OF_SRVC_CD cptcodes);
set cyears.bcarrier_line_j_09_16;
cptcodes = input(compress(hcpcs_cd,'ABCDEFGHIJKLMNOPQRSTUVWXYZ/',),8.);
run;

data carrierline;
set carrierline;
if 99341<=cptcodes<=99350 or 99324<=cptcodes<=99328 or 99334<=cptcodes<=99337 then cptflag=1;
if LINE_PLACE_OF_SRVC_CD in:(12,13,14) then posflag=1;
run;

proc freq data=carrierline; tables cptflag posflag; run;

data linecalls;
set carrierline;
where cptflag = 1 or posflag = 1;
run;

proc sql;
create table carrier2 as select a.*, b.*
from carrier1 a
full outer join linecalls b
on a.bene_id=b.bene_id and a.clm_id = b.clm_id;
quit;

data carrier2;
set carrier2;
where cptflag = 1 or cpt1flag = 1 or posflag = 1;
admit_year = year(admit_date);
run;

proc sort data=carrier2 nodupkey; by bene_id clm_id; run;

proc sort data=carrier2 out=carrier3 nodupkey; by bene_id; run;

proc freq data=carrier2; tables cptflag cpt1flag; run;

data carrier2;
set carrier2;
both_flag = 0;
if (cptflag=1 or cpt1flag=1) and posflag=1 then both_flag =1;
if (cptflag=1 or cpt1flag=1) then cptflag=1;
run;

proc sql;
create table pb_annual as select distinct bene_id, admit_year,
sum(cptflag) as cptflag,
sum(posflag) as posflag,
sum(both_flag) as both_flag
from carrier2
group by bene_id, admit_year;
quit;

data pb_annual;
set pb_annual;
if cptflag>=1 then cptflag=1;
if posflag>=1 then posflag=1;
if both_flag>=1 then both_flag=1;
run;

proc sql; /* unique per year */
create table pb_annual2 as select distinct admit_year,
sum(cptflag) as cptflag,
sum(posflag) as posflag,
sum(both_flag) as both_flag
from pb_annual group by admit_year;
quit;


data carrier3;
set carrier3;
admit_year = 2018;
run;

proc sql;
create table carrier_tot as select distinct admit_year,
sum(cptflag) as cptflag,
sum(posflag) as posflag,
sum(both_flag) as both_flag
from carrier3  group by admit_year;
quit;

data annual;
set pb_annual2 carrier_tot;
by admit_year;
run;



proc export data=annual outfile="E:\data\HBMC_HRS\int_data\nhats_carrier.dta" replace; run;

proc sql;
create table homecallsb4_90 as select a.*, b.cptcodes, b.admit_date
from ip_check a
inner join carrier2 b
on a.bene_id=b.bene_id and -90<a.index_date-b.admit_date<=90;
quit;


proc sort data=homecallsb4_90 nodupkey; by descending wave bene_id; run;
proc sort data=homecallsb4_90 nodupkey; by bene_id; run;

proc freq data=homecallsb4_90; tables ffs_6m; run;

proc sort data=homecallsb4_90 out=test; by descending wave bene_id; run;

/*
data homecalls_90;
set homecallsb4_90_1 homecallsb4_90_2 homecallsb4_90_3 homecallsb4_90_4 homecallsb4_90_5;
run;

*/
proc export data=homecallsb4_90 outfile="E:\nhats\data\Projects\IAH\int_data\homecalls_90.dta" replace; run;



H="P01 Table - NHATS"
use "E:\data\HBMC_HRS\int_data\nhats_hh.dta", replace

merge 1:1 admit_year using "E:\data\HBMC_HRS\int_data\nhats_carrier.dta"
drop _m


mat tab1=J(10,4,.)

replace admit_year = 2017 if admit_year==2018

local cvars mc_hh_claim cptflag posflag both_flag


local r = 1
local c = 1

forvalues i=2008/2017 {

	foreach x of local cvars {
	
sum `x' if admit_year==`i'
mat tab1[`r',`c'] = r(mean)

local ++c
}

local c = 1
local ++r
}

mat rownames tab1 = "2008" "2009" "2010" "2011" "2012" "2013" "2014" "2015" "2016" "Total Unique 2008-2016"

frmttable using "E:\projects\HBMC_HRS\logs\NHATS_P01_SampleSize.doc", replace statmat(tab1) ///
varlabels title("NHATS 2008-2016: Unique respondents across years") ctitles("Year", "Medicare HH" "Carrier CPT" "Carrier POS" "CPT + POS") sdec(0) //


H="***************************"


H="Changelog"
02/13/2019 - Added Medicare Home Health claims flag and created censored version of housecalls table. Omari. 

02/06/2019 - Ammended "Table 1 and res care by homebound status" to include a four-column table (y/n housecall and y/n homebound) and make shareable. Evan

02/05/2019 - Added "Table 1 and res care by homebound status" tab. Evan


01/29/2019 - Calculated person years. Omari


01/02/2019 - Updated the code to include cell size censored tables. Omari