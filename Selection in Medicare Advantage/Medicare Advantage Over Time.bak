= V4 Outline MultiLine NoSorting TabWidth=30

H="Medicare Advantage Over Time"
/* 
********************HEADING******************** 

Project Name: Medicare Advantage Over Time

Date Started: 4/5/19

Primary Investigator: Ankuda/Bollens-Lund
Funding Source:

Created by: EBL

Primary Analyst: EBL
Secondary Analyst: CKA

Datasets Used: HRS & Claims

Simple Outline: Looking at the change in Medicare FFS v Advantage population over time

Dataset outline-
One observation per person per year, matched to characteristics from the 
in-year or previous interview

Variables-
Demographics
 Age
 Sex
 Race/ethnicity

Function
 ADLs
 Caregiving
 Probable Dementia

Social
 Wealth
 Education
 Household composition, kids nearby
 Social network size
 
Regional characteristics
 Region
 Rurality/urbanicity
 Dartmouth Atlas health system characteristics and regional health care use
 Regional SES
 
Differences by star rating
 Above characterists: snapshot vs. over time


*/
 
//STATA
// Global Macros use $ symbol to be called. 

//resources
global medipath "E:\data\CMS_DUA_51675_2014\Merged\Stata"
global hrspath "E:\data\hrs_cleaned"
global refpath "E:\data\Selection in Medicare Advantage\MA over time\Ref Docs"

//Data 
global intpath "E:\data\Selection in Medicare Advantage\MA over time\Data\int_data"
global datapath "E:\data\Selection in Medicare Advantage\MA over time\Data\final_data"

//output path
global outpath "E:\data\Selection in Medicare Advantage\MA over time\Output\In Progress"
global logpath "E:\data\Selection in Medicare Advantage\MA over time\Output\Logs"




H="Dataset setup"
//get vars needed from the MBSF

use ${medipath}\basf_1998_2015.dta, clear
gen year=year(start_dt)
local mbsfvars bid year a_mo b_mo hmo_mo metro ind_ma

//use simple month counts for FFS--assume part A all the time (.5% of ppl have fewer months of A coverage than B)
gen ind_ma=inlist(hmo_mo,1,12)
label var ind_ma "1+ Month of non-FFS MC in calendar year"

keep `mbsfvars' 

tempfile mbsf
save `mbsf'

//RUCC
use "E:\data\hrs_restricted_2014\Detail\2014\hrsxdetail2014(2nd try unzip)\stata\hrsxgeo14b_r.dta", clear
rename year wave_year
gen id=hhid+pn
gen rucc=urbrur1993 if wave_year<2003
replace rucc=urbrur2003 if inrange(wave_year,2003,2012)
replace rucc=urbrur2013 if wave_year>2012
label var rucc "Rural-Urban Continuum Code"
gen metro_ind=rucc<=3
label var metro_ind "Metro area (RUCC<4)"

keep id wave_year rucc metro_ind

tempfile rucc
save `rucc'

//pull kids nearby from family file
use "E:\data\hrs_public_2014\rand2014\family\family_r_clean_98_14", clear
keep id core_year resd_kid_ind kid_nearby_ind
tempfile fam
save `fam'

//some caregiving info from the helper file
use "E:\data\hrs_cleaned\helper_hours_2016.dta", clear
rename year wave_year

keep id n_hp n_s n_f n_i n_k hlphrs wave_year
tempfile help
save `help'


//start with core, add exit for death year 

//4/5/19-ebl-we should think about the exact structuring of this so it's most appropriate
	
use "${hrspath}\core_00_to_14.dta", clear
append using "${hrspath}\exit_02_to_16_dt.dta"
merge 1:1 id core_year using "E:\data\hrs_public_2014\dementia\pdem_withvarnames_00_14.dta", ///
keep(match master) gen(demmmerge) keepusing(pdem)
merge 1:1 id core_year using `fam', keep(match master) gen(fammerge)
gen prob_dem=pdem>.5 if !missing(pdem)
/*get list of variables we may want to look at, renaming exit for consistency
note-education, race, and age come from the tracker rather than the ivw*/
label define comor_c_hrs 0 "None (0)" 1 "Mild (1-3)" 2 "Moderate (4-6)" 3 "Severe (>7)", modify
label values comor_c_hrs comor_c_hrs

local keepvars id hhid pn ivw_date wave_year ivw_type adl_dependent married wgtr /// //add things as we get to them-ebl
nw nw_quart srh_pf medicaid cesd_tot cesd_tot_ge3 comor* prob_dem resd_kid_ind ///
kid_nearby_ind pain_hrs

gen nw=networth_adj2012 * 1.04535
label var nw "Net Worth, 2016$"
replace medicaid=0 if missing(medicaid)

rename c_ivw_date ivw_date
replace ivw_date=e_ivw_date if missing(ivw_date)

gen wave_year=core_year
replace wave_year=exit_year if missing(wave_year)
label var wave_year "Year of wave (core or exit)"

gen ivw_type=!missing(e_ivw_date)
label define ivw_type 0 "Core" 1 "Exit"
label values ivw_type ivw_type

gen adl_dependent=adl_independent_core==0 
replace adl_dependent=adl_independent==0 if !missing(adl_independent)
label var adl_dependent "ADL dependent"

replace married=married_or_part if missing(married)

keep `keepvars'

merge 1:1 id wave_year using `help', keep(match master) gen(helpmmerge)
gen ind_help=n_hp>0 & !missing(n_hp)

tempfile hrs
save `hrs'

use "${hrspath}\restr_tracker_v2014.dta", clear

local trackvars id hhid pn gender birth_date hisp_eth white black other_na_api_race ///
degree state zip stratum secu wave_year region

drop id 
gen id=hhid+pn

forvalues i=92(2)98 {
	rename *`i' *19`i'
}

foreach i in 00 02 04 06 08 10 12 14 {
	rename *`i' *20`i'
}

//we have location from the MBSF, but use these for now
rename zipcode* zip*
rename stateusps* state*

reshape long zip state, i(hhid pn) j(wave_year)

gen region=inlist(state,"CT","ME","MA","NH","RI","VT","NJ","NY","PA")
replace region=2 if inlist(state,"IN","IL","MI","OH","WI" ) | ///
inlist(state,"IA","KS","MN","MO","NE","ND","SD")
replace region=3 if inlist(state,"DE","DC","FL","GA","MD","SC","NC") | ///
inlist(state,"VA","WV","AL","KY","MS","TN") 
replace region=3 if inlist(state,"AR","LA","OK","TX")
replace region=4 if inlist(state,"AZ","CO","ID","NM","MT") | ///
inlist(state,"UT","NV","WY","AK","CA","HI","OR","WA")
label define region 1 "Northeast" 2 "Midwest" 3 "South" 4 "West"
label values region region

keep `trackvars'
merge 1:1 hhid pn wave_year using `hrs', gen(trackm) keep(match using)
merge 1:1 id wave_year using `rucc', gen(ruccm) keep(match)

//bring forward for exit
sort id wave_year
foreach x of varlist `trackvars' wgtr {
	by id: replace `x'=`x'[_n-1] if missing(`x')
}

/*may well want to do this later
//need to expand to merge with MBSF annually
expand 2, gen(new)
gen year=wave_year
replace year=year+1 if new==1
drop new
*/
gen year=wave_year

merge m:1 hhid pn using "${medipath}\xref2015medicare.dta", ///
keep(match) keepusing(BID) nogen
rename *, l

merge 1:1 bid year using `mbsf', keep(match) nogen

//create age as of end of the year & restrict to 65+
gen age=year-year(birth_date)
drop if age<65

//female from gender
gen female=gender-1

//hs+ from degree
gen educ_hs=degree>=1 if !missing(degree)
label var educ_hs "Indicator HS Diploma (incl. GED)"
save "E:\data\Selection in Medicare Advantage\MA over time\Data\final_data\ma_final.dta", replace

H="Graphs of change over time"
clear all
set more off
capture log close
cd "${logpath}"
use "E:\data\Selection in Medicare Advantage\MA over time\Data\final_data\ma_final.dta", clear

preserve
collapse ind_ma white female married educ_hs age adl_dependent [pw=wgtr], by(year)

twoway connected ind_ma year, nodraw name(ma, replace) title(ind_ma)  //yscale(range(0 0.9))

restore

preserve
collapse white female married educ_hs age adl_dependent srh_pf cesd_tot_ge3 prob_dem resd_kid_ind ///
kid_nearby_ind pain_hrs [pw=wgtr], by(ind_ma year)
*replace age=age/100
foreach x in female married educ_hs adl_dependent age white srh_pf cesd_tot_ge3 prob_dem resd_kid_ind ///
kid_nearby_ind pain_hrs {
	twoway (connected `x' year if ind_ma==0) (connected `x' year if ind_ma==1), ///
	nodraw name(`x', replace) title(`x') /*legend(label(1 "Full FFS") ///
label(2 "Any MA"))*/ legend(off) //yscale(range(0 .9))
}
graph combine ma age white female

graph combine  married educ_hs adl_dependent, ycommon

H="Tables at 02,08,14"
clear all
set more off
capture log close
cd "${logpath}"
use "E:\data\Selection in Medicare Advantage\MA over time\Data\final_data\ma_final.dta", clear

local cvars1 age
local ivars1 female married hisp_eth white black other_na_api_race
local catvars1 
local cvars2
local ivars2 educ_hs medicaid adl_dependent ind_help srh_pf resd_kid_ind kid_nearby_ind 
local catvars2
local cvars3 nw
local ivars3 
local catvars3 nw_quart
local cvars4 
local ivars4 prob_dem cesd_tot_ge3 
local catvars4 comor_c_hrs 
local cvars5 
local ivars5 metro_ind
local catvars5 region 


forvalues i=1/5 {
	foreach x of local catvars`i' {
		di "`x'"
		local `x'
		levelsof `x', local(levels)
		foreach l of local levels {
			gen `x'`l'=`x'==`l' if !missing(`x')
			local lab : label `x' `l'
			label var `x'`l' "`lab'"
			local `x' ``x'' `x'`l'
}
		di "``x''"
		local cativars`i' `cativars`i'' ``x''
}
}
label var comor_c_hrs0 "SR Comorbidities: none"

di "`catvars1'"
di "`cativars1'"

local rn : word count `cvars1' `ivars1' `cativars1'  `cvars2' `ivars2' `cativars2' `cvars3' `ivars3' ///
`cativars3' `cvars4' `ivars4' `cativars4' `cvars5' `ivars5' `cativars5' 
scalar _rn =`rn'

di `rn'



local r=1
local c=1

mat tab=J(_rn,6,.)
mat stars=J(_rn,6,0)

foreach year in 2002 2008 2014 {
preserve
keep if year==`year'
foreach y in 0 1 {
	forvalues i=1/5 {
		foreach x of local cvars`i' {
		qui	sum `x' if inlist(ind_ma,`y') [aw=wgtr], d
			mat tab[`r',`c']=r(mean)
			*mat tab [`r'+1,`c']=r(p50)
/*			if "`y'"=="1" {
				ttest `x', by(ind_ma)
				mat tab[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}*/
			local r=`r'+1
			
}
		foreach x of local ivars`i' {
			qui sum `x' if inlist(ind_ma,`y') [aw=wgtr]
			mat tab[`r',`c']=r(mean)*100
/*			if "`y'"=="1" {
				tab `x' ind_ma, chi2
				mat tab[`r',`c'+1]=r(p)
				mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01)
}*/
			local r=`r'+1
}
		foreach x of local catvars`i' {
			/*if "`y'"=="1" {
				tab `x' ind_ma, chi2
				*mat tab[`r',4]=r(p)
				*mat stars[`r',4]=(r(p)<.05)+(r(p)<.01)
}*/
			foreach z of local `x' {
				qui sum `z' if inlist(ind_ma,`y') [aw=wgtr]
				mat tab[`r',`c']=r(mean)*100
				local r=`r'+1
}
}
}

	local r=1
	local c=`c'+1

}
restore
}

mat rownames tab=`cvars1' `ivars1' `cativars1' `cvars2' `ivars2' `cativars2' `cvars3' `ivars3' ///
`cativars3' `cvars4' `ivars4' `cativars4'  `cvars5' `ivars5' `cativars5' 

frmttable using "table1`c(current_date)'.rtf", statmat(tab) title("MA vs TM Chars Over Time") ///
ctitles("" "MA, 2002" "TM, 2002" "MA,2008" "TM, 2008" "MA, 2014" "TM, 2014") ///
varlabels replace


H="change log"
4/5/19-EBL-started this code and did first pass of data setup
