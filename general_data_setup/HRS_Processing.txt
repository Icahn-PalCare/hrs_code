= V4 Outline MultiLine NoSorting TabWidth=30

H="Processing HRS Raw Data"
/*
This code processes the raw datasets as downloaded from the HRS website

Files used for 2000-2010 were downloaded in October 2013
1998 were downloaded January 2014

Resulting files are:

Single file with separate observations for each core interview
for each individual respondent, merged 2000-2010
For each interview type:
Core
Exit
Restricted

Prior to cleaning the variables, there is a drop variables step to avoid
working with too large a dataset.
For individual projects, adjust the variable list as needed by keeping 
additional variables

Then on a project by project basis, can drop variables that aren't required.
This will keep the main HRS files on the E: drive the full files to be 
used as a clean starting point for future projects.
*/

/*
The original public core data 2002-2008 was downloaded 
from hrs website at 2010,saved at 
E:\data\hrs_public\core\download_hrs\,
use the sas code provided by hrs website to read each 
separate .da data, and save it into sas file,
and for each wave merged all datafiles into one sas file 
in E:\data\hrs_public\core\core2002,
E:\data\hrs_public\core\core2004, and so on.

Overwrote previous versions since adding variables. RG 10/8/13
Used Rand household net worth rather than the i.imputed files
*/



H="Merge raw files into year datasets"

/*
read in core raw data from 2000 to 2008,
which were downloaded in 2010 from hrs website,

There is no education information for year 2006 -2010 ,we need
to borrow that from the previous cores since they are static variables.

*/
/********************************************/
/*Amy's PC file paths*/
/********************************************/
/*sas data files, before the merge into year files*/
libname core_pre 'E:\data\hrs_public_2010\core\raw_sas';
libname exit_pre 'E:\data\hrs_public_2010\exit\raw_sas';

/*data files, single file per year*/
libname core_raw 'E:\data\hrs_public_2010\core';
libname exit_raw 'E:\data\hrs_public_2010\exit';

/*Working HRS data files*/
libname hrs_int 'E:\data\hrs_cleaned\working';

/*final HRS data files*/
libname hrs_fnl 'E:\data\hrs_cleaned';

/********************************************/
/*RG PC file paths*/
/********************************************/

/*sas data files, before the merge into year files*/
libname core_pre 'C:\HRS\hrs_core\raw_sas';
libname exit_pre 'C:\HRS\hrs_exit\all_sas';

/*data files, single file per year*/
libname core_raw 'C:\HRS\hrs_core';
libname exit_raw 'C:\HRS\hrs_exit';

/*HRS working data files*/
libname hrs_int 'C:\HRS\hrs_cleaned\working';

/*HRS final cleaned data files*/
libname hrs_fnl 'C:\HRS\hrs_cleaned';


H="Core - 1998"
/*******************************************************************/
/*******************************************************************/
/*   1998 data   
Updated to take total wealth from Rand file rather than HRS imputed
file*/
/*******************************************************************/
/*******************************************************************/
%let year=98;

proc sort data=core_pre.H98a_r;
by hhid fsubhh pn;
proc sort data=core_pre.H98b_r;
by hhid fsubhh pn;
proc sort data=core_pre.H98c_r;
by hhid fsubhh pn;
proc sort data=core_pre.H98e_r;
by hhid fsubhh pn;
proc sort data=core_pre.H98cs_r;
by hhid fsubhh pn;
proc sort data=core_pre.H98g_r;
by hhid fsubhh pn;
proc sort data=core_pre.H98m_r;
by hhid fsubhh pn;
proc sort data=core_pre.H98pr_r;
by hhid fsubhh pn;
proc sort data=core_pre.H98r_r;
by hhid fsubhh pn;

proc sort data=core_pre.H98E_HP;
by hhid fsubhh pn;

proc sort data=core_pre.H98i_er;
by hhid fsubhh pn;
proc sort data=core_pre.wlth98f2;
by hhid fsubhh pn;

proc sort data=core_pre.H98d_h;
by hhid fsubhh;
proc sort data=core_pre.H98cs_h;
by hhid fsubhh;

run;

/*change variable name for networth from Rand file to make it match
that from the HRS imputed files*/
data wlth98_1(keep=hhid fsubhh pn fnetwrth);
set core_pre.wlth98f2(rename=(H4ATOTB=fnetwrth));
run;

option cleanup;

/*Merge respondent level data
Didn't take age g1101, g757 gender, g6772 g6773 re. religion
g262 previous wave memory disease, 
*/

data Core1998sub1;
merge core_pre.H98i_er  
core_pre.H98a_r 
core_pre.H98b_r 
core_pre.H98c_r
core_pre.H98cs_r
core_pre.H98e_r 
core_pre.H98g_r 
core_pre.H98m_r
core_pre.H98pr_r 
core_pre.H98r_r 
wlth98_1;
by hhid fsubhh pn;
run;

proc sort data=Core1998sub1;
by hhid fsubhh;
run;

/*Merge household level data*/
data core_raw.Core1998;
merge Core1998sub1 core_pre.H98d_h core_pre.H98cs_h ;
by hhid fsubhh;
run;


H="Core - 2000"
/*******************************************************************/
/*******************************************************************/
/*   2000 data   
Updated to take total wealth from Rand file rather than HRS imputed
file*/
/*******************************************************************/
/*******************************************************************/
%let year=00;

proc sort data=core_pre.H00a_r;
by hhid gsubhh pn;
proc sort data=core_pre.H00b_r;
by hhid gsubhh pn;
proc sort data=core_pre.H00c_r;
by hhid gsubhh pn;
proc sort data=core_pre.H00e_r;
by hhid gsubhh pn;
proc sort data=core_pre.H00cs_r;
by hhid gsubhh pn;
proc sort data=core_pre.H00g_r;
by hhid gsubhh pn;
proc sort data=core_pre.H00m_r;
by hhid gsubhh pn;
proc sort data=core_pre.H00pc_r;
by hhid gsubhh pn;
proc sort data=core_pre.H00pr_r;
by hhid gsubhh pn;
proc sort data=core_pre.H00r_r;
by hhid gsubhh pn;

proc sort data=core_pre.H00E_HP;
by hhid gsubhh pn;

proc sort data=core_pre.H00i_er;
by hhid gsubhh pn;
proc sort data=core_pre.wlth00f1;
by hhid gsubhh pn;

proc sort data=core_pre.H00d_h;
by hhid gsubhh;
proc sort data=core_pre.H00cs_h;
by hhid gsubhh;

run;

/*change variable name for networth from Rand file to make it match
that from the HRS imputed files*/
data wlth00_1(keep=hhid gsubhh pn gnetwrth);
set core_pre.wlth00f1(rename=(H5ATOTB=gnetwrth));
run;

option cleanup;

/*Merge respondent level data*/
data Core2000sub1;
merge core_pre.H00i_er  
core_pre.H00a_r
core_pre.H00b_r
core_pre.H00c_r 
core_pre.H00cs_r 
core_pre.H00e_r
core_pre.H00g_r 
core_pre.H00m_r
core_pre.H00pc_r
core_pre.H00pr_r
core_pre.H00r_r 
wlth00_1;
by hhid gsubhh pn;
run;

proc sort data=Core2000sub1;
by hhid gsubhh;
run;

/*Merge household level data*/
data core_raw.Core2000;
merge Core2000sub1 core_pre.H00d_h 
core_pre.H00cs_h ;
by hhid gsubhh;
run;


H="Core - 2002"
/*******************************************************************/
/*******************************************************************/
/*   2002 data   
Section RC data is required to be added*/
/*******************************************************************/
/*******************************************************************/

%let type=h;
%let year=02;

/* Core2002: a_r, b_r, c_r, d_r, f_r, g_r, pr_r, rc_r and 
imputed files: cr, eh, gr, nr, Rand wealth */


proc sort data=core_pre.H02a_r;
by hhid pn hsubhh;
proc sort data=core_pre.H02b_r;
by hhid pn hsubhh;
proc sort data=core_pre.H02c_r;
by hhid pn hsubhh;
proc sort data=core_pre.H02d_r;
by hhid pn hsubhh;
proc sort data=core_pre.H02f_r;
by hhid pn hsubhh;
proc sort data=core_pre.H02g_r;
by hhid pn hsubhh;
proc sort data=core_pre.H02m1_r;
by hhid pn hsubhh; 
proc sort data=core_pre.H02n_r;
by hhid pn hsubhh;
proc sort data=core_pre.H02pr_r;
by hhid pn hsubhh; 
proc sort data=core_pre.H02rc_r;
by hhid pn hsubhh;

proc sort data=core_pre.H02i_cr;
by hhid pn hsubhh;
proc sort data=core_pre.H02i_gr;
by hhid pn hsubhh;
proc sort data=core_pre.H02i_nr;
by hhid pn hsubhh;
proc sort data=core_pre.wlth02f2;
by hhid pn hsubhh;

proc sort data=core_pre.H02i_eh;
by hhid hsubhh;

proc sort data=core_pre.H02a_h;
by hhid hsubhh;
proc sort data=core_pre.H02e_h;
by hhid hsubhh;

run;

/*change variable name for networth from Rand file to make it match
that from the HRS imputed files*/
data wlth02_1(keep=hhid hsubhh pn hnetwrth);
set core_pre.wlth02f2(rename=(H6ATOTB=hnetwrth));
run;

/*merge respondent level files*/
data Core2002sub1;
merge core_pre.H02b_r
 /*core_pre.H02i_cr(keep=hhid pn )
 core_pre.H02i_gr(keep=hhid pn ) 
core_pre.H02i_nr(keep=hhid pn )*/
 core_pre.H02a_r 
core_pre.H02c_r 
core_pre.H02d_r
core_pre.H02f_r 
core_pre.H02g_r 
core_pre.H02m1_r 
core_pre.H02n_r 
core_pre.H02pr_r 
/*core_pre.H02rc_r(keep=hhid pn )*/ 
wlth02_1;
by hhid pn;
run;

proc sort data=Core2002sub1;
by hhid hsubhh;
run;

/*merge household level files*/
data core_raw.Core2002;
merge Core2002sub1 core_pre.H02i_eh core_pre.H02a_h  core_pre.H02e_h;
by hhid hsubhh;
run;


H="Core - 2004"
/*******************************************************************/
/*******************************************************************/
/*   2004 data   
Section RC data is required to be added
Did not merge in imputed file nr which was previously included
since no variables from that file are kept for analysis*/
/*******************************************************************/
/*******************************************************************/

/**Core 2004:a_h, a_r, b_r, c_r, d_r, e_h, f_r, g_r, m1_r, n_r, pr_r, rc_r
and imputed files: cr, eh, Rand wealth **/

option cleanup;

%let year=04;

proc sort data=core_pre.H04a_r;
by hhid pn jsubhh;
proc sort data=core_pre.H04b_r;
by hhid pn jsubhh;
proc sort data=core_pre.H04c_r;
by hhid pn jsubhh;
proc sort data=core_pre.H04d_r;
by hhid pn jsubhh;
proc sort data=core_pre.H04f_r;
by hhid pn jsubhh;
proc sort data=core_pre.H04g_r;
by hhid pn jsubhh;
proc sort data=core_pre.H04m1_r;
by hhid pn jsubhh;
proc sort data=core_pre.H04n_r;
by hhid pn jsubhh;
proc sort data=core_pre.H04pr_r;
by hhid pn jsubhh;
proc sort data=core_pre.H04rc_r;
by hhid pn jsubhh;

proc sort data=core_pre.H04i_cr;
by hhid pn jsubhh;
proc sort data=core_pre.wlth04f1;
by hhid pn jsubhh;

proc sort data=core_pre.H04a_h;
by hhid jsubhh;
proc sort data=core_pre.H04e_h;
by hhid jsubhh;

proc sort data=core_pre.H04i_eh;
by hhid jsubhh;

run;

/*******************************************************************/
/*merge respondent level files*/
data Core2004sub1_0;
merge core_pre.H04a_r
core_pre.H04b_r
core_pre.H04c_r 
core_pre.H04d_r 
core_pre.H04f_r 
core_pre.H04g_r 
core_pre.H04m1_r 
core_pre.H04n_r 
core_pre.H04pr_r 
core_pre.H04rc_r
;
by hhid pn;
run;

/*change variable name for networth from Rand file to make it match
that from the HRS imputed files*/
data wlth04_1(keep=hhid jsubhh pn jnetwrth);
set core_pre.wlth04f1(rename=(H7ATOTB=jnetwrth));
run;

data im_r04;
merge core_pre.H04i_cr wlth04_1;
by hhid pn;
run;

/*merge resp level core and imputed files*/
data Core2004sub1;
merge Core2004sub1_0 im_r04 ;
by hhid pn;
run;

proc sort data=Core2004sub1;
by hhid jsubhh;
run;

/*******************************************************************/

/*merge household level files*/
/*imputed*/
data im_04_h;
merge  core_pre.H04i_eh  core_pre.H04i_qh ;
by hhid jsubhh;
run;

/*core*/
data core04_h;
merge core_pre.H04a_h core_pre.H04e_h;
by hhid jsubhh;
run;

/*core + imp hh*/
data ci04_h;
merge im_04_h core04_h;
by hhid jsubhh;
run;

proc sort data=ci04_h;
by hhid jsubhh;
run;

/*******************************************************************/

/*merge resp and hh level files*/
data core_raw.Core2004;
merge Core2004sub1 ci04_h;
by hhid jsubhh;
run;


H="Core - 2006"
/*******************************************************************/
/*******************************************************************/
/*   2006 data   
Section RC data is required to be added*/
/*******************************************************************/
/*******************************************************************/
/**Core 2006:a_h, a_r, b_r, c_r, d_r, e_h, f_r, g_r, m1_r, n_r, pr_r, rc_r
and imputed files: rand wealth**/
%let year=06;

proc sort data=core_pre.H06a_r;
by hhid pn ksubhh;
proc sort data=core_pre.H06b_r;
by hhid pn ksubhh;
proc sort data=core_pre.H06c_r;
by hhid pn ksubhh;
proc sort data=core_pre.H06d_r;
by hhid pn ksubhh;
proc sort data=core_pre.H06f_r;
by hhid pn ksubhh;
proc sort data=core_pre.H06g_r;
by hhid pn ksubhh;
proc sort data=core_pre.H06m1_r;
by hhid pn ksubhh;
proc sort data=core_pre.H06n_r;
by hhid pn ksubhh;
proc sort data=core_pre.H06pr_r;
by hhid pn ksubhh;
proc sort data=core_pre.H06rc_r;
by hhid pn ksubhh;

proc sort data=core_pre.incwlth06f2a;
by hhid pn ksubhh;

proc sort data=core_pre.H06a_h;
by hhid ksubhh;
proc sort data=core_pre.H06e_h;
by hhid ksubhh;

run;

/*******************************************************************/
/*merge respondent level files*/
option cleanup;

data Core2006sub1_0;
merge  
core_pre.H06a_r
core_pre.H06b_r
core_pre.H06c_r
core_pre.H06d_r
core_pre.H06f_r
core_pre.H06g_r
core_pre.H06m1_r
core_pre.H06n_r
core_pre.H06pr_r
core_pre.H06rc_r
;
by hhid pn;
run;

/*change variable name for networth from Rand file to make it match
that from the HRS imputed files*/
data wlth06_1(keep=hhid ksubhh pn knetwrth);
set core_pre.incwlth06f2a(rename=(H8ATOTB=knetwrth));
run;

data im_r06;
set wlth06_1;
run;

/*merge resp level core and imputed files*/
data Core2006sub1;
merge Core2006sub1_0 im_r06 ;
by hhid pn;
run;

proc sort data=Core2006sub1;
by hhid ksubhh;
run;

/*******************************************************************/

/*merge household level files*/
/*core*/
data core06_h;
merge core_pre.H06a_h core_pre.H06e_h;
by hhid ksubhh;
run;

proc sort data=core06_h;
by hhid ksubhh;
run;

/*******************************************************************/

/*merge resp and hh level files*/
data core_raw.Core2006;
merge Core2006sub1 core06_h;
by hhid ksubhh;
run;


H="Core - 2008"
/*******************************************************************/
/*******************************************************************/
/*   2008 data   
Section RC data is required to be added*/
/*******************************************************************/
/*******************************************************************/
/**Core 2008:a_h, a_r, b_r, c_r, d_r, e_h, f_r, g_r, m1_r, n_r, pr_r, rc_r
and imputed files: rand wealth**/
%let year=08;

proc sort data=core_pre.H08a_r;
by hhid pn lsubhh;
proc sort data=core_pre.H08b_r;
by hhid pn lsubhh;
proc sort data=core_pre.H08c_r;
by hhid pn lsubhh;
proc sort data=core_pre.H08d_r;
by hhid pn lsubhh;
proc sort data=core_pre.H08f_r;
by hhid pn lsubhh;
proc sort data=core_pre.H08g_r;
by hhid pn lsubhh;
proc sort data=core_pre.H08m1_r;
by hhid pn lsubhh;
proc sort data=core_pre.H08n_r;
by hhid pn lsubhh;
proc sort data=core_pre.H08pr_r;
by hhid pn lsubhh;
proc sort data=core_pre.H08rc_r;
by hhid pn lsubhh;

proc sort data=core_pre.incwlth08f1b;
by hhid pn lsubhh;

proc sort data=core_pre.H08a_h;
by hhid lsubhh;
proc sort data=core_pre.H08e_h;
by hhid lsubhh;

run;

/*******************************************************************/
/*merge respondent level files*/

option cleanup;

data Core2008sub1_0;
merge  core_pre.H08a_r
core_pre.H08b_r
core_pre.H08c_r
core_pre.H08d_r
core_pre.H08f_r
core_pre.H08g_r 
core_pre.H08m1_r
core_pre.H08n_r 
core_pre.H08pr_r
core_pre.H08rc_r;
by hhid pn;
run;

/*change variable name for networth from Rand file to make it match
that from the HRS imputed files*/
data wlth08_1(keep=hhid lsubhh pn lnetwrth);
set core_pre.incwlth08f1b(rename=(H9ATOTB=lnetwrth));
run;

data im_r08;
set wlth08_1;
run;

/*merge resp level core and imputed files*/
data Core2008sub1;
merge Core2008sub1_0 im_r08 ;
by hhid pn;
run;

proc sort data=Core2008sub1;
by hhid lsubhh;
run;

/*******************************************************************/

/*merge household level files*/
/*core*/
data core08_h;
merge core_pre.H08a_h core_pre.H08e_h;
by hhid lsubhh;
run;

proc sort data=core08_h;
by hhid lsubhh;
run;

/*******************************************************************/

/*merge resp and hh level files*/
data core_raw.Core2008;
merge Core2008sub1 core08_h;
by hhid lsubhh;
run;



H="Core - 2010"
/*******************************************************************/
/*******************************************************************/
/*   2010 data   
Section RC data is required to be added*/
/*******************************************************************/
/*******************************************************************/
/**Core 2010:a_h, a_r, b_r, c_r, d_r, e_h, f_r, g_r, m1_r, n_r, pr_r, rc_r
and imputed files: rand wealth**/
%let year=10;

proc sort data=core_pre.H10a_r;
by hhid pn msubhh;
proc sort data=core_pre.H10b_r;
by hhid pn msubhh;
proc sort data=core_pre.H10c_r;
by hhid pn msubhh;
proc sort data=core_pre.H10d_r;
by hhid pn msubhh;
proc sort data=core_pre.H10f_r;
by hhid pn msubhh;
proc sort data=core_pre.H10g_r;
by hhid pn msubhh;
proc sort data=core_pre.H10m1_r;
by hhid pn msubhh;
proc sort data=core_pre.H10n_r;
by hhid pn msubhh;
proc sort data=core_pre.H10pr_r;
by hhid pn msubhh;
proc sort data=core_pre.H10rc_r;
by hhid pn msubhh;

proc sort data=core_pre.incwlth10e1a;
by hhid pn msubhh;

proc sort data=core_pre.H10a_h;
by hhid msubhh;
proc sort data=core_pre.H10e_h;
by hhid msubhh;

run;

/*******************************************************************/
/*merge respondent level files*/

option cleanup;

data Core2010sub1_0;
merge  core_pre.H10a_r
core_pre.H10b_r
core_pre.H10c_r
core_pre.H10d_r
core_pre.H10f_r
core_pre.H10g_r
core_pre.H10m1_r
core_pre.H10n_r
core_pre.H10pr_r
core_pre.H10rc_r;
by hhid pn;
run;

/*change variable name for networth from Rand file to make it match
that from the HRS imputed files*/
data wlth10_1(keep=hhid msubhh pn mnetwrth);
set core_pre.incwlth10e1a(rename=(H10ATOTB=mnetwrth));
run;

data im_r10;
set wlth10_1;
run;

/*merge resp level core and imputed files*/
data Core2010sub1;
merge Core2010sub1_0 im_r10 ;
by hhid pn;
run;

proc sort data=Core2010sub1;
by hhid msubhh;
run;

/*******************************************************************/

/*merge household level files*/
/*core*/
data core10_h;
merge core_pre.H10a_h core_pre.H10e_h;
by hhid msubhh;
run;

proc sort data=core10_h;
by hhid msubhh;
run;

/*******************************************************************/

/*merge resp and hh level files*/
data core_raw.Core2010;
merge Core2010sub1 core10_h;
by hhid msubhh;
run;



H="Exit - 2002"
/*
Use raw data downloaded on 10/22/13 to
C:\hrs_exit\all_sas

Store merged year files in the project directory on RG PC or in the E drive on Amy's PC

Exit2002: a_r, b_r, c_r, d_r, e_r, g_r, io_r, j_r, n_r, pr_r, t_r, w_r, y_r

*/

proc sort data=exit_pre.X02a_r;
by hhid pn;
proc sort data=exit_pre.X02b_r;
by hhid pn;
proc sort data=exit_pre.X02c_r;
by hhid pn;
proc sort data=exit_pre.X02d_r;
by hhid pn;
proc sort data=exit_pre.X02e_r;
by hhid pn;
proc sort data=exit_pre.X02g_r;
by hhid pn;
proc sort data=exit_pre.X02io_r;
by hhid pn;
proc sort data=exit_pre.X02j_r;
by hhid pn;
proc sort data=exit_pre.X02n_r;
by hhid pn;
proc sort data=exit_pre.X02pr_r;
by hhid pn;
proc sort data=exit_pre.X02t_r;
by hhid pn;
proc sort data=exit_pre.X02w_r;
by hhid pn;
proc sort data=exit_pre.X02y_r;
by hhid pn;
data exit_raw.Exit2002;
merge exit_pre.X02a_r exit_pre.X02b_r exit_pre.X02c_r exit_pre.X02d_r exit_pre.X02e_r exit_pre.X02g_r exit_pre.X02io_r exit_pre.X02j_r exit_pre.X02n_r exit_pre.X02pr_r exit_pre.X02t_r exit_pre.X02w_r exit_pre.X02y_r;
by hhid pn;
run;

H="Exit - 2004"
/*Exit2004: a_r, b_r, c_r, e_r, g_r, io_r, n_r, pr_r, t_r*/

proc sort data=exit_pre.x04a_r;
by hhid pn;
proc sort data=exit_pre.x04b_r;
by hhid pn;
proc sort data=exit_pre.x04c_r;
by hhid pn;
proc sort data=exit_pre.x04e_r;
by hhid pn;
proc sort data=exit_pre.x04g_r;
by hhid pn;
proc sort data=exit_pre.x04io_r;
by hhid pn;
proc sort data=exit_pre.x04n_r;
by hhid pn;
proc sort data=exit_pre.x04pr_r;
by hhid pn;
proc sort data=exit_pre.x04t_r;
by hhid pn;
run;

data exit_raw.Exit2004;
merge exit_pre.x04a_r exit_pre.x04b_r exit_pre.x04c_r exit_pre.x04e_r exit_pre.x04g_r exit_pre.x04io_r exit_pre.x04n_r exit_pre.x04pr_r exit_pre.x04t_r;
by hhid pn;
run;


H="Exit - 2006"
/*Exit2006: a_r, b_r, c_r, e_r, g_r, io_r, n_r, pr_r, t_r*/

proc sort data=exit_pre.x06a_r;
by hhid pn;
proc sort data=exit_pre.x06b_r;
by hhid pn;
proc sort data=exit_pre.x06c_r;
by hhid pn;
proc sort data=exit_pre.x06e_r;
by hhid pn;
proc sort data=exit_pre.x06g_r;
by hhid pn;
proc sort data=exit_pre.x06io_r;
by hhid pn;
proc sort data=exit_pre.x06n_r;
by hhid pn;
proc sort data=exit_pre.x06pr_r;
by hhid pn;
proc sort data=exit_pre.x06t_r;
by hhid pn;
run;

data exit_raw.Exit2006;
merge exit_pre.x06a_r exit_pre.x06b_r exit_pre.x06c_r exit_pre.x06e_r exit_pre.x06g_r exit_pre.x06io_r exit_pre.x06n_r exit_pre.x06pr_r exit_pre.x06t_r;
by hhid pn;
run;


H="Exit - 2008"
/*Exit2008: a_r, b_r, c_r, e_r, g_r, io_r, n_r, pr_r, t_r*/

proc sort data=exit_pre.x08a_r;
by hhid pn;
proc sort data=exit_pre.x08b_r;
by hhid pn;
proc sort data=exit_pre.x08c_r;
by hhid pn;
proc sort data=exit_pre.x08e_r;
by hhid pn;
proc sort data=exit_pre.x08g_r;
by hhid pn;
proc sort data=exit_pre.x08io_r;
by hhid pn;
proc sort data=exit_pre.x08n_r;
by hhid pn;
proc sort data=exit_pre.x08pr_r;
by hhid pn;
proc sort data=exit_pre.x08t_r;
by hhid pn;
run;

data exit_raw.Exit2008;
merge exit_pre.x08a_r exit_pre.x08b_r exit_pre.x08c_r exit_pre.x08e_r exit_pre.x08g_r exit_pre.x08io_r exit_pre.x08n_r exit_pre.x08pr_r exit_pre.x08t_r;
by hhid pn;
run;


H="Exit - 2010"
/*Exit2010: a_r, b_r, c_r, e_r, g_r, io_r, n_r, pr_r, t_r*/

proc sort data=exit_pre.x10a_r;
by hhid pn;
proc sort data=exit_pre.x10b_r;
by hhid pn;
proc sort data=exit_pre.x10c_r;
by hhid pn;
proc sort data=exit_pre.x10e_r;
by hhid pn;
proc sort data=exit_pre.x10g_r;
by hhid pn;
proc sort data=exit_pre.x10io_r;
by hhid pn;
proc sort data=exit_pre.x10n_r;
by hhid pn;
proc sort data=exit_pre.x10pr_r;
by hhid pn;
proc sort data=exit_pre.x10t_r;
by hhid pn;
run;

data exit_raw.Exit2010;
merge exit_pre.x10a_r exit_pre.x10b_r exit_pre.x10c_r exit_pre.x10e_r exit_pre.x10g_r exit_pre.x10io_r exit_pre.x10n_r exit_pre.x10pr_r exit_pre.x10t_r;
by hhid pn;
run;


H="Core and Exit files - drop variables"
/*This starts with the raw data files for 2000 to 2010 that are merged by year in 
the spouse_data_mar11_2013.txt file (saved here: C:\projects\spouse_ip_admit_impact\notepad_code)

Raw Core datasets are here: libname core_raw "E:\data\hrs_public\core" one file for each year
Raw Exit datasets are here: libname core_ex "E:\data\hrs_public\exit" one file for each year
Save working files here: libname hrs_int "E:\data\hrs_cleaned\working"

Need to start with raw data because bringing in new variables for this project

1/2/14 Note: Commented out for core years, because only variables needed are kept in initial processing
this step is redundant for core years

*/

/*file paths for HRS data on RG computer*/
/*HRS Core - raw data files*/
*libname core_raw 'C:\HRS\hrs_core';

*libname core_raw "E:\data\hrs_public\core";
*libname exit_raw 'E:\data\hrs_public_2010\exit';
*libname hrs_int "E:\data\hrs_cleaned\working";

/*********************************************/
/* Core */
/*********************************************/
data hrs_int.core1998limited;
set core_raw.core1998;
keep hhid fsubhh pn f968a f970a f971 f987a f988 f989 f990m f1002a f1005a f1006 f1052 
f1055 f1071 f1097 f1109 f1116 f1118 f1123 f1129 f1131 f1132m1-f1132m4 f1146 f1152 
f1154 f1156 f1157 f1158 f1171 f1172 f1176 f1189 f1191 f1192 f1193 f1194 f1206 f1215 
f1220 f1239 f1241 f1242 f1262 f1266 f1267 f1282 f1283 f1284 f1291 f1162 f1295 f1296 
f1304-f1310 f1323 f1479 f1480 f1493 f1494 f1495 f1496 f1497 f1498 f1499 f1500 f1501 f462 f469 f479 f483 
f517 f547 f687 f699 f703 f704 f718 f719 f807 f809 f816 f2295 f2296 f2297 f2299 f2300
f2301 f2302 f2304 f2331 f2357 f2391 f2394 f2397 f2400 f2403 f2406 f2409 f2412 f2415 f2418 f2421 f2423_1 f2423_2 f2423_3 f2423_4 f2423_5 f2423_6 f2423_7 
f2423_8 f2423_9 f2423_10 f2424_1 f2424_2 f2424_3 f2424_4 f2424_5 f2424_6 f2424_7 
f2424_8 f2424_9 f2424_10 f2425-f2428 f2431 f2444
 f2447 f2454 f2457 f2464 f2467 f2470 f2477 f2480 f2502 f2508 f2510 f2516 f2517 f2524 f2525 
 f2526 f2528 f2529 f2530 f2532 f2533 f2534 f2536 f2537 f2538 f2540 f2541 f2542 f2553 f2562 
 f2564 f2565 f2567 f2569 f2570 f2572 f2574 f2575 f2577 f2578 f2579 f2580 f2582 f2583 
 f2585 f2591 f2592 f2594 f2596 f2597 f2600 f2602 f2603 f2606 f2608 f2609 f2613 f2614 
 f2615 f2618 f2619 f2620 f2681 f2682 f2683  f4021  f26_1 f228 f234 f300  f5866 f5867 
 f5868 f5869 f5878 f5879 f5881 f5903 f1819 f2243 f2244 f2246 f2247 f521 f6287 f6288
fnetwrth ;
run;

data hrs_int.core2000limited;
set core_raw.core2000;
keep hhid gsubhh pn g1051a g1053a g1060 g1074a g1075 g1076 g1077m g1089a g1092a 
g1093 g1093 g1101 g1139 g1142 g1158 g1226 g1238 g1245 g1249 g1256 g1262 g1264 
g1265m1-g1265m4 g1279 g1285 g1287 g1289 g1290 g1291 g1304 g1305 g1309 g1322 g1324 
g1325 g1326 g1327 g1339 g1348 g1353 g1372 g1374 g1375 g1395 g1399 g1400 g1415 g1416 
g1417 g1425 g1428 g1429 g1437-g1443 g1456 g1527 g1528 g1654 g1655 g1669 g1670 g1671 g1672 g1673 g1674 g1675 g1676
g483 g490 g510 g514 g558 g598  g757 g758 g770 g774 g775 g789 g790 g884 g886 g893 g893
g2567 g2568 g2569 g2571 g2572 g2573 g2574 g2576 g2603 g2634 g2689 g2692 g2695 g2698 
g2701 g2704 g2707 g2710 g2713 g2716 g2719 g2721_1 g2721_2 g2721_3 
g2721_4 g2721_5 g2721_6 g2721_7 g2721_8 g2721_9 g2721_10 g2722_1 g2722_2 g2722_3 
g2722_4 g2722_5 g2722_6 g2722_7 g2722_8 g2722_9 g2722_10 g2723-g2726 g2729 g2742 g2745 g2752 g2755 g2762 g2765 g2768 g2775 g2778 
g2800 g2806 g2808 g2814 g2815 g2822 g2823 g2824 g2826 g2827 g2828 g2830 g2831 g2832 
g2834 g2835 g2836 g2838 g2839 g2840 g2851 g2860 g2862 g2863 g2865 g2867 g2868 g2870 g2872 
g2873 g2875 g2876 g2877 g2878 g2880 g2881 g2883 g2889 g2890 g2892 g2894 g2895 g2898 
g2900 g2901 g2904 g2906 g2907 g2911 g2912 g2913 g2916 g2917 g2918 g2999 g3000 g3001
g4311  g6772 g6773 g26_1 g262 g228 g234 g300  g6238 g6240 g6241 g6242 g6251 g6252 g6254
 g6276  g2035 g2494 g2495 g2497 g2498  g562
gnetwrth;
run;

data hrs_int.core2002limited;
set core_raw.core2002;
keep hhid hsubhh pn hb002 hb014A hb028A hb033 hb033 hb050 hb053 hmarital
ha009 ha019 ha028 ha065 ha066 ha500 ha501
hc001 hc005 hc010 hc012 hc017 hc018 hc020 hc021m1-hc021m5 hc030 hc033 hc035 
hc036 hc037 hc038 hc048 hc049 hc053 hc065 hc067 hc068 hc069 hc070 hc079 hc082-hc087 
hc104 hc105 hc106 hc115 hc116 hc117 hc128 hc129 hc130 hc139 hc141-hc150
hd101 hd102 hd110-hd117 hd151 hd152 hf174 hf175 hf176 hf177 hg001 hg003-hg017 hg020-hg026 hg029 hg030 hg031 hg032_1-hg032_7 
 hg033_1-hg033_7 hg040-hg053 hg054_1-hg054_6 hg055_1-hg055_6 hg059 hg060 hg061 hg092 hg094 hg095
 hm006  hn001 hn004 hn005 hn006 hn007 hn009 hn023 hn099-hn101 hn114 hn115 hn116 hn117
 hn118 hn147 hn189 hx060_r hz076 hz105 hz117 ha030 ha098 ha099 ha101 ha113 he046
hnetwrth;
run;

data hrs_int.core2004limited;
set core_raw.core2004;
keep hhid jsubhh pn ja009 ja019 ja028 ja065 ja066 ja500 ja501 jb002 jb014a jb028a jb033 jb033 
jb050 jb053 jb063 jc001 jc005 jc010 jc012 jc017 jc018 jc020 jc021m1-jc021m4 jc030 jc033 
jc035 jc036 jc037 jc038 jc048 jc049 jc053 jc065 jc067 jc068 jc069 jc070 jc079 jc082-jc087 
jc104 jc105 jc106 jc116 jc117 jc128 jc129 jc130 jc139 jc141-jc150 jc223
jd101 jd102 jd110-jd117 jd151 jd152 jf174 jf175 jf176 jf177 jg001 jg003-jg017 jg020-jg026
 jg029 jg030 jg031 jg032_1-jg032_7 
 jg033_1-jg033_7 jg040-jg053 jg054_1-jg054_6 jg055_1-jg055_6 jg059 jg060 jg061 jg198 jg199 jg200 jg201
jm006 jn001 jn004 jn005 jn006 jn007 jn009 jn023 jn099-jn101 jn114 jn115 jn116 jn117 
jn118 jn147 jn189 jx060_r jz076 jz105 jz117 jz205 ja030 ja098 ja099 ja101 ja113 je046
jnetwrth;
run;

data hrs_int.core2006limited;
set core_raw.core2006;
keep hhid ksubhh pn ka009 ka019 ka028 ka065 ka066 ka099 ka101 ka113 ka500 ka501
 kb002 kb014 kb028 kb033 kb050 kb053 kb063 kc001 kc005 kc010 kc012 kc017 kc018 
 kc020 kc021m1-kc021m6 kc030 kc033 kc035  kc036 kc037 kc038 kc048 kc049 kc053 
 kc065 kc067 kc068 kc069 kc070 kc079 kc082-kc087 kc104 kc105 kc106 kc116 kc117 
 kc128 kc129 kc130 kc139 kc141-kc150 kc223 kc232u2 kc233 kd101 kd102 kd110-kd117 kd151 kd152
 kf174 kf175 kf176 kf177 kg001 kg003-kg017 kg020-kg026 kg029 kg030 kg031 kg032_1-kg032_7 
 kg033_1-kg033_7 kg040-kg053 kg054_1-kg054_6 kg055_1-kg055_6 kg059 kg060 kg061 kg198 kg199 
 kg200 kg201 km006 kn001 kn004 kn005 kn006 kn007 kn009 kn023 kn099-kn101  kn114 
 kn115 kn116 kn117 kn118 kn147 kn189
 kx060_r kz076 kz105 kz117 kz205 ka030 ka098 ke046
knetwrth
;
run;

data hrs_int.core2008limited;
set core_raw.core2008;
keep hhid lsubhh pn la009 la019 la028 la065 la066 la099 la101 la113 la500 la501
lb002 lb014 lb028 lb033 lb050 lb053 lb063 
lc001 lc005 lc010 lc012 lc017 lc018 lc020 lc021m1-lc021m4 lc030 lc033 lc035 
lc036 lc037 lc038 lc048 lc049 lc053 lc065 lc067 lc068 lc069 lc070 lc079 lc082-lc087
lc104 lc105 lc106 lc116 lc117 lc128 lc129 lc130 lc139 lc141-lc150 
lc223 lc232u2 lc233 ld101 ld102 ld110-ld117 ld151 ld152 lf174 lf175 lf176 lf177 lg001 lg003-lg017 lg020-lg026 lg029 lg030 
lg031 lg032_1-lg032_7 lg033_1-lg033_7 lg040-lg053 lg054_1-lg054_6 lg055_1-lg055_6 lg059 lg060
  lg061 lg198 lg199 lg200 lg201 lm006
ln001 ln004 ln005 ln006 ln007 ln009 ln023 ln099-ln101  ln114 ln115 ln116 
ln117 ln118 ln147 ln189 lx060_r lz076 lz105 lz117 lz205 la030 la098 le046
lnetwrth
;
run;

data hrs_int.core2010limited;
set core_raw.core2010;
keep hhid msubhh pn ma009 ma019 ma028  ma065 ma066 ma099 ma101 ma113 ma500 ma501
 mb002 mb014 mb028 mb033 mb050 mb053 mb063  mc001 mc005 mc010 mc012 mc017 
 mc018 mc020 mc021m1-mc021m6 mc030 mc033 mc035 mc036 mc037 mc038 mc048 mc049 
 mc053 mc065 mc067 mc068 mc070 mc079 mc082-mc087 mc104 mc105 mc106 mc116 mc117 
 mc128 mc129 mc130 mc139 mc141-mc150 mc223 mc232u2 mc233 mc263 mc264 mc272 mc273
 md101 md102 md110-md117 md151 md152 mf174 mf175 mf176 mf177 mg001 mg003-mg017 mg020-mg026 mg029 
 mg030 mg031 mg032_1-mg032_7 mg033_1-mg033_7  mg040-mg053 mg054_1-mg054_6 mg055_1-mg055_6 
 mg059 mg060 mg061 mg198 mg199 mg200 mg201 mm006 mn001 mn004 mn005 mn006 mn007 
 mn023 mn009 mn099-mn101 mn114 mn115 mn116 mn117 mn118 mn147 mn189
mx060_r mz076 mz093 mz105 mz117 mz205 ma030 ma098 me046
mnetwrth
;
run;

/*********************************************/
/* Exit */
/*********************************************/
data hrs_int.exit2002limited;
set exit_raw.exit2002;
keep gsubhh hhid pn sa009 sa019 sa020 sa026 sa028 sa028 sa030 sa065 sa066 sa098 sa099 sa101 sb034 sa101 sb034 sa113 sa121 sa123 sa124 sa131 sa134 sa136 sa142 sa148 sa500 sa501 sb002 sb014 sb015 sb016 sb028 sb031m sb050 sb061 sb082 sc018 sc030 sc036 sc048 sc053 sc069 sc079 sc082 sc104 sc105 sc117 sc198 sc199 sc202-sc204 sc208 sg015 sg020 sg022 sg024 sg029 sg031 sg032_1-sg032_7 sg033_1-sg033_7 sg043 sg046 sg049 sg053 sg054_1-sg054_6 sg055_1-sg055_6 sg061 sg129 sn001 sn004 sn005 sn006 sn007 sn009 sn023 sn099 sn099 sn100 sn101 sn114 sn115 sn116 sn117 sn118 sn147 sn148 sn149 sn189 sn221 sn222 sn223 sn301 sn302 sn305 sn306 sn307 sn309 sn310 sn315 sn315 sn316 sn317 sn319 sn316 sr_age st190 st191 st192 st193 st194 st195 st196 st197 st198 st199 st204 st205 st206 st207m1-st207m3 st209m1-st209m4 st211 st212 st213 st214m1-st214m5 st216m1-st216m7 st218 st219m1 st219m2 st219m3 st219m4 st219m5 st221m1-st221m7 st223 st224 st225 st226 st227 st228m1-st228m7 st230 st231 st232 st233 st234 st235 st236 sx004_r sx060_r sx067_r sz080 sz101 sz102 sz107 sz108 sz113 sz114 se046 se100;
run;


data hrs_int.exit2004limited;
set exit_raw.exit2004;
keep hhid pn tx004 ta009 ta019 ta026 ta030 ta065 ta066 ta098 ta099 ta101 tb034 ta101 tb034 ta113 ta121 ta123 ta124 ta131 ta134 ta136 ta142 ta148 ta167 ta500 ta501 tb002 tb014 tb015 tb016 tb028 tb050 tb061 tb063 tb082 tc018 tc030 tc036 tc048 tc053 tc069 tc079 tc082 tc104 tc105 tc117 tc198 tc199 tc202-tc204 tc208 te046 tg015 tg020 tg022 tg024 tg029 tg031 tg032_1-tg032_7 tg033_1-tg033_7 tg043 tg046 tg049 tg053 tg054_1-tg054_6 tg055_1-tg055_6 tg061 tg129 tn001 tn004 tn005 tn006 tn007 tn009 tn023 tn099 tn100 tn101 tn114 tn115 tn116 tn117 tn118 tn147 tn148 tn149 tn189 tn257 tn301 tn302 tn305 tn306 tn307 tn309 tn310 tn315 tn315 tn316 tn316 tt190 tt191 tt192 tt193 tt194 tt195 tt196 tt197 tt198 tt199 tt204 tt205 tt206 tt207m1-tt207m4 tt209m1-tt209m4 tt211 tt212 tt213 tt214m1-tt214m5 tt216m1-tt216m7 tt218 tt219m1 tt219m2 tt219m3 tt219m4 tt219m5 tt219m6 tt221m1-tt221m7 tt223 tt224 tt225 tt226 tt227 tt228 tt230 tt231 tt232 tt233 tt234 tt235 tt236 tx060_r tz068_r tz080 tz101 tz102 tz107 tz108 tz113;
run;

/*2006 exit*/
/*note: respondant year born prefilled - is actually uz068_r
concordance lists it as ux068_r*/
data hrs_int.exit2006limited;
set exit_raw.exit2006;
keep hhid pn ua009 ua019 ua026 ua030 ua065 ua066 ua098 ua099 ua101 ua101 ua113 ua121 ua123 ua124 ua131 ua134 ua136 ua148 ua167 ua500 ua501 ub028 ub082 ub061 ub063 ub086 uc018 uc030 uc036 uc048 uc053 uc069 uc079 uc082 uc104 uc105 uc117 uc198 uc199 uc202-uc204 uc208 ue046 ug015 ug020 ug022 ug024 ug029 ug031 ug032_1-ug032_7 ug033_1-ug033_7 ug043 ug046 ug049 ug053 ug054_1-ug054_6 ug055_1-ug055_6 ug061 ug129 un001 un004 un005 un006 un007 un009 un023 un099 un100 un101 un114 un115 un116 un117 un118 un147 un148 un149 un189 un257 un301 un302 un305 un306 un307 un309 un310 un315 un315 un316 un316 ut190 ut191 ut192 ut193 ut194 ut195 ut196 ut197 ut198 ut199 ut204 ut205 ut206 ut207m1-ut207m4 ut209m1-ut209m4 ut211 ut212 ut213 ut214m1-ut214m5 ut216m1-ut216m7 ut218 ut219m1 ut219m2 ut219m3 ut219m4 ut219m5 ut221m1-ut221m7 ut223 ut224 ut225 ut226 ut227 ut228 ut230 ut231 ut232 ut233 ut234 ut235 ut236 ux004 ux060_r uz068_r uz080 uz101 uz102 uz107 uz108 uz113;
run;

/*2008 exit*/
/*note: respondant year born prefilled - is actually uz068_r
concordance lists it as ux068_r*/
data hrs_int.exit2008limited;
set exit_raw.exit2008;
keep hhid pn va009 va019 va026 va030 va065 va066 va098 va099 va101 va101 va113 va121 va123 va124 va131 va134 va136 va148 va167 va500 va501 vb028 vb082 vb061 vb063 vb086 vc018 vc030 vc036 vc048 vc053 vc069 vc079 vc082 vc104 vc105 vc117 vc198 vc199 vc202-vc204 vc208 ve046 vg015 vg020 vg022 vg024 vg029 vg031 vg032_1-vg032_7 vg033_1-vg033_7 vg043 vg046 vg049 vg053 vg054_1-vg054_6 vg055_1-vg055_6 vg061 vg129 vn001 vn004 vn005 vn006 vn007 vn009 vn023 vn099 vn100 vn101 vn114 vn115 vn116 vn117 vn118 vn147 vn148 vn149 vn189 vn257 vn301 vn302 vn305 vn306 vn307 vn309 vn310 vn315 vn315 vn316 vn316 vt190 vt191 vt192 vt193 vt194 vt195 vt196 vt197 vt198 vt199 vt204 vt205 vt206 vt207m1-vt207m4 vt209m1-vt209m4 vt211 vt212 vt213 vt214m1-vt214m5 vt216m1-vt216m6 vt218 vt219m1 vt219m2 vt219m3 vt219m4 vt219m5 vt219m6 vt221m1-vt221m6 vt223 vt224 vt225 vt226 vt227 vt228 vt230 vt231 vt232 vt233 vt234 vt235 vt236 vx004 vx060_r vz068_r vz080 vz101 vz102 vz107 vz108 vz113;
run;

/*2010 exit*/
/*note: respondant year born prefilled - is actually uz068_r
concordance lists it as ux068_r
va167 from 2008 re nursing home changed to wa028 in 2010*/
data hrs_int.exit2010limited;
set exit_raw.exit2010;
keep hhid pn wa009 wa019 wa026 wa030 wa065 wa066 wa098 wa099 wa101 wa101 wa113 wa121 wa123 wa124 wa131 wa134 wa136 wa148 wa028 wa500 wa501 wb028 wb082 wb061 wb063 wb086 wc018 wc030 wc036 wc048 wc053 wc069 wc079 wc082 wc104 wc105 wc117 wc198 wc199 wc202-wc204 wc208 we046 wg015 wg020 wg022 wg024 wg029 wg031 wg032_1-wg032_7 wg033_1-wg033_7 wg043 wg046 wg049 wg053 wg054_1-wg054_6 wg055_1-wg055_6 wg061 wg129 wn001 wn004 wn005 wn006 wn007 wn009 wn023 wn099 wn100 wn101 wn114 wn115 wn116 wn117 wn118 wn147 wn148 wn149 wn189 wn257 wn301 wn302 wn305 wn306 wn307 wn309 wn310 wn315 wn315 wn316 wn316 wt190 wt191 wt192 wt193 wt194 wt195 wt196 wt197 wt198 wt199 wt204 wt205 wt206 wt207m1-wt207m4 wt209m1-wt209m4 wt211 wt212 wt213 wt214m1-wt214m5 wt216m1-wt216m7 wt218 wt219m1 wt219m2 wt219m3 wt219m4 wt219m5 wt221m1-wt221m8 wt223 wt224 wt225 wt226 wt227 wt228 wt230 wt231 wt232 wt233 wt234 wt235 wt236 wx004 wx060_r wz068_r wz080 wz101 wz102 wz107 wz108 wz113;
run;


H="Helper files, 1998-2010 merged into single file"
/*Processes Helper files from 1998-2010 core, 2002-2010 exit interviews

Just keeps entries for the main ADL and IADL helpers per variables JADLNDX and JIADLNDX
for each respondant, so can have 2 helpers per respondant
Drops unneeded variables and sets up to have single row per respondant
to merge back in to the dataset*/

/*Sort helper files*/
proc sort data=core_pre.H98e_hp;
by hhid fsubhh pn;
proc sort data=core_pre.H00e_hp;
by hhid gsubhh pn;
proc sort data=core_pre.H02g_hp;
by hhid hsubhh pn;
proc sort data=core_pre.H04g_hp;
by hhid jsubhh pn;
proc sort data=core_pre.H06g_hp;
by hhid ksubhh pn;
proc sort data=core_pre.H08g_hp;
by hhid lsubhh pn;
proc sort data=core_pre.H10g_hp;
by hhid msubhh pn;
run;

proc sort data=exit_pre.x02g_hp;
by hhid hsubhh pn;
proc sort data=exit_pre.x04g_hp;
by hhid jsubhh pn;
proc sort data=exit_pre.x06g_hp;
by hhid ksubhh pn;
proc sort data=exit_pre.x08g_hp;
by hhid lsubhh pn;
proc sort data=exit_pre.x10g_hp;
by hhid msubhh pn;
run;


/*check to see if spouse is listed in helper files
Spouses are not in helper files from 1998 and 2000 but are 2002 and later
Therefore just pull helper information from 2002 and later for now*/
data test98;
set core_pre.H98e_hp;
if opn=FPN_SP;
run;

data test00;
set core_pre.H00e_hp;
if opn=FPN_SP;
run;

data test02;
set core_pre.H02g_hp;
if opn=HPN_SP;
run;

data testx02;
set exit_pre.x02g_hp;
if opn=HPN_SP;
run;

/*keep only those helper file entries where they helper was the primary ADL or IADL helper*/
%macro keep_helpers(yr,pre);

/*clean adl helper details*/
data adlhelper&yr._1;
set core_pre.H&yr.g_hp;
if &pre.ADLNDX=1;
run;

data adlhelper&yr._2;
set adlhelper&yr._1;
adl_hlp_freq_mo=&pre.g070;
adl_hlp_freq_wk=&pre.g071;
adl_hlp_freq_ed=&pre.g072;
adl_help_hours=&pre.g073;
adl_opn = opn;
core_year = 20&yr. ;
if &pre.pn_sp=opn then adl_sp_opn=1; /*indicator for if spouse is primary helper*/
adl_help_ind = 1; /*indicator for having primary adl helper info in helper file*/
/*label variables*/
label adl_hlp_freq_mo="ADL Primary Helper - Times per Month"
adl_hlp_freq_wk="ADL Primary Helper - Times per Week"
adl_hlp_freq_ed="ADL Primary Helper - Every Day (1=yes)"
adl_help_hours="ADL Primary Helper - Hours per visit"
adl_opn="ADL Helper OPN"
adl_sp_opn="ADL Helper = Spouse per helper file"
adl_help_ind="ADL Primary Helper present in Helper file"
;
run;

data adlhelper&yr._3;
set adlhelper&yr._2;
keep hhid pn adl: core_year;
run;

/*clean iadl helper details*/
data iadlhelper&yr._1;
set core_pre.H&yr.g_hp;
if &pre.IADLNDX=1;
run;

data iadlhelper&yr._2;
set iadlhelper&yr._1;
iadl_hlp_freq_mo=&pre.g070;
iadl_hlp_freq_wk=&pre.g071;
iadl_hlp_freq_ed=&pre.g072;
iadl_help_hours=&pre.g073;
iadl_opn = opn;
core_year = 20&yr. ;
if &pre.pn_sp=opn then iadl_sp_opn=1; /*indicator for if spouse is primary helper*/
iadl_help_ind = 1; /*indicator for having primary adl helper info in helper file*/
/*label variables*/
label iadl_hlp_freq_mo="IADL Primary Helper - Times per Month"
iadl_hlp_freq_wk="IADL Primary Helper - Times per Week"
iadl_hlp_freq_ed="IADL Primary Helper - Every Day (1=yes)"
iadl_help_hours="IADL Primary Helper - Hours per visit"
iadl_opn="IADL Helper OPN"
iadl_sp_opn="IADL Helper = Spouse per helper file"
iadl_help_ind="IADL Primary Helper present in Helper file"
;
run;

data iadlhelper&yr._3;
set iadlhelper&yr._2;
keep hhid pn iadl: core_year;
run;

%mend;
%keep_helpers(yr=02,pre=H);
%keep_helpers(yr=04,pre=J);
%keep_helpers(yr=06,pre=K);
%keep_helpers(yr=08,pre=L);
%keep_helpers(yr=10,pre=M);

/*append individual years to get 2 files, one with all adl helpers, one with all iadl helpers*/
data adlhelper_0210;
set adlhelper02_3 adlhelper04_3 adlhelper06_3 adlhelper08_3 adlhelper10_3;
run;

data iadlhelper_0210;
set iadlhelper02_3 iadlhelper04_3 iadlhelper06_3 iadlhelper08_3 iadlhelper10_3;
run;

proc sort data=adlhelper_0210 nodupkey;
by hhid pn core_year;
run;

proc sort data=iadlhelper_0210 nodupkey;
by hhid pn core_year;
run;

data hrs_int.helpers_core_0210;
merge adlhelper_0210 iadlhelper_0210;
by hhid pn core_year;
run;

proc sort data=hrs_int.helpers_core_0210 nodupkey;
by hhid pn core_year;
run;


H="Convert SAS to Stata"
/*There are two versions of this code,
one with filepaths for Amy's PC
one with filepaths for Rebecca's PC
*/

/********************************************************************/
/*AMY's PC CODE*/
/********************************************************************/

/*HRS temporary data files*/
libname hrs_int "E:\data\hrs_cleaned\working";

proc export data=hrs_int.core1998limited
outfile="E:\data\hrs_cleaned\working\Core1998.dta"
replace;
run;

proc export data=hrs_int.core2000limited
outfile="E:\data\hrs_cleaned\working\Core2000.dta"
replace;
run;

proc export data=hrs_int.core2002limited
outfile="E:\data\hrs_cleaned\working\Core2002.dta"
replace;
run;

proc export data=hrs_int.core2004limited
outfile="E:\data\hrs_cleaned\working\Core2004.dta"
replace;
run;

proc export data=hrs_int.core2006limited
outfile="E:\data\hrs_cleaned\working\Core2006.dta"
replace;
run;

proc export data=hrs_int.core2008limited
outfile="E:\data\hrs_cleaned\working\Core2008.dta"
replace;
run;

proc export data=hrs_int.core2010limited
outfile="E:\data\hrs_cleaned\working\Core2010.dta"
replace;
run;

proc export data=hrs_int.helpers_core_0210
outfile="E:\data\hrs_cleaned\working\helpers_core_0210.dta"
replace;
run;

proc export data=hrs_int.exit2002limited
outfile="E:\data\hrs_cleaned\working\Exit2002.dta"
replace;
run;

proc export data=hrs_int.exit2004limited
outfile="E:\data\hrs_cleaned\working\Exit2004.dta"
replace;
run;

proc export data=hrs_int.exit2006limited
outfile="E:\data\hrs_cleaned\working\Exit2006.dta"
replace;
run;

proc export data=hrs_int.exit2008limited
outfile="E:\data\hrs_cleaned\working\Exit2008.dta"
replace;
run;

proc export data=hrs_int.exit2010limited
outfile="E:\data\hrs_cleaned\working\Exit2010.dta"
replace;
run;

/********************************************************************/
/*REBECCA's PC CODE*/
/********************************************************************/

/*HRS temporary data files*/
libname hrs_int 'C:\HRS\hrs_cleaned\working';

proc export data=hrs_int.core1998limited
outfile="C:\HRS\hrs_cleaned\working\Core1998.dta"
replace;
run;

proc export data=hrs_int.core2000limited
outfile="C:\HRS\hrs_cleaned\working\Core2000.dta"
replace;
run;

proc export data=hrs_int.core2002limited
outfile="C:\HRS\hrs_cleaned\working\Core2002.dta"
replace;
run;

proc export data=hrs_int.core2004limited
outfile="C:\HRS\hrs_cleaned\working\Core2004.dta"
replace;
run;

proc export data=hrs_int.core2006limited
outfile="C:\HRS\hrs_cleaned\working\Core2006.dta"
replace;
run;

proc export data=hrs_int.core2008limited
outfile="C:\HRS\hrs_cleaned\working\Core2008.dta"
replace;
run;

proc export data=hrs_int.core2010limited
outfile="C:\HRS\hrs_cleaned\working\Core2010.dta"
replace;
run;

proc export data=hrs_int.helpers_core_0210
outfile="C:\HRS\hrs_cleaned\working\helpers_core_0210.dta"
replace;
run;


proc export data=hrs_int.exit2002limited
outfile="C:\HRS\hrs_cleaned\working\Exit2002.dta"
replace;
run;

proc export data=hrs_int.exit2004limited
outfile="C:\HRS\hrs_cleaned\working\Exit2004.dta"
replace;
run;

proc export data=hrs_int.exit2006limited
outfile="C:\HRS\hrs_cleaned\working\Exit2006.dta"
replace;
run;

proc export data=hrs_int.exit2008limited
outfile="C:\HRS\hrs_cleaned\working\Exit2008.dta"
replace;
run;

proc export data=hrs_int.exit2010limited
outfile="C:\HRS\hrs_cleaned\working\Exit2010.dta"
replace;
run;



H="Core and Exit - create unique person id and merge years"
capture log close

clear all
set mem 1g
set matsize 800
set more off

//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\1_HRS_merge_2000-2010-LOG.txt", text replace

cd `datapath'

//  Clean ID to create single ID variable for each person/unit of analysis.**

//local for years
local c_years 1998 2000 2002 2004 2006 2008 2010



//Create id variable core dataset for each year
foreach v in `c_years' {
	use core`v'.dta
	egen id= concat(hhid pn)
	la var id "Respondent ID (HHID+PN)"
	gen core_year=`v'
	la var core_year "Core interview wave year"
	save core`v'_id.dta, replace
	clear
}

//local for years
local e_years 02 04 06 08 10

//Create id variable exit dataset for each year
foreach v in `e_years' {
	use exit20`v'.dta
	egen id= concat(hhid pn)
	la var id "Respondent ID (HHID+PN)"
	gen exit_year=20`v'
	la var exit_year "Exit interview wave year"
	save exit20`v'_id.dta, replace
	clear
}

//need to split into two core datasets since too many variables with all years
use core1998_id.dta
append using core2000_id.dta
append using core2002_id.dta
append using core2004_id.dta
save core_98_04.dta, replace
clear

use core2006_id.dta
append using core2008_id.dta
append using core2010_id.dta
save core_06_10.dta, replace

clear
use exit2002_id.dta
append using exit2004_id.dta
append using exit2006_id.dta
append using exit2008_id.dta
append using exit2010_id.dta
save exit_02_10.dta, replace

log close


H="1998-2004 Core Variable Cleaning"
/*The core dataset must be cleaned in two separate datasets and then merged because
of the number of variables

1998-2004 cores cleaned first
then 2006-2010 cores are cleaned

Once clean, the two files are merged

*/

H="Core 98-04 - variable cleaning - part 1"
/*variable cleaning for HRS core 2000-2010
Most code is taken from the HRS Outline_11_22_11.txt file
and modified to clean 2000-2010 core dataset
*/

capture log close

clear all
set mem 1g
set matsize 800
set more off

//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\2_HRS_Core_00_04_clean1-LOG.txt", text replace

cd `datapath'

use core_98_04.dta

*********************************************************************************
// Proxy for core interview
*********************************************************************************
generate proxy_core = .
replace  proxy_core = 1 if ((f483==2)|(f483==3)|(g514==2)|(g514==3)|(ha009==2)|(ha009==3)| ///
	(ja009==2)|(ja009==3))
replace  proxy_core = 0 if ((f483==1)|(g514==1)|(ha009==1)|(ja009==1))
label variable proxy_core "Proxy Respondent for Core Interview"
//label define proxy_core 0 "No" 1 "Proxy", modify
//label values proxy_core proxy_core
tab proxy_core core_year, missing

*********************************************************************************
// Gender - from core interview
*********************************************************************************
// gender only provided at member-child level for core 2000 so use 2002 variable
// for core 2000 gender
tab hx060_r 
tab jx060_r

//maybe use f469 for 1998

generate female = .
//set for 1998,2002-2004
replace  female = 1 if ( (f469==2)| (hx060_r==2)| (jx060_r==2))
replace  female = 0 if ( (f469==1)| (hx060_r==1)| (jx060_r==1))
//set for 2000, need to refer to 2002 variable so sort and use 
//next interview information where available
//This leaves 2355 observations in 2000 with missing gender b/c no 2002 entry
sort id core_year
gen female_lead1_2000 = hx060_r[_n+1] if (id==id[_n+1]&core_year==2000)
tab female_lead1_2000 core_year, missing
replace female = 1 if ((female_lead1_2000==2) & core_year==2000)
replace female = 0 if ((female_lead1_2000==1) & core_year==2000)
label variable female "Female"
//label define female 0 "Male" 1 "Female", modify
//label values female female
tab female core_year, missing

drop female_lead1_2000

*********************************************************************************
//Education variables
*********************************************************************************
// Education: categorical, dummies or dichotomous (>highschool vs <=highschool) - from core
// Education variables only complete 2004 and earlier
*******************************************************************************************
generate educ = .
replace educ = 0 if ((f987a==0)| (g1074a==0)| (hb014a==0) | (jb014a==0) )
replace educ = 1 if ((f987a>=1)& (f987a<=11))
replace educ = 1 if ((g1074a>=1)& (g1074a<=11))
replace educ = 1 if ((hb014a>=1)& (hb014a<=11))
replace educ = 1 if ((jb014a>=1)& (jb014a<=11))

replace educ = 2 if ((f987a==12)|(g1074a==12)| (hb014a==12)| (jb014a==12))

replace educ = 3 if ((f987a>=13)& (f987a<=15))
replace educ = 3 if ((g1074a>=13)& (g1074a<=15))
replace educ = 3 if ((hb014a>=13)& (hb014a<=15))
replace educ = 3 if ((jb014a>=13)& (jb014a<=15))

replace educ = 4 if ((f987a==16)|(g1074a==16)| (hb014a==16)| (jb014a==16))
replace educ = 5 if ((f987a==17)|(g1074a==17)| (hb014a==17)| (jb014a==17))
label variable educ "Eduction, Highest Level"
//label define educ 0 "No Formal Education" 1 "Grades 1-11" 2 "High School" 3 "Some College" 4 "College" ///
//      5 "Post College", modify
//label values educ educ
tab educ core_year, missing 


*********************************************************************************
// Marital status from core interview
// Note: There are also marital status variables generated in the 
// exit interview cleaning
*********************************************************************************
gen marital = .
replace marital = 1 if( (f1071==1) | (g1158==1) | (hmarital==1) | (jb063==1) ) //married
replace marital = 2 if( (f1071==3) |(g1158==3) | (hmarital==3) | (jb063==3) ) //separated
replace marital = 3 if( (f1071==4) |(g1158==4) | (hmarital==4) | (jb063==4) ) //divorced
replace marital = 4 if( (f1071==5) |(g1158==5) | (hmarital==5) | (jb063==5) ) //widowed
replace marital = 5 if( (f1071==6) |(g1158==6) | (hmarital==6) | (jb063==6) ) //never married
replace marital = 6 if (inlist(f1071,7,0,.) & core_year==1998) | (inlist(g1158,7,0,.) & core_year==2000) | /// //unknown or other
       ( inlist(hmarital,7,8,9,.) & core_year==2002) | ( inlist(jb063,2,7,.) & core_year==2004) 
label variable marital "Marital Status"
//label define marital 1 "Married" 2 "Separated" 3 "Divorced" 4 "Widowed" 5 "Never Married" 6 "Other/Don't Know", modify
//label values marital marital
tab marital core_year, missing

generate byte married = .
replace married = 1 if (marital==1)
replace married = 0 if (marital!=1 & marital <.)
label variable married "Married"
//label define married 1 "Married" 0 "Not Married", modify
//label values married married
tab married core_year, missing 

*********************************************************************************
// Ethnicity from core interview
// Maybe use restricted file for race and ethnicity?
*********************************************************************************
generate hisp = .
replace hisp = 1 if ((f1002a==1)|(g1089a==1)| (hb028a==1)| (jb028a==1))
replace hisp = 0 if ((f1002a==5)|(g1089a==5)| (hb028a==5)| (jb028a==5))
label variable hisp "Hispanic Ethnicity"
//label define hisp 1 "Hispanic- yes" 0 "Non-Hispanic", modify
//label values hisp hisp
tab hisp core_year, missing 

*********************************************************************************
*********************************************************************************
// Religious preference and importance from core interview
*********************************************************************************
*********************************************************************************
**Religion: this variable is of limited value because many did not answer due to a skip pattern that is unclear**
*********************************************************************************
// Religious preference from core interview
*********************************************************************************
generate relig = .
replace relig = 1 if ((f1052==1)|(g1139==1)|(hb050==1)|(jb050==1))
replace relig = 2 if ((f1052==2)|(g1139==2)|(hb050==2)|(jb050==2))
replace relig = 3 if ((f1052==3)|(g1139==3)|(hb050==3)|(jb050==3))
replace relig = 4 if ((f1052==4)|(g1139==4)|(hb050==4)|(jb050==4))
replace relig = 5 if ((f1052==7)|(g1139==7)|(hb050==7)|(jb050==7))
label variable relig "Religion"
//label define relig 1 "Protestant" 2 "Catholic" 3 "Jewish" 4 "No Pref" 5 "Other", modify
//label values relig relig
tab relig core_year, missing 

*********************************************************************************
// Importance of religion from core interview
*********************************************************************************
generate imprelig = 4
replace imprelig = 1 if ((f1055==1)|(g1142==1)|(hb053==1)|(jb053==1))
replace imprelig = 2 if ((f1055==3)|(g1142==3)|(hb053==3)|(jb053==3))
replace imprelig = 3 if ((f1055==5)|(g1142==5)|(hb053==5)|(jb053==5))
label variable imprelig "Importance of Religion"
//label define imprelig 1 "Very Important" 2 "Somewhat Important" 3 "Not Too Important" 4 "Don't Know/Refused/Missing", modify
//label values imprelig imprelig
tab imprelig core_year, missing 

*********************************************************************************
// Good Friends Nearby from core interview, code missing as no
*********************************************************************************
//only asked in alternate waves for 2004 and forward
generate friend = 0
replace friend = 1 if ((f2244==1)|(g2495==1)|(hf175==1)|(jf175==1))
label variable friend "Good Friends Nearby"
//label define friend 0 "No" 1 "Yes", modify
//label values friend friend
tab friend core_year, missing

*********************************************************************************
// Number of social visits, code missing as no
*********************************************************************************
/*How often do you get together with  (/people in or near the facility/any of
        your neighbors) just to chat or for a social visit? 
1998 Core 	F2246
2000 Core 	G2497
2002 Core 	HF176
2004 Core 	JF176
2006 Core 	KF176
2008 Core 	LF176
2010 Core 	MF176

Next question clarifies contact per xxx
D156A.FREQ OF CONTACT PER                 
          Section: D            Level: Household       CAI Reference: Q2498
          Type: Numeric         Width: 1               Decimals: 0
          ................................................................................
           2343         1. DAY
           4675         2. WEEK
            547         3. EVERY TWO WEEKS
           1367         4. MONTH
            364         5. YEAR
           3613         6. ALMOST NEVER
            120         7. OTHER (SPECIFY) (**other = 97 in 1998)
              1         8. DK (don't know); NA (not ascertained) (**1998: 98, 99 for dk, rf)
              1         9. RF (refused)
*/
//only asked in alternate waves for 2004 and later

//indicator for any visits
generate soc_visit = .
replace soc_visit = 1 if ((0<f2246 & f2246<998) | (0<g2497 & g2497<998) | ///
	(0<hf176 & hf176<998) | (0<jf176 & jf176<998) )
replace soc_visit = 0 if f2246==0 | g2497==0 |	hf176==0 | jf176==0
//if reported almost never, then set to 0
replace soc_visit = 0 if soc_visit==. & (f2247==6 | g2498==6 |	hf177==6 | jf177==6)

label variable soc_visit "Social visits with neighbors?"
//label define soc_visit 0 "No" 1 "Yes", modify
//label values soc_visit friend
tab soc_visit core_year, missing

//convert values to a common number of visits per year
//this is then split into categories to get the categorical variable
gen soc_visit_yr = .
replace soc_visit_yr = f2246*365 if core_year==1998 & f2247==1 //daily response
replace soc_visit_yr = f2246*52 if core_year==1998 & f2247==2 //weekly
replace soc_visit_yr = f2246*26 if core_year==1998 & f2247==3 //bi weekly
replace soc_visit_yr = f2246*12 if core_year==1998 & f2247==4 //monthly
replace soc_visit_yr = f2246 if core_year==1998 & f2247==5 //year

replace soc_visit_yr = g2497*365 if core_year==2000 & g2498==1 //daily response
replace soc_visit_yr = g2497*52 if core_year==2000 & g2498==2 //weekly
replace soc_visit_yr = g2497*26 if core_year==2000 & g2498==3 //bi weekly
replace soc_visit_yr = g2497*12 if core_year==2000 & g2498==4 //monthly
replace soc_visit_yr = g2497 if core_year==2000 & g2498==5 //year

replace soc_visit_yr = hf176*365 if core_year==2002 & hf177==1 //daily response
replace soc_visit_yr = hf176*52 if core_year==2002 & hf177==2 //weekly
replace soc_visit_yr = hf176*26 if core_year==2002 & hf177==3 //bi weekly
replace soc_visit_yr = hf176*12 if core_year==2002 & hf177==4 //monthly
replace soc_visit_yr = hf176 if core_year==2002 & hf177==5 //year

replace soc_visit_yr = jf176*365 if core_year==2004 & jf177==1 //daily response
replace soc_visit_yr = jf176*52 if core_year==2004 & jf177==2 //weekly
replace soc_visit_yr = jf176*26 if core_year==2004 & jf177==3 //bi weekly
replace soc_visit_yr = jf176*12 if core_year==2004 & jf177==4 //monthly
replace soc_visit_yr = jf176 if core_year==2004 & jf177==5 //year

replace soc_visit_yr = . if soc_visit==.

tab soc_visit_yr core_year, missing

//categorical variable
gen soc_visit_cat = .
replace soc_visit_cat = 3 if (364)<=soc_visit_yr & soc_visit_yr!=. //every day or more
replace soc_visit_cat = 2 if 52<=soc_visit_yr & soc_visit_yr<364 //less than every day up to 1x/week
replace soc_visit_cat = 1 if 0<soc_visit_yr & soc_visit_yr<52 // less than 1/week 
replace soc_visit_cat = 0 if soc_visit ==0 | f2247==6 | g2498==6 | hf177==6 | jf177==6 //none or almost never
la var soc_visit_cat "Frequency of social visits, categorical"
tab soc_visit_cat core_year, missing
tab soc_visit_cat soc_visit, missing

//some are missing the categorical variable because units weren't provided
tab core_year soc_visit_cat if soc_visit==1, missing



*********************************************************************************
// Relatives Nearby from core interview, code missing as no
*********************************************************************************
generate rel_nb = 0
replace rel_nb = 1 if ((f2243==1)|(g2494==1)| (hf174==1)|(jf174==1))
label variable rel_nb "Relatives Nearby"
//label define rel_nb 0 "No" 1 "Yes", modify
//label values rel_nb rel_nb
tab rel_nb core_year, missing 

*********************************************************************************
// Overnight hospital stay in past 2 years core interview
*********************************************************************************
gen byte hosp_last_2yr = .
replace hosp_last_2yr = 1 if ((f2295==1)|(g2567==1)|(hn099==1)|(jn099==1))
replace hosp_last_2yr = 0 if ((f2295==5)|(g2567==5)|(hn099==5)|(jn099==5))
label variable hosp_last_2yr "Overnight hospitalization since previous core interview"
//label define hosp_last_2yr 0 "No" 1 "Yes", modify
//label values hosp_last_2yr hosp_last_2yr 
tab hosp_last_2yr  core_year, missing 

/*Number of stays in last 2 years
1998 Core 	F2296
2000 Core 	G2568
2002-10 Core 	xN100*/
gen byte hosp_stays_2yr = .
replace hosp_stays_2yr = f2296 if core_year==1998
replace hosp_stays_2yr = g2568 if core_year==2000
replace hosp_stays_2yr = hn100 if core_year==2002
replace hosp_stays_2yr = jn100 if core_year==2004
replace hosp_stays_2yr = . if inlist(hosp_stays_2yr,98,99)
la var hosp_stays_2yr "Number of hospitalizations since previous core ivw"
tab hosp_stays_2yr core_year , missing

/*Number of nights in hospital in last 2 years
1998 Core 	F2297
2000 Core 	G2569
2002-10 Core 	xN101*/
gen byte hosp_nights_2yr = .
replace hosp_nights_2yr = f2297 if core_year==1998
replace hosp_nights_2yr = g2569 if core_year==2000
replace hosp_nights_2yr = hn101 if core_year==2002
replace hosp_nights_2yr = jn101 if core_year==2004
replace hosp_nights_2yr = . if inlist(hosp_nights_2yr,998,999)
la var hosp_nights_2yr "Number of nights in hospital since previous core ivw"
tab hosp_nights_2yr core_year , missing


*********************************************************************************
//  Insurance status information - from core interview
*********************************************************************************
// Covered by Medicare currently?
// r2585
generate byte medicare = .
replace medicare= 1 if ((f5866==1) |(g6238==1) |(hn001==1) | (jn001==1)) //yes
replace medicare= 0 if ((f5866==5) |(g6238==5) |(hn001==5) | (jn001==5)) //no
label variable medicare "Medicare, 1=yes"

//Covered by Medicare Part B currently?
// r2587
// if not covered by medicare in previous question, then not asked and part b coded as no
generate byte medicareb = .
replace medicareb= 1 if ((f5867==1) |(g6240==1) |(hn004==1) | (jn004==1)) //yes
replace medicareb= 0 if ((f5867==5) |(g6240==5) |(hn004==5) | (jn004==5)) //no
replace medicareb= 0 if ((medicare== 0))
label variable medicareb "Medicare Part B, 1=yes"

//Medicaid coverage at any time since last core interview or last 2 years ?
// r2588 r2589
generate byte medicaid = .
replace medicaid= 1 if ((f5868==1) |(g6241==1) |(hn005==1) | (jn005==1)) //yes
replace medicaid= 0 if ((f5868==5) |(g6241==5) |(hn005==5) | (jn005==5)) //no
label variable medicaid "Medicaid, 1=yes"

// CHAMPUS or other veterans health care currently?
// r2598
generate byte champus = .
replace champus = 1 if ((f5878==1) | (g6251==1) |(hn007==1) | (jn007==1)) //yes
replace champus = 0 if ((f5878==5) |(g6251==5)|(hn007==5)|(jn007==5))  //no
label variable champus "CHAMPUS, 1=yes"

// HMO for Medicare / Medicaid coverage?
// r2601
// only asked if have medicare or medicaid
generate byte hmo = .
replace hmo = 1 if ((f5881==1)|(g6254==1)|(hn009==1) | (jn009==1)) //yes
replace hmo = 0 if ((f5881==5)|(g6254==5)|(hn009==5)|(jn009==5)) //no
label variable hmo "HMO, 1=yes"

// Private health insurance plans?
// r2623
// Question is different in the 1998, 2000 core interview with a lot more
// missing answers
// Amy suggestion for 2000, set medigap=1 if answer is yes, 
// all others=no even if the answer is blank;

generate medigap = .
replace medigap= 1 if ( (hn023>=1 &hn023<98) | ///   //yes
        (jn023>=1&jn023<98) )
replace medigap= 0 if ((hn023==0) | (jn023==0)) //no
replace medigap=1 if (core_year==1998 & f5903==1) | (core_year==2000 & g6276==1)
replace medigap=0 if (core_year==1998 & medigap==.) | (core_year==2000 & medigap==.)
label variable medigap "Medigap, 1=yes"
tab medigap, missing

tab medicare core_year, missing
tab medicareb core_year, missing
tab medicaid core_year, missing
tab champus core_year, missing
tab hmo core_year, missing
tab medigap core_year, missing

egen catinsur= concat(medicare medicareb medicaid champus hmo medigap)
tab catinsur  core_year

*********************************************************************************
*********************************************************************************
//Nursing home use variables - core interview
*********************************************************************************
*********************************************************************************

*********************************************************************************
// Nursing home residence currently - core interview
*********************************************************************************
//coding changes 1=yes, 5=no
//different from exit interview which asks about hospice for some years
generate nhres = .
replace nhres = 1 if ((f517==1)|(g558==1)|(ha028==1)| (ja028==1))
replace nhres = 0 if ((f517==5)|(g558==5)|(ha028==5)| (ja028==5))
label variable nhres "Nursing Home Resident"
//label define nhres 0 "No" 1 "Yes", modify
//label values nhres nhres
tab nhres core_year, missing

*********************************************************************************
// Nursing home residence currently - start month, year
*********************************************************************************
/*
Month:
1998 Core 	F718
2000 Core 	G789
2002-2010 Core 	xA065
Year:
1998 Core 	F719
2000 Core 	G790
2002-2010 Core 	xA066
*/
gen nhres_start_mo = .
replace nhres_start_mo = f718 if core_year==1998
replace nhres_start_mo = g789 if core_year==2000
replace nhres_start_mo = ha065 if core_year==2002
replace nhres_start_mo = ja065 if core_year==2004
la var nhres_start_mo "Start month for curr. NH residents"
tab nhres_start_mo core_year, missing

gen nhres_start_yr = .
replace nhres_start_yr = f719 if core_year==1998
replace nhres_start_yr = g790 if core_year==2000
replace nhres_start_yr = ha066 if core_year==2002
replace nhres_start_yr = ja066 if core_year==2004
replace nhres_start_yr = . if inlist(nhres_start_yr,9998,9999)
la var nhres_start_yr "Start year for curr. NH residents"
tab nhres_start_yr core_year, missing


*********************************************************************************
// Nursing home in past 2 years - core interview
// If responded currently in nh, this is coded as yes
*********************************************************************************
/*
2000 Core 	G2571
2002 Core 	HN114
2004 Core 	JN114
2006 Core 	KN114
2008 Core 	LN114
2010 Core 	MN114
For 1998, have to manually code to yes b/c question is skipped for those that
report that they are currently in a nursing home
*/
generate nhres_2yr = .
replace nhres_2yr = 1 if ((f2299==1)|(g2571==1)|(hn114==1)| (jn114==1))
replace nhres_2yr = 1 if (f517==1)
replace nhres_2yr = 0 if ((f2299==5)|(g2571==5)|(hn114==5)| (jn114==5))
label variable nhres_2yr "Nursing Home Resident in the past 2 years"
//label define nhres_2yr 0 "No" 1 "Yes", modify
//label values nhres_2yr nhres
tab nhres_2yr  core_year, missing

*********************************************************************************
// Number of times in a nursing home in past 2 years - core interview
*********************************************************************************
/*
2000 Core 	G2572
2002 Core 	HN115
2004 Core 	JN115
2006 Core 	KN115
2008 Core 	LN115
2010 Core 	MN115
*/
generate nh_stays = .
replace nh_stays = f2300 if core_year==1998
replace nh_stays = g2572 if core_year==2000
replace nh_stays = hn115 if core_year==2002
replace nh_stays = jn115 if core_year==2004
replace nh_stays = 0 if nhres_2yr ==0
replace nh_stays = . if inlist(nh_stays,98,99)
label variable nh_stays "Number of times a patient in NH past 2 years"
tab nh_stays core_year,missing

*********************************************************************************
// Total nursing home nights in the past 2 years - core interview
*********************************************************************************
/*Nights response:
1998 Core 	F2301
2000 Core 	G2573
2002 Core 	HN116
2004 Core 	JN116
2006 Core 	KN116
2008 Core 	LN116
2010 Core 	MN116
996 = continuous since last core interview; 998, 999 = dont know / refused
Months response:
1998 Core 	F2302
2000 Core 	G2574
2002 Core 	HN117
2004 Core 	JN117
2006 Core 	KN117
2008 Core 	LN117
2010 Core 	MN117
998, 999 = dont know / refused
Variable coded here is in nights, convert months * 30.5 = number of nights,
continuous = 365*2 = 770
Some respondants report values greater than 2 years, in those cases, cap at 770 days / 2 years
*/
gen nh_nights=.
replace nh_nights=f2301 if (core_year==1998 & f2302==.)
replace nh_nights=g2573 if (core_year==2000 & g2574==.)
replace nh_nights= hn116 if (core_year==2002 & hn117==.)
replace nh_nights= jn116 if (core_year==2004 & jn117==.)
replace nh_nights=770 if nh_nights==996
replace nh_nights=. if (inlist(f2301,998,999)|inlist(g2573,998,999)| ///
	inlist(hn116,998,999)|inlist(jn116,998,999))
sum nh_nights, detail

gen nh_mos=.
replace nh_mos=f2302 if (core_year==1998 & f2301==.)
replace nh_mos=g2574 if (core_year==2000 & g2573==.)
replace nh_mos= hn117 if (core_year==2002 & hn116==.)
replace nh_mos= jn117 if (core_year==2004 & jn116==.)
replace nh_mos=. if (inlist(f2302,98,99)|inlist(g2574,98,99)| ///
	inlist(hn117,98,99)|inlist(jn117,98,99))
tab nh_mos core_year, missing
sum nh_mos, detail

replace nh_nights=ceil(30.5*nh_mos) if nh_mos!=.
replace nh_nights=770 if nh_nights>770
replace nh_nights=0 if nhres_2yr==0
sum nh_nights, detail
sum nh_nights if(nhres_2yr==1), detail
tab nh_nights core_year, missing

drop nh_mos

*********************************************************************************
// Nursing home covered by insurance - core interview
// missing if no nursing home
*********************************************************************************
/*responses coding changed
in 1998 & 2000 surveys:
	1 - fully covered
	3 - partly covered (or covered with copay)
	5 - not covered at all
	7 - costs not settled
	8 / 9 - Don't know, missing, refused
in 2002 survey:
	All the same but response 2 - mostly covered was added
nh_ins missing are those that were inapplicable, no nursing home stays*/
gen nh_ins = .
replace nh_ins = 1 if ((f2304==1)|(g2576==1)|(hn118==1)|(jn118==1))
replace nh_ins = 2 if ((f2304==3)|(g2576==3)|inlist(hn118,2,3)|inlist(jn118,2,3))
replace nh_ins = 3 if ((f2304==5)|(g2576==5)|(hn118==5)|(jn118==5))
replace nh_ins = 4 if inlist(f2304,7,8,9)|inlist(g2576,7,8,9)| ///
	inlist(hn118,7,8,9)|inlist(jn118,7,8,9)
la var nh_ins "Nursing home covered by insurance"
// la define nh_ins 1 "Fully covered by insurance" 2 "Partially covered (or covered w/ copay)" 3 ///
//	"Not covered" 4 "Unknown, not provided"
// la val nh_ins nh_ins
tab nh_ins core_year, missing
tab nh_ins core_year if nhres_2yr ==1, missing

*********************************************************************************
// Living with spouse - core interview
*********************************************************************************
generate resspouse = .
replace resspouse = 0 if ((f521==5)|(g562==5)|(ha030==5)|(ja030==5))
replace resspouse = 0 if (married==0)
replace resspouse = 1 if ((f521==1)|(g562==1)|(ha030==1)|(ja030==1))
label variable resspouse "Living with Spouse/Partner"
//label define resspouse 1 "Live with Spouse" 0 "No", modify
tab resspouse core_year, missing

*********************************************************************************
// Number of household members - core interview
*********************************************************************************
generate hhm = .
replace hhm = f807 if (core_year==1998)
replace hhm = g884 if (core_year==2000)
replace hhm = ha098 if (core_year==2002)
replace hhm = ja098 if (core_year==2004)
label variable hhm "Number of Household Members"
sum hhm, detail
tab hhm core_year, missing

*********************************************************************************
// Number of Children - core interview
*********************************************************************************
generate child = .
replace child = f816 if (core_year==1998)
replace child = g893 if (core_year==2000)
replace child = ha101 if (core_year==2002)
replace child = ja101 if (core_year==2004)
label variable child "Number of Children, not their children's spouses"
sum child, detail

*********************************************************************************
// Number of Grandchildren - core
*********************************************************************************
//var = 95 if none assumed, otherwise 0-80 max
generate gchil = .
replace gchil = f1819 if (core_year==1998)
replace gchil = g2035 if (core_year==2000)
replace gchil = he046 if (core_year==2002)
replace gchil = je046 if (core_year==2004)
replace gchil = 0 if gchil==95
replace gchil = . if inlist(gchil,98,99,998,999)
label variable gchil "Number of Grandchildren (capped at 80)"
sum gchil, detail

*********************************************************************************
// Total Number of Children, Children-in-law, and Grandchildren
*********************************************************************************
// not asked in 2000 core so per Ling notes, use 2002 value
// not asked in 1998 core either, left blank here because won't be used
// if need to use, then update with 2002 value too
generate allchil = .
//set for 2002 and 2004
replace allchil = ha113 if (core_year==2002)
replace allchil = ja113 if (core_year==2004)

//set for 2000, need to refer to 2002 variable so sort and use 
//next interview information where available
//This leaves 2080 observations in 2000 with missing values b/c no 2002 entry
sort id core_year
gen allchil_lead1_2000 = allchil[_n+1] if (id==id[_n+1]&core_year==2000)
tab allchil_lead1_2000 core_year, missing
replace allchil = allchil_lead1_2000 if ((allchil==.) & core_year==2000)
label variable allchil "Total Number of Children, Children-in-law, and Grandchildren"
sum allchil, detail
tab allchil core_year,missing
drop allchil_lead1_2000



*********************************************************************************
// Number of Resident Children
*********************************************************************************
generate reschil = .
replace reschil = f809 if (core_year==1998)
replace reschil = g886 if (core_year==2000)
replace reschil = ha099 if (core_year==2002)
replace reschil = ja099 if (core_year==2004)
label variable reschil "Number of Resident Children"
sum reschil, detail


/*******************************************************************************************
** Self reported health status
*******************************************************************************************/

/**Self Rated Health "Don't Know/Refused" (only 2 cases) included with missing 
Cross-Wave Equivalents for:
C001 RATE HEALTH 
1998 Core 	F1097
2000 Core 	G1226
2002 Core 	HC001
2004 Core 	JC001
2006 Core 	KC001
2008 Core 	LC001
2010 Core 	MC001
*/

gen srh = .
replace srh = f1097 if core_year==1998
replace srh = g1226 if core_year==2000
replace srh = hc001 if core_year==2002
replace srh = jc001 if core_year==2004
replace srh = . if inlist(srh,8,9)
label var srh "Self Rated Health"
//label define srh 1 "Excellent" 2 "Very Good" 3 "Good" 4 "Fair" 5 "Poor"
//label val srh srh
tab srh core_year,missing


/**********************************************************************/
// CESD - depression scale, from katherine
/**********************************************************************/
/*variable list used:
cesd questions:
g1669 / 110 depressed
g1670 / 111 effort
g1671 / 112 restless sleep
g1672 / 113 happy (this is a switch happy=yes=1 - not depressed)
g1673 / 114 lonely
g1674 / 115 enjoyed life (yes=1=not depressed)
g1675 / 116 sad
g1676 / 117 unmotivated - could not get going
other questions:
psych treatment 1=yes 5=no, only asked if reported having psych problems (psych_hrs==1)
2000 Core 	G1324
2002 Core 	HC067
2004 Core 	JC067
2006 Core 	KC067
2008 Core 	LC067
2010 Core 	MC067
psych medications 1=yes 5 = no, only asked if reported having psych problems (psych_hrs==1)
2000 Core 	G1325
2002 Core 	HC068
2004 Core 	JC068
2006 Core 	KC068
2008 Core 	LC068
2010 Core 	MC068
Note: the above 2 variables are processed in the section on HRS comorbidities and not here
because of their skip pattern! Different from spouse_data_mar11_2013 code
ever drink alcohol 1 = yes ; 3,5 =no
2000 Core 	G1415
2002 Core 	HC128
2004 Core 	JC128
2006 Core 	KC128
2008 Core 	LC128
2010 Core 	MC128
number of drinks per day in past 3 months; 98-99=dont know or refused
2000 Core 	G1417
2002 Core 	HC130
2004 Core 	JC130
2006 Core 	KC130
2008 Core 	LC130
2010 Core 	MC130
//days per week drink if 0 don't ask above question re drinks/day
2000 Core 	G1416
2002 Core 	HC129
2004 Core 	JC129
2006 Core 	KC129
2008 Core 	LC129
2010 Core 	MC129

2000: g1669-g1677 (1= yes, 5=no) section c
2002: h110-117 section d

Note that CESD questions are not asked during proxy interviews
*/
//cesd1 - depressed in the last week
gen byte cesd1 = .
replace cesd1 = 1 if (f1493==1)|(g1669==1)|(hd110==1)|(jd110==1)
replace cesd1 = 0 if (f1493==5)|(g1669==5)|(hd110==5)|(jd110==5)
la var cesd1 "CESD - Depressed in last week"
tab cesd1 core_year,missing

//cesd2 - felt activities were effort in the last week
gen byte cesd2 = .
replace cesd2 = 1 if (f1494==1)|(g1670==1)|(hd111==1)|(jd111==1)
replace cesd2 = 0 if (f1494==5)|(g1670==5)|(hd111==5)|(jd111==5)
la var cesd2 "CESD - Activities were effort in last week"
tab cesd2 core_year,missing

//cesd3 - restless sleep in the last week
gen byte cesd3 = .
replace cesd3 = 1 if (f1495==1)|(g1671==1)|(hd112==1)|(jd112==1)
replace cesd3 = 0 if (f1495==5)|(g1671==5)|(hd112==5)|(jd112==5)
la var cesd3 "CESD - Restless Sleep in last week"
tab cesd3 core_year,missing

//cesd4 - was happy in the last week
//this one is reversed 0 = was happy 1 = was not happy
gen byte cesd4 = .
replace cesd4 = 0 if (f1496==1)|(g1672==1)|(hd113==1)|(jd113==1)
replace cesd4 = 1 if (f1496==5)|(g1672==5)|(hd113==5)|(jd113==5)
la var cesd4 "CESD - Was not happy in last week"
tab cesd4 core_year,missing

//cesd5 - lonely in the last week
gen byte cesd5 = .
replace cesd5 = 1 if (f1497==1)|(g1673==1)|(hd114==1)|(jd114==1)
replace cesd5 = 0 if (f1497==5)|(g1673==5)|(hd114==5)|(jd114==5)
la var cesd5 "CESD - Lonely in last week"
tab cesd5 core_year,missing

//cesd6 - enjoyed life in the last week
gen byte cesd6 = .
replace cesd6 = 0 if (f1498==1)|(g1674==1)|(hd115==1)|(jd115==1)
replace cesd6 = 1 if (f1498==5)|(g1674==5)|(hd115==5)|(jd115==5)
la var cesd6 "CESD - Did not enjoy life in last week"
tab cesd6 core_year,missing

//cesd7 - felt sad in the last week
gen byte cesd7 = .
replace cesd7 = 1 if (f1499==1)|(g1675==1)|(hd116==1)|(jd116==1)
replace cesd7 = 0 if (f1499==5)|(g1675==5)|(hd116==5)|(jd116==5)
la var cesd7 "CESD - Sad in last week"
tab cesd7 core_year,missing

//cesd8 - unmotivated in the last week
gen byte cesd8 = .
replace cesd8 = 1 if (f1500==1)|(g1676==1)|(hd117==1)|(jd117==1)
replace cesd8 = 0 if (f1500==5)|(g1676==5)|(hd117==5)|(jd117==5)
la var cesd8 "CESD - Unmotivated in last week"
tab cesd8 core_year,missing

//ever drink alcohol
gen byte ever_drink = .
replace ever_drink = 1 if (f1282==1)|(g1415==1)|(hc128==1)|(jc128==1)
replace ever_drink = 0 if (inlist(f1282,3,5)|inlist(g1415,3,5)|inlist(hc128,3,5)|inlist(jc128,3,5))
la var ever_drink "Ever drink alcoholic beverages"
tab ever_drink core_year,missing

//days per week drink
gen days_drink = .
replace days_drink = f1283 if(core_year==1998)
replace days_drink = g1416 if(core_year==2000)
replace days_drink = hc129 if(core_year==2002)
replace days_drink = jc129 if(core_year==2004)
replace days_drink = . if inlist(days_drink,8,9,98,99)
replace days_drink = 0 if ever_drink==0
la var days_drink "Days per week drink alcoholic beverages"
tab days_drink core_year,missing


//number of drinks per day, coded to 0 if don't drink, . if missing
//different from how Ling had it initally coded where . = missing or don't drink (not asked)
gen n_drinks_3m = .
replace n_drinks_3m = f1284 if(core_year==1998)
replace n_drinks_3m = g1417 if(core_year==2000)
replace n_drinks_3m = hc130 if(core_year==2002)
replace n_drinks_3m = jc130 if(core_year==2004)
replace n_drinks_3m = . if inlist(n_drinks_3m,98,99)
replace n_drinks_3m = 0 if (ever_drink==0 | days_drink==0)
la var n_drinks_3m "Number of alcoholic drinks per day"
tab n_drinks_3m core_year,missing

/**********************************************************************/
// Smoker status variables
/**********************************************************************/
/*
Ever smoke? 
1998 core: F1266 // have previous wave ever smoked f228
2000 core: G1399 // have previous wave ever smoked g228
2002 core: HC116 // no prev wave ever smoked, missing if not new respondant
2004 core: JC116 // ever reported smoking z205 variable
2006 core: KC116 // ever reported smoking z205 variable
2008 core: LC116 // ever reported smoking z205 variable
2010 core: MC116 // ever reported smoking z205 variable
Only asked if first interview so refer back to previous wave ever smoke
questions

JZ205    R REPORTED THAT S/HE EVER SMOKED
         Section: PR    Level: Respondent      Type: Numeric    Width: 1   Decimals: 0
         CAI Reference: RVARS.Z205_EverSmoked_V


        R REPORTED THAT S/HE EVER SMOKED
        ..................................................................................
         9594           1. YES
         7059           5. NO
         3476       Blank. INAP (Inapplicable)
2004 Core 	JZ205
2004 Exit 	TZ205
2006 Core 	KZ205
2006 Exit 	UZ205
2008 Core 	LZ205
2008 Exit 	VZ205
2010 Core 	MZ205
2010 Exit 	WZ205

G228      PR228.PREV WAVE R EVER SMOKE              
          Section: PR           Level: Respondent      CAI Reference: Q228
          Type: Numeric         Width: 1               Decimals: 0
          ................................................................................
            258         0. Prior wave information not available - not interviewed in
                           earlier wave or new spouse/partner
           5702         1. YES
          13620         5. NO
*/
// Ever smoked?
gen smoke_ever=.
replace smoke_ever=1 if (f228==1 | f1266==1) & core_year==1998
replace smoke_ever=0 if (f228==5 | f1266==5) & core_year==1998
replace smoke_ever=1 if (g228==1 | g1399==1) & core_year==2000
replace smoke_ever=0 if (g228==5 | g1399==5) & core_year==2000
replace smoke_ever=1 if (hc116==1) & core_year==2002
replace smoke_ever=0 if (hc116==5) & core_year==2002
replace smoke_ever=1 if (jz205==1 | jc116==1) & core_year==2004
replace smoke_ever=0 if (jz205==5 | jc116==5) & core_year==2004

//this results in many missing 2002 observations because look back question
//was not provided in survey data, so do lookback manually
//previous interview information where available
//This leaves 730 observations in 2002 with missing ever smoke b/c no 2000 entry
sort id core_year
gen smoke_lag1_2002 = smoke_ever[_n-1] if (id==id[_n-1]&core_year==2002)
tab smoke_lag1_2002 core_year, missing
replace smoke_ever= 1 if ((smoke_lag1_2002 ==1) & core_year==2002)
replace smoke_ever= 0 if ((smoke_lag1_2002 ==0) & core_year==2002)
la var smoke_ever "Ever smoked?"
tab smoke_ever core_year, missing

drop smoke_lag1_2002 

// Currently smoke
/* JC117    SMOKE CIGARETTES NOW
         Section: C     Level: Respondent      Type: Numeric    Width: 1   Decimals: 0
         CAI Reference: SecC.Smoking.C117_
         2000 Link: G1400 2002 Link: HC117

        Do you smoke cigarettes now?
        ..................................................................................
         3012           1. YES
         8460           5. NO
            1           8. DK (Don't Know); NA (Not Ascertained)
            1           9. RF (Refused)
         8655       Blank. INAP (Inapplicable)


2000 core: G1400
2002 core: HC117
2004 core: JC117
2006 core: KC117
2008 core: LC117
2010 core: MC117
Only ask if reported ever smoked in previous question or past wave
*/
gen smoke_curr=.
replace smoke_curr = 1 if (f1267==1|g1400==1|hc117==1|jc117==1)
replace smoke_curr = 0 if (f1267==5|g1400==5|hc117==5|jc117==5)
replace smoke_curr = 0 if smoke_ever==0
la var smoke_curr "Currently smoke cigarettes?"
tab smoke_curr core_year,missing

/**********************************************************************/
//Vigorous exercise
/**********************************************************************/
/*question in 1998-2002: Do you do vigorous physical activity 3x per
week or more? 1=yes, 5=no
Question changed in 2004-2010: How often do you do vigourous
physical activity? 
1=more than 1xper week
2=1xper week
3=1-3 times a month
4 = hardly ever or never
7 = every day
8 = dont know
9 = refused
Here coded as every day or more than 1x per week = yes
This results in lower rates after 2002 due to the 
question change*/
gen byte vig_phy_act=.
replace vig_phy_act=1 if f1262==1|g1395==1|hc115==1|inlist(jc223,1,7)
replace vig_phy_act=0 if f1262==5|g1395==5|hc115==5|inlist(jc223,2,3,4)

la var vig_phy_act "Vigorous physical activity more than 1x per week"
tab vig_phy_act core_year,missing


/**********************************************************************/
// Body mass index variables, calculated from height and weight
// These variables have a lot of missingness, need to
// clean up for each beneficiary if required for analysis
/**********************************************************************/
//current weight, lbs, asked every interview
gen wgt_curr = .
replace wgt_curr = f1291 if core_year==1998
replace wgt_curr = g1425 if core_year==2000
replace wgt_curr = hc139 if core_year==2002
replace wgt_curr = jc139 if core_year==2004
replace wgt_curr = . if inlist(wgt_curr,998,999)
la var wgt_curr "Weight current wave, in pounds"
sum wgt_curr

//current height, ft, only asked first interview
gen height_ft_temp = .
replace height_ft_temp = f1295 if core_year==1998
replace height_ft_temp = g1428 if core_year==2000
replace height_ft_temp = hc141 if core_year==2002
replace height_ft_temp = jc141 if core_year==2004
replace height_ft_temp = . if inlist(height_ft,8,9)
la var height_ft_temp "Height, feet"
tab height_ft_temp core_year, missing

//current height, inches, only asked first interview
gen height_in_temp = .
replace height_in_temp = f1296 if core_year==1998
replace height_in_temp = g1429 if core_year==2000
replace height_in_temp = hc142 if core_year==2002
replace height_in_temp = jc142 if core_year==2004
replace height_in_temp = . if (height_in_temp >12)
la var height_in_temp "Height, inches"
tab height_in_temp core_year, missing

/********************************************************************/
// Hours spent helping relatives or friends
/********************************************************************/
/*
Refer to codebooks as questions changed between waves.
2000:
Altogether, about how many hours did you spend in the past 12 months helping
        friends, neighbors, or relatives who did not live with you and did not pay you
        for the help?
0-9000 = hours
9998 = Don't know, Not ascertained
9999 = Refused

If respond 9998 or 9999, then ask the next 2 follow up questions:
 E173a.  Would it be less than 100 hours, more than 100 hours, or what?
          ................................................................................
           2512         1. LESS THAN 100 HOURS
            442         3. ABOUT 100 HOURS
           1165         5. MORE THAN 100 HOURS
            145         8. DK (don't know); NA (not ascertained)
             12         9. RF (refused)
If say 5: mre than 100 hours, then ask next question:
E173b.  Would it be less than 200 hours, more than 200 hours, or what?
          ................................................................................
            385         1. LESS THAN 200 HOURS
            168         3. ABOUT 200 HOURS
            588         5. MORE THAN 200 HOURS
             24         8. DK (don't know); NA (not ascertained)
                        9. RF (refused)
*/
//defer to the actual value in cases where both the value and the range questions were answered

//indicator variable
//note that for 1998-2002 if response was not provided as 0 in first question, code
//as being a helper for response < 100 hours
//this likely overestimates the number of people who are helpers in these years
gen help_friends = .
replace help_friends = 1 if core_year==1998 & (0<f2681 & f2681<=9000)
replace help_friends = 1 if core_year==2000 & (0<g2999 & g2999<=9000)
replace help_friends = 1 if core_year==2002 & (0<hg092 & hg092<=9000)
replace help_friends = 1 if core_year==2004 & ( jg198==1 )
//if missing response in the number of hours, check probing questions
replace help_friends = 1 if help_friends==. & core_year==1998 & inlist(f2682,1,3,5)
replace help_friends = 1 if help_friends==. & core_year==2000 & inlist(g3000,1,3,5)
replace help_friends = 1 if help_friends==. & core_year==2002 & inlist(hg094,0,100,101,200,201)

replace help_friends = 0 if core_year==1998 & f2681==0
replace help_friends = 0 if core_year==2000 & g2999==0
replace help_friends = 0 if core_year==2002 & hg092==0
replace help_friends = 0 if core_year==2004 & jg198==5

tab help_friends core_year, missing


//categorical variable, driven by 2004 and later survey format
//in 1998, 2000, respondants said > 100 but don't know to 200 question, assign these to 101-200 range
gen help_friends_hours = .
replace help_friends_hours = 0 if help_friends ==0 //none

replace help_friends_hours = 1 if core_year==1998 & (0<f2681 & f2681<=100) //0-100
replace help_friends_hours = 1 if core_year==2000 & (0<g2999 & g2999<=100) 
replace help_friends_hours = 1 if core_year==2002 & (0<hg092 & hg092<=100)
replace help_friends_hours = 1 if core_year==2004 & inlist(jg199,1,3)
//if missing number of hours, check probing questions
replace help_friends_hours = 1 if core_year==1998 & help_friends_hours==. & inlist(f2682,1,3) //0-100
replace help_friends_hours = 1 if core_year==2000 & help_friends_hours==. & inlist(g3000,1,3)
replace help_friends_hours = 1 if core_year==2002 & help_friends_hours==. & inlist(hg094,0,100)

replace help_friends_hours = 2 if core_year==1998 & (100<f2681 & f2681<=200) //101-200
replace help_friends_hours = 2 if core_year==2000 & (100<g2999 & g2999<=200) 
replace help_friends_hours = 2 if core_year==2002 & (100<hg092 & hg092<=200)
replace help_friends_hours = 2 if core_year==2004 & inlist(jg200,1,3)
//probing questions, if say > 100 and don't know to 200 question, set to this category
replace help_friends_hours = 1 if core_year==1998 & help_friends_hours==. & f2683==1 | f2683==3 | (f2682==5 & f2683==8) //101-200
replace help_friends_hours = 1 if core_year==2000 & help_friends_hours==. & g3001==1 | g3001==3 | (g3000==5 & g3001==8)
replace help_friends_hours = 1 if core_year==2002 & help_friends_hours==. & inlist(hg094,101,200)

replace help_friends_hours = 3 if core_year==1998 & (200<f2681 & f2681<=9000)  //gt200
replace help_friends_hours = 3 if core_year==2000 & (200<g2999 & g2999<=9000) 
replace help_friends_hours = 3 if core_year==2002 & (200<hg092 & hg092<=9000)
replace help_friends_hours = 3 if core_year==2004 & jg200==5
//probing questions
replace help_friends_hours = 1 if core_year==1998 & help_friends_hours==. & f2683==5 //gt200
replace help_friends_hours = 1 if core_year==2000 & help_friends_hours==. & g3001==5 
replace help_friends_hours = 1 if core_year==2002 & help_friends_hours==. &  hg094==201

tab help_friends_hours, missing
tab help_friends, missing
tab help_friends_hours core_year,missing
tab help_friends core_year,missing
tab help_friends help_friends_hours, missing

save core_98_04_clean1.dta, replace

log close



H="Core 98-04 - variable cleaning - part 2 - adls and iadls"
/*variable cleaning for HRS core 2000-2004
Most code is taken from the HRS Outline_11_22_11.txt file
and modified to clean 1998-2004 core dataset

2nd part of core variable cleaning
*/

capture log close

clear all
set mem 1g
set matsize 800
set more off


//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\2_HRS_Core_00_04_clean2-LOG.txt", text replace

cd `datapath'

use core_98_04_clean1.dta

*************************************************************************
//   ADLs from core interviews
*************************************************************************

*******************************************************************************************
** These variables are drawn from the Core interview. In general the questions 
** were framed "Because of a health or memory problem, do you have any difficulty...
** .. Does anyone ever help you...?"
** " Each ADL is coded "Yes- need help" if the 
** response was "Yes"; and "No" if the item was skipped in the interview.  ADL questions 
** were skipped if respondents were able to do all higher level function in the 
** preceding series of questions, such as climb stairs. "Don't Know" "Not Ascertained" 
** and "Refused" responses are coded as missing. 
*******************************************************************************************

** ADLs **
//Exit interviews include variable for adl_bedbound, not present in core interviews
//so not included here


/*ADL questions are skipped if the adl check variable indicates no difficulty
with first set of questions asked, therefore assign an adl_core_check variable to capture this 
This variable = 0 if the ADL questions are NOT asked because person assumed
to have no adl difficulties

For 2002-2010 - ADL questions only asked if G013TNagiCkpt_A > 0
So assign ADL = 0 if G013TNagiCkpt_A=0
2002 Core 	HG013
2002 Exit 	N/A
2004 Core 	JG013
2004 Exit 	N/A
2006 Core 	KG013
2006 Exit 	N/A
2008 Core 	LG013
2008 Exit 	N/A
2010 Core 	MG013
*/

//create adl count flag variable, values = 0-10
//first need to create count variable for 1998&2000 since don't provide it
gen adl_manual_cnt=.
replace adl_manual_cnt = f2424_1 + f2424_2 + f2424_3 + f2424_4 + ///
	 f2424_5 + f2424_6 + f2424_7 + f2424_8 + f2424_9 + f2424_10 if core_year==1998
replace adl_manual_cnt = g2722_1 + g2722_2 + g2722_3 + g2722_4 + ///
	 g2722_5 + g2722_6 + g2722_7 + g2722_8 + g2722_9 + g2722_10 if core_year==2000

tab adl_manual_cnt core_year, missing

//create combined count variable for all years
gen adl_core_check=.
replace adl_core_check=adl_manual_cnt if inlist(core_year,1998,2000)
replace adl_core_check=hg013 if core_year==2002
replace adl_core_check=jg013 if core_year==2004
tab adl_core_check core_year, missing
sum adl_core_check, detail

/**Dressing, g2724 hg015 jg015
Help dressing?
2000 Core 	G2724
2002 Core 	HG015
2002 Exit 	SG015
2004 Core 	JG015
2004 Exit 	TG015
2006 Core 	KG015
2006 Exit 	UG015
2008 Core 	LG015
2008 Exit 	VG015
2010 Core 	MG015

Difficulty dressing?
2000 Core 	G2723
2002 Core 	HG014
2002 Exit 	N/A
2004 Core 	JG014
2004 Exit 	N/A
2006 Core 	KG014
2006 Exit 	N/A
2008 Core 	LG014
2008 Exit 	N/A
2010 Core 	MG014
1 = yes
5 = no
6 = can't do
7 = don't do
8,9 = refused, not asked

1 = if need help (only asked report having difficulty)
0 if don't need help
0 if report don't have difficulty
*/ 

//report no difficulty dressing, used as flag for asking other adl questions
//can't do set to yes, don't do set to missing
gen byte adl_diff_dr = .
replace adl_diff_dr = 1 if (f2425==1)|(f2425==6)|(g2723==1)|(g2723==6)| ///
(hg014==1)|(hg014==6)|(jg014==1)|(jg014==6)
replace adl_diff_dr = 0 if (f2425==5)|(g2723==5)|(hg014==5)|(jg014==5)
replace adl_diff_dr = 0 if adl_core_check==0
la var adl_diff_dr "Difficulty dressing 1=yes"
tab adl_diff_dr core_year, missing

generate adl_dr_core = .
//not asked if need help but report no difficulty dressing
replace adl_dr_core = 0 if adl_diff_dr==0
//not asked because adl check flag = 0
replace adl_dr_core = 0 if adl_core_check==0
//report need help
replace adl_dr_core = 1 if ((f2426==1)|(g2724==1)|(hg015 ==1)|(jg015==1))
//asked if need help, say no
replace adl_dr_core = 0 if ((f2426==5)|(g2724==5)|(hg015 ==5)|(jg015==5))
//asked if need help, refused, don't respond
replace adl_dr_core = . if ((f2426==8)|(g2724==8)|(hg015 ==8)|(jg015==8)| ///
	(f2426==9)|(g2724==9)|(hg015 ==9)|(jg015==9))
label variable adl_dr_core "Help Dressing - Core int."
//label define adl_dr_core 0 "No" 1 "Yes", modify
//label values adl_dr_core adl_dr_core
tab adl_dr_core core_year, missing

//Walking, g2729 hg020 jg020 
/*not asked if adl_core_check==1 and adl_dr_core==1
so not asked if have an adl difficulty but report no difficulty getting dressed*/
gen adl_diff_wk = .
replace adl_diff_wk = 1 if (f2427==1)|(f2427==6)|(g2725==1)|(g2725==6)| ///
	(hg016==1)|(hg016==6)|(jg016==1)|(jg016==6)
replace adl_diff_wk = 0 if (f2427==5)|(g2725==5)|(hg016==5)|(jg016==5)
replace adl_diff_wk = 0 if (adl_diff_dr==0 & adl_core_check==1) |  adl_core_check==0
la var adl_diff_wk "Difficulty walking? 1=yes"
tab adl_diff_wk core_year, missing

gen adl_equip_wk = .
replace adl_equip_wk = 1 if (f2428==1)|(g2726==1)|(hg017==1)|(jg017==1)
replace adl_equip_wk = 0 if (f2428==5)|(g2726==5)|(hg017==5)|(jg017==5)
la var adl_equip_wk "Use equipment to walk? 1=yes"
tab adl_equip_wk core_year, missing

generate adl_wk_core = .
//set = 0 if not asked because of adl flags
replace adl_wk_core = 0 if adl_core_check==0
replace adl_wk_core = 0 if (adl_core_check==1 & adl_diff_dr==0)
tab adl_wk_core, missing 
// set based on repsonses
//responses coded differently in 2004 b/c of programming error per codebook
//assign can't do = adl_wk_core = yes, don't do = .
replace adl_wk_core = 1 if ((f2431==1)|(g2729==1)|(hg020==1)|(jg020==1)|(jg020==6))
replace adl_wk_core = 0 if ((f2431==5)|(g2729==5)|(hg020==5)|(jg020==5))
replace adl_wk_core = . if ((f2431==8)|(g2729==8)|(hg020==8)|(f2431==0)|(g2729==9)|(hg020 ==9)|inlist(jg020,9,8,7))
replace adl_wk_core = 0 if adl_diff_wk==0
label var adl_wk_core "Help Walking - core"
//label define adl_wk_core 0 "No" 1 "Yes", modify
//label values adl_wk_core adl_wk_core
tab adl_wk_core core_year, missing 

//Bathing, g2745 hg022 jg022 
/*Cross-Wave Equivalents for:
G022 ADL BATHE HELP 
1995 Core D1897 
1996 Core E1921 
1998 Core F2447 
2000 Core G2745 
2002 Core HG022 
2002 Exit SG022 
2004 Core JG022 
2004 Exit TG022 
2006 Core KG022 
2006 Exit UG022 
2008 Core LG022 
2008 Exit VG022 
2010 Core MG022 
2010 Exit WG022 
Not asked if adl_count_flag = 1 and difficulty dressing = no
*/
gen byte adl_diff_bh = .
replace adl_diff_bh = 1 if (f2444==1)|(f2444==6)|(g2742==1)|(g2742==6)| ///
	(hg021==1)|(hg021==6)|(jg021==1)|(jg021==6)
replace adl_diff_bh = 0 if (f2444==5)|(g2742==5)|(hg021==5)|(jg021==5)
replace adl_diff_bh = 0 if (adl_diff_dr==0 & adl_core_check==1) |  adl_core_check==0
la var adl_diff_bh "Difficulty bathing? 1=yes"
tab adl_diff_bh core_year, missing

generate adl_bh_core = .
//set = 0 if not asked because of adl flags or no difficulty reported
replace adl_bh_core = 0 if adl_core_check==0
replace adl_bh_core = 0 if (adl_core_check==1 & adl_diff_dr==0)
// set based on responses
// again 2004 programming error
// no  responses = can't do, set don't do = .
replace adl_bh_core = 1 if ((f2447==1)|(g2745==1)|(hg022 ==1)|(jg022==1))
replace adl_bh_core = 0 if ((f2447==5)|(g2745==5)|(hg022 ==5)|(jg022==5))
replace adl_bh_core = . if ((f2447==8)|(g2745==8)|(hg022 ==8)|(f2447==9)|(g2745==9)|(hg022 ==9)|inlist(jg022,7,8,9))
replace adl_bh_core = 0 if ((f2444==5)|(g2742==5)|(hg021 ==5)|(jg021==5))
label var adl_bh_core "Help Bathing - core"
//label define adl_bh_core 0 "No" 1 "Yes", modify
//label values adl_bh_core adl_bh_core
tab adl_bh_core core_year, missing 


/*
**Eating, g2755 hg024 jg024 
Cross-Wave Equivalents for:
G024 ADL EAT HELP 
1995 Core D1907 
1996 Core E190 
1998 Core F2457 
2000 Core G2755 
2002 Core HG024 
2002 Exit SG024 
2004 Core JG024 
2004 Exit TG024 
2006 Core KG024 
2006 Exit UG024 
2008 Core LG024 
2008 Exit VG024 
2010 Core MG024 
2010 Exit WG024 
*/
gen byte adl_diff_e = .
replace adl_diff_e = 1 if (f2454==1)|(f2454==6)|(g2752==1)|(g2752==6)| ///
	(hg023==1)|(hg023==6)|(jg023==1)|(jg023==6)
replace adl_diff_e = 0 if (f2454==5)|(g2752==5)|(hg023 ==5)|(jg023==5)
replace adl_diff_e = 0 if (adl_diff_dr==0 & adl_core_check==1) |  adl_core_check==0
la var adl_diff_e "Difficulty eating? 1=yes"
tab adl_diff_e core_year, missing

generate adl_e_core = .
//set = 0 if not asked because of adl flags or no difficulty reported
replace adl_e_core = 0 if adl_core_check==0
replace adl_e_core = 0 if (adl_core_check==1 & adl_diff_dr==0)
//set based on responses
replace adl_e_core = 1 if ((f2457==1)|(g2755==1)|(hg024 ==1)|(jg024==1))
replace adl_e_core = 0 if ((f2457==5)|(g2755==5)|(hg024 ==5)|(jg024==5))
replace adl_e_core = . if ((f2457==8)|(g2755==8)|(hg024 ==8)|(jg024==8)| ///
	(f2457==9)|(g2755==9)|(hg024==9)|(jg024==9))
replace adl_e_core = 0 if adl_diff_e==0
label var adl_e_core "Help Eating - core"
//label define adl_e_core 0 "No" 1 "Yes", modify
//label values adl_e_core adl_e_core
tab adl_e_core core_year, missing 


//Transfers to Bed, g2768 hg029 jg029 
gen byte adl_diff_tx = .
replace adl_diff_tx = 1 if (f2464==1)|(f2464==6)|(g2762==1)|(g2762==6)| ///
	(hg025==1)|(hg025==6)|(jg025==1)|(jg025==6)
replace adl_diff_tx = 0 if (f2464==5)|(g2762==5)|(hg025==5)|(jg025==5)
replace adl_diff_tx = 0 if (adl_diff_dr==0 & adl_core_check==1) |  adl_core_check==0
la var adl_diff_tx "Difficulty transfers to bed? 1=yes"
tab adl_diff_tx core_year, missing

gen byte adl_equip_tx = .
replace adl_equip_tx = 1 if (f2467==1)|(g2765==1)|(hg026==1)|(jg026==1)
replace adl_equip_tx = 0 if (f2467==5)|(g2765==5)|(hg026==5)|(jg026==5)
la var adl_equip_tx "Use equipment transfers to bed? 1=yes"
tab adl_equip_tx core_year, missing

generate adl_tx_core = .
//set = 0 if not asked because of adl flags or no difficulty reported
replace adl_tx_core = 0 if adl_core_check==0
replace adl_tx_core = 0 if (adl_core_check==1 & adl_diff_dr==0)
//set based on responses
replace adl_tx_core = 1 if ((f2470==1)|(g2768==1)|(hg029==1)|(jg029==1))
replace adl_tx_core = 0 if ((f2470==5)|(g2768==5)|(hg029==5)|(jg029==5))
replace adl_tx_core = . if ((f2470==8)|(g2768==8)|(hg029==8)|(jg029==8)| ///
	(f2470==9)|(g2768==9)|(hg029 ==9)|(jg029==9))
replace adl_tx_core = 0 if adl_diff_tx==0
label var adl_tx_core "Help with Transfers to Bed - core"
//label define adl_tx_core 0 "No" 1 "Yes", modify
//label values adl_tx_core adl_tx_core
tab adl_tx_core core_year, missing 


//Toileting, g2778 hg00 jg00 
/*2000 Core 	G2778
2002 Core 	HG031
2002 Exit 	SG031
2004 Core 	JG031
2004 Exit 	TG031
2006 Core 	KG031
2006 Exit 	UG031
2008 Core 	LG031
2008 Exit 	VG031
2010 Core 	MG031
2010 Exit 	WG031 */

gen byte adl_diff_t = .
replace adl_diff_t = 1 if (f2477==1)|(f2477==6)|(g2775==1)|(g2775==6)| ///
	(hg030==1)|(hg030==6)|(jg030==1)|(jg030==6)
replace adl_diff_t = 0 if (f2477==5)|(g2775==5)|(hg030==5)|(jg030==5)
replace adl_diff_t = 0 if (adl_diff_dr==0 & adl_core_check==1) |  adl_core_check==0
la var adl_diff_t "Difficulty toileting? 1=yes"
tab adl_diff_t core_year, missing

generate adl_t_core = .
//set = 0 if not asked because of adl flags or no difficulty reported
replace adl_t_core = 0 if adl_core_check==0
replace adl_t_core = 0 if (adl_core_check==1 & adl_diff_dr==0)
//set based on responses
//2004 coding error, no responses = can't do, set don't do = 0
replace adl_t_core = 1 if ((f2480==1)|(g2778==1)|(hg031 ==1)|(jg031==1))
replace adl_t_core = 0 if ((f2480==5)|(g2778==5)|(hg031 ==5)|(jg031==5))
replace adl_t_core = . if ((f2480==8)|(g2778==8)|(hg031 ==8)|(f2480==9)| ///
	(g2778==9)|(hg031==9)|inlist(jg031,7,8,9))
replace adl_t_core = 0 if adl_diff_t==0
replace adl_t_core = 0 if adl_core_check==0
label var adl_t_core "Help Toileting - core"
//label define adl_t_core 0 "No" 1 "Yes", modify
//label values adl_t_core adl_t_core
tab adl_t_core core_year, missing 


/**********************************************************************************/
/**********************************************************************************/
// IADLs
/**********************************************************************************/
/**********************************************************************************/
/*Note 2004 had coding error in survey so questions that ask :Does anyone help...
allow for responses 6. Can't do 7. Don't do. For now ignore these small numbers
of responses and leave as missing
If problem with missingness in a specific project, look at this again 

For questions difficulty iadl_diff_vars
Set to 1 if :
Report difficulty=yes
Report difficulty=(can't do OR don't do) AND yes, b/c of health problem
Set to 0 if :
Report difficulty=no
Report difficulty=(can't do OR don't do) AND no, b/c of health problem*/

/*Difficulty using maps
1998 Core 	F2553
2000 Core 	G2851
2002-2010 	HG040-MG040*/
gen byte iadl_diff_map = .
replace iadl_diff_map = 1 if (f2553==1)|(f2553==6)|(g2851==1)|(g2851==6)| ///
	(hg040==1)|(hg040==6)|(jg040==1)|(jg040==6)
replace iadl_diff_map = 0 if (f2553==5)|(g2851==5)|(hg040==5)|(jg040==5)
la var iadl_diff_map "Difficulty using maps? 1=yes"
tab iadl_diff_map core_year, missing


/*Meal Prep, r2002 
Cross-Wave Equivalents for:
G043 IADL MEAL PREPARATION HELP 
1995 Core D2024 
1996 Core E2039 
1998 Core F2565 
2000 Core G2863 
2002 Core HG043 
2002 Exit SG043 
2004 Core JG043 
2004 Exit TG043 
2006 Core KG043 
2006 Exit UG043 
2008 Core LG043 
2008 Exit VG043 
2010 Core MG043 
2010 Exit WG043 
Not asked if
1. Live in nursing home g558 / _a028
2. Report no difficulty with task g2860 or
3. Report can't / don't do task (g2860) but that its not because of a health problem
Assign yes, need help, if live in nursing home
Assign no, no help meeded, if no difficulty or can't / don't do but not b/c of health prob.
*/

//difficulty with task b/c of health or memory problem?
gen byte iadl_diff_mp=.
replace iadl_diff_mp = 1 if (f2562==1)|(g2860==1)|(hg041==1)|(jg041==1)
replace iadl_diff_mp = 1 if	inlist(f2562,6,7) & f2564==1
replace iadl_diff_mp = 1 if inlist(g2860,6,7) & g2862==1
replace iadl_diff_mp = 1 if inlist(hg041,6,7) & hg042==1
replace iadl_diff_mp = 1 if inlist(jg041,6,7) & jg042==1	
replace iadl_diff_mp = 0 if (f2562==5)|(g2860==5)|(hg041==5)|(jg041==5)
replace iadl_diff_mp = 0 if	inlist(f2562,6,7) & f2564==5
replace iadl_diff_mp = 0 if inlist(g2860,6,7) & g2862==5
replace iadl_diff_mp = 0 if inlist(hg041,6,7) & hg042==5
replace iadl_diff_mp = 0 if inlist(jg041,6,7) & jg042==5	
la var iadl_diff_mp "Difficulty meal prep? 1=yes"
tab iadl_diff_mp core_year, missing

gen byte iadl_mp_core=.
//set for those that report no difficulty with task or can't/don't do but not b/c of health prob
replace iadl_mp_core = 0 if iadl_diff_mp == 0
//set yes for if live in nursing home
replace iadl_mp_core = 1 if	nhres ==1
// set for response help = no
replace iadl_mp_core = 0 if ((f2565==5)|(g2863==5)|(hg043==5)|(jg043==5))
//set for response help = yes
replace iadl_mp_core = 1 if ((f2565==1)|(g2863==1)|(hg043==1)|(jg043==1))
label var iadl_mp_core "Help with Meal Prep"
// la def iadl_mp_core 0 "No" 1 "Yes", modify
// la val iadl_mp_core iadl_mp_core 
tab nhres core_year, missing

//Grocery Shopping, r2012
/*Cross-Wave Equivalents for:
G046 IADL GROC SHOP HELP 
1998 Core F2570 
2000 Core G2868 
2002 Core HG046 
2002 Exit SG046 
2004 Core JG046 
2004 Exit TG046 
2006 Core KG046 
2006 Exit UG046 
2008 Core LG046 
2008 Exit VG046 
2010 Core MG046 
2010 Exit WG046
*/

//difficulty with task b/c of health or memory problem?
gen byte iadl_diff_gr=.
replace iadl_diff_gr = 1 if (f2567==1)|(g2865==1)|(hg044==1)|(jg044==1)
replace iadl_diff_gr = 1 if	inlist(f2567,6,7) & f2569==1
replace iadl_diff_gr = 1 if inlist(g2865,6,7) & g2867==1
replace iadl_diff_gr = 1 if inlist(hg044,6,7) & hg045==1
replace iadl_diff_gr = 1 if inlist(jg044,6,7) & jg045==1	
replace iadl_diff_gr = 0 if (f2567==5)|(g2865==5)|(hg044==5)|(jg044==5)
replace iadl_diff_gr = 0 if	inlist(f2567,6,7) & f2569==5
replace iadl_diff_gr = 0 if inlist(g2865,6,7) & g2867==5
replace iadl_diff_gr = 0 if inlist(hg044,6,7) & hg045==5
replace iadl_diff_gr = 0 if inlist(jg044,6,7) & jg045==5	
la var iadl_diff_gr "Difficulty grocery shopping? 1=yes"
tab iadl_diff_gr core_year, missing

gen byte iadl_gr_core=.
//set for those that report no difficulty with task or can't/don't do but not b/c of health prob
replace iadl_gr_core = 0 if iadl_diff_gr==0
//set yes for if live in nursing home
replace iadl_gr_core = 1 if nhres ==1
// set for response help = no
replace iadl_gr_core = 0 if ((f2570==5)|(g2868==5)|(hg046==5)|(jg046==5))
//set for response help = yes
replace iadl_gr_core = 1 if ((f2570==1)|(g2868==1)|(hg046==1)|(jg046==1))
label var iadl_gr_core "Help with Grocery Shopping"
// la def iadl_gr_core 0 "No" 1 "Yes", modify
// la val iadl_gr_core iadl_gr_core 
tab iadl_gr_core core_year,missing


/*Phone Calls, r2022
Cross-Wave Equivalents for:
G049 IADL MAKING PHONE CALLS HELP  
1998 Core F2575 
2000 Core G2873 
2002 Core HG049 
2002 Exit SG049 
2004 Core JG049 
2004 Exit TG049 
2006 Core KG049 
2006 Exit UG049 
2008 Core LG049 
2008 Exit VG049 
2010 Core MG049 
2010 Exit WG049 
This one is different from other iadls because ask regardless of 
nursing home resident status
*/

//difficulty with task b/c of health or memory problem?
gen byte iadl_diff_ph=.
replace iadl_diff_ph = 1 if (f2572==1)|(g2870==1)|(hg047==1)|(jg047==1)
replace iadl_diff_ph = 1 if	inlist(f2572,6,7) & f2574==1
replace iadl_diff_ph = 1 if inlist(g2870,6,7) & g2872==1
replace iadl_diff_ph = 1 if inlist(hg047,6,7) & hg048==1
replace iadl_diff_ph = 1 if inlist(jg047,6,7) & jg048==1	
replace iadl_diff_ph = 0 if (f2572==5)|(g2870==5)|(hg047==5)|(jg047==5)
replace iadl_diff_ph = 0 if	inlist(f2572,6,7) & f2574==5
replace iadl_diff_ph = 0 if inlist(g2870,6,7) & g2872==5
replace iadl_diff_ph = 0 if inlist(hg047,6,7) & hg048==5
replace iadl_diff_ph = 0 if inlist(jg047,6,7) & jg048==5	
la var iadl_diff_ph "Difficulty phone calls? 1=yes"
tab iadl_diff_ph core_year, missing

gen byte iadl_ph_core=.
//set for those that report no difficulty with task
replace iadl_ph_core = 0 if iadl_diff_ph==0
// set for response help = no
replace iadl_ph_core = 0 if ((f2575==5)|(g2873==5)|(hg049==5)|(jg049==5))
//set for response help = yes
replace iadl_ph_core = 1 if ((f2575==1)|(g2873==1)|(hg049==1)|(jg049==1))
label var iadl_ph_core "Help Making Phone Calls"
// la def iadl_ph_core 0 "No" 1 "Yes", modify
// la val iadl_ph_core iadl_ph_core 
tab iadl_ph_core core_year,missing


/*Medications, r2032
Cross-Wave Equivalents for:
G053 IADL TAKING MEDICATIONS HELP 
1995 Core D2039 
1996 Core E2054 
1998 Core F2580 
2000 Core G2878 
2002 Core HG053 
2002 Exit SG053 
2004 Core JG053 
2004 Exit TG053 
2006 Core KG053 
2006 Exit UG053 
2008 Core LG053 
2008 Exit VG053 

Different than other iadls because question sequence has additional question
1. Difficulty taking meds? g050 / g2875
2. If dont take(7), if had to take, anticipate difficulty? g051 / g2876
3. Difficulty b/c of health problem (if g050 = 6 OR [g050=7 and g051=1] )
4. Help with medications? 
5. Not asked if nursing home (like others)
*/

//difficulty with task b/c of health or memory problem?
gen byte iadl_diff_rx=.
//yes, difficulty
replace iadl_diff_rx = 1 if (f2577==1)|(g2875==1)|(hg050==1)|(jg050==1)
//can't do, b/c of health problems
replace iadl_diff_rx = 1 if	f2577==6 & f2579==1
replace iadl_diff_rx = 1 if g2875==6 & g2877==1
replace iadl_diff_rx = 1 if hg050==6 & hg052==1
replace iadl_diff_rx = 1 if jg050==6 & jg052==1
//don't do, if had to take, yes would have difficulty b/c of health prob.
replace iadl_diff_rx = 1 if f2577==7 & f2578==1 & f2579==1 
replace iadl_diff_rx = 1 if g2875==7 & g2876==1 & g2877==1
replace iadl_diff_rx = 1 if hg050==7 & hg051==1 & hg052==1
replace iadl_diff_rx = 1 if jg050==7 & jg051==1 & jg052==1

//no, no difficulty	
replace iadl_diff_rx = 0 if (f2577==5)|(g2875==5)|(hg050==5)|(jg050==5)
//can't do, not b/c of health problems
replace iadl_diff_rx = 0 if	f2577==6 & f2579==5
replace iadl_diff_rx = 0 if g2875==6 & g2877==5
replace iadl_diff_rx = 0 if hg050==6 & hg052==5
replace iadl_diff_rx = 0 if jg050==6 & jg052==5	
//don't do, if had to take, no difficulty anticipated
replace iadl_diff_rx = 0 if f2577==7 & f2578==5 
replace iadl_diff_rx = 0 if g2875==7 & g2876==5
replace iadl_diff_rx = 0 if hg050==7 & hg051==5
replace iadl_diff_rx = 0 if jg050==7 & jg051==5
la var iadl_diff_rx "Difficulty taking medications? 1=yes"
tab iadl_diff_rx core_year, missing

gen byte iadl_rx_core=.
//set for those that report no difficulty with task or can't / don't do
replace iadl_rx_core = 0 if iadl_diff_rx==0
//set yes for if live in nursing home
replace iadl_rx_core = 1 if nhres ==1
// set for response help = no
replace iadl_rx_core = 0 if ((f2580==5)|(g2878==5)|(hg053==5)|(jg053==5))
//set for response help = yes
replace iadl_rx_core = 1 if ((f2580==1)|(g2878==1)|(hg053==1)|(jg053==1))
label var iadl_rx_core "Help with Medications"
// la def iadl_rx_core 0 "No" 1 "Yes", modify
// la val iadl_rx_core iadl_rx_core 
tab iadl_rx_core core_year,missing


/*Money, r2077
Cross-Wave Equivalents for:
G061 IADL MANAGING MONEY HELP 
1995 Core D2102 
1996 Core E2096 
1998 Core F2620 
2000 Core G2918 
2002 Core HG061 
2002 Exit SG061 
2004 Core JG061 
2004 Exit TG061 
2006 Core KG061 
2006 Exit UG061 
2008 Core LG061 
2008 Exit VG061 
2010 Core MG061 
2010 Exit WG061 
Asked for those in nursing home*/

//difficulty with task b/c of health or memory problem?
gen byte iadl_diff_m = .
replace iadl_diff_m = 1 if (f2618==1)|(g2916==1)|(hg059==1)|(jg059==1)
replace iadl_diff_m = 1 if	inlist(f2618,6,7) & f2619==1
replace iadl_diff_m = 1 if inlist(g2916,6,7) & g2917==1
replace iadl_diff_m = 1 if inlist(hg059,6,7) & hg060==1
replace iadl_diff_m = 1 if inlist(jg059,6,7) & jg060==1	
replace iadl_diff_m = 0 if (f2618==5)|(g2916==5)|(hg059==5)|(jg059==5)
replace iadl_diff_m = 0 if	inlist(f2618,6,7) & f2619==5
replace iadl_diff_m = 0 if inlist(g2916,6,7) & g2917==5
replace iadl_diff_m = 0 if inlist(hg059,6,7) & hg060==5
replace iadl_diff_m = 0 if inlist(jg059,6,7) & jg060==5	
la var iadl_diff_m "Difficulty managing money? 1=yes"
tab iadl_diff_m core_year, missing

gen byte iadl_m_core=.
//set for those that report no difficulty with task
replace iadl_m_core = 0 if iadl_diff_m==0
// set for response help = no
replace iadl_m_core = 0 if ((f2620==5)|(g2918==5)|(hg061==5)|(jg061==5))
//set for response help = yes
replace iadl_m_core = 1 if ((f2620==1)|(g2918==1)|(hg061==1)|(jg061==1))
label var iadl_m_core "Help with Money"
// la def iadl_m_core 0 "No" 1 "Yes", modify
// la val iadl_m_core iadl_m_core 
tab iadl_m_core core_year,missing

*************************************************************************
//   Functional limitations from core interviews
*************************************************************************
/*Responses of difficulty = yes or can't do coded as 1
difficulty = no = 0; don't do left missing since no follow up question is asked
to verify why don't do*/

/*Difficulty walking several blocks?
1998 Core 	F2391
2000 Core 	G2689
2002 Core 	HG001
2004 Core 	JG001
2006 Core 	KG001
2008 Core 	LG001
2010 Core 	MG001*/
gen byte fl_diff_wk_many = .
replace fl_diff_wk_many = 1 if f2391==1 | g2689==1 | hg001==1 | jg001==1 | ///
	f2391==6 | g2689==6 | hg001==6 | jg001==6
replace fl_diff_wk_many = 0 if f2391==5 | g2689==5 | hg001==5 | jg001==5
la var fl_diff_wk_many "Difficulty walking several blocks? 1=yes"
tab fl_diff_wk_many core_year, missing

/*Difficulty walking 1 block?
Only asked if do not report no difficulty walking many blocks
1998 Core 	F2394
2000 Core 	G2692
2002 Core 	HG003
2004 Core 	JG003
2006 Core 	KG003
2008 Core 	LG003
2010 Core 	MG003*/
gen byte fl_diff_wk_one = .
replace fl_diff_wk_one = 1 if f2394==1 | g2692==1 | hg003==1 | jg003==1 | ///
	f2394==6 | g2692==6 | hg003==6 | jg003==6
replace fl_diff_wk_one = 0 if f2394==5 | g2692==5 | hg003==5 | jg003==5
replace fl_diff_wk_one = 0 if fl_diff_wk_many==0
la var fl_diff_wk_one "Difficulty walking one block? 1=yes"
tab fl_diff_wk_one core_year, missing 

/*Difficulty sitting for 2 hours?
1998 Core 	F2397
2000 Core	G2695
2002 Core 	HG004
2004 Core 	JG004
2006 Core 	KG004
2008 Core 	LG004
2010 Core 	MG004*/
gen byte fl_diff_sit = .
replace fl_diff_sit = 1 if f2397==1 | g2695==1 | hg004==1 | jg004==1 | ///
	f2397==6 | g2695==6 | hg004==6 | jg004==6
replace fl_diff_sit = 0 if f2397==5 | g2695==5 | hg004==5 | jg004==5
la var fl_diff_sit "Difficulty sitting 2 hours? 1=yes"
tab fl_diff_sit core_year, missing

/*Difficulty getting up from a chair after sitting?
1998 Core 	F2400
2000 Core 	G2698
2002 Core 	HG005
2004 Core 	JG005
2006 Core 	KG005
2008 Core 	LG005
2010 Core 	MG005*/
gen byte fl_diff_gu = .
replace fl_diff_gu = 1 if f2400==1 | g2698==1 | hg005==1 | jg005==1 | ///
	f2400==6 | g2698==6 | hg005==6 | jg005==6
replace fl_diff_gu = 0 if f2400==5 | g2698==5 | hg005==5 | jg005==5
la var fl_diff_gu "Difficulty standing up after sitting? 1=yes"
tab fl_diff_gu core_year, missing

/*Difficutly climbing up many flights of stairs?
1998 Core 	F2403
2000 Core 	G2701
2002 Core 	HG006
2004 Core 	JG006
2006 Core 	KG006
2008 Core 	LG006
2010 Core 	MG006*/
gen byte fl_diff_sta_many = .
replace fl_diff_sta_many = 1 if f2403==1 | g2701==1 | hg006==1 | jg006==1 | ///
	f2403==6 | g2701==6 | hg006==6 | jg006==6
replace fl_diff_sta_many = 0 if f2403==5 | g2701==5 | hg006==5 | jg006==5
la var fl_diff_sta_many "Difficulty climbing stairs - many flights? 1=yes"
tab fl_diff_sta_many core_year, missing

/*Difficulty climbing one flight of stairs?
Only asked if response to many stairs is not no
1998 Core 	F2406
2000 Core 	G2704
2002 Core 	HG007
2004 Core 	JG007
2006 Core 	KG007
2008 Core 	LG007
2010 Core 	MG007*/
gen byte fl_diff_sta_one = .
replace fl_diff_sta_one = 1 if f2406==1 | g2704==1 | hg007==1 | jg007==1 | ///
	f2406==6 | g2704==6 | hg007==6 | jg007==6
replace fl_diff_sta_one = 0 if f2406==5 | g2704==5 | hg007==5 | jg007==5
replace fl_diff_sta_one = 0 if fl_diff_sta_many==0
la var fl_diff_sta_one "Difficulty climbing stairs - one flights? 1=yes"
tab fl_diff_sta_one core_year, missing

/*Difficulty stooping, kneeling or crouching?
1998 Core 	F2409
2000 Core 	G2707
2002 Core 	HG008
2004 Core 	JG008
2006 Core 	KG008
2008 Core 	LG008
2010 Core 	MG008*/
gen byte fl_diff_stp = .
replace fl_diff_stp = 1 if f2409==1 | g2707==1 | hg008==1 | jg008==1 | ///
	f2409==6 | g2707==6 | hg008==6 | jg008==6
replace fl_diff_stp = 0 if f2409==5 | g2707==5 | hg008==5 | jg008==5
la var fl_diff_stp "Difficulty stooping? 1=yes"
tab fl_diff_stp core_year, missing

/*Difficulty reaching or extending arms above shoulder level?
1998 Core 	F2412
2000 Core 	G2710
2002 Core 	HG009
2004 Core 	JG009
2006 Core 	KG009
2008 Core 	LG009
2010 Core 	MG009*/
gen byte fl_diff_reach = .
replace fl_diff_reach = 1 if f2412==1 | g2710==1 | hg009==1 | jg009==1 | ///
	f2412==6 | g2710==6 | hg009==6 | jg009==6
replace fl_diff_reach = 0 if f2412==5 | g2710==5 | hg009==5 | jg009==5
la var fl_diff_reach "Difficulty reaching with arms? 1=yes"
tab fl_diff_reach core_year, missing

/*Difficulty pulling or pushing large objects?
1998 Core 	F2415
2000 Core 	G2713
2002 Core 	HG010
2004 Core 	JG010
2006 Core 	KG010
2008 Core 	LG010
2010 Core 	MG010*/
gen byte fl_diff_push = .
replace fl_diff_push = 1 if f2415==1 | g2713==1 | hg010==1 | jg010==1 | ///
	f2415==6 | g2713==6 | hg010==6 | jg010==6
replace fl_diff_push = 0 if f2415==5 | g2713==5 | hg010==5 | jg010==5
la var fl_diff_push "Difficulty pushing/pulling large objects? 1=yes"
tab fl_diff_push core_year, missing

/*Difficulty lifting weights over 10lbs?
1998 Core 	F2418
2000 Core 	G2716
2002 Core 	HG011
2004 Core 	JG011
2006 Core 	KG011
2008 Core 	LG011
2010 Core 	MG011*/
gen byte fl_diff_lift = .
replace fl_diff_lift = 1 if f2418==1 | g2716==1 | hg011==1 | jg011==1 | ///
	f2418==6 | g2716==6 | hg011==6 | jg011==6
replace fl_diff_lift = 0 if f2418==5 | g2716==5 | hg011==5 | jg011==5
la var fl_diff_lift "Difficulty lifting weights over 10lb? 1=yes"
tab fl_diff_lift core_year, missing

/*Difficulty picking up a dime?
1998 Core 	F2421
2000 Core 	G2719
2002 Core 	HG012
2004 Core 	JG012
2006 Core 	KG012
2008 Core 	LG012
2010 Core 	MG012
assign can't do = yes, don't do = .*/
gen fl_diff_dime = .
replace fl_diff_dime = 1 if inlist(f2421,1,6) | inlist(g2719,1,6) | ///
	inlist(hg012,1,6) | inlist(jg012,1,6)
replace fl_diff_dime = 0 if f2421==5 | g2719==5 | hg012==5 | jg012==5
la var fl_diff_dime "Any difficulty picking up a dime? 1=yes"
tab fl_diff_dime core_year, missing

**************************************************************
// ADL Helpers
**************************************************************
/*ADL Helper relationship to R
Who helps - with response being the person number of the helper
1998 Core 	F2502
2000 Core 	G2800
Format of question changed in 2002 so all information can be
obtained from the single question g033_1

What is that person's relationship to you?
1998 Core 	F2508
2000 Core 	G2806
2002 Core 	HG033_1
2004 Core 	JG033_1
2006 Core 	KG033_1
2008 Core 	LG033_1
2010 Core 	MG033_1

Core and exit:
ADL helpers:
G033_1 thru _7

Helper 2
Anyone help? Y/N
Core 1998   F2510
Core 2000   G2808
PN?
Core 1998   F2516
Core 2000   G2814
Relationship?
Core 1998   F2517
Core 2000   G2815

Helper 3
Anyone help? Y/N
Core 1998   F2524
Core 2000   G2822
PN?
Core 1998   F2525
Core 2000   G2823
Relationship?
Core 1998   F2526
Core 2000   G2824

Helper 4
Anyone help? Y/N
Core 1998   F2528
Core 2000   G2826
PN?
Core 1998   F2529
Core 2000   G2827
Relationship?
Core 1998   F2530
Core 2000   G2828

Helper 5
Anyone help? Y/N
Core 1998   F2532
Core 2000   G2830
PN?
Core 1998   F2533
Core 2000   G2831
Relationship?
Core 1998   F2534
Core 2000   G2832

Helper 6
Anyone help? Y/N
Core 1998   F2536
Core 2000   G2834
PN?
Core 1998   F2537
Core 2000   G2835
Relationship?
Core 1998   F2538
Core 2000   G2836

Helper 7
Anyone help? Y/N
Core 1998   F2540
Core 2000   G2838
PN?
Core 1998   F2541
Core 2000   G2839
Relationship?
Core 1998   F2542
Core 2000   G2840 */

//need to convert 1st level questions to numeric variables for 1998,2000
destring f2502 g2800, gen(f2502_n g2800_n) 
tab f2502_n if core_year==1998, missing
tab g2800_n if core_year==2000, missing

gen byte adl_sp_helper = 0
replace adl_sp_helper = 1 if (core_year==1998 & f2502_n==36)
replace adl_sp_helper = 1 if (core_year==2000 & g2800_n==36)
replace adl_sp_helper = 1 if (core_year==2002 & hg033_1==2)
replace adl_sp_helper = 1 if (core_year==2004 & jg033_1==2)
la var adl_sp_helper "ADL Spouse Main Helper, 1=yes"
tab adl_sp_helper core_year, missing

//note for 1998, 2000 question is different.
gen byte adl_oth_helper = 0
replace adl_oth_helper = 1 if (core_year==1998 & ( 21<=f2502_n<=35 & inlist(f2508,2,4,5,6) ) ///
	 | (41<= f2502_n & f2502_n<=995 & f2502_n!=100)  )
replace adl_oth_helper = 1 if (core_year==2000 & ( 21<=g2800_n<=35 & inlist(g2806,2,4,5,6) ) ///
	 | (41<= g2800_n & g2800_n<=995 & g2800_n!=100)  )
replace adl_oth_helper = 1 if core_year==2002 & (2< hg033_1 & hg033_1<21 | hg033_1==28)
replace adl_oth_helper = 1 if core_year==2004 & ( (2< jg033_1 & jg033_1<21) | inlist(jg033_1,38,33,90,91) )
la var adl_oth_helper "ADL Other Main Helper, 1=yes"
tab adl_oth_helper core_year, missing

//max number of helpers = 7
//create common helper variables across all years
gen adl_helper_1 = f2502 if (core_year==1998)
replace adl_helper_1 = g2800 if (core_year==2000)
replace adl_helper_1 = hg032_1 if (core_year==2002)
replace adl_helper_1 = jg032_1 if (core_year==2004)
la var adl_helper_1 "ADL Helper 1 PN"

gen adl_helper_2 = f2516 if (core_year==1998)
replace adl_helper_2 = g2814 if (core_year==2000)
replace adl_helper_2 = hg032_2 if (core_year==2002)
replace adl_helper_2 = jg032_2 if (core_year==2004)
la var adl_helper_2 "ADL Helper 2 PN"

gen adl_helper_3 = f2525 if (core_year==1998)
replace adl_helper_3 = g2823 if (core_year==2000)
replace adl_helper_3 = hg032_3 if (core_year==2002)
replace adl_helper_3 = jg032_3 if (core_year==2004)
la var adl_helper_3 "ADL Helper 3 PN"

gen adl_helper_4 = f2529 if (core_year==1998)
replace adl_helper_4 = g2827 if (core_year==2000)
replace adl_helper_4 = hg032_4 if (core_year==2002)
replace adl_helper_4 = jg032_4 if (core_year==2004)
la var adl_helper_4 "ADL Helper 4 PN"

gen adl_helper_5 = f2533 if (core_year==1998)
replace adl_helper_5 = g2831 if (core_year==2000)
replace adl_helper_5 = hg032_5 if (core_year==2002)
replace adl_helper_5 = jg032_5 if (core_year==2004)
la var adl_helper_5 "ADL Helper 5 PN"

gen adl_helper_6 = f2537 if (core_year==1998)
replace adl_helper_6 = g2835 if (core_year==2000)
replace adl_helper_6 = hg032_6 if (core_year==2002)
replace adl_helper_6 = jg032_6 if (core_year==2004)
la var adl_helper_6 "ADL Helper 6 PN"

gen adl_helper_7 = f2541 if (core_year==1998)
replace adl_helper_7 = g2839 if (core_year==2000)
replace adl_helper_7 = hg032_7 if (core_year==2002)
replace adl_helper_7 = jg032_7 if (core_year==2004)
la var adl_helper_7 "ADL Helper 7 PN"



**************************************************************
// IADL Helpers
**************************************************************
/*Who helps, part 1
1998 Core 	F2582
2000 Core 	G2880
IADL helper
1998 Core 	F2583
2000 Core 	G2881
2002 Core 	HG055_1
2004 Core 	JG055_1
2006 Core 	KG055_1
2008 Core 	LG055_1
2010 Core 	MG055_1

For 2002 and later, variables are G055_2 thru G055_6
1998 and 2000 are listed out here.

Helper 2 - Does anyone else help you with these activities? 1=Yes, 5=No
1998 Core       F2585
2000 Core 	G2883
Person number?
1998 Core       F2591
2000 Core 	G2889
Relationship?
1998 Core       F2592
2000 Core 	G2890

Helper 3
1998 Core       F2594
2000 Core 	G2892
PN?
1998 Core       F2596
2000 Core 	G2894
Relationship?
1998 Core       F2597
2000 Core 	G2895

Helper 4
Anyone help?
1998 Core       F2600
2000 Core 	G2898
PN?
1998 Core       F2602
2000 Core       G2900
Relationship?
1998 Core       F2603
2000 Core       G2901

Helper 5
Anyone help?
1998 Core       F2606
2000 Core       G2904
PN?
1998 Core       F2608
2000 Core       G2906
Relationship?
1998 Core       F2609
2000 Core       G2907

Helper 6
Anyone help?
1998 Core       F2613
2000 Core       G2911
PN?
1998 Core       F2614
2000 Core       G2912
Relationship?
1998 Core       F2615
2000 Core       G2913       */

//need to convert 1st level questions to numeric variables for 1998,2000
destring f2582 g2880, gen(f2582_n g2880_n) 
tab f2582_n if core_year==1998, missing
tab g2880_n if core_year==2000, missing

gen byte iadl_sp_helper = 0
replace iadl_sp_helper = 1 if (core_year==1998 & f2582_n==36)
replace iadl_sp_helper = 1 if (core_year==2000 & g2880_n==36)
replace iadl_sp_helper = 1 if (core_year==2002 & hg055_1==2)
replace iadl_sp_helper = 1 if (core_year==2004 & jg055_1==2)
la var iadl_sp_helper "IADL Spouse Helper, 1=yes"
tab iadl_sp_helper core_year, missing

gen byte iadl_oth_helper = 0
replace iadl_oth_helper = 1 if (core_year==1998 & ( 21<=f2582_n<=35 & inlist(f2583,2,4,5,6) ) ///
	 | (41<=f2582_n & f2582_n<=995 & f2582_n!=100)  )
replace iadl_oth_helper = 1 if (core_year==2000 & ( 21<=g2880_n<=35 & inlist(g2881,1,2,4,5,6) ) ///
	 | (41<= g2880_n & g2880_n<=995 & g2880_n!=100)  )
replace iadl_oth_helper = 1 if (core_year==2002 & 2< hg055_1 & hg055_1<21)
replace iadl_oth_helper = 1 if (core_year==2004 & 2< jg055_1 & jg055_1<21)
la var iadl_oth_helper "IADL Other Helper, 1=yes"
tab iadl_oth_helper core_year, missing

//max number of helpers = 6
//create common helper variables across all years
gen iadl_helper_1 = f2582 if (core_year==1998)
replace iadl_helper_1 = g2880 if (core_year==2000)
replace iadl_helper_1 = hg054_1 if (core_year==2002)
replace iadl_helper_1 = jg054_1 if (core_year==2004)
la var iadl_helper_1 "IADL Helper 1 PN"

gen iadl_helper_2 = f2591 if (core_year==1998)
replace iadl_helper_2 = g2889 if (core_year==2000)
replace iadl_helper_2 = hg054_2 if (core_year==2002)
replace iadl_helper_2 = jg054_2 if (core_year==2004)
la var iadl_helper_2 "IADL Helper 2 PN"

gen iadl_helper_3 = f2596 if (core_year==1998)
replace iadl_helper_3 = g2894 if (core_year==2000)
replace iadl_helper_3 = hg032_3 if (core_year==2002)
replace iadl_helper_3 = jg032_3 if (core_year==2004)
la var iadl_helper_3 "IADL Helper 3 PN"

gen iadl_helper_4 = f2602 if (core_year==1998)
replace iadl_helper_4 = g2900 if (core_year==2000)
replace iadl_helper_4 = hg054_4 if (core_year==2002)
replace iadl_helper_4 = jg054_4 if (core_year==2004)
la var iadl_helper_4 "IADL Helper 4 PN"

gen iadl_helper_5 = f2608 if (core_year==1998)
replace iadl_helper_5 = g2906 if (core_year==2000)
replace iadl_helper_5 = hg054_5 if (core_year==2002)
replace iadl_helper_5 = jg054_5 if (core_year==2004)
la var iadl_helper_5 "IADL Helper 5 PN"

gen iadl_helper_6 = f2614 if (core_year==1998)
replace iadl_helper_6 = g2912 if (core_year==2000)
replace iadl_helper_6 = hg054_6 if (core_year==2002)
replace iadl_helper_6 = jg054_6 if (core_year==2004)
la var iadl_helper_6 "IADL Helper 6 PN"



// Home health worker
/*
Not asked for those reporting currently in nuring home, kept missing for now
(Since [PREV WAVE IW MONTH], [PREV WAVE IW YEAR]/Since [PREV WAVE IW YEAR]/In
        the last two years), has any medically-trained person come to your home to
        help you, yourself?
1998 Core 	F2357
2000 Core 	G2634
2002 Core 	HN189
2002 Exit 	SN189
2004 Core 	JN189
2004 Exit 	TN189
2006 Core 	KN189
2006 Exit 	UN189
2008 Core 	LN189
2008 Exit 	VN189
2010 Core 	MN189
2010 Exit 	WN189
*/
gen hh_worker = .
replace hh_worker=1 if f2357==1 | g2634==1 | hn189==1 | jn189==1
replace hh_worker=0 if f2357==5 | g2634==5 | hn189==5 | jn189==5
la var hh_worker "Home health worker help? 1=yes"
tab hh_worker core_year, missing

save core_98_04_clean2.dta, replace

log close


H="Core 98-04 - variable cleaning - part 3 - comorbidities"
/*variable cleaning for HRS core 2000-2010
Most code is taken from the HRS Outline_11_22_11.txt file
and modified to clean 1998-2004 core dataset

3rd part of core variable cleaning - comorbidities from core interviews
*/

capture log close

clear all
set mem 1g
set matsize 800
set more off


//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\2_HRS_Core_00_04_clean3-LOG.txt", text replace

cd `datapath'

use core_98_04_clean2.dta


/************************************************************/
/* Comorbidities from core interviews  */
/************************************************************/
/*for cases where a response indicates previous wave answer
is disputed, in 1998, response does not indicate an answer
to the question, just that r' disputes that he had the condition
in the previous interview, so for 1998, code cases where response
=3 disputes previous wave record as missing
This is different from all other years*/

/*Cancer
2000 Core 	G1262
2002 Core 	HC018
2002 Exit 	SC018
2004 Core 	JC018
2004 Exit 	TC018
2006 Core 	KC018
2006 Exit 	UC018
2008 Core 	LC018
2008 Exit 	VC018
2010 Core 	MC018
2010 Exit 	WC018 */
generate byte cancer_hrs = .
replace cancer_hrs = 1 if (core_year==1998 & f1129==1)
replace cancer_hrs = 1 if (core_year==2000 & inlist(g1262,1,3))
replace cancer_hrs = 1 if (core_year==2002 & inlist(hc018,1,3))
replace cancer_hrs = 1 if (core_year==2004 & inlist(jc018,1,3))
replace cancer_hrs = 0 if (core_year==1998 & f1129==5)
replace cancer_hrs = 0 if (core_year==2000 & inlist(g1262,4,5))
replace cancer_hrs = 0 if (core_year==2002 & inlist(hc018,4,5))
replace cancer_hrs = 0 if (core_year==2004 & inlist(jc018,4,5))
label variable cancer_hrs "Cancer - core"
//label define cancer_hrs 0 "No" 1 "Yes", modify
//label values cancer_hrs cancer_hrs
tab cancer_hrs core_year, missing 

/*Cancer treatment - HRS core
These questions are only asked for new r's and alternate waves (2002,2006,2010)
2 levels of questions, only asked if cancer_hrs=yes:
1. Since last interview, received any treatment for cancer?
2000 Core 	G1264
2002 Core 	HC020
2002 Exit 	SC020
2004 Core 	JC020
2004 Exit 	TC020
2006 Core 	KC020
2006 Exit 	UC020
2008 Core 	LC020
2008 Exit 	VC020
2010 Core 	MC020
2010 Exit 	WC020
2. Type of treatment,
1998 Core	F1132M1-M4 (note only 4 for 1998)
2000 Core	G1265M1-M4 (note only 4 for 2000)
2002 Core 	HC021M1-M5 (5 in 2002) 
2002 Exit 	SC021M1-M6
2004 Core 	JC021M1-M4 (4 in 2004)
2004 Exit 	TC021M1-M6
2006 Core 	KC021M1-M6 (6 in 2006)
2006 Exit 	UC021M1-M6
2008 Core 	LC021M1-M4 (4 in 2008)
2008 Exit 	VC021M1-M6
2010 Core 	MC021M1-M6 (6 in 2010)
2010 Exit 	WC021M1-M6
 			 1.  CHEMOTHERAPY OR MEDICATION
                         2.  SURGERY OR BIOPSY
                         3.  RADIATION/ X-RAY
                         4.  MEDICATIONS/TREATMENT FOR SYMPTOMS (PAIN, NAUSEA, RASHES)
                         5.  NONE
                         7.  OTHER (SPECIFY)
                         8.  DK (Don't Know); NA (Not Ascertained)
                         9.  RF (Refused)
                     Blank.  INAP (Inapplicable); Partial Interview
*/
//cancer treatment in last 2 years indicator variable
gen byte cancer_treat_hrs=.
replace cancer_treat_hrs=1 if (f1131==1 | g1264==1 | hc020==1 | jc020==1 )
replace cancer_treat_hrs=0 if (f1131==5 | g1264==5 | hc020==5 | jc020==5 )
replace cancer_treat_hrs=0 if (cancer_hrs==0) //if no cancer, show no cancer treatment

//cancer treatment type variables, not not mutually exclusive
rename f1132m1 fc021m1
rename f1132m2 fc021m2
rename f1132m3 fc021m3
rename f1132m4 fc021m4
rename g1265m1 gc021m1
rename g1265m2 gc021m2
rename g1265m3 gc021m3
rename g1265m4 gc021m4

gen byte cancer_chemo_med=.
gen byte cancer_surg=.
gen byte cancer_xray=.
gen byte cancer_symp=.
gen byte cancer_other_treat=.
local waves f g h j 
foreach i of numlist 1/4 {
foreach w of local waves{
	replace cancer_chemo_med=1 if `w'c021m`i'==1
	replace cancer_surg=1 if `w'c021m`i'==2
	replace cancer_xray=1 if `w'c021m`i'==3
	replace cancer_symp=1 if `w'c021m`i'==4
	replace cancer_other_treat=1 if `w'c021m`i'==7
	}
}

//2002 has additional M5 variable so run through that one separately
	replace cancer_chemo_med=1 if hc021m5==1
	replace cancer_surg=1 if hc021m5==2
	replace cancer_xray=1 if hc021m5==3
	replace cancer_symp=1 if hc021m5==4
	replace cancer_other_treat=1 if hc021m5==7

local cancertreat cancer_chemo_med cancer_surg cancer_xray cancer_symp cancer_other_treat
foreach var of local cancertreat{
	replace `var'=0 if `var'==. & cancer_treat_hrs==1
	tab `var',missing
}
local cancertreat cancer_chemo_med cancer_surg cancer_xray cancer_symp cancer_other_treat
foreach var of local cancertreat{
	replace `var'=0 if `var'==. & cancer_treat_hrs==1
	tab `var',missing
}

tab cancer_chemo_med core_year, missing
tab cancer_surg core_year, missing
tab cancer_xray core_year, missing
tab cancer_symp core_year, missing
tab cancer_other_treat core_year, missing

/*Lung Disease, r1191
Cross-Wave Equivalents for:
C030 LUNG DISEASE 
1995 Core D818 
1996 Core E818 
1998 Core F1146 
2000 Core G1279 
2002 Core HC030 
2002 Exit SC030 
2004 Core JC030 
2004 Exit TC030 
2006 Core KC030 
2006 Exit UC030 
2008 Core LC030 
2008 Exit VC030 
2010 Core MC030 
2010 Exit WC030
*/
generate lung_hrs = .
replace lung_hrs = 1 if (core_year==1998 & f1146==1)
replace lung_hrs = 1 if (core_year==2000 & inlist(g1279,1,3))
replace lung_hrs = 1 if (core_year==2002 & inlist(hc030,1,3))
replace lung_hrs = 1 if (core_year==2004 & inlist(jc030,1,3))
replace lung_hrs = 0 if (core_year==1998 & f1146==5)
replace lung_hrs = 0 if (core_year==2000 & inlist(g1279,4,5))
replace lung_hrs = 0 if (core_year==2002 & inlist(hc030,4,5))
replace lung_hrs = 0 if (core_year==2004 & inlist(jc030,4,5))
label variable lung_hrs "Lung Disease - core"
//label define lung_hrs 0 "No" 1 "Yes" , modify
//label values lung_hrs lung_hrs
tab lung_hrs core_year, missing 

/*Oxygen for lung condition - c033
2000 Core 	G1285
2002 Core 	HC033
2002 Exit 	SC033
2004 Core 	JC033
2004 Exit 	TC033
2006 Core 	KC033
2006 Exit 	UC033
2008 Core 	LC033
2008 Exit 	VC033
2010 Core 	MC033
2010 Exit 	WC033
*/
gen byte lung_o2_hrs = .
replace lung_o2_hrs = 0 if lung_hrs==0
replace lung_o2_hrs = 0 if (core_year==1998 & f1152==5)
replace lung_o2_hrs = 0 if (core_year==2000 & g1285==5)
replace lung_o2_hrs = 0 if (core_year==2002 & hc033==5)
replace lung_o2_hrs = 0 if (core_year==2004 & jc033==5)

replace lung_o2_hrs = 1 if (core_year==1998 & f1152==1)
replace lung_o2_hrs = 1 if (core_year==2000 & g1285==1)
replace lung_o2_hrs = 1 if (core_year==2002 & hc033==1)
replace lung_o2_hrs = 1 if (core_year==2004 & jc033==1)
la var lung_o2_hrs "Oxygen for lung condition"
tab lung_o2_hrs core_year,missing

/*Lung condition limit activities?
2000 Core 	G1287
2002 Core 	HC035
2004 Core 	JC035
2006 Core 	KC035
2008 Core 	LC035
2010 Core 	MC035
*/
gen byte lung_lim_hrs = .
replace lung_lim_hrs = 0 if lung_hrs==0
replace lung_lim_hrs = 0 if (core_year==1998 & f1154==5)
replace lung_lim_hrs = 0 if (core_year==2000 & g1287==5)
replace lung_lim_hrs = 0 if (core_year==2002 & hc035==5)
replace lung_lim_hrs = 0 if (core_year==2004 & jc035==5)

replace lung_lim_hrs = 1 if (core_year==1998 & f1154==1)
replace lung_lim_hrs = 1 if (core_year==2000 & g1287==1)
replace lung_lim_hrs = 1 if (core_year==2002 & hc035==1)
replace lung_lim_hrs = 1 if (core_year==2004 & jc035==1)
la var lung_lim_hrs "Activity limited due to lung condition"
tab lung_lim_hrs core_year,missing


/*Heart Condition: "heart attack, coronary heart disease, angina, congestive heart failure, or other heart problems?", r1201
Cross-Wave Equivalents for:
C036 HEART CONDITION 
1995 Core D828 
1996 Core E828 
1998 Core F1156 
2000 Core G1289 
2002 Core HC036 
2002 Exit SC036 
2004 Core JC036 
2004 Exit TC036 
2006 Core KC036 
2006 Exit UC036 
2008 Core LC036 
2008 Exit VC036 */
generate heart_hrs = .
replace heart_hrs = 1 if (core_year==1998 & f1156==1)
replace heart_hrs = 1 if (core_year==2000 & inlist(g1289,1,3))
replace heart_hrs = 1 if (core_year==2002 & inlist(hc036,1,3))
replace heart_hrs = 1 if (core_year==2004 & inlist(jc036,1,3))
replace heart_hrs = 0 if (core_year==1998 & f1156==5)
replace heart_hrs = 0 if (core_year==2000 & inlist(g1289,4,5))
replace heart_hrs = 0 if (core_year==2002 & inlist(hc036,4,5))
replace heart_hrs = 0 if (core_year==2004 & inlist(jc036,4,5))
label variable heart_hrs "Heart Condition - core"
//label define heart_hrs 0 "No" 1 "Yes" 9 "Don't Know/Refused", modify
//label values heart_hrs heart_hrs
tab heart_hrs core_year, missing 



/**CHF: 
Criteria for asking this question:
1. heart_hrs = yes (1)
2. c037 <> no OR c038 <> no

2000 criteria:
Blank. INAP (Inapplicable); [Q1289:B7] IS (NE 1 AND NE 3); [Q1290:B7a]
                            IS (5) AND [Q1291:B7b] IS (5)
        i.e. heart_hrs==0 or g1290=5 and g1291==5

2002 criteria:
 Ask:    IF (C036_ IN [YES, DISPUTPWRECORDHASCONDITION])
         AND (((C037_HeartMeds <> NO) OR (C038_ <> NO)) OR ((piRVarsZ105_Heart_V <>
        YES) AND (piRVarsZ076_ReIwR_V = REIWR)))

2004 criteria:
Ask:     IF (C036_ IN [YES, DISPUTPWRECORDHASCONDITION])
         AND (((C037_HeartMeds <> NO) OR (C038_ <> NO)) OR ((piRVarsZ105_Heart_V <>
        YES) AND (piRVarsZ076_ReIwR_V = REIWR)))

Ask if criteria change in 2010 so coded differently here to match, otherwise, if just match
on heart_hrs, get many more missing responses in 2010
If this variable is used in the analysis, may want to review this code with Amy since
2010 results in much lower rates of chf being reported than other years.
Cross-Wave Equivalents for:
C048 CONGESTIVE HEART FAILURE 
1995 Core D843 
1996 Core E843 
1998 Core F1171 
2000 Core G1304 
2002 Core HC048 
2002 Exit SC048 
2004 Core JC048 
2004 Exit TC048 
2006 Core KC048 
2006 Exit UC048 
2008 Core LC048 
2008 Exit VC048
2010 Core MC048
 
addl 2010 variables
mc263 - has a doctor ever told you you've had chf? if reply no = don't ask mc048 

*/
generate chf_hrs = .
//code for c036 response, no heart problems
replace chf_hrs = 0 if (heart_hrs==0)
//code for heart_hrs==1 but c037 and c038 == no
replace chf_hrs = 0 if core_year==1998 & f1157==5 & f1158==5
replace chf_hrs = 0 if core_year==2000 & g1290==5 & g1291==5
replace chf_hrs = 0 if core_year==2002 & heart_hrs==1 & ///
	(hc037==5 & hc038==5) | (hz105!=1 & hz076==1)
replace chf_hrs = 0 if core_year==2004 & heart_hrs==1 & ///
	(jc037==5 & jc038==5) | (jz105!=1 & jz076==1)

//code for c048 responses
replace chf_hrs = 0 if (core_year==1998 & f1171==5)
replace chf_hrs = 0 if (core_year==2000 & g1304==5)
replace chf_hrs = 0 if (core_year==2002 & hc048==5)
replace chf_hrs = 0 if (core_year==2004 & jc048==5)

replace chf_hrs = 1 if (core_year==1998 & f1171==1)
replace chf_hrs = 1 if (core_year==2000 & g1304==1)
replace chf_hrs = 1 if (core_year==2002 & hc048==1)
replace chf_hrs = 1 if (core_year==2004 & jc048==1)

label variable chf_hrs "CHF"
//label define chf_hrs 0 "No" 1 "Yes" , modify
//label values chf_hrs chf_hrs
tab chf_hrs core_year, missing

/*Hospitalized for CHF?
2000 Core 	G1305
2002 Core 	HC049
2002 Exit 	N/A
2004 Core 	JC049
2004 Exit 	N/A
2006 Core 	KC049
2006 Exit 	N/A
2008 Core 	LC049
2008 Exit 	N/A
2010 Core 	MC049

Ask if chf reported, ie if chf_hrs ==1
*/
gen byte chfadmit_ask = 0
replace chfadmit_ask = 1 if (core_year==1998 & chf_hrs==1)
replace chfadmit_ask = 1 if (core_year==2000 & chf_hrs==1) 
replace chfadmit_ask = 1 if (core_year==2002 & chf_hrs==1)
replace chfadmit_ask = 1 if (core_year==2004 & chf_hrs==1)

gen byte chfadmit_hrs = .
replace chfadmit_hrs = 0 if chfadmit_ask == 0
replace chfadmit_hrs = 0 if (core_year==1998 & f1172 ==5)
replace chfadmit_hrs = 0 if (core_year==2000 & g1305 ==5)
replace chfadmit_hrs = 0 if (core_year==2002 & hc049 ==5)
replace chfadmit_hrs = 0 if (core_year==2004 & jc049 ==5)

replace chfadmit_hrs = 1 if (core_year==1998 & f1172 ==1)
replace chfadmit_hrs = 1 if (core_year==2000 & g1305 ==1)
replace chfadmit_hrs = 1 if (core_year==2002 & hc049 ==1)
replace chfadmit_hrs = 1 if (core_year==2004 & jc049 ==1)

la var chfadmit_hrs "Hospital admission due to CHF"
tab chfadmit_hrs core_year,missing

drop chfadmit_ask

/**Stroke, missing r1221

generate stroke_hrs = .
 then stroke_hrs = 1 ; if ((sc053=1)|(tc053=1)|(uc053=1)|(sc053=3)|(tc053=3)|(uc053=3))
 then stroke_hrs = 0 ; if ((sc053=5)|(tc053=5)|(uc053=5)|(sc053=4)|(tc053=4)|(uc053=4))
label stroke_hrs "Stroke"
Cross-Wave Equivalents for:
C053 STROKE 
1995 Core D848 
1996 Core E848 
1998 Core F1176 
2000 Core G1309 
2002 Core HC053 
2002 Exit SC053 
2004 Core JC053 
2004 Exit TC053 
2006 Core KC053 
2006 Exit UC053 
2008 Core LC053 
2008 Exit VC053 
*/

tab f1176, missing

generate stroke_hrs = .
replace stroke_hrs = 1 if (core_year==1998 & inlist(f1176,1,2))
replace stroke_hrs = 1 if (core_year==2000 & inlist(g1309,1,2,3))
replace stroke_hrs = 1 if (core_year==2002 & inlist(hc053,1,2,3))
replace stroke_hrs = 1 if (core_year==2004 & inlist(jc053,1,2,3))

replace stroke_hrs = 0 if (core_year==1998 & (f1176==5))
replace stroke_hrs = 0 if (core_year==2000 & inlist(g1309,4,5))
replace stroke_hrs = 0 if (core_year==2002 & inlist(hc053,4,5))
replace stroke_hrs = 0 if (core_year==2004 & inlist(jc053,4,5))

label variable stroke_hrs "Stroke / TIA - core"
//label define stroke_hrs 0 "No" 1 "Yes", modify
//label values stroke_hrs stroke_hrs
tab stroke_hrs core_year, missing



/*Memory Disease (diagnosed by a doctor, per the proxy report) r1240
Question not asked in 2010 core interview, so just use previous wave
memory disease for 2010 core, may want to check this against
other variables if it is a problem.
2010 asks specifically Alzheimers (MC272) or Dementia (MC273)
Cross-Wave Equivalents for:
C069 MEMORY RELATED DISEASE 
1995 Core N/A 
1996 Core N/A 
1998 Core F1193 
2000 Core G1326 
2002 Core HC069 
2002 Exit SC069 
2004 Core JC069 
2004 Exit TC069 
2006 Core KC069 
2006 Exit UC069 
2008 Core LC069 
2008 Exit VC069 
2010 Core N/A

Cross-Wave Equivalents for:
Z117 PREV WAVE R HAS MEMORY DISEASE 
1995 Core N/A 
1996 Core N/A 
1998 Core N/A 
2000 Core g262 
2002 Core HZ117 
2002 Exit SZ117 
2004 Core JZ117 
2004 Exit TZ117 
2006 Core KZ117 
2006 Exit UZ117 
2008 Core LZ117 
2008 Exit VZ117 
Set memory_hrs = yes if current survey or previous survey (via z117 var) indicates
memory disease
*/
generate memory_hrs = .
replace memory_hrs = 0 if (core_year==1998 & f1193==5)
replace memory_hrs = 0 if (core_year==2000 & inlist(g1326,4,5))
replace memory_hrs = 0 if (core_year==2002 & inlist(hc069,4,5))
replace memory_hrs = 0 if (core_year==2004 & inlist(jc069,4,5))

replace memory_hrs = 1 if (core_year==1998 & f1193==1)
replace memory_hrs = 1 if (core_year==2000 & (inlist(g1326,1,3) | g262==1))
replace memory_hrs = 1 if (core_year==2002 & (inlist(hc069,1,3) | hz117==1 ))
replace memory_hrs = 1 if (core_year==2004 & (inlist(jc069,1,3) | jz117==1 ))

label variable memory_hrs "Memory Disease - core"
//label define memory_hrs 0 "No" 1 "Yes", modify
//label values memory_hrs memory_hrs
tab memory_hrs core_year, missing

/*Alzheimer's disease
2010 HRS survey only
MC272
Not included in overall comorbidity index
           343           1.  YES
         21648           5.  NO
            20           7.  [VOL] NOT ALZHEIMER'S DISEASE
            24           8.  DK (Don't Know); NA (Not Ascertained)
             2           9.  RF (Refused)
                     Blank.  INAP (Inapplicable); Partial Interview
*/



/* Falls r1230
generate falls_hrs = .
 then falls_hrs = 1 ; if ((sc079=1)|(tc079=1)|(uc079=1)|(sc079=3)|(tc079=3)|(uc079=3))
 then falls_hrs = 0 ; if ((sc079=5)|(tc079=5)|(uc079=5)|(sc079=4)|(tc079=4)|(uc079=4))
label falls_hrs "Falls"
Cross-Wave Equivalents for:
C079 FALLEN IN PAST TWO YEARS 
1995 Core D878 
1996 Core E878 
1998 Core F1206 
2000 Core G1339 
2002 Core HC079 
2002 Exit SC079 
2004 Core JC079 
2004 Exit TC079 
2006 Core KC079 
2006 Exit UC079 
2008 Core LC079 
2008 Exit VC079 
2010 Core MC079 
2010 Exit WC079 
 only asked for those who were greater than 65 when interviewed
 not compared to previous interview response
*/
generate falls_hrs = .
replace falls_hrs = 1 if (core_year==1998 & f1206==1)
replace falls_hrs = 1 if (core_year==2000 & g1339==1)
replace falls_hrs = 1 if (core_year==2002 & hc079==1)
replace falls_hrs = 1 if (core_year==2004 & jc079==1)

replace falls_hrs = 0 if (core_year==1998 & f1206==5)
replace falls_hrs = 0 if (core_year==2000 & g1339==5)
replace falls_hrs = 0 if (core_year==2002 & hc079==5)
replace falls_hrs = 0 if (core_year==2004 & jc079==5)

label variable falls_hrs "Falls - core"
//label define falls_hrs 0 "No" 1 "Yes", modify
//label values falls_hrs falls_hrs
tab falls_hrs core_year, missing


/** Incontinence
C087 INCONTINENCE 
2000 Core 	G1353
2002 Core 	HC087
2002 Exit 	N/A
2004 Core 	JC087
2004 Exit 	N/A
2006 Core 	KC087
2006 Exit 	N/A
2008 Core 	LC087
2008 Exit 	N/A
2010 Core 	MC087
*/
generate incont_hrs = .
replace incont_hrs = 1 if ((f1220==1)|(g1353==1)|(hc087==1)|(jc087==1))
replace incont_hrs = 0 if ((f1220==5)|(g1353==5)|(hc087==5)|(jc087==5))
label var incont_hrs "Incontinence"
tab incont_hrs core_year, missing

/* 
Pain r1246
Cross-Wave Equivalents for:
C104 TROUBLED WITH PAIN 
2000 Core 	G1372
2002 Core 	HC104
2002 Exit 	SC104
2004 Core 	JC104
2004 Exit 	TC104
2006 Core 	KC104
2006 Exit 	UC104
2008 Core 	LC104
2008 Exit 	VC104
2010 Core 	MC104
2010 Exit 	WC104
*/
gen byte pain_hrs = .
replace pain_hrs=1 if ((f1239==1)|(g1372==1)|(hc104==1)|(jc104==1))
replace pain_hrs=0 if ((f1239==5)|(g1372==5)|(hc104==5)|(jc104==5))
label var pain_hrs "Pain"
tab pain_hrs core_year, missing

/*How bad is pain if yes above?
1 = mild, 2 = moderate, 3 = severe, 8,9 = don't know, refused
1998 Core 	F1241
2000 Core 	G1374
2002 Core 	HC105
2002 Exit 	SC105
2004 Core 	JC105
2004 Exit 	TC105
2006 Core 	KC105
2006 Exit 	UC105
2008 Core 	LC105
2008 Exit 	VC105
2010 Core 	MC105
2010 Exit 	WC105 
Leave as missing if not applicable b/c answered no pain
*/
gen pain_level_hrs = .
replace pain_level_hrs = f1241 if core_year==1998
replace pain_level_hrs = g1374 if core_year==2000
replace pain_level_hrs = hc105 if core_year==2002
replace pain_level_hrs = jc105 if core_year==2004
replace pain_level_hrs = . if inlist(pain_level_hrs,8,9)
la var pain_level_hrs "How bad was pain? 1=mild, 2=mod, 3=severe"
tab pain_level_hrs core_year , missing

/*Does pain limit activities?
1998 Core 	F1242
2000 Core 	G1375
2002 Core 	HC106
2004 Core 	JC106
2006 Core 	KC106
2008 Core 	LC106
2010 Core 	MC106
Coded as 0 if answer=no or if not applicable b/c no pain
*/
gen pain_limit_act_hrs = .
replace pain_limit_act_hrs =1 if f1242==1 | g1375==1 | hc106==1 | jc106==1
replace pain_limit_act_hrs =0 if f1242==5 | g1375==5 | hc106==5 | jc106==5
replace pain_limit_act_hrs =0 if pain_hrs==0
la var pain_limit_act_hrs "Does pain limit usual activities?"
tab pain_limit_act_hrs core_year, missing

/** HTN
Ever had high blood pressure?
2000 Core 	G1238
2002 Core 	HC005
2002 Exit 	N/A
2004 Core 	JC005
2004 Exit 	N/A
2006 Core 	KC005
2006 Exit 	N/A
2008 Core 	LC005
2008 Exit 	N/A
2010 Core 	MC005
2010 Exit 	N/A
*/
generate byte htn_hrs = .
replace htn_hrs = 1 if (core_year==1998 & f1109==1)
replace htn_hrs = 1 if (core_year==2000 & inlist(g1238,1,3))
replace htn_hrs = 1 if (core_year==2002 & inlist(hc005,1,3))
replace htn_hrs = 1 if (core_year==2004 & inlist(jc005,1,3))

replace htn_hrs = 0 if (core_year==1998 & f1109==5)
replace htn_hrs = 0 if (core_year==2000 & inlist(g1238,4,5))
replace htn_hrs = 0 if (core_year==2002 & inlist(hc005,4,5))
replace htn_hrs = 0 if (core_year==2004 & inlist(jc005,4,5))

label var htn_hrs "Hypertension"
tab htn_hrs core_year, missing


/** Diabetes
Cross-Wave Equivalents for:
C010 DIABETES 
2000 Core 	G1245
2002 Core 	HC010
2002 Exit 	N/A
2004 Core 	JC010
2004 Exit 	N/A
2006 Core 	KC010
2006 Exit 	N/A
2008 Core 	LC010
2008 Exit 	N/A
2010 Core 	MC010
*/
generate byte dm_hrs = .
replace dm_hrs = 1 if (core_year==1998 & f1116==1)
replace dm_hrs = 1 if (core_year==2000 & inlist(g1245,1,3))
replace dm_hrs = 1 if (core_year==2002 & inlist(hc010,1,3))
replace dm_hrs = 1 if (core_year==2004 & inlist(jc010,1,3))

replace dm_hrs = 0 if (core_year==1998 & f1116==5)
replace dm_hrs = 0 if (core_year==2000 & inlist(g1245,4,5))
replace dm_hrs = 0 if (core_year==2002 & inlist(hc010,4,5))
replace dm_hrs = 0 if (core_year==2004 & inlist(jc010,4,5))

label var dm_hrs "Diabetes"
tab dm_hrs core_year, missing

/* Taking Insulin for Diabetes
Cross-Wave Equivalents for:
2000 Core 	G1249
2002 Core 	HC012
2002 Exit 	N/A
2004 Core 	JC012
2004 Exit 	N/A
2006 Core 	KC012
2006 Exit 	N/A
2008 Core 	LC012
2008 Exit 	N/A
2010 Core 	MC012*/
generate byte dm_ins_hrs = .
replace dm_ins_hrs = 0 if dm_hrs ==0
replace dm_ins_hrs = 1 if (core_year==1998 & f1118==1)
replace dm_ins_hrs = 1 if (core_year==2000 & g1249==1)
replace dm_ins_hrs = 1 if (core_year==2002 & hc012==1)
replace dm_ins_hrs = 1 if (core_year==2004 & jc012==1)

replace dm_ins_hrs = 0 if (core_year==1998 & f1118==5)
replace dm_ins_hrs = 0 if (core_year==2000 & g1249==5)
replace dm_ins_hrs = 0 if (core_year==2002 & hc012==5)
replace dm_ins_hrs = 0 if (core_year==2004 & jc012==5)
label var dm_ins_hrs "Insulin for diabetes"
tab dm_ins_hrs core_year, missing

/*Kidney trouble due to diabetes
2000 Core 	G1256
2002 Core 	HC017
2004 Core 	JC017
2006 Core 	KC017
2008 Core 	LC017
2010 Core 	MC017
*/
generate byte dm_kidn_hrs = .
replace dm_kidn_hrs = 0 if dm_hrs ==0
replace dm_kidn_hrs = 1 if (core_year==1998 & f1123==1)
replace dm_kidn_hrs = 1 if (core_year==2000 & g1256==1)
replace dm_kidn_hrs = 1 if (core_year==2002 & hc017==1)
replace dm_kidn_hrs = 1 if (core_year==2004 & jc017==1)

replace dm_kidn_hrs = 0 if (core_year==1998 & f1123==5)
replace dm_kidn_hrs = 0 if (core_year==2000 & g1256==5)
replace dm_kidn_hrs = 0 if (core_year==2002 & hc017==5)
replace dm_kidn_hrs = 0 if (core_year==2004 & jc017==5)
label var dm_kidn_hrs "Kidney trouble due to diabetes"
tab dm_kidn_hrs core_year, missing

/** Psychiatric Condition ("doctor ever told... emotional, nervous or psychiatric problems?")
Cross-Wave Equivalents for:
C065 EMOTIONAL/PSYCHIATRIC PROBLEMS 
2000 Core 	G1322
2002 Core 	HC065
2002 Exit 	N/A
2004 Core 	JC065
2004 Exit 	N/A
2006 Core 	KC065
2006 Exit 	N/A
2008 Core 	LC065
2008 Exit 	N/A
2010 Core 	MC065
*/
generate psych_hrs = .
replace psych_hrs = 1 if (core_year==1998 & f1189==1)
replace psych_hrs = 1 if (core_year==2000 & inlist(g1322,1,3))
replace psych_hrs = 1 if (core_year==2002 & inlist(hc065,1,3))
replace psych_hrs = 1 if (core_year==2004 & inlist(jc065,1,3))

replace psych_hrs = 0 if (core_year==1998 & f1189==5)
replace psych_hrs = 0 if (core_year==2000 & inlist(g1322,4,5))
replace psych_hrs = 0 if (core_year==2002 & inlist(hc065,4,5))
replace psych_hrs = 0 if (core_year==2004 & inlist(jc065,4,5))

label var psych_hrs "Psychiatric Condition"
tab psych_hrs core_year, missing

/*additional psych questions, not part of comorbidities but cleaned here anyway
psych treatment 1=yes 5=no, only asked if reported having psych problems (psych_hrs==1)
2000 Core 	G1324
2002 Core 	HC067
2004 Core 	JC067
2006 Core 	KC067
2008 Core 	LC067
2010 Core 	MC067
psych medications 1=yes 5 = no, only asked if reported having psych problems (psych_hrs==1)
2000 Core 	G1325
2002 Core 	HC068
2004 Core 	JC068
2006 Core 	KC068
2008 Core 	LC068
2010 Core 	MC068
*/
gen byte PSYCH_treat = .
replace PSYCH_treat = 1 if (f1191==1)|(g1324==1)|(hc067==1)|(jc067==1)
replace PSYCH_treat = 0 if (f1191==5)|(g1324==5)|(hc067==5)|(jc067==5)
replace PSYCH_treat = 0 if psych_hrs==0
la var PSYCH_treat "Receives Psychiatric treatment"
tab PSYCH_treat core_year,missing

gen byte PSYCH_med = .
replace PSYCH_med = 1 if (f1192==1)|(g1325==1)|(hc068==1)|(jc068==1)
replace PSYCH_med = 0 if (f1192==5)|(g1325==5)|(hc068==5)|(jc068==5)
replace PSYCH_med = 0 if psych_hrs==0
la var PSYCH_med "Psychiatric medication"
tab PSYCH_med core_year,missing



/** Arthritis
C070 ARTHRITIS 
2000 Core 	G1327
2002 Core 	HC070
2002 Exit 	N/A
2004 Core 	JC070
2004 Exit 	N/A
2006 Core 	KC070
2006 Exit 	N/A
2008 Core 	LC070
2008 Exit 	N/A
2010 Core 	MC070
*/
generate arth_hrs = .
replace arth_hrs = 1 if (core_year==1998 & f1194==1)
replace arth_hrs = 1 if (core_year==2000 & inlist(g1327,1,3))
replace arth_hrs = 1 if (core_year==2002 & inlist(hc070,1,3))
replace arth_hrs = 1 if (core_year==2004 & inlist(jc070,1,3))

replace arth_hrs = 0 if (core_year==1998 & f1194==5)
replace arth_hrs = 0 if (core_year==2000 & inlist(g1327,4,5))
replace arth_hrs = 0 if (core_year==2002 & inlist(hc070,4,5))
replace arth_hrs = 0 if (core_year==2004 & inlist(jc070,4,5))

label var arth_hrs "Arthritis"
tab arth_hrs core_year, missing

/*Hip fracture since last interview
Only asked for those 65 and older
1998 Core 	F1215
2000 Core 	G1348
2002 Core 	HC082
2002 Exit 	SC082
2004 Core 	JC082
2004 Exit 	TC082
2006 Core 	KC082
2006 Exit 	UC082
2008 Core 	LC082
2008 Exit 	VC082
2010 Core 	MC082
2010 Exit 	WC082 */
gen byte hip_frac_hrs = .
replace hip_frac_hrs=1 if f1215==1 | g1348==1 | hc082==1 | jc082==1
replace hip_frac_hrs=0 if f1215==5 | g1348==5 | hc082==5 | jc082==5
la var hip_frac_hrs "Hip fracture"
tab hip_frac_hrs core_year , missing

*********************************************************************
//Questions re other symptoms since last intervew
*********************************************************************

/*Shortness of breath since last interview?
Only asked for first interview and then every other year 2000, 2004, 2008
1998 Core 	F1305
2000 Core 	G1438
2002 Core 	HC144
2004 Core 	JC144
2006 Core 	KC144
2008 Core 	LC144
2010 Core 	MC144
*/
gen byte dyspnea_hrs = .
replace dyspnea_hrs = 1 if f1305==1 | g1438==1 | hc144==1 | jc144==1
replace dyspnea_hrs = 0 if f1305==5 | g1438==5 | hc144==5 | jc144==5
la var dyspnea_hrs "Dyspnea since last interview? 1=yes"
tab dyspnea_hrs core_year, missing

/* Persistant swelling in feet or ankles
1998 Core 	F1304
2000 Core 	G1437
2002 Core 	HC143
2004 Core 	JC143
2006 Core 	KC143
2008 Core 	LC143
2010 Core 	MC143*/
gen byte swelling_feet_hrs = .
replace swelling_feet_hrs = 1 if f1304==1 | g1437==1 | hc143==1 | jc143==1
replace swelling_feet_hrs = 0 if f1304==5 | g1437==5 | hc143==5 | jc143==5
la var swelling_feet_hrs "Swelling feet or ankles since last interview? 1=yes"
tab swelling_feet_hrs core_year, missing

/* Persistant dizziness or lightheadedness
1998 Core 	F1306
2000 Core 	G1439
2002 Core 	HC145
2004 Core 	JC145
2006 Core 	KC145
2008 Core 	LC145
2010 Core 	MC145*/
gen byte dizzy_hrs = .
replace dizzy_hrs = 1 if f1306==1 | g1439==1 | hc145==1 | jc145==1
replace dizzy_hrs = 0 if f1306==5 | g1439==5 | hc145==5 | jc145==5
la var dizzy_hrs "Dizziness or lightheadedness since last interview? 1=yes"
tab dizzy_hrs core_year, missing

/* Back pain or problems
1998 Core 	F1307
2000 Core 	G1440
2002 Core 	HC146
2004 Core 	JC146
2006 Core 	KC146
2008 Core 	LC146
2010 Core 	MC146*/
gen byte back_pain_hrs = .
replace back_pain_hrs = 1 if f1307==1 | g1440==1 | hc146==1 | jc146==1
replace back_pain_hrs = 0 if f1307==5 | g1440==5 | hc146==5 | jc146==5
la var back_pain_hrs "Back pain or problems since last interview? 1=yes"
tab back_pain_hrs core_year, missing

/* Persisent headaches
1998 Core 	F1308
2000 Core 	G1441
2002 Core 	HC147
2004 Core 	JC147
2006 Core 	KC147
2008 Core 	LC147
2010 Core 	MC147*/
gen byte headache_hrs = .
replace headache_hrs = 1 if f1308==1 | g1441==1 | hc147==1 | jc147==1
replace headache_hrs = 0 if f1308==5 | g1441==5 | hc147==5 | jc147==5
la var headache_hrs "Persistent headaches since last interview? 1=yes"
tab headache_hrs core_year, missing

/* Severe fatigue or exhaustion
1998 Core 	F1309
2000 Core 	G1442
2002 Core 	HC148
2004 Core 	JC148
2006 Core 	KC148
2008 Core 	LC148
2010 Core 	MC148*/
gen byte fatigue_hrs = .
replace fatigue_hrs = 1 if f1309==1 | g1442==1 | hc148==1 | jc148==1
replace fatigue_hrs = 0 if f1309==5 | g1442==5 | hc148==5 | jc148==5
la var fatigue_hrs "Severe fatigue or exhaustion since last interview? 1=yes"
tab fatigue_hrs core_year, missing

/* Persistent wheezing, cough or phlegm
1998 Core 	F1310
2000 Core 	G1443
2002 Core 	HC149
2004 Core 	JC149
2006 Core 	KC149
2008 Core 	LC149
2010 Core 	MC149*/
gen byte cough_hrs = .
replace cough_hrs = 1 if f1310==1 | g1443==1 | hc149==1 | jc149==1
replace cough_hrs = 0 if f1310==5 | g1443==5 | hc149==5 | jc149==5
la var cough_hrs "Persistent wheezing, coughing since last interview? 1=yes"
tab cough_hrs core_year, missing

********************************************************************************
//Insomnia symptoms
********************************************************************************
/*How often trouble falling asleep?  xC083
1=most of the time, 2=sometimes, 3=rarely or never
Not asked before 2002
*/
gen insom_falling_asleep = .
replace insom_falling_asleep = 1 if hc083==1 | jc083==1
replace insom_falling_asleep = 2 if hc083==2 | jc083==2
replace insom_falling_asleep = 3 if hc083==3 | jc083==3
la var insom_falling_asleep "Trouble falling asleep? 1=Most of the time, 2=Sometimes, 3=Rarely,Never"
tab insom_falling_asleep core_year, missing

/*How often trouble waking up during the night?  xC084
1=most of the time, 2=sometimes, 3=rarely or never
Not asked before 2002
*/
gen insom_waking_up = .
replace insom_waking_up = 1 if hc084==1 | jc084==1
replace insom_waking_up = 2 if hc084==2 | jc084==2
replace insom_waking_up = 3 if hc084==3 | jc084==3
la var insom_waking_up "Trouble waking up during night? 1=Most of the time, 2=Sometimes, 3=Rarely,Never"
tab insom_waking_up core_year, missing

/*How often trouble waking up too early and not being able to fall asleep again?  xC085
1=most of the time, 2=sometimes, 3=rarely or never
Not asked before 2002
*/
gen insom_too_early = .
replace insom_too_early = 1 if hc085==1 | jc085==1
replace insom_too_early = 2 if hc085==2 | jc085==2
replace insom_too_early = 3 if hc085==3 | jc085==3
la var insom_too_early "Trouble waking up too early? 1=Most of the time, 2=Sometimes, 3=Rarely,Never"
tab insom_too_early core_year, missing

/*How often feel really rested when you wake up in the morning?  xC086
1=most of the time, 2=sometimes, 3=rarely or never
Not asked before 2002
Note when create overall insomnia variable, this one is opposite, 1,most of the time==good
*/
gen insom_rested = .
replace insom_rested = 1 if hc086==1 | jc086==1
replace insom_rested = 2 if hc086==2 | jc086==2
replace insom_rested = 3 if hc086==3 | jc086==3
la var insom_rested "Feel rested when wake up? 1=Most of the time, 2=Sometimes, 3=Rarely,Never"
tab insom_rested core_year, missing

/*In the past 2 weeks, taken medication or treatment to help sleep?
xc232u2 - 1=yes, 5=no
Not asked before 2006*/

/*Medication recommended by a doctor?
xc233 - 1=yes, 5=no (asked if yes above)
Not asked before 2006*/

/*depression, period of 2 weeks in the last year when felt sad, blue or depressed?
1998-2006: only asked for first interview and if not proxy interview
2008-2010: asked for all self interviews
1998 Core 	F1323
2000 Core 	G1456
2002 Core 	HC150
2004 Core 	JC150
2006 Core 	KC150
2008 Core 	LC150
2010 Core 	MC150*/
gen byte depr_2_wks_hrs = .
replace depr_2_wks_hrs = 1 if f1323==1 | g1456==1 | hc150==1 | jc150==1| ///
	f1323==3 | g1456==3 | hc150==3 | jc150==3
replace depr_2_wks_hrs = 0 if f1323==5 | g1456==5 | hc150==5 | jc150==5
la var depr_2_wks_hrs "Depressed 2 week period in last year? 1=yes"
tab depr_2_wks_hrs core_year , missing

save core_98_04_clean3.dta, replace

log close

H="Core 98-04 cleaning - cognition,dementia variables"
/*Separate questions are asked for self interviews vs proxy interviews*/
capture log close

clear all
set mem 1g
set matsize 800
set more off


//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\2_HRS_Core_00_04_clean4-LOG.txt", text replace

cd `datapath'

use core_98_04_clean3.dta

/*Rate memory
1998: f1479
2000: g1654
2002-2010: d101
1 = excellent, 5=poor*/
gen sr_memory = .
replace sr_memory = f1479 if core_year==1998
replace sr_memory = g1654 if core_year==2000
replace sr_memory = hd101 if core_year==2002
replace sr_memory = jd101 if core_year==2004
replace sr_memory = . if inlist(sr_memory,8,9)
la var sr_memory "Self rated memory, 1=Excel, 5=Poor"

/*Compare memory now to self rating at last interview
1=better, 2=same, 3=worse
1998: f1480
2000: g1655
2002-2010: d102*/
gen sr_mem_change = .
replace sr_mem_change = f1480 if core_year==1998
replace sr_mem_change = g1655 if core_year==2000
replace sr_mem_change = hd102 if core_year==2002
replace sr_mem_change = jd102 if core_year==2004
replace sr_mem_change = . if inlist(sr_mem_change,8,9)
la var sr_mem_change "Self rated memory now vs last ivw, 1=Better,2=Same,3=Worse"

/*Proxy Rate memory
1998: f6287
2000: g1527
2002-2010: d151
1 = excellent, 5=poor*/
gen pr_memory = .
replace pr_memory = f6287 if core_year==1998
replace pr_memory = g1527 if core_year==2000
replace pr_memory = hd151 if core_year==2002
replace pr_memory = jd151 if core_year==2004
replace pr_memory = . if inlist(sr_memory,8,9)
la var pr_memory "Proxy rated memory, 1=Excel, 5=Poor"

/*Proxy Compare memory now to self rating at last interview
1=better, 2=same, 3=worse
1998: f6288
2000: g1528
2002-2010: d152*/
gen pr_mem_change = .
replace pr_mem_change = f6288 if core_year==1998
replace pr_mem_change = g1528 if core_year==2000
replace pr_mem_change = hd152 if core_year==2002
replace pr_mem_change = jd152 if core_year==2004
replace pr_mem_change = . if inlist(sr_mem_change,8,9)
la var pr_mem_change "Proxy rated memory now vs last ivw, 1=Better,2=Same,3=Worse"

save core_98_04_clean4.dta, replace

log close


H="2006-2010 Core variable cleaning"


H="Core 06-10 - variable cleaning - part 1"
/*variable cleaning for HRS core 2006-2010
Most code is taken from the HRS Outline_11_22_11.txt file
and modified to clean 2006-2010 core dataset
*/

capture log close

clear all
set mem 1g
set matsize 800
set more off

//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\2_HRS_Core_06_10_clean1-LOG.txt", text replace

cd `datapath'

use core_06_10.dta

*********************************************************************************
// Proxy for core interview
*********************************************************************************
generate proxy_core = .
replace  proxy_core = 1 if ((ka009==2)|(ka009==3)|(la009==2)|(la009==3) | ///
        (ma009==2)|(ma009==3))
replace  proxy_core = 0 if ((ka009==1)|(la009==1) |(ma009==1))
label variable proxy_core "Proxy Respondent for Core Interview"
//label define proxy_core 0 "No" 1 "Proxy", modify
//label values proxy_core proxy_core
tab proxy_core, missing

*********************************************************************************
// Gender - from core interview
*********************************************************************************
tab kx060_r
tab lx060_r
tab mx060_r

generate female = .
replace  female = 1 if ( (kx060_r==2)| (lx060_r==2)| (mx060_r==2))
replace  female = 0 if ( (kx060_r==1)| (lx060_r==1)| (mx060_r==1))
label variable female "Female"
//label define female 0 "Male" 1 "Female", modify
//label values female female
tab female core_year, missing

*********************************************************************************
//Education variables
*********************************************************************************
// Education: categorical, dummies or dichotomous (>highschool vs <=highschool) - from core
// Education variables only complete 2004 and earlier
*******************************************************************************************
generate educ = .
replace educ = 0 if ((kb014==0) | (lb014==0) | (mb014==0))
replace educ = 1 if ((kb014>=1)& (kb014<=11))
replace educ = 1 if ((lb014>=1)& (lb014<=11))
replace educ = 1 if ((mb014>=1)& (mb014<=11))

replace educ = 2 if ( (kb014==12) | (lb014==12) |(mb014==12))

replace educ = 3 if ((kb014>=13)& (kb014<=15))
replace educ = 3 if ((lb014>=13)& (lb014<=15))
replace educ = 3 if ((mb014>=13)& (mb014<=15))

replace educ = 4 if ((kb014==16) | (lb014==16) | (mb014==16))
replace educ = 5 if ((kb014==17) | (lb014==17)| (mb014==17))
label variable educ "Eduction, Highest Level"
//label define educ 0 "No Formal Education" 1 "Grades 1-11" 2 "High School" 3 "Some College" 4 "College" ///
//      5 "Post College", modify
//label values educ educ
tab educ core_year, missing 

*********************************************************************************
// Marital status from core interview
// Note: There are also marital status variables generated in the 
// exit interview cleaning
*********************************************************************************
gen marital = .
replace marital = 1 if( (kb063==1) | (lb063==1) | (mb063==1) ) //married
replace marital = 2 if( (kb063==3) | (lb063==3) | (mb063==3) ) //separated
replace marital = 3 if( (kb063==4) | (lb063==4) | (mb063==4) ) //divorced
replace marital = 4 if( (kb063==5) | (lb063==5) | (mb063==5) ) //widowed
replace marital = 5 if( (kb063==6) | (lb063==6) | (mb063==6) ) //never married

//unknown or other
replace marital = 6 if ( (inlist(kb063,2,7,8,9,.) & core_year==2006) | ///
       (inlist(lb063,2,7,8,9,.) & core_year==2008) | ///
       (inlist(mb063,7,8,9,.) & core_year==2010) )

label variable marital "Marital Status"
//label define marital 1 "Married" 2 "Separated" 3 "Divorced" 4 "Widowed" 5 "Never Married" 6 "Other/Don't Know", modify
//label values marital marital
tab marital core_year, missing

generate byte married = .
replace married = 1 if (marital==1)
replace married = 0 if (marital!=1 & marital <.)
label variable married "Married"
//label define married 1 "Married" 0 "Not Married", modify
//label values married married
tab married core_year, missing 


*********************************************************************************
// Ethnicity from core interview
// Maybe use restricted file for race and ethnicity?
*********************************************************************************
generate hisp = .
replace hisp = 1 if ((kb028==1)| (lb028==1)| (mb028==1))
replace hisp = 0 if ((kb028==5)| (lb028==5)| (mb028==5))
label variable hisp "Hispanic Ethnicity"
//label define hisp 1 "Hispanic- yes" 0 "Non-Hispanic", modify
//label values hisp hisp
tab hisp core_year, missing 

*********************************************************************************
*********************************************************************************
// Religious preference and importance from core interview
*********************************************************************************
*********************************************************************************
**Religion: this variable is of limited value because many did not answer due to a skip pattern that is unclear**
*********************************************************************************
// Religious preference from core interview
*********************************************************************************

** Need to add in 2010 variable mb050 **
generate relig = .
replace relig = 1 if ((kb050==1)|(lb050==1)|(mb050==1))
replace relig = 2 if ((kb050==2)|(lb050==2)|(mb050==2))
replace relig = 3 if ((kb050==3)|(lb050==3)|(mb050==3))
replace relig = 4 if ((kb050==4)|(lb050==4)|(mb050==4))
replace relig = 5 if ((kb050==7)|(lb050==7)|(mb050==7))
label variable relig "Religion"
//label define relig 1 "Protestant" 2 "Catholic" 3 "Jewish" 4 "No Pref" 5 "Other", modify
//label values relig relig
tab relig core_year, missing 

*********************************************************************************
// Importance of religion from core interview
*********************************************************************************
generate imprelig = .
replace imprelig = 1 if ((kb053==1)|(lb053==1)|(mb053==1))
replace imprelig = 2 if ((kb053==3)|(lb053==3)|(mb053==3))
replace imprelig = 3 if ((kb053==5)|(lb053==5)|(mb053==5))
replace imprelig = 4 if ((kb053==8)|(kb053==9)|(lb053==8)|(lb053==9)|(mb053==8)|(mb053==9))
replace imprelig = 4 if (imprelig==.)
label variable imprelig "Importance of Religion"
//label define imprelig 1 "Very Important" 2 "Somewhat Important" 3 "Not Too Important" 4 "Don't Know/Refused/Missing", modify
//label values imprelig imprelig
tab imprelig core_year, missing 

*********************************************************************************
// Good Friends Nearby from core interview, code missing as no
*********************************************************************************
generate friend = 0
replace friend = 1 if ((kf175==1)|(lf175==1)|(mf175==1))
replace friend = 0 if ((kf175==5)|(lf175==5)|(mf175==5))
label variable friend "Good Friends Nearby"
//label define friend 0 "No" 1 "Yes", modify
//label values friend friend
tab friend core_year, missing

*********************************************************************************
// Number of social visits, code missing as no
*********************************************************************************
/*How often do you get together with  (/people in or near the facility/any of
        your neighbors) just to chat or for a social visit? 
1998 Core 	F2246
2000 Core 	G2497
2002 Core 	HF176
2004 Core 	JF176
2006 Core 	KF176
2008 Core 	LF176
2010 Core 	MF176

Next question clarifies contact per xxx
D156A.FREQ OF CONTACT PER                 
          Section: D            Level: Household       CAI Reference: Q2498
          Type: Numeric         Width: 1               Decimals: 0
          ................................................................................
           2343         1. DAY
           4675         2. WEEK
            547         3. EVERY TWO WEEKS
           1367         4. MONTH
            364         5. YEAR
           3613         6. ALMOST NEVER
            120         7. OTHER (SPECIFY) (**other = 97 in 1998)
              1         8. DK (don't know); NA (not ascertained) (**1998: 98, 99 for dk, rf)
              1         9. RF (refused)
*/
//only asked in alternate waves for 2004 and later

//indicator for any visits
generate soc_visit = .
replace soc_visit = 1 if ((0<kf176 & kf176 <998) | (0<lf176 & lf176<998) | ///
	(0<mf176 & mf176<998) )
replace soc_visit = 0 if kf176==0 | lf176==0 |mf176==0 
//if reported almost never, then set to 0
replace soc_visit = 0 if soc_visit==. & (kf176==6 | lf177==6 | mf177==6)

label variable soc_visit "Social visits with neighbors?"
//label define soc_visit 0 "No" 1 "Yes", modify
//label values soc_visit friend
tab soc_visit core_year, missing

//convert values to a common number of visits per year
//this is then split into categories to get the categorical variable
gen soc_visit_yr = .

replace soc_visit_yr = kf176*365 if core_year==2006 & kf177==1 //daily response
replace soc_visit_yr = kf176*52 if core_year==2006 & kf177==2 //weekly
replace soc_visit_yr = kf176*26 if core_year==2006 & kf177==3 //bi weekly
replace soc_visit_yr = kf176*12 if core_year==2006 & kf177==4 //monthly
replace soc_visit_yr = kf176 if core_year==2006 & kf177==5 //year

replace soc_visit_yr = lf176*365 if core_year==2008 & lf177==1 //daily response
replace soc_visit_yr = lf176*52 if core_year==2008 & lf177==2 //weekly
replace soc_visit_yr = lf176*26 if core_year==2008 & lf177==3 //bi weekly
replace soc_visit_yr = lf176*12 if core_year==2008 & lf177==4 //monthly
replace soc_visit_yr = lf176 if core_year==2008 & lf177==5 //year

replace soc_visit_yr = mf176*365 if core_year==2010 & mf177==1 //daily response
replace soc_visit_yr = mf176*52 if core_year==2010 & mf177==2 //weekly
replace soc_visit_yr = mf176*26 if core_year==2010 & mf177==3 //bi weekly
replace soc_visit_yr = mf176*12 if core_year==2010 & mf177==4 //monthly
replace soc_visit_yr = mf176 if core_year==2010 & mf177==5 //year

replace soc_visit_yr = . if soc_visit==.

tab soc_visit_yr core_year, missing

//categorical variable
gen soc_visit_cat = .
replace soc_visit_cat = 3 if (364)<=soc_visit_yr & soc_visit_yr!=. //every day or more
replace soc_visit_cat = 2 if 52<=soc_visit_yr & soc_visit_yr<364 //less than every day up to 1x/week
replace soc_visit_cat = 1 if 0<soc_visit_yr & soc_visit_yr<52 // less than 1/week 
replace soc_visit_cat = 0 if soc_visit ==0 | kf177==6 | lf177==6 | mf177==6 //none or almost never
la var soc_visit_cat "Frequency of social visits, categorical"
tab soc_visit_cat core_year, missing
tab soc_visit_cat soc_visit, missing

//some are missing the categorical variable because units weren't provided
tab core_year soc_visit_cat if soc_visit==1, missing



*********************************************************************************
// Relatives Nearby from core interview, code missing as no
*********************************************************************************
generate rel_nb = 0
replace rel_nb = 1 if ((kf174==1)|(lf174==1)|(mf174==1))
replace rel_nb = 0 if ((kf174==5)|(lf174==5)|(mf174==5))
label variable rel_nb "Relatives Nearby"
//label define rel_nb 0 "No" 1 "Yes", modify
//label values rel_nb rel_nb
tab rel_nb core_year, missing 

*********************************************************************************
// Overnight hospital stay in past 2 years core interview
*********************************************************************************
gen byte hosp_last_2yr = .
replace hosp_last_2yr = 1 if ((kn099==1)|(ln099==1)|(mn099==1))
replace hosp_last_2yr = 0 if ((kn099==5)|(ln099==5)|(mn099==5))
label variable hosp_last_2yr "Overnight hospitalization since previous core interview"
//label define hosp_last_2yr 0 "No" 1 "Yes", modify
//label values hosp_last_2yr hosp_last_2yr 
tab hosp_last_2yr  core_year, missing 

*********************************************************************************
//  Insurance status information - from coreinterview
*********************************************************************************
// Covered by Medicare currently?
// r2585
generate byte medicare = .
replace medicare= 1 if ((kn001==1)| (ln001==1)| (mn001==1)) //yes
replace medicare= 0 if ((kn001==5)| (ln001==5)| (mn001==5)) //no
label variable medicare "Medicare, 1=yes"

//Covered by Medicare Part B currently?
// r2587
generate byte medicareb = .
replace medicareb= 1 if ( (kn004==1)| (ln004==1)| (mn004==1)) //yes
replace medicareb= 0 if ( (kn004==5)| (ln004==5)| (mn004==5)) //no
replace medicareb= 0 if ((medicare== 0))
label variable medicareb "Medicare Part B, 1=yes"

//Medicaid coverage any time since last core interview or last 2 years ?
// r2588 r2589
generate byte medicaid = .
replace medicaid= 1 if ((kn005==1)| (ln005==1)| (mn005==1)) //yes
replace medicaid= 0 if ((kn005==5)| (ln005==5) | (mn005==5)) //no
label variable medicaid "Medicaid, 1=yes"

// CHAMPUS or other veterans health care at time of death?
// r2598
generate byte champus = .
replace champus = 1 if ((kn007==1)|(ln007==1)|(mn007==1)) //yes
replace champus = 0 if ((kn007==5)|(ln007==5)|(mn007==5))  //no
label variable champus "CHAMPUS, 1=yes"

// HMO for Medicare / Medicaid coverage?
// r2601
//only asked if report medicare or medicaid coverage
generate byte hmo = .
replace hmo= 1 if ((kn009==1)|(ln009==1)|(mn009==1)) //yes
replace hmo = 0 if ((kn009==5)|(ln009==5)|(mn009==5)) //no
label variable hmo "HMO, 1=yes"

// Private health insurance plans?
// r2623

generate medigap = .
replace medigap= 1 if ((kn023>=1&kn023<98) | (ln023>=1&ln023<98) | (mn023>=1&mn023<98)) //yes
replace medigap= 0 if ((kn023==0)| (ln023==0)| (mn023==0)) //no
label variable medigap "Medigap, 1=yes"
tab medigap, missing

tab medicare core_year, missing
tab medicareb core_year, missing
tab medicaid core_year, missing
tab champus core_year, missing
tab hmo core_year, missing
tab medigap core_year, missing

egen catinsur= concat(medicare medicareb medicaid champus hmo medigap)
tab catinsur

*********************************************************************************
*********************************************************************************
//Nursing home use variables - core interview
*********************************************************************************
*********************************************************************************

*********************************************************************************
// Nursing home residence currently - core interview
*********************************************************************************
//coding changes 1=yes, 5=no
//different from exit interview which asks about hospice for some years
generate nhres = .
replace nhres = 1 if ((ka028==1)| (la028==1)| (ma028==1))
replace nhres = 0 if ((ka028==5)| (la028==5)| (ma028==5))
label variable nhres "Nursing Home Resident"
//label define nhres 0 "No" 1 "Yes", modify
//label values nhres nhres
tab nhres core_year, missing

*********************************************************************************
// Nursing home residence currently - start month, year
*********************************************************************************
/*
Month:
1998 Core 	F718
2000 Core 	G789
2002-10 Core 	xA065
Year:
1998 Core 	F719
2000 Core 	G790
2002-10 Core 	xA066
*/
gen nhres_start_mo = .
replace nhres_start_mo = ka065 if core_year==2006
replace nhres_start_mo = la065 if core_year==2008
replace nhres_start_mo = ma065 if core_year==2010
la var nhres_start_mo "Start month for curr. NH residents"
tab nhres_start_mo core_year, missing

gen nhres_start_yr = .
replace nhres_start_yr = ka066 if core_year==2006
replace nhres_start_yr = la066 if core_year==2008
replace nhres_start_yr = ma066 if core_year==2010
replace nhres_start_yr = . if inlist(nhres_start_yr,9998,9999)
la var nhres_start_yr "Start year for curr. NH residents"
tab nhres_start_yr core_year, missing



*********************************************************************************
// Nursing home in past 2 years - core interview
// If responded currently in nh, this is coded as yes
*********************************************************************************
/*
2000 Core 	G2571
2002 Core 	HN114
2004 Core 	JN114
2006 Core 	KN114
2008 Core 	LN114
2010 Core 	MN114
*/
generate nhres_2yr = .
replace nhres_2yr = 1 if ( (kn114==1)| (ln114==1)| (mn114==1))
replace nhres_2yr = 0 if ( (kn114==5)| (ln114==5)| (mn114==5))
label variable nhres_2yr "Nursing Home Resident in the past 2 years"
//label define nhres_2yr 0 "No" 1 "Yes", modify
//label values nhres_2yr nhres
tab nhres_2yr  core_year, missing

*********************************************************************************
// Number of times in a nursing home in past 2 years - core interview
*********************************************************************************
/*
2000 Core 	G2572
2002 Core 	HN115
2004 Core 	JN115
2006 Core 	KN115
2008 Core 	LN115
2010 Core 	MN115
*/
generate nh_stays = .
replace nh_stays = kn115 if core_year==2006
replace nh_stays = ln115 if core_year==2008
replace nh_stays = mn115 if core_year==2010
replace nh_stays = 0 if nhres_2yr ==0
replace nh_stays = . if inlist(nh_stays,98,99)
label variable nh_stays "Number of times a patient in NH past 2 years"
tab nh_stays core_year,missing

*********************************************************************************
// Total nursing home nights in the past 2 years - core interview
*********************************************************************************
/*Nights response:
2000 Core 	G2573
2002 Core 	HN116
2004 Core 	JN116
2006 Core 	KN116
2008 Core 	LN116
2010 Core 	MN116
996 = continuous since last core interview; 998, 999 = dont know / refused
Months response:
2000 Core 	G2574
2002 Core 	HN117
2004 Core 	JN117
2006 Core 	KN117
2008 Core 	LN117
2010 Core 	MN117
998, 999 = dont know / refused
Variable coded here is in nights, convert months * 30.5 = number of nights,
continuous = 365*2 = 770
Some respondants report values greater than 2 years, in those cases, cap at 770 days / 2 years
*/
gen nh_nights=.
replace nh_nights= kn116 if (core_year==2006 & kn117==.)
replace nh_nights= ln116 if (core_year==2008 & ln117==.)
replace nh_nights= mn116 if (core_year==2010 & mn117==.)
replace nh_nights=770 if nh_nights==996
replace nh_nights=. if inlist(kn116,998,999)|inlist(ln116,998,999)|inlist(mn116,998,999)
sum nh_nights, detail

gen nh_mos=.
replace nh_mos= kn117 if (core_year==2006 & kn116==.)
replace nh_mos= ln117 if (core_year==2008 & ln116==.)
replace nh_mos= mn117 if (core_year==2010 & mn116==.)
replace nh_mos=. if inlist(kn117,98,99)|inlist(ln117,98,99)|inlist(mn117,98,99)
tab nh_mos core_year, missing
sum nh_mos, detail

replace nh_nights=ceil(30.5*nh_mos) if nh_mos!=.
replace nh_nights=770 if nh_nights>770
replace nh_nights=0 if nhres_2yr==0
sum nh_nights, detail
sum nh_nights if(nhres_2yr==1), detail
tab nh_nights core_year, missing

drop nh_mos

*********************************************************************************
// Nursing home covered by insurance - core interview
// missing if no nursing home
*********************************************************************************

gen nh_ins = .
replace nh_ins = 1 if ((kn118==1)|(ln118==1)|(mn118==1))
replace nh_ins = 2 if (inlist(kn118,2,3)|inlist(ln118,2,3)|inlist(mn118,2,3))
replace nh_ins = 3 if ((kn118==5)|(ln118==5)|(mn118==5))
replace nh_ins = 4 if (inlist(kn118,7,8,9)|inlist(ln118,7,8,9)|inlist(mn118,7,8,9))
la var nh_ins "Nursing home covered by insurance"
// la define nh_ins 1 "Fully covered by insurance" 2 "Partially covered (or covered w/ copay)" 3 ///
//	"Not covered" 4 "Unknown, not provided"
// la val nh_ins nh_ins
tab nh_ins core_year, missing
tab nh_ins core_year if nhres_2yr ==1, missing

*********************************************************************************
// Living with spouse - core interview
*********************************************************************************
generate resspouse = .
replace resspouse = 0 if ((ka030==5)|(la030==5)|(ma030==5)|(married==0))
replace resspouse = 1 if ((ka030==1)|(la030==1)|(ma030==1))
label variable resspouse "Living with Spouse/Partner"
//label define resspouse 1 "Live with Spouse" 0 "No", modify
tab resspouse, missing

*********************************************************************************
// Number of household members - core interview
*********************************************************************************
generate hhm = .
replace hhm = ka098 if (core_year==2006)
replace hhm = la098 if (core_year==2008)
replace hhm = ma098 if (core_year==2010)
label variable hhm "Number of Household Members"
sum hhm, detail
tab hhm, missing

*********************************************************************************
// Number of Children - core interview
*********************************************************************************
generate child = .
replace child = ka101 if (core_year==2006)
replace child = la101 if (core_year==2008)
replace child = ma101 if (core_year==2010)
label variable child "Number of Children, not their children's spouses"
sum child, detail

*********************************************************************************
// Number of Grandchildren - core
*********************************************************************************
//var = 95 if none assumed, otherwise 0-80 max
generate gchil = .
replace gchil = ke046 if (core_year==2006)
replace gchil = le046 if (core_year==2008)
replace gchil = me046 if (core_year==2010)
replace gchil = 0 if gchil==95
replace gchil = . if inlist(gchil,98,99,998,999)
label variable gchil "Number of Grandchildren (capped at 80)"
sum gchil, detail

*********************************************************************************
// Total Number of Children, Children-in-law, and Grandchildren
*********************************************************************************
generate allchil = .
replace allchil = ka113 if (core_year==2006)
replace allchil = la113 if (core_year==2008)
replace allchil = ma113 if (core_year==2010)
label variable allchil "Total Number of Children, Children-in-law, and Grandchildren"
sum allchil, detail

*********************************************************************************
// Number of Resident Children
*********************************************************************************
generate reschil = .
replace reschil = ka099 if (core_year==2006)
replace reschil = la099 if (core_year==2008)
replace reschil = ma099 if (core_year==2010)
label variable reschil "Number of Resident Children"
sum reschil, detail

/*******************************************************************************************
** Self reported health status
*******************************************************************************************/

/**Self Rated Health "Don't Know/Refused" (only 2 cases) included with missing 
Cross-Wave Equivalents for:
C001 RATE HEALTH 
2000 Core 	G1226
2002 Core 	HC001
2002 Exit 	N/A
2004 Core 	JC001
2004 Exit 	N/A
2006 Core 	KC001
2006 Exit 	N/A
2008 Core 	LC001
2008 Exit 	N/A
2010 Core 	MC001
*/

gen srh = .
replace srh = kc001 if core_year==2006
replace srh = lc001 if core_year==2008
replace srh = mc001 if core_year==2010
replace srh = . if inlist(srh,8,9)
label var srh "Self Rated Health"
//label define srh 1 "Excellent" 2 "Very Good" 3 "Good" 4 "Fair" 5 "Poor"
//label val srh srh
tab srh core_year,missing

/**********************************************************************/
// CESD - depression scale, from katherine
/**********************************************************************/
/*variable list used:
cesd questions:
g169 / 110 depressed
g1670 / 111 effort
g1671 / 112 restless sleep
g1672 / 113 happy (this is a switch happy=yes=1 - not depressed)
g1673 / 114 lonely
g1674 / 115 enjoyed life (yes=1=not depressed)
g1675 / 116 sad
g1676 / 117 unmotivated - could not get going
other questions:
psych treatment 1=yes 5=no, only asked if reported having psych problems (psych_hrs==1)
2000 Core 	G1324
2002 Core 	HC067
2004 Core 	JC067
2006 Core 	KC067
2008 Core 	LC067
2010 Core 	MC067
psych medications 1=yes 5 = no, only asked if reported having psych problems (psych_hrs==1)
2000 Core 	G1325
2002 Core 	HC068
2004 Core 	JC068
2006 Core 	KC068
2008 Core 	LC068
2010 Core 	MC068
Note: the above 2 variables are processed in the section on HRS comorbidities and not here
because of their skip pattern! Different from spouse_data_mar11_2013 code
ever drink alcohol 1 = yes ; 3,5 =no
2000 Core 	G1415
2002 Core 	HC128
2004 Core 	JC128
2006 Core 	KC128
2008 Core 	LC128
2010 Core 	MC128
number of drinks per day in past 3 months; 98-99=dont know or refused
2000 Core 	G1417
2002 Core 	HC130
2004 Core 	JC130
2006 Core 	KC130
2008 Core 	LC130
2010 Core 	MC130
//days per week drink if 0 don't ask above question re drinks/day
2000 Core 	G1416
2002 Core 	HC129
2004 Core 	JC129
2006 Core 	KC129
2008 Core 	LC129
2010 Core 	MC129

2000: g1669-g1677 (1= yes, 5=no) section c
2002: h110-117 section d
*/
//cesd1 - depressed in the last week
gen byte cesd1 = .
replace cesd1 = 1 if (kd110==1)|(ld110==1)|(md110==1)
replace cesd1 = 0 if (kd110==5)|(ld110==5)|(md110==5)
la var cesd1 "CESD - Depressed in last week"
tab cesd1 core_year,missing

//cesd2 - felt activities were effort in the last week
gen byte cesd2 = .
replace cesd2 = 1 if (kd111==1)|(ld111==1)|(md111==1)
replace cesd2 = 0 if (kd111==5)|(ld111==5)|(md111==5)
la var cesd2 "CESD - Activities were effort in last week"
tab cesd2 core_year,missing

//cesd3 - restless sleep in the last week
gen byte cesd3 = .
replace cesd3 = 1 if (kd112==1)|(ld112==1)|(md112==1)
replace cesd3 = 0 if (kd112==5)|(ld112==5)|(md112==5)
la var cesd3 "CESD - Restless Sleep in last week"
tab cesd3 core_year,missing

//cesd4 - was happy in the last week
//this one is reversed 0 = was happy 1 = was not happy
gen byte cesd4 = .
replace cesd4 = 0 if (kd113==1)|(ld113==1)|(md113==1)
replace cesd4 = 1 if (kd113==5)|(ld113==5)|(md113==5)
la var cesd4 "CESD - Was not happy in last week"
tab cesd4 core_year,missing

//cesd5 - lonely in the last week
gen byte cesd5 = .
replace cesd5 = 1 if (kd114==1)|(ld114==1)|(md114==1)
replace cesd5 = 0 if (kd114==5)|(ld114==5)|(md114==5)
la var cesd5 "CESD - Lonely in last week"
tab cesd5 core_year,missing

//cesd6 - enjoyed life in the last week
gen byte cesd6 = .
replace cesd6 = 0 if (kd115==1)|(ld115==1)|(md115==1)
replace cesd6 = 1 if (kd115==5)|(ld115==5)|(md115==5)
la var cesd6 "CESD - Did not enjoy life in last week"
tab cesd6 core_year,missing

//cesd7 - felt sad in the last week
gen byte cesd7 = .
replace cesd7 = 1 if (kd116==1)|(ld116==1)|(md116==1)
replace cesd7 = 0 if (kd116==5)|(ld116==5)|(md116==5)
la var cesd7 "CESD - Sad in last week"
tab cesd7 core_year,missing

//cesd8 - unmotivated in the last week
gen byte cesd8 = .
replace cesd8 = 1 if (kd117==1)|(ld117==1)|(md117==1)
replace cesd8 = 0 if (kd117==5)|(ld117==5)|(md117==5)
la var cesd8 "CESD - Unmotivated in last week"
tab cesd8 core_year,missing

//ever drink alcohol
gen byte ever_drink = .
replace ever_drink = 1 if (kc128==1)|(lc128==1)|(mc128==1)
replace ever_drink = 0 if (inlist(kc128,3,5)|inlist(lc128,3,5)|inlist(mc128,3,5))
la var ever_drink "Ever drink alcoholic beverages"
tab ever_drink core_year,missing

//days per week drink
gen days_drink = .
replace days_drink = kc129 if(core_year==2006)
replace days_drink = lc129 if(core_year==2008)
replace days_drink = mc129 if(core_year==2010)
replace days_drink = . if inlist(days_drink,8,9)
replace days_drink = 0 if ever_drink==0
la var days_drink "Days per week drink alcoholic beverages"
tab days_drink core_year,missing


//number of drinks per day, coded to 0 if don't drink, . if missing
//different from how Ling had it initally coded where . = missing or don't drink (not asked)
gen n_drinks_3m = .
replace n_drinks_3m = kc130 if(core_year==2006)
replace n_drinks_3m = lc130 if(core_year==2008)
replace n_drinks_3m = mc130 if(core_year==2010)
replace n_drinks_3m = . if inlist(n_drinks_3m,98,99)
replace n_drinks_3m = 0 if (ever_drink==0 | days_drink==0)
la var n_drinks_3m "Number of alcoholic drinks per day"
tab n_drinks_3m core_year,missing

/**********************************************************************/
// Smoker status variables
/**********************************************************************/
/*
Ever smoke? 
2000 core: G1399 // have previous wave ever smoked g228
2002 core: HC116 // no prev wave ever smoked, missing if not new respondant
2004 core: JC116 // ever reported smoking z205 variable
2006 core: KC116 // ever reported smoking z205 variable
2008 core: LC116 // ever reported smoking z205 variable
2010 core: MC116 // ever reported smoking z205 variable
Only asked if first interview so refer back to previous wave ever smoke
questions

JZ205    R REPORTED THAT S/HE EVER SMOKED
         Section: PR    Level: Respondent      Type: Numeric    Width: 1   Decimals: 0
         CAI Reference: RVARS.Z205_EverSmoked_V


        R REPORTED THAT S/HE EVER SMOKED
        ..................................................................................
         9594           1. YES
         7059           5. NO
         3476       Blank. INAP (Inapplicable)
2004 Core 	JZ205
2004 Exit 	TZ205
2006 Core 	KZ205
2006 Exit 	UZ205
2008 Core 	LZ205
2008 Exit 	VZ205
2010 Core 	MZ205
2010 Exit 	WZ205

G228      PR228.PREV WAVE R EVER SMOKE              
          Section: PR           Level: Respondent      CAI Reference: Q228
          Type: Numeric         Width: 1               Decimals: 0
          ................................................................................
            258         0. Prior wave information not available - not interviewed in
                           earlier wave or new spouse/partner
           5702         1. YES
          13620         5. NO
*/
// Ever smoked?
gen smoke_ever=.
replace smoke_ever=1 if (kz205==1 | kc116==1) & core_year==2006
replace smoke_ever=0 if (kz205==5 | kc116==5) & core_year==2006
replace smoke_ever=1 if (lz205==1 | lc116==1) & core_year==2008
replace smoke_ever=0 if (lz205==5 | lc116==5) & core_year==2008
replace smoke_ever=1 if (mz205==1 | mc116==1) & core_year==2010
replace smoke_ever=0 if (mz205==5 | mc116==5) & core_year==2010
la var smoke_ever "Ever smoked?"
tab smoke_ever core_year, missing

// Currently smoke
/* JC117    SMOKE CIGARETTES NOW
         Section: C     Level: Respondent      Type: Numeric    Width: 1   Decimals: 0
         CAI Reference: SecC.Smoking.C117_
         2000 Link: G1400 2002 Link: HC117

        Do you smoke cigarettes now?
        ..................................................................................
         3012           1. YES
         8460           5. NO
            1           8. DK (Don't Know); NA (Not Ascertained)
            1           9. RF (Refused)
         8655       Blank. INAP (Inapplicable)


2000 core: G1400
2002 core: HC117
2004 core: JC117
2006 core: KC117
2008 core: LC117
2010 core: MC117
Only ask if reported ever smoked in previous question or past wave
*/
gen smoke_curr=.
replace smoke_curr = 1 if (kc117==1|lc117==1|mc117==1)
replace smoke_curr = 0 if (kc117==5|lc117==5|mc117==5)
replace smoke_curr = 0 if smoke_ever==0
la var smoke_curr "Currently smoke cigarettes?"
tab smoke_curr core_year,missing

/**********************************************************************/
//Vigorous exercise
/**********************************************************************/
/*question in 2000,2002: Do you do vigorous physical activity 3x per
week or more? 1=yes, 5=no
Question changed in 2004-2010: How often do you do vigourous
physical activity? 
1=more than 1xper week
2=1xper week
3=1-3 times a month
4 = hardly ever or never
7 = every day
8 = dont know
9 = refused
Here coded as every day or more than 1x per week = yes*/
gen byte vig_phy_act=.
replace vig_phy_act=1 if inlist(kc223,1,7)|inlist(lc223,1,7)|inlist(mc223,1,7)
replace vig_phy_act=0 if inlist(kc223,2,3,4)|inlist(lc223,2,3,4)|inlist(mc223,2,3,4)

la var vig_phy_act "Vigorous physical activity more than 1x per week"
tab vig_phy_act core_year,missing



/**********************************************************************/
// Body mass index variables, calculated from height and weight
// These variables have a lot of missingness, need to
// clean up for each beneficiary if required for analysis
/**********************************************************************/
//current weight, lbs, asked every interview
gen wgt_curr = .
replace wgt_curr = kc139 if core_year==2006
replace wgt_curr = lc139 if core_year==2008
replace wgt_curr = mc139 if core_year==2010
replace wgt_curr = . if inlist(wgt_curr,998,999)
la var wgt_curr "Weight current wave, in pounds"
sum wgt_curr

//current height, ft, only asked first interview
gen height_ft_temp = .
replace height_ft_temp = kc141 if core_year==2006
replace height_ft_temp = lc141 if core_year==2008
replace height_ft_temp = mc141 if core_year==2010
replace height_ft_temp = . if inlist(height_ft,8,9)
la var height_ft_temp "Height, feet"
tab height_ft_temp core_year, missing

//current height, inches, only asked first interview
gen height_in_temp = .
replace height_in_temp = kc142 if core_year==2006
replace height_in_temp = lc142 if core_year==2008
replace height_in_temp = mc142 if core_year==2010
replace height_in_temp = . if (height_in_temp >12)
la var height_in_temp "Height, inches"
tab height_in_temp core_year, missing

/********************************************************************/
// Hours spent helping relatives or friends
/********************************************************************/
/*
Refer to codebooks as questions changed between waves 2000, 2002 and 2004
2006:
G198: Have you spent any time in the past 12 months helping friends, neighbors, or
         relatives who did not live with you and did not pay you for the help?0-9000 = hours
1 = Yes, 5 = No, 8,9 Don't know, refused

G199: If G198=Yes, then ask:
Altogether, would you say the time amounted to less than 100 hours, more than
         100 hours or what?
1 = Less than 100 hours
3 = About 100 hours
5 = More than 100 hours
8,9 = DK, Refused

G200: If G199 = more than 100 hours, then ask:
Would it be less than 200 hours, more than 200 hours or what?

G201: If G199 = less than 100 hours, then ask:
Would it be less than 50 hours, more than 50 hours or what?
*/
//indicator variable
//note that for 1998-2002 if response was not provided as 0 in first question, code
//as being a helper for response < 100 hours
//this likely overestimates the number of people who are helpers in these years
gen help_friends = .
replace help_friends = 1 if kg198==1 | lg198==1 | mg198==1
replace help_friends = 0 if kg198==5 | lg198==5 | mg198==5
tab help_friends core_year, missing

//categorical variable, driven by 2004 and later survey format
gen help_friends_hours = .
replace help_friends_hours = 0 if help_friends ==0 //none

replace help_friends_hours = 1 if core_year==2006 & inlist(kg199,1,3)
replace help_friends_hours = 1 if core_year==2008 & inlist(lg199,1,3)
replace help_friends_hours = 1 if core_year==2010 & inlist(mg199,1,3)

replace help_friends_hours = 2 if core_year==2006 & inlist(kg200,1,3)
replace help_friends_hours = 2 if core_year==2008 & inlist(lg200,1,3)
replace help_friends_hours = 2 if core_year==2010 & inlist(mg200,1,3)

replace help_friends_hours = 3 if kg200==5 | lg200==5 | mg200==5

tab help_friends_hours, missing
tab help_friends, missing
tab help_friends_hours core_year,missing
tab help_friends core_year,missing
tab help_friends help_friends_hours, missing

save core_06_10_clean1.dta, replace

log close


H="Core 06-10 - variable cleaning part 2 adls and iadls"
/*variable cleaning for HRS core 2006-2010
Most code is taken from the HRS Outline_11_22_11.txt file
and modified to clean 2006-2010 core dataset

2nd part of core variable cleaning
*/

capture log close

clear all
set mem 1g
set matsize 800
set more off


//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\2_HRS_Core_06_10_clean2-LOG.txt", text replace

cd `datapath'

use core_06_10_clean1.dta

*************************************************************************
//   ADLs from core interviews
*************************************************************************

*******************************************************************************************
** These variables are drawn from the Core interview. In general the questions 
** were framed "Because of a health or memory problem, do you have any difficulty...
** .. Does anyone ever help you...?"
** " Each ADL is coded "Yes- need help" if the 
** response was "Yes"; and "No" if the item was skipped in the interview.  ADL questions 
** were skipped if respondents were able to do all higher level function in the 
** preceding series of questions, such as climb stairs. "Don't Know" "Not Ascertained" 
** and "Refused" responses are coded as missing. 
*******************************************************************************************

** ADLs **
//Exit interviews include variable for adl_bedbound, not present in core interviews
//so not included here


/*ADL questions are skipped if the adl check variable indicates no difficulty
with first set of questions asked, therefore assign an adl_core_check variable to capture this 
This variable = 0 if the ADL questions are NOT asked because person assumed
to have no adl difficulties

For 2002-2010 - ADL questions only asked if G013TNagiCkpt_A > 0
So assign ADL = 0 if G013TNagiCkpt_A=0
2002 Core 	HG013
2002 Exit 	N/A
2004 Core 	JG013
2004 Exit 	N/A
2006 Core 	KG013
2006 Exit 	N/A
2008 Core 	LG013
2008 Exit 	N/A
2010 Core 	MG013
*/

//create adl count flag variable, values = 0-10

//create combined count variable for all years
gen adl_core_check=.
replace adl_core_check=kg013 if core_year==2006
replace adl_core_check=lg013 if core_year==2008
replace adl_core_check=mg013 if core_year==2010
tab adl_core_check core_year, missing
sum adl_core_check, detail

/**Dressing, g2724 hg015 jg015
Help dressing?
2000 Core 	G2724
2002 Core 	HG015
2002 Exit 	SG015
2004 Core 	JG015
2004 Exit 	TG015
2006 Core 	KG015
2006 Exit 	UG015
2008 Core 	LG015
2008 Exit 	VG015
2010 Core 	MG015

Difficulty dressing?
2000 Core 	G2723
2002 Core 	HG014
2002 Exit 	N/A
2004 Core 	JG014
2004 Exit 	N/A
2006 Core 	KG014
2006 Exit 	N/A
2008 Core 	LG014
2008 Exit 	N/A
2010 Core 	MG014
1 = yes
5 = no
6 = can't do
7 = don't do
8,9 = refused, not asked

1 = if need help (only asked report having difficulty)
0 if don't need help
0 if report don't have difficulty
*/ 

//report no difficulty dressing, used as flag for asking other adl questions
//can't do set to yes, don't do set to missing
gen byte adl_diff_dr = .
replace adl_diff_dr = 1 if (kg014==1)|(kg014==6)| ///
	(lg014==1)|(lg014==6)|(mg014==1)|(mg014==6)
replace adl_diff_dr = 0 if (kg014==5)|(lg014==5)|(mg014==5)
replace adl_diff_dr = 0 if adl_core_check==0
la var adl_diff_dr "Difficulty dressing 1=yes"
tab adl_diff_dr core_year, missing

generate adl_dr_core = .
//not asked if need help but report no difficulty dressing
replace adl_dr_core = 0 if adl_diff_dr==0
//not asked because adl check flag = 0
replace adl_dr_core = 0 if adl_core_check==0
//report need help
replace adl_dr_core = 1 if ((kg015==1)|(lg015==1)|(mg015==1))
//asked if need help, say no
replace adl_dr_core = 0 if ((kg015==5)|(lg015==5)|(mg015==5))
//asked if need help, refused, don't respond
replace adl_dr_core = . if ((kg015==8)|(lg015==8)|(mg015==8)|(kg015==9)|(lg015==9)|(mg015==9))
label variable adl_dr_core "Help Dressing - Core int."
//label define adl_dr_core 0 "No" 1 "Yes", modify
//label values adl_dr_core adl_dr_core
tab adl_dr_core core_year, missing

//Walking, g2729 hg020 jg020 
/*not asked if adl_core_check==1 and adl_dr_core==0
so not asked if have an adl difficulty but report no difficulty getting dressed*/

gen adl_diff_wk = .
replace adl_diff_wk = 1 if (kg016==1)|(kg016==6)| ///
	(lg016==1)|(lg016==6)|(mg016==1)|(mg016==6)
replace adl_diff_wk = 0 if (kg016==5)|(lg016==5)|(mg016==5)
replace adl_diff_wk = 0 if (adl_diff_dr==0 & adl_core_check==1) | adl_core_check==0
la var adl_diff_wk "Difficulty walking? 1=yes"
tab adl_diff_wk core_year, missing

gen adl_equip_wk = .
replace adl_equip_wk = 1 if (kg017==1)|(lg017==1)|(mg017==1)
replace adl_equip_wk = 0 if (kg017==5)|(lg017==5)|(mg017==5)
la var adl_equip_wk "Use equipment to walk? 1=yes"
tab adl_equip_wk core_year, missing

generate adl_wk_core = .
//set = 0 if not asked because of adl flags
replace adl_wk_core = 0 if adl_core_check==0
replace adl_wk_core = 0 if (adl_core_check==1 & adl_diff_dr==0)
tab adl_wk_core, missing 
// set = 0 if not asked b/c report no difficulty walking
replace adl_wk_core = 0 if adl_diff_wk==0
// set based on repsonses
replace adl_wk_core = 1 if ((kg020==1)|(lg020==1)|(mg020==1))
replace adl_wk_core = 0 if ((kg020==5)|(lg020==5)|(mg020==5))
replace adl_wk_core = . if ((kg020==8)|(lg020==8)|(mg020==8)|(kg020==9)|(lg020==9)|(mg020==9))

label var adl_wk_core "Help Walking - core"
//label define adl_wk_core 0 "No" 1 "Yes", modify
//label values adl_wk_core adl_wk_core
tab adl_wk_core core_year, missing 

//Bathing, g2745 hg022 jg022 
/*Cross-Wave Equivalents for:
G022 ADL BATHE HELP 
1995 Core D1897 
1996 Core E1921 
1998 Core F2447 
2000 Core G2745 
2002 Core HG022 
2002 Exit SG022 
2004 Core JG022 
2004 Exit TG022 
2006 Core KG022 
2006 Exit UG022 
2008 Core LG022 
2008 Exit VG022 
2010 Core MG022 
2010 Exit WG022 
Not asked if adl_count_flag = 1 and difficulty dressing = no
*/

gen byte adl_diff_bh = .
replace adl_diff_bh = 1 if (kg021==1)|(kg021==6)| ///
	(lg021==1)|(lg021==6)|(mg021==1)|(mg021==6)
replace adl_diff_bh = 0 if (kg021==5)|(lg021==5)|(mg021==5)
replace adl_diff_bh = 0 if (adl_diff_dr==0 & adl_core_check==1) |  adl_core_check==0
la var adl_diff_bh "Difficulty bathing? 1=yes"
tab adl_diff_bh core_year, missing

generate adl_bh_core = .
//set = 0 if not asked because of adl flags or no difficulty reported
replace adl_bh_core = 0 if adl_core_check==0
replace adl_bh_core = 0 if (adl_core_check==1 & adl_diff_dr==0)
// set based on responses
replace adl_bh_core = 1 if ((kg022==1)|(lg022==1)|(mg022==1))
replace adl_bh_core = 0 if ((kg022==5)|(lg022==5)|(mg022==5))
replace adl_bh_core = . if ((kg022==8)|(lg022==8)|(mg022==8)|(kg022==9)|(lg022==9)|(mg022==9))
replace adl_bh_core = 0 if adl_diff_bh==0
label var adl_bh_core "Help Bathing - core"
//label define adl_bh_core 0 "No" 1 "Yes", modify
//label values adl_bh_core adl_bh_core
tab adl_bh_core core_year, missing 


/*
**Eating, g2755 hg024 jg024 
Cross-Wave Equivalents for:
G024 ADL EAT HELP 
1995 Core D1907 
1996 Core E190 
1998 Core F2457 
2000 Core G2755 
2002 Core HG024 
2002 Exit SG024 
2004 Core JG024 
2004 Exit TG024 
2006 Core KG024 
2006 Exit UG024 
2008 Core LG024 
2008 Exit VG024 
2010 Core MG024 
2010 Exit WG024 
*/

gen byte adl_diff_e = .
replace adl_diff_e = 1 if (kg023==1)|(kg023==6)| ///
	(lg023==1)|(lg023==6)|(mg023==1)|(mg023==6)
replace adl_diff_e = 0 if (kg023==5)|(lg023==5)|(mg023==5)
replace adl_diff_e = 0 if (adl_diff_dr==0 & adl_core_check==1) |  adl_core_check==0
la var adl_diff_e "Difficulty eating? 1=yes"
tab adl_diff_e core_year, missing

generate adl_e_core = .
//set = 0 if not asked because of adl flags or no difficulty reported
replace adl_e_core = 0 if adl_core_check==0
replace adl_e_core = 0 if (adl_core_check==1 & adl_diff_dr==0)
//set based on responses
replace adl_e_core = 1 if ((kg024==1)|(lg024==1)|(mg024==1))
replace adl_e_core = 0 if ((kg024==5)|(lg024==5)|(mg024==5))
replace adl_e_core = . if ((kg024==8)|(lg024==8)|(mg024==8)|(kg024==9)|(lg024==9)|(mg024==9))
replace adl_e_core = 0 if adl_diff_e==0
label var adl_e_core "Help Eating - core"
//label define adl_e_core 0 "No" 1 "Yes", modify
//label values adl_e_core adl_e_core
tab adl_e_core core_year, missing 


//Transfers to Bed, g2768 hg029 jg029

gen byte adl_diff_tx = .
replace adl_diff_tx = 1 if (kg025==1)|(kg025==6)| ///
	(lg025==1)|(lg025==6)|(mg025==1)|(mg025==6)
replace adl_diff_tx = 0 if (kg025==5)|(lg025==5)|(mg025==5)
replace adl_diff_tx = 0 if (adl_diff_dr==0 & adl_core_check==1) |  adl_core_check==0
la var adl_diff_tx "Difficulty transfers to bed? 1=yes"
tab adl_diff_tx core_year, missing

gen byte adl_equip_tx = .
replace adl_equip_tx = 1 if (kg026==1)|(lg026==1)|(mg026==1)
replace adl_equip_tx = 0 if (kg026==5)|(lg026==5)|(mg026==5)
la var adl_equip_tx "Use equipment transfers to bed? 1=yes"
tab adl_equip_tx core_year, missing

generate adl_tx_core = .
//set = 0 if not asked because of adl flags or no difficulty reported
replace adl_tx_core = 0 if adl_core_check==0
replace adl_tx_core = 0 if (adl_core_check==1 & adl_diff_dr==0)
//set based on responses
replace adl_tx_core = 1 if ((kg029==1)|(lg029==1)|(mg029==1))
replace adl_tx_core = 0 if ((kg029==5)|(lg029==5)|(mg029==5))
replace adl_tx_core = . if ((kg029==8)|(lg029==8)|(mg029==8)|(kg029==9)|(lg029==9)|(mg029==9))
replace adl_tx_core = 0 if adl_diff_tx == 0
label var adl_tx_core "Help with Transfers to Bed - core"
//label define adl_tx_core 0 "No" 1 "Yes", modify
//label values adl_tx_core adl_tx_core
tab adl_tx_core core_year, missing 


//Toileting, g2778 hg00 jg00 
/*2000 Core 	G2778
2002 Core 	HG031
2002 Exit 	SG031
2004 Core 	JG031
2004 Exit 	TG031
2006 Core 	KG031
2006 Exit 	UG031
2008 Core 	LG031
2008 Exit 	VG031
2010 Core 	MG031
2010 Exit 	WG031 */

gen byte adl_diff_t = .
replace adl_diff_t = 1 if (kg030==1)|(kg030==6)| ///
	(lg030==1)|(lg030==6)|(mg030==1)|(mg030==6)
replace adl_diff_t = 0 if (kg030==5)|(lg030==5)|(mg030==5)
replace adl_diff_t = 0 if (adl_diff_dr==0 & adl_core_check==1) |  adl_core_check==0
la var adl_diff_t "Difficulty toileting? 1=yes"
tab adl_diff_t core_year, missing

generate adl_t_core = .
//set = 0 if not asked because of adl flags or no difficulty reported
replace adl_t_core = 0 if adl_core_check==0
replace adl_t_core = 0 if (adl_core_check==1 & adl_diff_dr==0)
//set based on responses
replace adl_t_core = 1 if ((kg031==1)|(lg031==1)|(mg031==1))
replace adl_t_core = 0 if ((kg031==5)|(lg031==5)|(mg031==5))
replace adl_t_core = . if ((kg031==8)|(lg031==8)|(mg031==8)|(kg031==9)|(lg031==9)|(mg031==9))
replace adl_t_core = 0 if ((kg030==5)|(lg030==5)|(mg030==5))
replace adl_t_core = 0 if adl_core_check==0
label var adl_t_core "Help Toileting - core"
//label define adl_t_core 0 "No" 1 "Yes", modify
//label values adl_t_core adl_t_core
tab adl_t_core core_year, missing 

/**********************************************************************************/
/**********************************************************************************/
// IADLs
/**********************************************************************************/
/**********************************************************************************/

/*Difficulty using maps
1998 Core 	F2553
2000 Core 	G2851
2002-2010 	HG040-MG040*/
gen byte iadl_diff_map = .
replace iadl_diff_map = 1 if (kg040==1)|(kg040==6)| ///
	(lg040==1)|(lg040==6)|(mg040==1)|(mg040==6)
replace iadl_diff_map = 0 if (kg040==5)|(lg040==5)|(mg040==5)
la var iadl_diff_map "Difficulty using maps? 1=yes"
tab iadl_diff_map core_year, missing


/*Meal Prep, r2002 
Cross-Wave Equivalents for:
G043 IADL MEAL PREPARATION HELP 
1998 Core F2565 
2000 Core G2863 
2002 Core HG043 
2002 Exit SG043 
2004 Core JG043 
2004 Exit TG043 
2006 Core KG043 
2006 Exit UG043 
2008 Core LG043 
2008 Exit VG043 
2010 Core MG043 
2010 Exit WG043 
Not asked if
1. Live in nursing home g558 / _a028
2. Report no difficulty with task g2860 or
3. Report can't / don't do task (g2860) but that its not because of a health problem
Assign yes, need help, if live in nursing home
Assign no, no help meeded, if no difficulty or can't / don't do but not b/c of health prob.
*/

//difficulty with task b/c of health or memory problem?
gen byte iadl_diff_mp=.
replace iadl_diff_mp = 1 if (kg041==1)|(lg041==1)|(mg041==1)
replace iadl_diff_mp = 1 if inlist(kg041,6,7) & kg042==1
replace iadl_diff_mp = 1 if inlist(lg041,6,7) & lg042==1
replace iadl_diff_mp = 1 if inlist(mg041,6,7) & mg042==1	
replace iadl_diff_mp = 0 if (kg041==5)|(lg041==5)|(mg041==5)
replace iadl_diff_mp = 0 if inlist(kg041,6,7) & kg042==5
replace iadl_diff_mp = 0 if inlist(lg041,6,7) & lg042==5
replace iadl_diff_mp = 0 if inlist(mg041,6,7) & mg042==5	
la var iadl_diff_mp "Difficulty meal prep? 1=yes"
tab iadl_diff_mp core_year, missing

gen byte iadl_mp_core=.
//set for those that report no difficulty with task
replace iadl_mp_core = 0 if iadl_diff_mp==0
//set yes for if live in nursing home
replace iadl_mp_core = 1 if	nhres ==1
// set for response help = no
replace iadl_mp_core = 0 if ((kg043==5)|(lg043==5)|(mg043==5))
//set for response help = yes
replace iadl_mp_core = 1 if ((kg043==1)|(lg043==1)|(mg043==1))
label var iadl_mp_core "Help with Meal Prep"
// la def iadl_mp_core 0 "No" 1 "Yes", modify
// la val iadl_mp_core iadl_mp_core 
tab iadl_mp_core core_year,missing

//Grocery Shopping, r2012
/*Cross-Wave Equivalents for:
G046 IADL GROC SHOP HELP 
1995 Core D2029 
1996 Core E2044 
1998 Core F2570 
2000 Core G2868 
2002 Core HG046 
2002 Exit SG046 
2004 Core JG046 
2004 Exit TG046 
2006 Core KG046 
2006 Exit UG046 
2008 Core LG046 
2008 Exit VG046 
2010 Core MG046 
2010 Exit WG046
*/

//difficulty with task b/c of health or memory problem?
gen byte iadl_diff_gr=.
replace iadl_diff_gr = 1 if (kg044==1)|(lg044==1)|(mg044==1)
replace iadl_diff_gr = 1 if inlist(kg044,6,7) & kg045==1
replace iadl_diff_gr = 1 if inlist(lg044,6,7) & lg045==1
replace iadl_diff_gr = 1 if inlist(mg044,6,7) & mg045==1	
replace iadl_diff_gr = 0 if (kg044==5)|(lg044==5)|(mg044==5)
replace iadl_diff_gr = 0 if inlist(kg044,6,7) & kg045==5
replace iadl_diff_gr = 0 if inlist(lg044,6,7) & lg045==5
replace iadl_diff_gr = 0 if inlist(mg044,6,7) & mg045==5	
la var iadl_diff_gr "Difficulty grocery shopping? 1=yes"
tab iadl_diff_gr core_year, missing


gen byte iadl_gr_core=.
//set for those that report no difficulty with task
replace iadl_gr_core = 0 if iadl_diff_gr==0
//set yes for if live in nursing home
replace iadl_gr_core = 1 if nhres ==1
//set for response help = yes
replace iadl_gr_core = 1 if ((kg046==1)|(lg046==1)|(mg046==1))
// set for response help = no
replace iadl_gr_core = 0 if ((kg046==5)|(lg046==5)|(mg046==5))
//set for response help = yes
replace iadl_gr_core = 1 if ((kg046==1)|(lg046==1)|(mg046==1))
label var iadl_gr_core "Help with Grocery Shopping"
// la def iadl_gr_core 0 "No" 1 "Yes", modify
// la val iadl_gr_core iadl_gr_core 
tab iadl_gr_core core_year,missing


/*Phone Calls, r2022
Cross-Wave Equivalents for:
G049 IADL MAKING PHONE CALLS HELP 
1995 Core D2034 
1996 Core E2049 
1998 Core F2575 
2000 Core G2873 
2002 Core HG049 
2002 Exit SG049 
2004 Core JG049 
2004 Exit TG049 
2006 Core KG049 
2006 Exit UG049 
2008 Core LG049 
2008 Exit VG049 
2010 Core MG049 
2010 Exit WG049 
This one is different from other iadls because ask regardless of 
nursing home resident status
*/

//difficulty with task b/c of health or memory problem?
gen byte iadl_diff_ph=.
replace iadl_diff_ph = 1 if (kg047==1)|(lg047==1)|(mg047==1)
replace iadl_diff_ph = 1 if inlist(kg047,6,7) & kg048==1
replace iadl_diff_ph = 1 if inlist(lg047,6,7) & lg048==1
replace iadl_diff_ph = 1 if inlist(mg047,6,7) & mg048==1	
replace iadl_diff_ph = 0 if (kg047==5)|(lg047==5)|(mg047==5)
replace iadl_diff_ph = 0 if inlist(kg047,6,7) & kg048==5
replace iadl_diff_ph = 0 if inlist(lg047,6,7) & lg048==5
replace iadl_diff_ph = 0 if inlist(mg047,6,7) & mg048==5	
la var iadl_diff_ph "Difficulty phone calls? 1=yes"
tab iadl_diff_ph core_year, missing

gen byte iadl_ph_core=.
//set for those that report no difficulty with task
replace iadl_ph_core = 0 if ((kg047==5)|(lg047==5)|(mg047==5))
//set for those that report cant / dont do but not bc of health problem
replace iadl_ph_core = 0 if ((inlist(kg047,6,7) & kg048==5)& ///
	core_year==2006)
replace iadl_ph_core = 0 if ((inlist(lg047,6,7) & lg048==5)& ///
	core_year==2008)
replace iadl_ph_core = 0 if ((inlist(mg047,6,7) & mg048==5)& ///
	core_year==2010)
// set for response help = no
replace iadl_ph_core = 0 if ((kg049==5)|(lg049==5)|(mg049==5))
//set for response help = yes
replace iadl_ph_core = 1 if ((kg049==1)|(lg049==1)|(mg049==1))
label var iadl_ph_core "Help Making Phone Calls"
// la def iadl_ph_core 0 "No" 1 "Yes", modify
// la val iadl_ph_core iadl_ph_core 
tab iadl_ph_core core_year,missing


/*Medications, r2032
Cross-Wave Equivalents for:
G053 IADL TAKING MEDICATIONS HELP 
1995 Core D2039 
1996 Core E2054 
1998 Core F2580 
2000 Core G2878 
2002 Core HG053 
2002 Exit SG053 
2004 Core JG053 
2004 Exit TG053 
2006 Core KG053 
2006 Exit UG053 
2008 Core LG053 
2008 Exit VG053 

Different than other iadls because question sequence has addltional question
1. Difficulty taking meds? g050 / g2875
2. If dont take(7), if had to take, anticipate difficulty? g051 / g2876
3. Difficulty b/c of health problem (if g050 = 6 OR [g050=7 and g051=1] )
4. Help with medications? 
5. Not asked if nursing home (like others)
*/

//difficulty with task b/c of health or memory problem?
gen byte iadl_diff_rx=.
//yes, difficulty
replace iadl_diff_rx = 1 if (kg050==1)|(lg050==1)|(mg050==1)
//can't do, b/c of health problems
replace iadl_diff_rx = 1 if kg050==6 & kg052==1
replace iadl_diff_rx = 1 if lg050==6 & lg052==1
replace iadl_diff_rx = 1 if mg050==6 & mg052==1
//don't do, if had to take, yes would have difficulty b/c of health prob.
replace iadl_diff_rx = 1 if kg050==7 & kg051==1 & kg052==1
replace iadl_diff_rx = 1 if lg050==7 & lg051==1 & lg052==1
replace iadl_diff_rx = 1 if mg050==7 & mg051==1 & mg052==1

//no, no difficulty	
replace iadl_diff_rx = 0 if (kg050==5)|(lg050==5)|(mg050==5)
//can't do, not b/c of health problems
replace iadl_diff_rx = 0 if kg050==6 & kg052==5
replace iadl_diff_rx = 0 if lg050==6 & lg052==5
replace iadl_diff_rx = 0 if mg050==6 & mg052==5	
//don't do, if had to take, no difficulty anticipated
replace iadl_diff_rx = 0 if kg050==7 & kg051==5
replace iadl_diff_rx = 0 if lg050==7 & lg051==5
replace iadl_diff_rx = 0 if mg050==7 & mg051==5
la var iadl_diff_rx "Difficulty taking medications? 1=yes"
tab iadl_diff_rx core_year, missing


gen byte iadl_rx_core=.
//set for those that report no difficulty with task
replace iadl_rx_core = 0 if iadl_diff_rx==0
//set yes for if live in nursing home
replace iadl_rx_core = 1 if nhres ==1
// set for response help = no
replace iadl_rx_core = 0 if ((kg053==5)|(lg053==5)|(mg053==5))
//set for response help = yes
replace iadl_rx_core = 1 if ((kg053==1)|(lg053==1)|(mg053==1))
label var iadl_rx_core "Help with Medications"
// la def iadl_rx_core 0 "No" 1 "Yes", modify
// la val iadl_rx_core iadl_rx_core 
tab iadl_rx_core core_year,missing


/*Money, r2077
Cross-Wave Equivalents for:
G061 IADL MANAGING MONEY HELP 
1995 Core D2102 
1996 Core E2096 
1998 Core F2620 
2000 Core G2918 
2002 Core HG061 
2002 Exit SG061 
2004 Core JG061 
2004 Exit TG061 
2006 Core KG061 
2006 Exit UG061 
2008 Core LG061 
2008 Exit VG061 
2010 Core MG061 
2010 Exit WG061 
Asked for those in nursing home*/

//difficulty with task b/c of health or memory problem?
gen byte iadl_diff_m = .
replace iadl_diff_m = 1 if (kg059==1)|(lg059==1)|(mg059==1)
replace iadl_diff_m = 1 if inlist(kg059,6,7) & kg060==1
replace iadl_diff_m = 1 if inlist(lg059,6,7) & lg060==1
replace iadl_diff_m = 1 if inlist(mg059,6,7) & mg060==1	
replace iadl_diff_m = 0 if (kg059==5)|(lg059==5)|(mg059==5)
replace iadl_diff_m = 0 if inlist(kg059,6,7) & kg060==5
replace iadl_diff_m = 0 if inlist(lg059,6,7) & lg060==5
replace iadl_diff_m = 0 if inlist(mg059,6,7) & mg060==5	
la var iadl_diff_m "Difficulty managing money? 1=yes"
tab iadl_diff_m core_year, missing

gen byte iadl_m_core=.
//set for those that report no difficulty with task
replace iadl_m_core = 0 if ((kg059==5)|(lg059==5)|(mg059==5))
//set for those that report cant / dont do but not bc of health problem
replace iadl_m_core = 0 if ((inlist(kg059,6,7) & kg060==5)& ///
	core_year==2006)
replace iadl_m_core = 0 if ((inlist(lg059,6,7) & lg060==5)& ///
	core_year==2008)
replace iadl_m_core = 0 if ((inlist(mg059,6,7) & mg060==5)& ///
	core_year==2010)
// set for response help = no
replace iadl_m_core = 0 if ((kg061==5)|(lg061==5)|(mg061==5))
//set for response help = yes
replace iadl_m_core = 1 if ((kg061==1)|(lg061==1)|(mg061==1))
label var iadl_m_core "Help with Money"
// la def iadl_m_core 0 "No" 1 "Yes", modify
// la val iadl_m_core iadl_m_core 
tab iadl_m_core core_year,missing

*************************************************************************
//   Functional limitations from core interviews
*************************************************************************
/*Responses of difficulty = yes or can't do coded as 1
difficulty = no = 0; don't do left missing since no follow up question is asked
to verify why don't do*/

/*Difficulty walking several blocks?
1998 Core 	F2391
2000 Core 	G2689
2002 Core 	HG001
2004 Core 	JG001
2006 Core 	KG001
2008 Core 	LG001
2010 Core 	MG001*/
gen byte fl_diff_wk_many = .
replace fl_diff_wk_many = 1 if kg001==1 | lg001==1 | mg001==1 | ///
	kg001==6 | lg001==6 | mg001==6
replace fl_diff_wk_many = 0 if kg001==5 | lg001==5 | mg001==5
la var fl_diff_wk_many "Difficulty walking several blocks? 1=yes"
tab fl_diff_wk_many core_year, missing

/*Difficulty walking 1 block?
Only asked if do not report no difficulty walking many blocks
1998 Core 	F2394
2000 Core 	G2692
2002 Core 	HG003
2004 Core 	JG003
2006 Core 	KG003
2008 Core 	LG003
2010 Core 	MG003*/
gen byte fl_diff_wk_one = .
replace fl_diff_wk_one = 1 if kg003==1 | lg003==1 | mg003==1 | ///
	kg003==6 | lg003==6 | mg003==6
replace fl_diff_wk_one = 0 if kg003==5 | lg003==5 | mg003==5
replace fl_diff_wk_one = 0 if fl_diff_wk_many==0
la var fl_diff_wk_one "Difficulty walking one block? 1=yes"
tab fl_diff_wk_one core_year, missing 

/*Difficulty sitting for 2 hours?
1998 Core 	F2397
2000 Core	G2695
2002 Core 	HG004
2004 Core 	JG004
2006 Core 	KG004
2008 Core 	LG004
2010 Core 	MG004*/
gen byte fl_diff_sit = .
replace fl_diff_sit = 1 if kg004==1 | lg004==1 | mg004==1 | ///
	kg004==6 | lg004==6 | mg004==6
replace fl_diff_sit = 0 if kg004==5 | lg004==5 | mg004==5
la var fl_diff_sit "Difficulty sitting 2 hours? 1=yes"
tab fl_diff_sit core_year, missing

/*Difficulty getting up from a chair after sitting?
1998 Core 	F2400
2000 Core 	G2698
2002 Core 	HG005
2004 Core 	JG005
2006 Core 	KG005
2008 Core 	LG005
2010 Core 	MG005*/
gen byte fl_diff_gu = .
replace fl_diff_gu = 1 if kg005==1 | lg005==1 | mg005==1 | ///
	kg005==6 | lg005==6 | mg005==6
replace fl_diff_gu = 0 if kg005==5 | lg005==5 | mg005==5
la var fl_diff_gu "Difficulty standing up after sitting? 1=yes"
tab fl_diff_gu core_year, missing

/*Difficutly climbing up many flights of stairs?
1998 Core 	F2403
2000 Core 	G2701
2002 Core 	HG006
2004 Core 	JG006
2006 Core 	KG006
2008 Core 	LG006
2010 Core 	MG006*/
gen byte fl_diff_sta_many = .
replace fl_diff_sta_many = 1 if kg006==1 | lg006==1 | mg006==1 | ///
	kg006==6 | lg006==6 | mg006==6
replace fl_diff_sta_many = 0 if kg006==5 | lg006==5 | mg006==5
la var fl_diff_sta_many "Difficulty climbing stairs - many flights? 1=yes"
tab fl_diff_sta_many core_year, missing

/*Difficulty climbing one flight of stairs?
Only asked if response to many stairs is not no
1998 Core 	F2406
2000 Core 	G2704
2002 Core 	HG007
2004 Core 	JG007
2006 Core 	KG007
2008 Core 	LG007
2010 Core 	MG007*/
gen byte fl_diff_sta_one = .
replace fl_diff_sta_one = 1 if kg007==1 | lg007==1 | mg007==1 | ///
	kg007==6 | lg007==6 | mg007==6
replace fl_diff_sta_one = 0 if kg007==5 | lg007==5 | mg007==5
replace fl_diff_sta_one = 0 if fl_diff_sta_many==0
la var fl_diff_sta_one "Difficulty climbing stairs - one flights? 1=yes"
tab fl_diff_sta_one core_year, missing

/*Difficulty stooping, kneeling or crouching?
1998 Core 	F2409
2000 Core 	G2707
2002 Core 	HG008
2004 Core 	JG008
2006 Core 	KG008
2008 Core 	LG008
2010 Core 	MG008*/
gen byte fl_diff_stp = .
replace fl_diff_stp = 1 if kg008==1 | lg008==1 | mg008==1 | ///
	kg008==6 | lg008==6 | mg008==6
replace fl_diff_stp = 0 if kg008==5 | lg008==5 | mg008==5
la var fl_diff_stp "Difficulty stooping? 1=yes"
tab fl_diff_stp core_year, missing

/*Difficulty reaching or extending arms above shoulder level?
1998 Core 	F2412
2000 Core 	G2710
2002 Core 	HG009
2004 Core 	JG009
2006 Core 	KG009
2008 Core 	LG009
2010 Core 	MG009*/
gen byte fl_diff_reach = .
replace fl_diff_reach = 1 if kg009==1 | lg009==1 | mg009==1 | ///
	kg009==6 | lg009==6 | mg009==6
replace fl_diff_reach = 0 if kg009==5 | lg009==5 | mg009==5
la var fl_diff_reach "Difficulty reaching with arms? 1=yes"
tab fl_diff_reach core_year, missing

/*Difficulty pulling or pushing large objects?
1998 Core 	F2415
2000 Core 	G2713
2002 Core 	HG010
2004 Core 	JG010
2006 Core 	KG010
2008 Core 	LG010
2010 Core 	MG010*/
gen byte fl_diff_push = .
replace fl_diff_push = 1 if kg010==1 | lg010==1 | mg010==1 | ///
	kg010==6 | lg010==6 | mg010==6
replace fl_diff_push = 0 if kg010==5 | lg010==5 | mg010==5
la var fl_diff_push "Difficulty pushing/pulling large objects? 1=yes"
tab fl_diff_push core_year, missing

/*Difficulty lifting weights over 10lbs?
1998 Core 	F2418
2000 Core 	G2716
2002 Core 	HG011
2004 Core 	JG011
2006 Core 	KG011
2008 Core 	LG011
2010 Core 	MG011*/
gen byte fl_diff_lift = .
replace fl_diff_lift = 1 if kg011==1 | lg011==1 | mg011==1 | ///
	kg011==6 | lg011==6 | mg011==6
replace fl_diff_lift = 0 if kg011==5 | lg011==5 | mg011==5
la var fl_diff_lift "Difficulty lifting weights over 10lb? 1=yes"
tab fl_diff_lift core_year, missing

/*Difficulty picking up a dime?
1998 Core 	F2421
2000 Core 	G2719
2002 Core 	HG012
2004 Core 	JG012
2006 Core 	KG012
2008 Core 	LG012
2010 Core 	MG012
assign can't do = yes, don't do = .*/
gen fl_diff_dime = .
replace fl_diff_dime = 1 if inlist(kg012,1,6) | ///
	inlist(lg012,1,6) | inlist(mg012,1,6)
replace fl_diff_dime = 0 if kg012==5 | lg012==5 | mg012==5
la var fl_diff_dime "Any difficulty picking up a dime? 1=yes"
tab fl_diff_dime core_year, missing

*************************************************************
//Helper information for ADLs and IADLs
*************************************************************
/*ADL Helper relationship to R
1998 Core 	F2508
2000 Core 	G2806
2002 Core 	HG033_1
2004 Core 	JG033_1
2006 Core 	KG033_1
2008 Core 	LG033_1
2010 Core 	MG033_1
*/
gen byte adl_sp_helper = 0
replace adl_sp_helper = 1 if (core_year==2006 & kg033_1==2)
replace adl_sp_helper = 1 if (core_year==2008 & lg033_1==2)
replace adl_sp_helper = 1 if (core_year==2010 & mg033_1==2)
la var adl_sp_helper "ADL Spouse Main Helper, 1=yes"
tab adl_sp_helper core_year, missing

gen byte adl_oth_helper = 0
replace adl_oth_helper = 1 if (core_year==2006 & 2< kg033_1 & kg033_1<21)
replace adl_oth_helper = 1 if (core_year==2008 & 2< lg033_1 & lg033_1<21)
replace adl_oth_helper = 1 if (core_year==2010 & 2< mg033_1 & mg033_1<21)
la var adl_oth_helper "ADL Other Main Helper, 1=yes"
tab adl_oth_helper core_year, missing

//max number of helpers = 7
//create common helper variables across all years
gen adl_helper_1 = kg032_1 if (core_year==2006)
replace adl_helper_1 = lg032_1 if (core_year==2008)
replace adl_helper_1 = mg032_1 if (core_year==2010)
la var adl_helper_1 "ADL Helper 1 PN"

gen adl_helper_2 = kg032_2 if (core_year==2006)
replace adl_helper_2 = lg032_2 if (core_year==2008)
replace adl_helper_2 = mg032_2 if (core_year==2010)
la var adl_helper_2 "ADL Helper 2 PN"

gen adl_helper_3 = kg032_3 if (core_year==2006)
replace adl_helper_3 = lg032_3 if (core_year==2008)
replace adl_helper_3 = mg032_3 if (core_year==2010)
la var adl_helper_3 "ADL Helper 3 PN"

gen adl_helper_4 = kg032_4 if (core_year==2006)
replace adl_helper_4 = lg032_4 if (core_year==2008)
replace adl_helper_4 = mg032_4 if (core_year==2010)
la var adl_helper_4 "ADL Helper 4 PN"

gen adl_helper_5 = kg032_5 if (core_year==2006)
replace adl_helper_5 = lg032_5 if (core_year==2008)
replace adl_helper_5 = mg032_5 if (core_year==2010)
la var adl_helper_5 "ADL Helper 5 PN"

gen adl_helper_6 = kg032_6 if (core_year==2006)
replace adl_helper_6 = lg032_6 if (core_year==2008)
replace adl_helper_6 = mg032_6 if (core_year==2010)
la var adl_helper_6 "ADL Helper 6 PN"

gen adl_helper_7 = kg032_7 if (core_year==2006)
replace adl_helper_7 = lg032_7 if (core_year==2008)
replace adl_helper_7 = mg032_7 if (core_year==2010)
la var adl_helper_7 "ADL Helper 7 PN"

/*IADL Helpers*/
gen byte iadl_sp_helper = 0
replace iadl_sp_helper = 1 if (core_year==2006 & kg055_1==2)
replace iadl_sp_helper = 1 if (core_year==2008 & lg055_1==2)
replace iadl_sp_helper = 1 if (core_year==2010 & mg055_1==2)
la var iadl_sp_helper "IADL Spouse Main Helper, 1=yes"
tab iadl_sp_helper core_year, missing

gen byte iadl_oth_helper = 0
replace iadl_oth_helper = 1 if (core_year==2006 & 2< kg055_1 & kg055_1<21)
replace iadl_oth_helper = 1 if (core_year==2008 & 2< lg055_1 & lg055_1<21)
replace iadl_oth_helper = 1 if (core_year==2010 & 2< mg055_1 & mg055_1<21)
la var iadl_oth_helper "IADL Other Main Helper, 1=yes"
tab iadl_oth_helper core_year, missing

//max number of helpers = 6
//create common helper variables across all years
gen iadl_helper_1 = kg054_1 if (core_year==2006)
replace iadl_helper_1 = lg054_1 if (core_year==2008)
replace iadl_helper_1 = mg054_1 if (core_year==2010)
la var iadl_helper_1 "IADL Helper 1 PN"

gen iadl_helper_2 = kg054_2 if (core_year==2006)
replace iadl_helper_2 = lg054_2 if (core_year==2008)
replace iadl_helper_2 = mg054_2 if (core_year==2010)
la var iadl_helper_2 "IADL Helper 2 PN"

gen iadl_helper_3 = kg032_3 if (core_year==2006)
replace iadl_helper_3 = lg032_3 if (core_year==2008)
replace iadl_helper_3 = mg032_3 if (core_year==2010)
la var iadl_helper_3 "IADL Helper 3 PN"

gen iadl_helper_4 = kg054_4 if (core_year==2006)
replace iadl_helper_4 = lg054_4 if (core_year==2008)
replace iadl_helper_4 = mg054_4 if (core_year==2010)
la var iadl_helper_4 "IADL Helper 4 PN"

gen iadl_helper_5 = kg054_5 if (core_year==2006)
replace iadl_helper_5 = lg054_5 if (core_year==2008)
replace iadl_helper_5 = mg054_5 if (core_year==2010)
la var iadl_helper_5 "IADL Helper 5 PN"

gen iadl_helper_6 = kg054_6 if (core_year==2006)
replace iadl_helper_6 = lg054_6 if (core_year==2008)
replace iadl_helper_6 = mg054_6 if (core_year==2010)
la var iadl_helper_6 "IADL Helper 6 PN"

// Home health worker
/*
(Since [PREV WAVE IW MONTH], [PREV WAVE IW YEAR]/Since [PREV WAVE IW YEAR]/In
        the last two years), has any medically-trained person come to your home to
        help you, yourself?
1998 Core 	F2357
2000 Core 	G2634
2002 Core 	HN189
2002 Exit 	SN189
2004 Core 	JN189
2004 Exit 	TN189
2006 Core 	KN189
2006 Exit 	UN189
2008 Core 	LN189
2008 Exit 	VN189
2010 Core 	MN189
2010 Exit 	WN189
*/
gen hh_worker = .
replace hh_worker=1 if  kn189==1 | ln189==1 | mn189==1
replace hh_worker=0 if kn189==5 | ln189==5 | mn189==5
la var hh_worker "Home health worker help? 1=yes"
tab hh_worker core_year, missing

save core_06_10_clean2.dta, replace

log close


H="Core 06-10 - variable cleaning part 3 comorbidities"
/*variable cleaning for HRS core 2006-2010
Most code is taken from the HRS Outline_11_22_11.txt file
and modified to clean 2006-2010 core dataset

3rd part of core variable cleaning - comorbidities from core interviews

See notes re. variable chf_hrs - criteria for asking this quesiton
changed in 2010 and this results in a lot more missing-ness for 2010 
core year, need to address if need to use this variable for final analysis
*/

capture log close

clear all
set mem 1g
set matsize 800
set more off

//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\2_HRS_Core_06_10_clean3-LOG-TEST.txt", text replace

cd `datapath'

use core_06_10_clean2.dta

/************************************************************/
/* Comorbidities from core interviews  */
/************************************************************/

/*Cancer
2000 Core 	G1262
2002 Core 	HC018
2002 Exit 	SC018
2004 Core 	JC018
2004 Exit 	TC018
2006 Core 	KC018
2006 Exit 	UC018
2008 Core 	LC018
2008 Exit 	VC018
2010 Core 	MC018
2010 Exit 	WC018 */
generate byte cancer_hrs = .
replace cancer_hrs = 1 if (core_year==2006 & inlist(kc018,1,3))
replace cancer_hrs = 1 if (core_year==2008 & inlist(lc018,1,3))
replace cancer_hrs = 1 if (core_year==2010 & inlist(mc018,1,3))
replace cancer_hrs = 0 if (core_year==2006 & inlist(kc018,4,5))
replace cancer_hrs = 0 if (core_year==2008 & inlist(lc018,4,5))
replace cancer_hrs = 0 if (core_year==2010 & inlist(mc018,4,5))
label variable cancer_hrs "Cancer - core"
//label define cancer_hrs 0 "No" 1 "Yes", modify
//label values cancer_hrs cancer_hrs
tab cancer_hrs core_year, missing 

/*Cancer treatment - HRS core
These questions are only asked for new r's and alternate waves (2002,2006,2010)
2 levels of questions, only asked if cancer_hrs=yes:
1. Since last interview, received any treatment for cancer?
2000 Core 	G1264
2002 Core 	HC020
2002 Exit 	SC020
2004 Core 	JC020
2004 Exit 	TC020
2006 Core 	KC020
2006 Exit 	UC020
2008 Core 	LC020
2008 Exit 	VC020
2010 Core 	MC020
2010 Exit 	WC020
2. Type of treatment,
2000 Core	G1265M1-M4 (note only 4 for 2000)
2002 Core 	HC021M1-M5 (5 in 2002) 
2002 Exit 	SC021M1-M6
2004 Core 	JC021M1-M4 (4 in 2004)
2004 Exit 	TC021M1-M6
2006 Core 	KC021M1-M6 (6 in 2006)
2006 Exit 	UC021M1-M6
2008 Core 	LC021M1-M4 (4 in 2008)
2008 Exit 	VC021M1-M6
2010 Core 	MC021M1-M6 (6 in 2010)
2010 Exit 	WC021M1-M6
 			 1.  CHEMOTHERAPY OR MEDICATION
                         2.  SURGERY OR BIOPSY
                         3.  RADIATION/ X-RAY
                         4.  MEDICATIONS/TREATMENT FOR SYMPTOMS (PAIN, NAUSEA, RASHES)
                         5.  NONE
                         7.  OTHER (SPECIFY)
                         8.  DK (Don't Know); NA (Not Ascertained)
                         9.  RF (Refused)
                     Blank.  INAP (Inapplicable); Partial Interview
*/
//cancer treatment in last 2 years indicator variable
gen byte cancer_treat_hrs=.
replace cancer_treat_hrs=1 if ( kc020==1 | lc020==1 | mc020==1 )
replace cancer_treat_hrs=0 if ( kc020==5 | lc020==5 | mc020==5 )
replace cancer_treat_hrs=0 if (cancer_hrs==0) //if no cancer, show no cancer treatment

//create empty variables for 2008 so can run through for loop
gen lc021m5=.
gen lc021m6=.

//cancer treatment type variables, not not mutually exclusive
gen byte cancer_chemo_med=.
gen byte cancer_surg=.
gen byte cancer_xray=.
gen byte cancer_symp=.
gen byte cancer_other_treat=.
local waves k l m 
foreach i of numlist 1/6 {
foreach w of local waves{
	replace cancer_chemo_med=1 if `w'c021m`i'==1
	replace cancer_surg=1 if `w'c021m`i'==2
	replace cancer_xray=1 if `w'c021m`i'==3
	replace cancer_symp=1 if `w'c021m`i'==4
	replace cancer_other_treat=1 if `w'c021m`i'==7
	}
}

local cancertreat cancer_chemo_med cancer_surg cancer_xray cancer_symp cancer_other_treat
foreach var of local cancertreat{
replace `var'=0 if `var'==. & cancer_treat_hrs==1
tab `var',missing
}

/*Lung Disease, r1191
Cross-Wave Equivalents for:
C030 LUNG DISEASE 
1995 Core D818 
1996 Core E818 
1998 Core F1146 
2000 Core G1279 
2002 Core HC030 
2002 Exit SC030 
2004 Core JC030 
2004 Exit TC030 
2006 Core KC030 
2006 Exit UC030 
2008 Core LC030 
2008 Exit VC030 
2010 Core MC030 
2010 Exit WC030
*/
generate lung_hrs = .
replace lung_hrs = 1 if (core_year==2006 & inlist(kc030,1,3))
replace lung_hrs = 1 if (core_year==2008 & inlist(lc030,1,3))
replace lung_hrs = 1 if (core_year==2010 & inlist(mc030,1,3))
replace lung_hrs = 0 if (core_year==2006 & inlist(kc030,4,5))
replace lung_hrs = 0 if (core_year==2008 & inlist(lc030,4,5))
replace lung_hrs = 0 if (core_year==2010 & inlist(mc030,4,5))
label variable lung_hrs "Lung Disease - core"
//label define lung_hrs 0 "No" 1 "Yes" , modify
//label values lung_hrs lung_hrs
tab lung_hrs core_year, missing 

/*Oxygen for lung condition - c033
2000 Core 	G1285
2002 Core 	HC033
2002 Exit 	SC033
2004 Core 	JC033
2004 Exit 	TC033
2006 Core 	KC033
2006 Exit 	UC033
2008 Core 	LC033
2008 Exit 	VC033
2010 Core 	MC033
2010 Exit 	WC033
*/
gen byte lung_o2_hrs = .
replace lung_o2_hrs = 0 if lung_hrs==0
replace lung_o2_hrs = 0 if (core_year==2006 & kc033==5)
replace lung_o2_hrs = 0 if (core_year==2008 & lc033==5)
replace lung_o2_hrs = 0 if (core_year==2010 & mc033==5)

replace lung_o2_hrs = 1 if (core_year==2006 & kc033==1)
replace lung_o2_hrs = 1 if (core_year==2008 & lc033==1)
replace lung_o2_hrs = 1 if (core_year==2010 & mc033==1)
la var lung_o2_hrs "Oxygen for lung condition"
tab lung_o2_hrs core_year,missing

/*Lung condition limit activities?
2000 Core 	G1287
2002 Core 	HC035
2004 Core 	JC035
2006 Core 	KC035
2008 Core 	LC035
2010 Core 	MC035
*/
gen byte lung_lim_hrs = .
replace lung_lim_hrs = 0 if lung_hrs==0
replace lung_lim_hrs = 0 if (core_year==2006 & kc035==5)
replace lung_lim_hrs = 0 if (core_year==2008 & lc035==5)
replace lung_lim_hrs = 0 if (core_year==2010 & mc035==5)

replace lung_lim_hrs = 1 if (core_year==2006 & kc035==1)
replace lung_lim_hrs = 1 if (core_year==2008 & lc035==1)
replace lung_lim_hrs = 1 if (core_year==2010 & mc035==1)
la var lung_lim_hrs "Activity limited due to lung condition"
tab lung_lim_hrs core_year,missing


/*Heart Condition: "heart attack, coronary heart disease, angina, congestive heart failure, or other heart problems?", r1201
Cross-Wave Equivalents for:
C036 HEART CONDITION 
1995 Core D828 
1996 Core E828 
1998 Core F1156 
2000 Core G1289 
2002 Core HC036 
2002 Exit SC036 
2004 Core JC036 
2004 Exit TC036 
2006 Core KC036 
2006 Exit UC036 
2008 Core LC036 
2008 Exit VC036 */
generate heart_hrs = .
replace heart_hrs = 1 if (core_year==2006 & inlist(kc036,1,3))
replace heart_hrs = 1 if (core_year==2008 & inlist(lc036,1,3))
replace heart_hrs = 1 if (core_year==2010 & inlist(mc036,1,3))
replace heart_hrs = 0 if (core_year==2006 & inlist(kc036,4,5))
replace heart_hrs = 0 if (core_year==2008 & inlist(lc036,4,5))
replace heart_hrs = 0 if (core_year==2010 & inlist(mc036,4,5))
label variable heart_hrs "Heart Condition - core"
//label define heart_hrs 0 "No" 1 "Yes" 9 "Don't Know/Refused", modify
//label values heart_hrs heart_hrs
tab heart_hrs core_year, missing 



/**CHF: Criteria for asking this question:
1. heart_hrs = yes (1)
2. c037 <> no OR c038 <> no
r1216
Ask if criteria change in 2010 so coded differently here to match, otherwise, if just match
on heart_hrs, get many more missing responses in 2010
If this variable is used in the analysis, may want to review this code with Amy since
2010 results in much lower rates of chf being reported than other years.
Cross-Wave Equivalents for:
C048 CONGESTIVE HEART FAILURE 
1995 Core D843 
1996 Core E843 
1998 Core F1171 
2000 Core G1304 
2002 Core HC048 
2002 Exit SC048 
2004 Core JC048 
2004 Exit TC048 
2006 Core KC048 
2006 Exit UC048 
2008 Core LC048 
2008 Exit VC048
2010 Core MC048
 
addl 2010 variables
mc263 - has a doctor ever told you you've had chf? if reply no = don't ask mc048 
mc264 - year chf first diagnosed 9998, 9999 are non responses
mz093 - previous wave interview year
mz255 - baseline heart disease (1=yes, 5=no)
ma501 - current interview year (to get 2 years ago year)
{PREVIOUS ASK} SecC.Heartattack.C036_ 

         IF SecC.Heartattack.C036_ IN [YES, DISPUTPWRECORDHASCOND] THEN 

         IF (SecC.Heartattack.C036_ IN [YES, DISPUTPWRECORDHASCOND]) AND 
         ((SecC.Heartattack.C037_HeartMeds <> NO) OR (SecC.Heartattack.C038_ <> NO)) 
         THEN 

         IF (SecC.Heartattack.C263_EverHadHeartFailure <> NO) AND 
         SecC.Heartattack.C263_EverHadHeartFailure <> NONRESPONSE THEN 

         IF ((SecC.Heartattack.C264_YrFirstHeartFailure = NONRESPONSE OR 
         (((piRVarsZ076_ReIwR_V = REIWR) AND (SecC.Heartattack.C264_YrFirstHeartFailure 
         < piRvarsZ093_IwYr_V)) OR ((piRVarsZ076_ReIwR_V <> REIWR) AND 
         (SecC.Heartattack.C264_YrFirstHeartFailure < piINITA062T2YrsAgo_A)))) OR 
         ((piRVarsZ076_ReIwR_V = REIWR) AND (piRVarsZ255_HrtDiseaseBsline <> 
         Blinewaveprior))) OR ((ACTIVELANGUAGE = EXTENG) AND (ACTIVELANGUAGE = EXTSPN)) 
         THEN 
Note: Not sure how to get the Blinewaveprior variable since there is no
lz255 in 2008, so that or statement is missing from the code below
Something to investigate further if this missingness becomes a problem
in future analysis


generate chf_hrs = .
//code for c036 response, no heart problems
replace chf_hrs =0 if (heart_hrs==0)
//code for heart_hrs==1 but c037 and c038 == no
replace chf_hrs = 0 if core_year==2006 & heart_hrs==1 & ///
	(kc037==5 & kc038==5) | (kz105!=1 & kz076==1)
replace chf_hrs = 0 if core_year==2008 & heart_hrs==1 & ///
	(lc037==5 & lc038==5) | (lz105!=1 & lz076==1)
replace chf_hrs = 0 if core_year==2010 & heart_hrs==1 & ///
	(mc037==5 & mc038==5) & (mc263==5) 


//2010 ask...
gen chf_ask_10 = 0
replace chf_ask_10 = 1 if (inlist(mc264,9998,9999,.) | (mz076 == 1 & ///
	(mc264 < mz093) | (mz076!=1 & mc264 < (ma501-2))))
tab chf_ask_10

replace chf_hrs = 0 if chf_ask_10 ==0
	

//code for c048 responses
replace chf_hrs = 0 if (core_year==2006 & kc048==5)
replace chf_hrs = 0 if (core_year==2008 & lc048==5)
replace chf_hrs = 0 if (core_year==2010 & mc048==5)

replace chf_hrs = 1 if (core_year==2006 & kc048==1)
replace chf_hrs = 1 if (core_year==2008 & lc048==1)
replace chf_hrs = 1 if (core_year==2010 & mc048==1)

label variable chf_hrs "CHF"
//label define chf_hrs 0 "No" 1 "Yes" , modify
//label values chf_hrs chf_hrs
tab chf_hrs core_year, missing
*/

//code for c036 response, no heart problems
gen chf_hrs=.
replace chf_hrs =0 if (heart_hrs==0)
//code for heart_hrs==1 but c037 and c038 == no
replace chf_hrs = 0 if core_year==2006 & heart_hrs==1 & ///
	(kc037==5 & kc038==5) | (kz105!=1 & kz076==1)
replace chf_hrs = 0 if core_year==2008 & heart_hrs==1 & ///
	(lc037==5 & lc038==5) | (lz105!=1 & lz076==1)
replace chf_hrs = 0 if core_year==2010 & heart_hrs==1 & ///
	(mc037==5 & mc038==5) & (mc263==5) 
//code for c048 responses
replace chf_hrs = 0 if (core_year==2006 & kc048==5)
replace chf_hrs = 0 if (core_year==2008 & lc048==5)
replace chf_hrs = 0 if (core_year==2010 & mc048!=1)

replace chf_hrs = 1 if (core_year==2006 & kc048==1)
replace chf_hrs = 1 if (core_year==2008 & lc048==1)
replace chf_hrs = 1 if (core_year==2010 & mc048==1)

tab chf_hrs core_year, missing


/*Hospitalized for CHF?
2000 Core 	G1305
2002 Core 	HC049
2002 Exit 	N/A
2004 Core 	JC049
2004 Exit 	N/A
2006 Core 	KC049
2006 Exit 	N/A
2008 Core 	LC049
2008 Exit 	N/A
2010 Core 	MC049

Ask if chf reported, ie if chf_hrs ==1
*/
gen byte chfadmit_ask = 0
replace chfadmit_ask = 1 if (core_year==2006 & chf_hrs==1) 
replace chfadmit_ask = 1 if (core_year==2008 & chf_hrs==1)
replace chfadmit_ask = 1 if (core_year==2010 & chf_hrs==1)

gen byte chfadmit_hrs = .
replace chfadmit_hrs = 0 if chfadmit_ask == 0
replace chfadmit_hrs = 0 if (core_year==2006 & kc049 ==5)
replace chfadmit_hrs = 0 if (core_year==2008 & lc049 ==5)
replace chfadmit_hrs = 0 if (core_year==2010 & mc049 ==5)

replace chfadmit_hrs = 1 if (core_year==2006 & kc049 ==1)
replace chfadmit_hrs = 1 if (core_year==2008 & lc049 ==1)
replace chfadmit_hrs = 1 if (core_year==2010 & mc049 ==1)

la var chfadmit_hrs "Hospital admission due to CHF"
tab chfadmit_hrs core_year,missing

/*CHF Ever? c263
Only asked in 2010
Ask criteria:
         IF SecC.Heartattack.C036_ IN [YES, DISPUTPWRECORDHASCOND] THEN 

         IF (piRVarsZ076_ReIwR_V <> REIWR) OR (piRVarsZ255_HrtDiseaseBsline = 
         Blinewaveprior) THEN

Has a doctor ever told you that you have congestive heart failure?
Again, can't get Blinewaveprior so don't include that in coding variable = 0*/
gen byte chfdrever_hrs = .
replace chfdrever_hrs = 0 if heart_hrs == 0 & core_year==2010
replace chfdrever_hrs = 0 if mc263 == 5
replace chfdrever_hrs = 1 if mc263 == 1

la var chfdrever_hrs "Ever diagnosed with chf?"
tab chfdrever_hrs core_year, missing

/**Stroke, missing r1221

generate stroke_hrs = .
 then stroke_hrs = 1 ; if ((sc053=1)|(tc053=1)|(uc053=1)|(sc053=3)|(tc053=3)|(uc053=3))
 then stroke_hrs = 0 ; if ((sc053=5)|(tc053=5)|(uc053=5)|(sc053=4)|(tc053=4)|(uc053=4))
label stroke_hrs "Stroke"
Cross-Wave Equivalents for:
C053 STROKE 
1995 Core D848 
1996 Core E848 
1998 Core F1176 
2000 Core G1309 
2002 Core HC053 
2002 Exit SC053 
2004 Core JC053 
2004 Exit TC053 
2006 Core KC053 
2006 Exit UC053 
2008 Core LC053 
2008 Exit VC053 
*/
generate stroke_hrs = .
replace stroke_hrs = 1 if (core_year==2006 & inlist(kc053,1,2,3))
replace stroke_hrs = 1 if (core_year==2008 & inlist(lc053,1,2,3))
replace stroke_hrs = 1 if (core_year==2010 & inlist(mc053,1,2,3))
replace stroke_hrs = 0 if (core_year==2006 & inlist(kc053,4,5))
replace stroke_hrs = 0 if (core_year==2008 & inlist(lc053,4,5))
replace stroke_hrs = 0 if (core_year==2010 & inlist(mc053,4,5))
label variable stroke_hrs "Stroke / TIA - core"
//label define stroke_hrs 0 "No" 1 "Yes", modify
//label values stroke_hrs stroke_hrs
tab stroke_hrs core_year, missing



/*Memory Disease (diagnosed by a doctor, per the proxy report) r1240
Question not asked in 2010 core interview, so just use previous wave
memory disease for 2010 core, may want to check this against
other variables if it is a problem.
2010 asks specifically Alzheimers (MC272) or Dementia (MC273)
Cross-Wave Equivalents for:
C069 MEMORY RELATED DISEASE 
1995 Core N/A 
1996 Core N/A 
1998 Core F1193 
2000 Core G1326 
2002 Core HC069 
2002 Exit SC069 
2004 Core JC069 
2004 Exit TC069 
2006 Core KC069 
2006 Exit UC069 
2008 Core LC069 
2008 Exit VC069 
2010 Core N/A

Cross-Wave Equivalents for:
Z117 PREV WAVE R HAS MEMORY DISEASE 
1995 Core N/A 
1996 Core N/A 
1998 Core N/A 
2000 Core g262 
2002 Core HZ117 
2002 Exit SZ117 
2004 Core JZ117 
2004 Exit TZ117 
2006 Core KZ117 
2006 Exit UZ117 
2008 Core LZ117 
2008 Exit VZ117 
Set memory_hrs = yes if current survey or previous survey (via z117 var) indicates
memory disease
*/
generate memory_hrs = .
replace memory_hrs = 0 if (core_year==2006 & inlist(kc069,4,5))
replace memory_hrs = 0 if (core_year==2008 & inlist(lc069,4,5))
replace memory_hrs = 0 if (core_year==2010 & /*inlist(mc069,4,5)*/ mz117==5)
replace memory_hrs = 1 if (core_year==2006 & (inlist(kc069,1,3) | kz117==1 ))
replace memory_hrs = 1 if (core_year==2008 & (inlist(lc069,1,3) | lz117==1 ))
replace memory_hrs = 1 if (core_year==2010 & (mc272==1 | mc273==1 | mz117==1 ))
label variable memory_hrs "Memory Disease - core"
//label define memory_hrs 0 "No" 1 "Yes", modify
//label values memory_hrs memory_hrs
tab memory_hrs core_year, missing

/*Alzheimer's disease
2010 HRS survey only
MC272
Not included in overall comorbidity index
           343           1.  YES
         21648           5.  NO
            20           7.  [VOL] NOT ALZHEIMER'S DISEASE
            24           8.  DK (Don't Know); NA (Not Ascertained)
             2           9.  RF (Refused)
                     Blank.  INAP (Inapplicable); Partial Interview
*/
gen alz_hrs = .
replace alz_hrs = 1 if (core_year==2010 & mc272==1)
replace alz_hrs = 0 if (core_year==2010 & inlist(mc272,5,7))
la var alz_hrs "Alzheimer's disease - core, 2010 only"

/*Dementia
2010 HRS survey only
MC273, not asked if report having alzheimer's
Not included in overall comorbidity index
    436           1.  YES
         21206           5.  NO
            28           8.  DK (Don't Know); NA (Not Ascertained)
             4           9.  RF (Refused)
           363       Blank.  INAP (Inapplicable); Partial Interview
*/
gen dem_hrs = .
replace dem_hrs = 1 if (core_year==2010 & mc273==1)
replace dem_hrs = 0 if (core_year==2010 & mc272==5)
la var dem_hrs "Dementia - core, 2010 only"

/* Falls r1230
generate falls_hrs = .
 then falls_hrs = 1 ; if ((sc079=1)|(tc079=1)|(uc079=1)|(sc079=3)|(tc079=3)|(uc079=3))
 then falls_hrs = 0 ; if ((sc079=5)|(tc079=5)|(uc079=5)|(sc079=4)|(tc079=4)|(uc079=4))
label falls_hrs "Falls"
Cross-Wave Equivalents for:
C079 FALLEN IN PAST TWO YEARS 
1995 Core D878 
1996 Core E878 
1998 Core F1206 
2000 Core G1339 
2002 Core HC079 
2002 Exit SC079 
2004 Core JC079 
2004 Exit TC079 
2006 Core KC079 
2006 Exit UC079 
2008 Core LC079 
2008 Exit VC079 
2010 Core MC079 
2010 Exit WC079 
 only asked for those who were greater than 65 when interviewed
 not compared to previous interview response
*/
generate falls_hrs = .
replace falls_hrs = 1 if (core_year==2006 & kc079==1)
replace falls_hrs = 1 if (core_year==2008 & lc079==1)
replace falls_hrs = 1 if (core_year==2010 & mc079==1)
replace falls_hrs = 0 if (core_year==2006 & kc079==5)
replace falls_hrs = 0 if (core_year==2008 & lc079==5)
replace falls_hrs = 0 if (core_year==2010 & mc079==5)
label variable falls_hrs "Falls - core"
//label define falls_hrs 0 "No" 1 "Yes", modify
//label values falls_hrs falls_hrs
tab falls_hrs core_year, missing


/** Incontinence
C087 INCONTINENCE 
2000 Core 	G1353
2002 Core 	HC087
2002 Exit 	N/A
2004 Core 	JC087
2004 Exit 	N/A
2006 Core 	KC087
2006 Exit 	N/A
2008 Core 	LC087
2008 Exit 	N/A
2010 Core 	MC087
*/
generate incont_hrs = .
replace incont_hrs = 1 if ((kc087==1)|(lc087==1)|(mc087==1))
replace incont_hrs = 0 if ((kc087==5)|(lc087==5)|(mc087==5))
label var incont_hrs "Incontinence"
tab incont_hrs core_year, missing

/* 
Pain r1246
Cross-Wave Equivalents for:
C104 TROUBLED WITH PAIN 
2000 Core 	G1372
2002 Core 	HC104
2002 Exit 	SC104
2004 Core 	JC104
2004 Exit 	TC104
2006 Core 	KC104
2006 Exit 	UC104
2008 Core 	LC104
2008 Exit 	VC104
2010 Core 	MC104
2010 Exit 	WC104
*/
gen byte pain_hrs = .
replace pain_hrs=1 if ((kc104==1)|(lc104==1)|(mc104==1))
replace pain_hrs=0 if ((kc104==5)|(lc104==5)|(mc104==5))
label var pain_hrs "Pain"
tab pain_hrs core_year, missing

/*How bad is pain if yes above?
1 = mild, 2 = moderate, 3 = severe, 8,9 = don't know, refused
1998 Core 	F1241
2000 Core 	G1374
2002 Core 	HC105
2002 Exit 	SC105
2004 Core 	JC105
2004 Exit 	TC105
2006 Core 	KC105
2006 Exit 	UC105
2008 Core 	LC105
2008 Exit 	VC105
2010 Core 	MC105
2010 Exit 	WC105 
*/
gen pain_level_hrs = .
replace pain_level_hrs = kc105 if core_year==2006
replace pain_level_hrs = lc105 if core_year==2008
replace pain_level_hrs = mc105 if core_year==2010
replace pain_level_hrs = . if inlist(pain_level_hrs,8,9)
la var pain_level_hrs "How bad was pain? 1=mild, 2=mod, 3=severe"
tab pain_level_hrs core_year , missing

/*Does pain limit activities?
1998 Core 	F1242
2000 Core 	G1375
2002 Core 	HC106
2004 Core 	JC106
2006 Core 	KC106
2008 Core 	LC106
2010 Core 	MC106
Coded as 0 if answer=no or if not applicable b/c no pain
*/
gen pain_limit_act_hrs = .
replace pain_limit_act_hrs =1 if kc106==1 | lc106==1 | mc106==1
replace pain_limit_act_hrs =0 if kc106==5 | lc106==5 | mc106==5
replace pain_limit_act_hrs =0 if pain_hrs==0
la var pain_limit_act_hrs "Does pain limit usual activities?"
tab pain_limit_act_hrs core_year, missing
 

/** HTN
Ever had high blood pressure?
2000 Core 	G1238
2002 Core 	HC005
2002 Exit 	N/A
2004 Core 	JC005
2004 Exit 	N/A
2006 Core 	KC005
2006 Exit 	N/A
2008 Core 	LC005
2008 Exit 	N/A
2010 Core 	MC005
2010 Exit 	N/A
*/
generate byte htn_hrs = .
replace htn_hrs = 1 if (core_year==2006 & inlist(kc005,1,3))
replace htn_hrs = 1 if (core_year==2008 & inlist(lc005,1,3))
replace htn_hrs = 1 if (core_year==2010 & inlist(mc005,1,3))
replace htn_hrs = 0 if (core_year==2006 & inlist(kc005,4,5))
replace htn_hrs = 0 if (core_year==2008 & inlist(lc005,4,5))
replace htn_hrs = 0 if (core_year==2010 & inlist(mc005,4,5))
label var htn_hrs "Hypertension"
tab htn_hrs core_year, missing


/** Diabetes
Cross-Wave Equivalents for:
C010 DIABETES 
2000 Core 	G1245
2002 Core 	HC010
2002 Exit 	N/A
2004 Core 	JC010
2004 Exit 	N/A
2006 Core 	KC010
2006 Exit 	N/A
2008 Core 	LC010
2008 Exit 	N/A
2010 Core 	MC010
*/
generate byte dm_hrs = .
replace dm_hrs = 1 if (core_year==2006 & inlist(kc010,1,3))
replace dm_hrs = 1 if (core_year==2008 & inlist(lc010,1,3))
replace dm_hrs = 1 if (core_year==2010 & inlist(mc010,1,3))
replace dm_hrs = 0 if (core_year==2006 & inlist(kc010,4,5))
replace dm_hrs = 0 if (core_year==2008 & inlist(lc010,4,5))
replace dm_hrs = 0 if (core_year==2010 & inlist(mc010,4,5))
label var dm_hrs "Diabetes"
tab dm_hrs core_year, missing

/* Taking Insulin for Diabetes
Cross-Wave Equivalents for:
2000 Core 	G1249
2002 Core 	HC012
2002 Exit 	N/A
2004 Core 	JC012
2004 Exit 	N/A
2006 Core 	KC012
2006 Exit 	N/A
2008 Core 	LC012
2008 Exit 	N/A
2010 Core 	MC012*/
generate byte dm_ins_hrs = .
replace dm_ins_hrs = 0 if dm_hrs ==0
replace dm_ins_hrs = 1 if (core_year==2006 & kc012==1)
replace dm_ins_hrs = 1 if (core_year==2008 & lc012==1)
replace dm_ins_hrs = 1 if (core_year==2010 & mc012==1)
replace dm_ins_hrs = 0 if (core_year==2006 & kc012==5)
replace dm_ins_hrs = 0 if (core_year==2008 & lc012==5)
replace dm_ins_hrs = 0 if (core_year==2010 & mc012==5)
label var dm_ins_hrs "Insulin for diabetes"
tab dm_ins_hrs core_year, missing

/*Kidney trouble due to diabetes
2000 Core 	G1256
2002 Core 	HC017
2004 Core 	JC017
2006 Core 	KC017
2008 Core 	LC017
2010 Core 	MC017
*/
generate byte dm_kidn_hrs = .
replace dm_kidn_hrs = 0 if dm_hrs ==0
replace dm_kidn_hrs = 1 if (core_year==2006 & kc017==1)
replace dm_kidn_hrs = 1 if (core_year==2008 & lc017==1)
replace dm_kidn_hrs = 1 if (core_year==2010 & mc017==1)
replace dm_kidn_hrs = 0 if (core_year==2006 & kc017==5)
replace dm_kidn_hrs = 0 if (core_year==2008 & lc017==5)
replace dm_kidn_hrs = 0 if (core_year==2010 & mc017==5)
label var dm_kidn_hrs "Kidney trouble due to diabetes"
tab dm_kidn_hrs core_year, missing



/** Psychiatric Condition ("doctor ever told... emotional, nervous or psychiatric problems?")
Cross-Wave Equivalents for:
C065 EMOTIONAL/PSYCHIATRIC PROBLEMS 
2000 Core 	G1322
2002 Core 	HC065
2002 Exit 	N/A
2004 Core 	JC065
2004 Exit 	N/A
2006 Core 	KC065
2006 Exit 	N/A
2008 Core 	LC065
2008 Exit 	N/A
2010 Core 	MC065
*/
generate psych_hrs = .
replace psych_hrs = 1 if (core_year==2006 & inlist(kc065,1,3))
replace psych_hrs = 1 if (core_year==2008 & inlist(lc065,1,3))
replace psych_hrs = 1 if (core_year==2010 & inlist(mc065,1,3))
replace psych_hrs = 0 if (core_year==2006 & inlist(kc065,4,5))
replace psych_hrs = 0 if (core_year==2008 & inlist(lc065,4,5))
replace psych_hrs = 0 if (core_year==2010 & inlist(mc065,4,5)) 
label var psych_hrs "Psychiatric Condition"
tab psych_hrs core_year, missing

/*additional psych questions, not part of comorbidities but cleaned here anyway
psych treatment 1=yes 5=no, only asked if reported having psych problems (psych_hrs==1)
2000 Core 	G1324
2002 Core 	HC067
2004 Core 	JC067
2006 Core 	KC067
2008 Core 	LC067
2010 Core 	MC067
psych medications 1=yes 5 = no, only asked if reported having psych problems (psych_hrs==1)
2000 Core 	G1325
2002 Core 	HC068
2004 Core 	JC068
2006 Core 	KC068
2008 Core 	LC068
2010 Core 	MC068
*/
gen byte PSYCH_treat = .
replace PSYCH_treat = 1 if (kc067==1)|(lc067==1)|(mc067==1)
replace PSYCH_treat = 0 if (kc067==5)|(lc067==5)|(mc067==5)
replace PSYCH_treat = 0 if psych_hrs==0
la var PSYCH_treat "Receives Psychiatric treatment"
tab PSYCH_treat core_year,missing

gen byte PSYCH_med = .
replace PSYCH_med = 1 if (kc068==1)|(lc068==1)|(mc068==1)
replace PSYCH_med = 0 if (kc068==5)|(lc068==5)|(mc068==5)
replace PSYCH_med = 0 if psych_hrs==0
la var PSYCH_med "Psychiatric medication"
tab PSYCH_med core_year,missing



/** Arthritis
C070 ARTHRITIS 
2000 Core 	G1327
2002 Core 	HC070
2002 Exit 	N/A
2004 Core 	JC070
2004 Exit 	N/A
2006 Core 	KC070
2006 Exit 	N/A
2008 Core 	LC070
2008 Exit 	N/A
2010 Core 	MC070
*/
generate arth_hrs = .
replace arth_hrs = 1 if (core_year==2006 & inlist(kc070,1,3))
replace arth_hrs = 1 if (core_year==2008 & inlist(lc070,1,3))
replace arth_hrs = 1 if (core_year==2010 & inlist(mc070,1,3))
replace arth_hrs = 0 if (core_year==2006 & inlist(kc070,4,5))
replace arth_hrs = 0 if (core_year==2008 & inlist(lc070,4,5))
replace arth_hrs = 0 if (core_year==2010 & inlist(mc070,4,5)) 
label var arth_hrs "Arthritis"
tab arth_hrs core_year, missing

/*Hip fracture since last interview
Only asked for those 65 and older
1998 Core 	F1215
2000 Core 	G1348
2002 Core 	HC082
2002 Exit 	SC082
2004 Core 	JC082
2004 Exit 	TC082
2006 Core 	KC082
2006 Exit 	UC082
2008 Core 	LC082
2008 Exit 	VC082
2010 Core 	MC082
2010 Exit 	WC082 */
gen byte hip_frac_hrs = .
replace hip_frac_hrs=1 if kc082==1 | lc082==1 | mc082==1
replace hip_frac_hrs=0 if kc082==5 | lc082==5 | mc082==5 
la var hip_frac_hrs "Hip fracture"
tab hip_frac_hrs core_year , missing

*********************************************************************
//Questions re other symptoms since last intervew
*********************************************************************

/*Shortness of breath since last interview?
1998 Core 	F1305
2000 Core 	G1438
2002 Core 	HC144
2004 Core 	JC144
2006 Core 	KC144
2008 Core 	LC144
2010 Core 	MC144
*/
gen byte dyspnea_hrs = .
replace dyspnea_hrs = 1 if kc144==1 | lc144==1 | mc144==1
replace dyspnea_hrs = 0 if kc144==5 | lc144==5 | mc144==5
la var dyspnea_hrs "Dyspnea since last interview? 1=yes"
tab dyspnea_hrs core_year, missing

/* Persistant swelling in feet or ankles?
1998 Core 	F1304
2000 Core 	G1437
2002 Core 	HC143
2004 Core 	JC143
2006 Core 	KC143
2008 Core 	LC143
2010 Core 	MC143*/
gen byte swelling_feet_hrs = .
replace swelling_feet_hrs = 1 if kc143==1 | lc143==1 | mc143==1
replace swelling_feet_hrs = 0 if kc143==5 | lc143==5 | mc143==5
la var swelling_feet_hrs "Swelling feet or ankles since last interview? 1=yes"
tab swelling_feet_hrs core_year, missing

/* Persistant dizziness or lightheadedness
1998 Core 	F1306
2000 Core 	G1439
2002 Core 	HC145
2004 Core 	JC145
2006 Core 	KC145
2008 Core 	LC145
2010 Core 	MC145*/
gen byte dizzy_hrs = .
replace dizzy_hrs = 1 if kc145==1 | lc145==1 | mc145==1
replace dizzy_hrs = 0 if kc145==5 | lc145==5 | mc145==5
la var dizzy_hrs "Dizziness or lightheadedness since last interview? 1=yes"
tab dizzy_hrs core_year, missing

/* Back pain or problems
1998 Core 	F1307
2000 Core 	G1440
2002 Core 	HC146
2004 Core 	JC146
2006 Core 	KC146
2008 Core 	LC146
2010 Core 	MC146*/
gen byte back_pain_hrs = .
replace back_pain_hrs = 1 if kc146==1 | lc146==1 | mc146==1
replace back_pain_hrs = 0 if kc146==5 | lc146==5 | mc146==5
la var back_pain_hrs "Back pain or problems since last interview? 1=yes"
tab back_pain_hrs core_year, missing

/* Persisent headaches
1998 Core 	F1308
2000 Core 	G1441
2002 Core 	HC147
2004 Core 	JC147
2006 Core 	KC147
2008 Core 	LC147
2010 Core 	MC147*/
gen byte headache_hrs = .
replace headache_hrs = 1 if kc147==1 | lc147==1 | mc147==1
replace headache_hrs = 0 if kc147==5 | lc147==5 | mc147==5
la var headache_hrs "Persistent headaches since last interview? 1=yes"
tab headache_hrs core_year, missing

/* Severe fatigue or exhaustion
1998 Core 	F1309
2000 Core 	G1442
2002 Core 	HC148
2004 Core 	JC148
2006 Core 	KC148
2008 Core 	LC148
2010 Core 	MC148*/
gen byte fatigue_hrs = .
replace fatigue_hrs = 1 if kc148==1 | lc148==1 | mc148==1
replace fatigue_hrs = 0 if kc148==5 | lc148==5 | mc148==5
la var fatigue_hrs "Severe fatigue or exhaustion since last interview? 1=yes"
tab fatigue_hrs core_year, missing

/* Persistent wheezing, cough or phlegm
1998 Core 	F1310
2000 Core 	G1443
2002 Core 	HC149
2004 Core 	JC149
2006 Core 	KC149
2008 Core 	LC149
2010 Core 	MC149*/
gen byte cough_hrs = .
replace cough_hrs = 1 if kc149==1 | lc149==1 | mc149==1
replace cough_hrs = 0 if kc149==5 | lc149==5 | mc149==5
la var cough_hrs "Persistent wheezing, coughing since last interview? 1=yes"
tab cough_hrs core_year, missing

********************************************************************************
//Insomnia symptoms
********************************************************************************
/*How often trouble falling asleep?  xC083
1=most of the time, 2=sometimes, 3=rarely or never
Not asked before 2002
*/
gen insom_falling_asleep = .
replace insom_falling_asleep = 1 if kc083==1 | lc083==1 | mc083==1
replace insom_falling_asleep = 2 if kc083==2 | lc083==2 | mc083==2
replace insom_falling_asleep = 3 if kc083==3 | lc083==3 | mc083==3
la var insom_falling_asleep "Trouble falling asleep? 1=Most of the time, 2=Sometimes, 3=Rarely,Never"
tab insom_falling_asleep core_year, missing

/*How often trouble waking up during the night?  xC084
1=most of the time, 2=sometimes, 3=rarely or never
Not asked before 2002
*/
gen insom_waking_up = .
replace insom_waking_up = 1 if kc084==1 | lc084==1 | mc084==1
replace insom_waking_up = 2 if kc084==2 | lc084==2 | mc084==2
replace insom_waking_up = 3 if kc084==3 | lc084==3 | mc084==3
la var insom_waking_up "Trouble waking up during night? 1=Most of the time, 2=Sometimes, 3=Rarely,Never"
tab insom_waking_up core_year, missing

/*How often trouble waking up too early and not being able to fall asleep again?  xC085
1=most of the time, 2=sometimes, 3=rarely or never
Not asked before 2002
*/
gen insom_too_early = .
replace insom_too_early = 1 if kc085==1 | lc085==1 | mc085==1
replace insom_too_early = 2 if kc085==2 | lc085==2 | mc085==2
replace insom_too_early = 3 if kc085==3 | lc085==3 | mc085==3
la var insom_too_early "Trouble waking up too early? 1=Most of the time, 2=Sometimes, 3=Rarely,Never"
tab insom_too_early core_year, missing

/*How often feel really rested when you wake up in the morning?  xC086
1=most of the time, 2=sometimes, 3=rarely or never
Not asked before 2002
Note when create overall insomnia variable, this one is opposite, 1,most of the time==good
*/
gen insom_rested = .
replace insom_rested = 1 if kc086==1 | lc086==1 | mc086==1
replace insom_rested = 2 if kc086==2 | lc086==2 | mc086==2
replace insom_rested = 3 if kc086==3 | lc086==3 | mc086==3
la var insom_rested "Feel rested when wake up? 1=Most of the time, 2=Sometimes, 3=Rarely,Never"
tab insom_rested core_year, missing

/*In the past 2 weeks, taken medication or treatment to help sleep?
xc232u2 - 1=yes, 5=no
Not asked before 2006*/
gen byte insom_med_sleep = .
replace insom_med_sleep = 1 if kc232u2==1 | lc232u2==1 | mc232u2==1
replace insom_med_sleep = 0 if kc232u2==5 | lc232u2==5 | mc232u2==5
la var insom_med_sleep "Take medic. or other treatment to help sleep, 1=yes"
tab insom_med_sleep core_year, missing

/*Medication recommended by a doctor?
xc233 - 1=yes, 5=no (asked if yes above, left missing if no medication taken)
Not asked before 2006*/
gen byte insom_med_dr = .
replace insom_med_dr = 1 if kc233==1 | lc233==1 | mc233==1
replace insom_med_dr = 0 if kc233==5 | lc233==5 | mc233==5
la var insom_med_dr "Medications or treatment to help sleep recommended by a doctor, 1=yes"
tab insom_med_dr core_year, missing

/*depression, period of 2 weeks in the last year when felt sad, blue or depressed?
Skip pattern changed after 1998, if find need to backfill, then need to check 1998 variable
1998 Core 	F1323
2000 Core 	G1456
2002 Core 	HC150
2004 Core 	JC150
2006 Core 	KC150
2008 Core 	LC150
2010 Core 	MC150*/
gen byte depr_2_wks_hrs = .
replace depr_2_wks_hrs = 1 if kc150==1 | lc150==1 | mc150==1| ///
	 kc150==3 | lc150==3 | mc150==3
replace depr_2_wks_hrs = 0 if  kc150==5 | lc150==5 | mc150==5
la var depr_2_wks_hrs "Depressed 2 week period in last year? 1=yes"
tab depr_2_wks_hrs core_year , missing


save core_06_10_clean3.dta, replace

log close



H="Core 06-10 cleaning, cognition, dementia"

capture log close

clear all
set mem 1g
set matsize 800
set more off

//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\2_HRS_Core_06_10_clean4-LOG.txt", text replace

cd `datapath'

use core_06_10_clean3.dta

/*Rate memory
2002-2010: d101
1 = excellent, 5=poor*/
gen sr_memory = .
replace sr_memory = kd101 if core_year==2006
replace sr_memory = ld101 if core_year==2008
replace sr_memory = md101 if core_year==2010
replace sr_memory = . if inlist(sr_memory,8,9)
la var sr_memory "Self rated memory, 1=Excel, 5=Poor"


/*Compare memory now to self rating at last interview
1=better, 2=same, 3=worse
2002-2010: d102*/
gen sr_mem_change = .
replace sr_mem_change = kd102 if core_year==2006
replace sr_mem_change = ld102 if core_year==2008
replace sr_mem_change = md102 if core_year==2010
replace sr_mem_change = . if inlist(sr_mem_change,8,9)
la var sr_mem_change "Self rated memory now vs last ivw, 1=Better,2=Same,3=Worse"

/*Proxy Rate memory
2002-2010: d151
1 = excellent, 5=poor*/
gen pr_memory = .
replace pr_memory = kd151 if core_year==2006
replace pr_memory = ld151 if core_year==2008
replace pr_memory = md151 if core_year==2010
replace pr_memory = . if inlist(sr_memory,8,9)
la var pr_memory "Proxy rated memory, 1=Excel, 5=Poor"

/*Proxy Compare memory now to self rating at last interview
1=better, 2=same, 3=worse
2002-2010: d152*/
gen pr_mem_change = .
replace pr_mem_change = kd152 if core_year==2006
replace pr_mem_change = ld152 if core_year==2008
replace pr_mem_change = md152 if core_year==2010
replace pr_mem_change = . if inlist(sr_mem_change,8,9)
la var pr_mem_change "Proxy rated memory now vs last ivw, 1=Better,2=Same,3=Worse"

save core_06_10_clean4.dta, replace

log close

H="Core - merge 00-10 - drop processed raw variables"
/*variable cleaning for HRS core 2000-2010
Most code is taken from the HRS Outline_11_22_11.txt file
and modified to clean 2000-2010 core dataset

Drop individual year raw variables to reduce dataset size
Do this on the 00-04 dataset and 06-10 dataset separately, then
merge them so now there's just one core dataset for 2000-2010
for the remaining cleaning steps
*/

capture log close

clear all
set mem 1g
set matsize 800
set more off


//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\2_HRS_Core_00_10_clean4-LOG.txt", text replace

cd `datapath'

local keep98_04 id core_year hhid pn proxy_core female educ  ///
marital married marital* hisp relig imprelig friend rel_nb ///
hosp_* medicare medicareb medicaid champus hmo medigap catinsur nhres* ///
nh_stays nh_nights nh_ins resspouse hhm child gchil allchil reschil ///
srh cesd* ever_drink days_drink n_drinks_3m adl* ///
iadl* fl* hh_worker cancer* lung* heart_hrs chf* stroke_hrs memory_hrs falls_hrs ///
incont_hrs pain* htn_hrs dm_* psych_hrs PSYCH_treat PSYCH_med arth_hrs hip_frac_hrs ///
smoke* vig_phy_act *netwrth wgt_curr height* help_friends* soc_visit* dyspnea_hrs ///
swelling_feet_hrs dizzy_hrs back_pain_hrs headache_hrs fatigue_hrs cough_hrs insom* ///
sr_mem* pr_mem* depr_2_wks_hrs 

//drop variables from 1998-2004 dataset
use `keep98_04' using core_98_04_clean4.dta

tab core_year

save core_98_04_clean_final.dta, replace

clear

local keep06_10 id core_year hhid pn proxy_core female educ  ///
marital married marital* hisp relig imprelig friend rel_nb ///
hosp_* medicare medicareb medicaid champus hmo medigap catinsur nhres* ///
nh_stays nh_nights nh_ins resspouse hhm child gchil allchil reschil ///
srh cesd* ever_drink days_drink n_drinks_3m adl* ///
iadl* fl* hh_worker cancer* lung* heart_hrs chf* stroke_hrs memory_hrs alz_hrs dem_hrs falls_hrs ///
incont_hrs pain* htn_hrs dm_* psych_hrs PSYCH_treat PSYCH_med arth_hrs hip_frac_hrs ///
smoke* vig_phy_act *netwrth wgt_curr height* help_friends* soc_visit* dyspnea_hrs ///
swelling_feet_hrs dizzy_hrs back_pain_hrs headache_hrs fatigue_hrs cough_hrs insom* ///
sr_mem* pr_mem* depr_2_wks_hrs 

//drop variables from 2006-2010 dataset
use `keep06_10' using core_06_10_clean4.dta

tab core_year

save core_06_10_clean_final.dta, replace

clear

//merge into single dataset
use core_98_04_clean_final.dta

append using core_06_10_clean_final.dta, 

tab core_year

save core_98_10_clean_merge.dta, replace

log close


H="Core - merge helpers, additional variables created"
/*variable cleaning for HRS core 2000-2010
Most code is taken from the HRS Outline_11_22_11.txt file
and modified to clean 2000-2010 core dataset

Adds variables from the helper files for the primary adl and iadl helpers for 2002-2010

Creates indices and other variables from cleaned 2000-2010 dataset
*/

capture log close

clear all
set mem 1g
set matsize 800
set more off

//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\2_HRS_Core_00_10_clean5-LOG.txt", text replace

cd `datapath'

****************************************************************************************
//Bring in helpers dataset from 2002-2010 core interviews
****************************************************************************************
use helpers_core_0210.dta

egen id= concat(hhid pn)
la var id "Respondent ID (HHID+PN)"

//clean up helper file variables

//indicators for adl and iadl helper information present in helper files
replace adl_help_ind=0 if adl_help_ind==.
tab adl_help_ind, missing
replace iadl_help_ind=0 if iadl_help_ind==.
tab iadl_help_ind, missing
tab adl_help_ind iadl_help_ind, missing

//adl helper frequency variables
replace adl_hlp_freq_mo = . if inlist(adl_hlp_freq_mo,96,98,99)
replace adl_hlp_freq_wk = . if adl_hlp_freq_wk==8
replace adl_hlp_freq_ed = . if adl_hlp_freq_ed==8
replace adl_help_hours = . if inlist(adl_help_hours,98,99)

/*Commented out code to look at missingness across frequency variables
gen adl_mo = 1 if adl_hlp_freq_mo~=.
replace adl_mo = 0 if adl_hlp_freq_mo==.
tab adl_mo if adl_help_ind==1
gen adl_wk = 1 if adl_hlp_freq_wk~=.
replace adl_wk = 0 if adl_hlp_freq_wk==.
tab adl_wk if adl_help_ind==1
gen adl_ed = 1 if adl_hlp_freq_ed~=.
replace adl_ed = 0 if adl_hlp_freq_ed==.
tab adl_ed if adl_help_ind==1
la var adl_mo "Month"
la var adl_wk "Week"
la var adl_ed "Every day"
table adl_mo adl_wk adl_ed if adl_help_ind==1*/

//create imputed adl helper frequency variables, days per month and every day indicator
gen adl_hlp_freq_imp_mo = .
replace adl_hlp_freq_imp_mo = adl_hlp_freq_mo if adl_hlp_freq_mo~=.
replace adl_hlp_freq_imp_mo = adl_hlp_freq_wk*4 if adl_hlp_freq_imp_mo==. & adl_hlp_freq_wk!=.
replace adl_hlp_freq_imp_mo = 28 if adl_hlp_freq_ed==1
la var adl_hlp_freq_imp_mo "Imputed days/month ADL helper"
tab adl_hlp_freq_imp_mo if adl_help_ind==1, missing

gen adl_hlp_freq_imp_ed = .
replace adl_hlp_freq_imp_ed = 1 if adl_hlp_freq_imp_mo>27 & adl_hlp_freq_imp_mo~=.
replace adl_hlp_freq_imp_ed = 0 if adl_hlp_freq_imp_mo<28 & adl_hlp_freq_imp_mo~=.
la var adl_hlp_freq_imp_ed "Imputed ADL helper every day ind, 1=yes"
tab adl_hlp_freq_imp_ed if adl_help_ind==1, missing

//iadl helper frequency variables
replace iadl_hlp_freq_mo = . if inlist(iadl_hlp_freq_mo,96,98,99)
replace iadl_hlp_freq_wk = . if iadl_hlp_freq_wk==8
replace iadl_hlp_freq_ed = . if iadl_hlp_freq_ed==8
replace iadl_help_hours = . if inlist(iadl_help_hours,98,99)

/*Commented out code to look at missingness across frequency variables
gen iadl_mo = 1 if iadl_hlp_freq_mo~=.
replace iadl_mo = 0 if iadl_hlp_freq_mo==.
tab iadl_mo if iadl_help_ind==1
gen iadl_wk = 1 if iadl_hlp_freq_wk~=.
replace iadl_wk = 0 if iadl_hlp_freq_wk==.
tab iadl_wk if iadl_help_ind==1
gen iadl_ed = 1 if iadl_hlp_freq_ed~=.
replace iadl_ed = 0 if iadl_hlp_freq_ed==.
tab iadl_ed if iadl_help_ind==1
la var iadl_mo "Month"
la var iadl_wk "Week"
la var iadl_ed "Every day"
table iadl_mo iadl_wk iadl_ed if iadl_help_ind==1*/

//create imputed helper frequency variables, days per month and every day indicator
gen iadl_hlp_freq_imp_mo = .
replace iadl_hlp_freq_imp_mo = iadl_hlp_freq_mo if iadl_hlp_freq_mo~=.
replace iadl_hlp_freq_imp_mo = iadl_hlp_freq_wk*4 if iadl_hlp_freq_imp_mo==. & iadl_hlp_freq_wk!=.
replace iadl_hlp_freq_imp_mo = 28 if iadl_hlp_freq_ed==1
la var iadl_hlp_freq_imp_mo "Imputed days/month IADL helper"
tab iadl_hlp_freq_imp_mo if iadl_help_ind==1, missing

gen iadl_hlp_freq_imp_ed = .
replace iadl_hlp_freq_imp_ed = 1 if iadl_hlp_freq_imp_mo>27 & iadl_hlp_freq_imp_mo~=.
replace iadl_hlp_freq_imp_ed = 0 if iadl_hlp_freq_imp_mo<28 & iadl_hlp_freq_imp_mo~=.
la var iadl_hlp_freq_imp_ed "Imputed IADL helper every day ind, 1=yes"
tab iadl_hlp_freq_imp_ed if iadl_help_ind==1, missing

save helpers_core_0210_tomerge.dta, replace

clear
use core_98_10_clean_merge.dta

//check for duplicate ids
sort id core_year
quietly by id core_year: gen dup = cond(_N==1,0,_n)
tab dup
drop if dup>1 
drop dup

merge 1:1 id core_year using helpers_core_0210_tomerge.dta 

drop if _merge==2

drop _merge


*******************************************************************************************
** Dummies for Education categories
*******************************************************************************************

** Grade 0 - 11**
generate byte ed_less_hs = 0
replace ed_less_hs = 0 if ((educ==2) | (educ==3)| (educ==4)| (educ==5))
replace ed_less_hs = 1 if ((educ==0) | (educ==1))
label variable ed_less_hs "No Formal Education-Grade 11"
//label define ed_less_hs 1 "No Formal Education-Grade 11", modify
//label values ed_less_hs ed_less_hs
tab ed_less_hs, missing 

** HS Grad or Some College **
generate byte ed_hs_plus = 0
replace ed_hs_plus = 0 if ((educ==0) | (educ==1)|(educ==4)| (educ==5))
replace ed_hs_plus = 1 if ((educ==2) | (educ==3))
label variable ed_hs_plus "High School Grad or Some College"
//label define ed_hs_plus 1 "High School Grad or Some College", modify
//label values ed_hs_plus ed_hs_plus
tab ed_hs_plus, missing 

** College Grad or Higher **
generate byte ed_coll = 0
replace ed_coll = 0 if ((educ==0) | (educ==1)|(educ==2) | (educ==3))
replace ed_coll = 1 if ((educ==4) | (educ==5))
label variable ed_coll "College Grad or Higher"
//label define ed_coll 1 "College Grad or Higher", modify
//label values ed_coll ed_coll
tab ed_coll, missing 

** Education info missing **
generate byte ed_missing = 0
replace ed_missing = 1 if (educ>=.) 
label variable ed_missing "Education info missing "
//label define ed_missing 1 "Education info missing ", modify
//label values ed_missing ed_missing
tab ed_missing, missing 

*******************************************************************************************
** Dichotomized at High School
** 2/8 code changed to define missings as 0 for preliminary models, will impute missing values in final model
*******************************************************************************************
generate byte hseduc = 0
replace hseduc = 0 if (educ <=1)
replace hseduc = 1 if (educ >1) & (educ <.)
label variable hseduc "Eduction, High School"
//label define hseduc 0 "Less than HS Education or missing" 1 "HS Education or Higher", modify
//label values hseduc hseduc 
tab educ hseduc, missing

*******************************************************************************************
** Marital status dichotomous variables
*******************************************************************************************

generate byte marital_sep = .
replace marital_sep = 1 if (marital==2)
replace marital_sep = 0 if (marital!=2 & marital <.)
label variable marital_sep "Separated"
//label define marital_sep 1 "Separated" 0 "Not Separated", modify
//label values marital_sep marital_sep
tab marital_sep, missing 

generate byte marital_div = .
replace marital_div = 1 if (marital==3)
replace marital_div = 0 if (marital!=3 & marital <.)
label variable marital_div "Divorced"
//label define marital_div 1 "Divorced" 0 "Not Divorced", modify
//label values marital_div marital_div
tab marital_div, missing 

generate byte marital_wid = .
replace marital_wid = 1 if (marital==4)
replace marital_wid = 0 if (marital!=4 & marital <.)
label variable marital_wid "Widowed"
//label define marital_wid 1 "Widowed" 0 "Not Widowed", modify
//label values marital_wid marital_wid
tab marital_wid, missing 

generate byte marital_nev = .
replace marital_nev = 1 if (marital==5)
replace marital_nev = 0 if (marital!=5 & marital <.)
label variable marital_nev "Never Married"
//label define marital_nev 1 "Never Married" 0 "Not Never Married", modify
//label values marital_nev marital_nev
tab marital_nev, missing 

generate byte marital_sd = .
replace marital_sd = 1 if (marital_sep==1 | marital_div==1)
replace marital_sd = 0 if (marital_sep==0 & marital_div==0)
label variable marital_sd "Separated or Divorced"
//label define marital_sd 1 "Separated or Divorced" 0 "Not Separated or Divorced", modify
//label values marital_sd marital_sd
tab marital_sd, missing

generate byte marital_missing = 0
replace marital_missing = 1 if ((marital >=.)|(marital==6))
label variable marital_missing "Marital Status Missing"
//label define marital_missing 1 "Marital Status Missing" 0 "Not Missing", modify
//label values marital_missing marital_missing
tab marital_missing, missing

*******************************************************************************************
** Resident Children as indicator variable
*******************************************************************************************
generate reschil_d = .
replace reschil_d = 0 if ((reschil==0) & (reschil<.))|(nhres==1)
replace reschil_d = 1 if ((reschil>0) & (reschil<.))&(nhres!=1)
label variable reschil_d "Living with Children"
//label define reschil_d 1 "Live with 1 or more Children" 0 "Not Resident Children", modify
//label val reschil_d reschil_d 
tab reschil_d, missing

/**********************************************************************/
// Dummies for 3 categories self-reported health status: Poor/Fair, Good, Very Good /Excellent**
/**********************************************************************/
gen byte srh_pf = .
replace srh_pf = 0 if inlist(srh,1,2,3)
replace srh_pf = 1 if inlist(srh,4,5)
label var srh_pf "Self Rated Health: Poor/Fair"

gen byte srh_g = .
replace srh_g = 0 if inlist(srh,1,2,4,5)
replace srh_g = 1 if srh==3
label var srh_g "Self Rated Health: Good"

gen byte srh_ve = .
replace srh_ve = 0 if inlist(srh,3,4,5)
replace srh_ve = 1 if inlist(srh,1,2)
label var srh_ve "Self Rated Health: Very Good /Excellent"

/**********************************************************************/
// CESD and Alcohol use variables 
/**********************************************************************/
//total cesd indicators
gen cesd_tot=cesd1 + cesd2 + cesd3 + cesd4 + cesd5 + cesd6 + cesd7 + cesd8
tab cesd_tot core_year, missing
la var cesd_tot "Total CESD count"

//cesd total >=3 indicator
gen byte cesd_tot_ge3=.
replace cesd_tot_ge3=1 if (cesd_tot>=3 & cesd_tot!=.)
replace cesd_tot_ge3=0 if (cesd_tot<3 & cesd_tot!=.)
la var cesd_tot_ge3 "CESD Count 3 or higher"
tab cesd_tot_ge3 core_year,missing

gen byte Alcohol_mis = .
replace Alcohol_mis=1 if (ever_drink==1 & n_drinks_3m>4 & n_drinks_3m!=.)
replace Alcohol_mis=0 if (ever_drink==1 & n_drinks_3m<=4 )
replace Alcohol_mis=0 if ever_drink==0 | days_drink==0
la var Alcohol_mis "Alcohol mis-use"
tab Alcohol_mis core_year, missing


/**********************************************************************/
// BMI variables calculated from height and weight **
/**********************************************************************/

gen height_in=.
replace height_in=(height_ft_temp *12)+height_in_temp
la var height_in "Height, inches"
tab height_in core_year, missing

drop height_ft_temp height_in_temp 

//BMI calculated
gen bmi = .
replace bmi = wgt_curr / (height_in * height_in) * 703
la var bmi "Body mass index - calculated"
sum bmi

//bmi categories
gen bmi_cat = .
replace bmi_cat = 0 if (bmi<=18.5)
replace bmi_cat = 1 if (18.5 <= bmi & bmi<25)
replace bmi_cat = 2 if (25<= bmi & bmi<30)
replace bmi_cat = 3 if (bmi >= 30) & bmi!=.
// la def bmi_cat 0 "Underweight" 1"Normal weight" 2 "Overweight" 3 "Obese"
// la val bmi_cat bmi_cat
la var bmi_cat "BMI - categorical"
tab bmi_cat, missing

/*************************************************************************/
/* Index of ADLs: First step is a simple count
** Then the index is divided by categoies: 
** independent (0 ADL deficiencies), partial dependence (1-3 ),
** severe dependence (>=4).
*/
/*************************************************************************/

generate adl_index_core = .
replace adl_index_core = adl_dr_core + adl_wk_core + adl_bh_core + adl_e_core + adl_tx_core + adl_t_core
label var adl_index_core "Index of ADLs - core"
tab adl_index_core, missing 

generate adl_cat_core = .
replace adl_cat_core = 0 if (adl_index_core ==0)
replace adl_cat_core = 1 if inlist(adl_index_core,1,2,3)
replace adl_cat_core = 2 if inlist(adl_index_core,4,5,6)
label var adl_cat_core "ADLs, Categorical"
//label define adl_cat_core 0 "Independent" 1 "Partial Dependence" 2 "Severe Dependence", modify
//label values adl_cat_core adl_cat_core 
tab adl_index_core, missing 

//Create dummy variables for ADL Categories
gen byte adl_independent_core = .
replace adl_independent_core = 1 if (adl_cat_core==0)
replace adl_independent_core = 0 if inlist(adl_cat_core,1,2)
label var adl_independent_core "Independent for ADLs"

gen byte adl_partial_core = .
replace adl_partial_core = 1 if (adl_cat_core==1)
replace adl_partial_core = 0 if inlist(adl_cat_core,0,2)
label var adl_partial_core "Partial Dependence for ADLs"

gen byte adl_severe_core = .
replace adl_severe_core = 1 if (adl_cat_core==2)
replace adl_severe_core = 0 if inlist(adl_cat_core,0,1)
label var adl_severe_core "Severe Dependence for ADLs"

//indicator for adl main helper details present in the helper file
replace adl_help_ind=0 if adl_help_ind==.
tab adl_help_ind, missing
tab adl_help_ind if inlist(adl_cat_core,1,2) & core_year>2000, missing

//get count of unique helpers using their person number id's
//used code from stata faq website here: 
//http://www.stata.com/support/faqs/data-management/counting-distinct-strings/
gen adl_helper_count = 0
qui forval i = 1/`=_N' {
	foreach v of var adl_helper_1-adl_helper_7 {
		if `v'[`i'] != "" & `v'[`i'] != " " {
			local all `"`all' `"`=`v'[`i']'"'"'
		}
	}
	local all : list uniq all
	replace adl_helper_count = `: list sizeof all' in `i'
	local all
}
la var adl_helper_count "Count of unique ADL helpers"
tab adl_helper_count, missing

/******************************************************************************/
/******************************************************************************/
/* Index of IADLs: First step is a simple count
 Then the index is divided by categoies: 
 independent (0 IADL deficiencies), partial dependence (1-3 ),
 severe dependence (>4).   */
/******************************************************************************/
/******************************************************************************/

generate iadl_ind_core = .
replace iadl_ind_core= iadl_mp_core + iadl_gr_core + iadl_ph_core + iadl_rx_core + iadl_m_core
label var iadl_ind_core "Index of IADLs"
tab iadl_ind_core, missing 

generate iadl_cat_core = .
replace iadl_cat_core = 0 if iadl_ind_core==0
replace iadl_cat_core = 1 if inlist(iadl_ind_core,1,2,3)
replace iadl_cat_core = 2 if inlist(iadl_ind_core,4,5)
label var iadl_cat_core "IADLs, Categorical"
//label define iadl_cat_core 0 "Independent" 1 "Partial Dependence" 2 "Severe Dependence", modify
//label values iadl_cat_core iadl_cat_core 
tab iadl_cat_core , missing 

**Create dummy variables for IADL Categories
generate iadl_independent_core = .
replace iadl_independent_core = 1 if (iadl_cat_core==0)
replace iadl_independent_core = 0 if ((iadl_cat_core == 1)|(iadl_cat_core == 2))
label var iadl_independent_core "Independent for IADLs"
tab iadl_independent_core, missing

generate iadl_partial_core = .
replace iadl_partial_core = 1 if (iadl_cat_core==1)
replace iadl_partial_core = 0 if ((iadl_cat_core == 0)| (iadl_cat_core == 2))
label var iadl_partial_core "Partial Dependence for IADLs"
tab iadl_partial_core, missing

generate iadl_severe_core = .
replace iadl_severe_core= 1 if (iadl_cat_core==2)
replace iadl_severe_core = 0 if ((iadl_cat_core == 0)| (iadl_cat_core == 1))
label var iadl_severe_core "Severe Dependence for IADLs"
tab iadl_severe_core, missing

//indicator for iadl main helper details present in the helper file
replace iadl_help_ind=0 if iadl_help_ind==.
tab iadl_help_ind, missing
tab iadl_help_ind if inlist(iadl_cat_core,1,2) & core_year>2000, missing

//get count of unique helpers using their person number id's
gen iadl_helper_count = 0
qui forval i = 1/`=_N' {
	foreach v of var iadl_helper_1-iadl_helper_6 {
		if `v'[`i'] != "" & `v'[`i'] != " " {
			local all `"`all' `"`=`v'[`i']'"'"'
		}
	}
	local all : list uniq all
	replace iadl_helper_count = `: list sizeof all' in `i'
	local all
}
la var iadl_helper_count "Count of unique IADL helpers"
tab iadl_helper_count core_year, missing


/*******************************************************************/
// Index of Comorbidities: First step is a simple count
// Then the index is divided by categoies: 
// None (0), Mild (1-3), Moderate (4-6), Severe (>7).
/*******************************************************************/

gen comor_in_hrs = .
replace comor_in_hrs = (cancer_hrs + lung_hrs + heart_hrs + chf_hrs + stroke_hrs + ///
	memory_hrs + htn_hrs + dm_hrs + psych_hrs)
label var comor_in_hrs "Index of Comorbidities"
tab comor_in_hrs core_year, missing  
 
//categorical variable
generate comor_c_hrs = .
replace comor_c_hrs = 0  if (comor_in_hrs==0)
replace comor_c_hrs = 1  if inlist(comor_in_hrs,1,2,3)
replace comor_c_hrs = 2  if inlist(comor_in_hrs,4,5,6)
replace comor_c_hrs = 3  if inlist(comor_in_hrs,7,8,9)
label var comor_c_hrs "Comorbidity Index, Categorical"
//label define comor_c_hrs 0 "None (0)" 1 "Mild (1-3)" 2 "Moderate (4-6)" 3 "Severe (>7)", modify
//label values comor_c_hrs comor_c_hrs
tab comor_c_hrs core_year, missing 

//overall psychiatric problems variable
gen psych_overall_hrs = .
replace psych_overall_hrs = 1 if psych_hrs==1 | PSYCH_treat==1 | PSYCH_med==1
replace psych_overall_hrs = 0 if psych_hrs==0 & PSYCH_treat==0 & PSYCH_med==0
la var psych_overall_hrs "Indicator for any psychiatric problems from HRS"
tab psych_overall_hrs core_year,missing

save core_98_10_clean_final.dta, replace

log close


H="Net worth - rand via core"
/*variable cleaning for HRS core 2000-2010
Most code is taken from the HRS Outline_11_22_11.txt file
and modified to clean 1998-2010 core dataset

Net worth variable came from Rand imputed files, merged into core files when data
initially processed

Final dataset with cleaned core variables and net worth variables saved as:
core_98_10_clean_nw.dta
*/

capture log close

clear all
set mem 1g
set matsize 800
set more off

//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\2_HRS_Core_networth.txt", text replace
cd `datapath'

use core_98_10_clean_final.dta

** Networth categories (Other HRS studies used household net worth categorized into quartiles).

sum fnetwrth, detail
sum gnetwrth, detail
sum hnetwrth, detail
sum jnetwrth, detail
sum knetwrth, detail
sum lnetwrth, detail
sum mnetwrth, detail

//variable of net worth filled in for all survey years
generate networth = .
replace networth = fnetwrth if core_year==1998
replace networth = gnetwrth if core_year==2000
replace networth = hnetwrth if core_year==2002
replace networth = jnetwrth if core_year==2004
replace networth = knetwrth if core_year==2006
replace networth = lnetwrth if core_year==2008
replace networth = mnetwrth if core_year==2010
label variable networth "Net Worth from Rand wealth file"
tab networth if(networth==.), missing

// 15 missing values 1998-2010
// create additional variable networth_ms where if missing, networth is assigned
// the mean value
sum networth, detail
sca nw_mean=r(mean)
gen networth_ms=networth
replace networth_ms=nw_mean if(networth==.)
label variable networth_ms "Networth with missing values=mean"
sum networth_ms, detail

*******************************************************************************************
**Generate net worth variable adjusted for inflation to 2010 dollars
*******************************************************************************************
//Uses CPI for Medical Services from BLS website, accessed 2/5/2014
gen networth_adj2010 = .
replace networth_adj2010 = fnetwrth*1.66616 if core_year==1998
replace networth_adj2010 = gnetwrth*1.54589 if core_year==2000
replace networth_adj2010 = hnetwrth*1.40392 if core_year==2002
replace networth_adj2010 = jnetwrth*1.27983 if core_year==2004
replace networth_adj2010 = knetwrth*1.17287 if core_year==2006
replace networth_adj2010 = lnetwrth*1.06823 if core_year==2008
replace networth_adj2010 = mnetwrth if core_year==2010
label variable networth "Net Worth from Rand wealth file"
tab networth if(networth==.), missing

*******************************************************************************************
**Generate net worth quartile variable
*******************************************************************************************
//based on inflation adjusted net worth values
sum networth_adj2010 , detail
sca nw_25=r(p25)
sca nw_50=r(p50)
sca nw_75=r(p75)
generate nw_quart = .
replace nw_quart = 1 if (networth<nw_25)&(networth!=.)
replace nw_quart = 2 if (networth>=nw_25 & networth<nw_50)&(networth!=.)
replace nw_quart = 3 if (networth>=nw_50& networth<nw_75)&(networth!=.)
replace nw_quart = 4 if (networth>=nw_75&(networth!=.))
label variable nw_quart "Networth, quartiles, based on 2010$ inflation adjusted nw"
//label define nw_quart 1 "1st Quartile (Lowest)" 2 "2nd Quartile" 3 "3rd Quartile" 4 "4th Quartile (Highest)", modify
//label values nw_quart nw_quart
tab nw_quart, missing

*******************************************************************************************
** Net Worth Quartile Dummies
*******************************************************************************************

generate nw_lowest = .
replace nw_lowest = 0 if inlist(nw_quart,2,3,4)
replace nw_lowest = 1 if (nw_quart==1)
label variable nw_lowest "Networth, lowest quartile"
//label define nw_lowest 1 "Networth, lowest quartile" , modify
//label values nw_lowest nw_lowest
tab nw_lowest, missing

generate nw_midlow = .
replace nw_midlow = 0 if inlist(nw_quart,1,3,4)
replace nw_midlow = 1 if (nw_quart==2)
label variable nw_midlow "Networth, second quartile"
//label define nw_midlow 1 "Networth, second quartile" , modify
//label values nw_midlow nw_midlow
tab nw_midlow, missing

generate nw_midhigh = .
replace nw_midhigh = 0 if inlist(nw_quart,1,2,4)
replace nw_midhigh = 1 if (nw_quart==3)
label variable nw_midhigh "Networth, third quartile"
//label define nw_midhigh 1 "Networth, third quartile" , modify
//label values nw_midhigh nw_midhigh
tab nw_midhigh, missing

generate nw_highest = .
replace nw_highest = 0 if inlist(nw_quart,1,2,3)
replace nw_highest = 1 if (nw_quart==4)
label variable nw_highest "Networth, highest quartile"
//label define nw_highest 1 "Networth, highest quartile" , modify
//label values nw_highest nw_highest
tab nw_highest, missing

** Networth missing **
generate nw_missing = 0
replace nw_missing = 1 if (nw_quart==.)
label variable nw_missing "Networth missing "
//label define nw_missing 1 "Networth missing ", modify
//label values nw_missing nw_missing
tab nw_missing, missing

//drop raw variables
drop fnetwrth gnetwrth hnetwrth jnetwrth knetwrth lnetwrth mnetwrth

*******************************************************************************************
**Before saving core dataset, check for and drop duplicates on id and year
*******************************************************************************************
//check for duplicate ids
sort id core_year
quietly by id core_year: gen dup = cond(_N==1,0,_n)
tab dup
drop if dup>1 
drop dup


save core_98_10_clean_nw.dta, replace
log close

H="TICS score - cognition xwave dataset - merge into core"
/*TICS score used comes from the cross wave cognitive functioning measures
imputed file

Use the overall score that ranges from 0-35
Variable is RxACOGTOT where x is the wave number
*/

/*RG PC*/
libname cogn 'C:\HRS\HRSCogImp9210\SAS';
/*Amy PC*/
libname cogn 'E:\data\hrs_public_2010\HRS_Cog';

proc contents data=cogn.cogimp9210a_r ;
run;

data tics_98_10;  
set cogn.cogimp9210a_r;
keep hhid pn r4cogtot r5cogtot r6cogtot r7cogtot r8cogtot r9cogtot r10cogtot;
run;

proc means;
vars r4cogtot r5cogtot r6cogtot r7cogtot r8cogtot r9cogtot r10cogtot;
run;

/*convert to stata RG Computer filepath
proc export data=tics_98_10
outfile="C:\HRS\hrs_cleaned\working\tics_98_10.dta"
replace;
run; */

/*convert to stata Amy Computer filepath*/
proc export data=tics_98_10
outfile="E:\data\hrs_cleaned\working\tics_98_10.dta"
replace;
run;



/****************************************************************/
/*Stata code to check TICS score variables */
/****************************************************************/

capture log close

clear all
set mem 1g
set matsize 800
set more off

//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\2_HRS_TICS_clean.txt", text replace
cd `datapath'

use tics_98_10.dta

egen id= concat(hhid pn)
la var id "Respondent ID (HHID+PN)"

rename r4cogtot cogtot_1998
rename r5cogtot cogtot_2000
rename r6cogtot cogtot_2002
rename r7cogtot cogtot_2004
rename r8cogtot cogtot_2006
rename r9cogtot cogtot_2008
rename r10cogtot cogtot_2010

reshape long cogtot_, i(id) j(year)

rename cogtot_ TICS_tot
rename year core_year

sum TICS_tot if(core_year==1998), detail
sum TICS_tot if(core_year==2000), detail
sum TICS_tot if(core_year==2002), detail
sum TICS_tot if(core_year==2004), detail
sum TICS_tot if(core_year==2006), detail
sum TICS_tot if(core_year==2008), detail
sum TICS_tot if(core_year==2010), detail

la var TICS_tot "TICS Cognition Score, scale 0-35"

save tics_98_10_to_merge.dta, replace

/*******************************************************************************/
/* Merge in to core dataset by id and core_year */
/*******************************************************************************/
clear all

//base dataset is core 2000-2010 with net worth details
use core_98_10_clean_nw.dta

describe

tab core_year

// merge in tics scores
// Note that tics score variable only available for approximately 9500-13000
// respondants per wave per the cognitive functioning dataset codebook
// so many respondants do not have TICS score
merge 1:1 id core_year using tics_98_10_to_merge.dta 

drop if _merge==2
generate byte TICS_missing=.
replace TICS_missing=1 if _merge==1
replace TICS_missing=0 if _merge==3
tab TICS_missing core_year
drop _merge

save core_98_10_nw_tics.dta, replace

log close




H="Exit - variable cleaning - part 1"

/*Code cleans exit interview variables, 2002-2010
Mostly taken from HRS Outline_11_22_11.txt
With some taken from spouse_data_mar11_2013.txt

Divided into 4 headings simply to keep the sections to a reasonable length

This section covers miscellaneous interview, demographic, family, insurance questions

Final file saved as exit_02_10_clean.dta in Part 4
*/

capture log close

clear all
set mem 1g
set matsize 800
set more off

//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\3_HRS_exit_clean.txt", text replace
cd `datapath'

use exit_02_10.dta

tab exit_year, missing

*********************************************************************************
// Proxy for exit interview
*********************************************************************************

** Proxy relationship, Exit(2=spouse, 3=non-spouse)
generate proxy_exit = .
replace  proxy_exit = 1 if ((sa009==2)|(ta009==2)|(ua009==2)|(va009==2)|(wa009==2))
replace  proxy_exit = 0 if ((sa009==3)|(ta009==3)|(ua009==3)|(va009==3)|(wa009==3))
label variable proxy_exit "Proxy Respondent for Exit Interview"
//label define proxy_exit 0 "Proxy=Not-spouse" 1 "Proxy=spouse", modify
//label values proxy_exit proxy_exit
tab proxy_exit exit_year, missing

*********************************************************************************
// Month and year of exit interview
*********************************************************************************

** Month of Exit Interview Jan=1...Dec=12
generate exit_month = .
replace  exit_month = sa500 if (ta500==.) & (ua500==.)
replace  exit_month = ta500 if (sa500==.) & (ua500==.)
replace  exit_month = ua500 if (sa500==.) & (ta500==.)
label variable exit_month "Month of Exit Interview"
tab exit_month, missing

** Year of Exit Interview 
//generate exit_year = .
//replace  exit_year = sa501 if (ta501==.) & (ua501==.)
//replace  exit_year = ta501 if (sa501==.) & (ua501==.)
//replace  exit_year = ua501 if (sa501==.) & (ta501==.)
label variable exit_year "Year of Exit Interview"
tab exit_year, missing


*********************************************************************************
// Gender - from exit interview
*********************************************************************************
** Female
tab sx060_r 
tab tx060_r 
tab ux060_r
tab vx060_r
tab wx060_r

generate female = .
replace  female = 1 if ((sx060_r==2)| (tx060_r==2)| (ux060_r==2)| (vx060_r==2)| (wx060_r==2))
replace  female = 0 if ((sx060_r==1)| (tx060_r==1)| (ux060_r==1)| (vx060_r==1)| (wx060_r==1))
label variable female "Female"
//label define female 0 "Male" 1 "Female", modify
//label values female female
tab female exit_year, missing

*******************************************************************************************
// Age
*******************************************************************************************
// calculated by HRS from birthdate, presumably age at death
generate age = .
replace age = wa019 if (sa019 ==.)& (ta019==.) & (ua019==.) & (va019==.)
replace age = va019 if (sa019 ==.) & (ta019==.) & (ua019==.) & (wa019==.)
replace age = ua019 if (sa019 ==.) & (ta019==.) & (va019==.) & (wa019==.)
replace age = sa019 if (ua019==.) & (ta019==.) & (va019==.) & (wa019==.)
replace age = ta019 if (sa019 ==.) & (ua019==.) & (va019==.) & (wa019==.)
la var age "Current age, from exit interview"
sum age

generate agecat = .
replace agecat = 1 if (age <75 & age <.)
replace agecat = 2 if (age >=75) & (age <85) & (age <.)
replace agecat = 3 if (age >=85) & (age <.)
label variable agecat "Age, Categorical"
//label define agecat 1 "less than 75" 2 "75 to 84" 3 "85 or over", modify
//label values agecat agecat
tab agecat, missing 

*******************************************************************************************
// Age Category Indicator Variables
*******************************************************************************************
generate age_74 = 0
replace age_74 = 1 if (age <75) 
label variable age_74 "Age, <75"
//label define age_74 1 "Age, <75", modify
//label values age_74 age_74
tab age_74, missing 

generate age_75_84 = 0
replace age_75_84 = 1 if ((age >=75) & (age <85))
label variable age_75_84 "Age, 75 to 84"
//label define age_75_84 1 "Age, 75 to 84", modify
//label values age_75_84 age_75_84
tab age_75_84, missing 

generate age_85 = 0
replace age_85 = 1 if (age >=85) 
label variable age_85 "Age, 85 or over"
//label define age_85 1 "Age, 85 or over", modify
//label values age_85 age_85
tab age_85, missing


*********************************************************************************
// Marital status - from exit interview
// Note: There are also marital status variables generated in the
// core interview cleaning
*********************************************************************************
// 2002 variables coded differently from 2004-2010 since different variables
// were used by HRS (sa020: married when died, sb061: marital status if not married)


generate marital = .
replace marital = 1 if ((sa020==1) | (tb063==1)| (ub063==1)| (vb063==1)| (wb063==1))
replace marital = 2 if ((sb061==3) | (tb063==3)| (ub063==3)| (vb063==3)| (wb063==3))
replace marital = 3 if ((sb061==4) | (tb063==4)| (ub063==4)| (vb063==4)| (wb063==4))
replace marital = 4 if ((sb061==5) | (tb063==5)| (ub063==5)| (vb063==5)| (wb063==5))
replace marital = 5 if ((sb061==6) | (tb063==6)| (ub063==6)| (vb063==6)| (wb063==6))
replace marital = 6 if ((sb061==7) | (sb061==8) | (tb063==7)| ///
        (ub063==7)|(ub063==8)|(ub063==. & exit_year==2006)|(ub063==2)| ///
        (vb063==8)|(vb063==.&exit_year==2008)|(wb063==7)|(wb063==8)|(wb063==9))
replace marital = 6 if (marital==. & exit_year==2002)
label variable marital "Marital Status"
//label define marital 1 "Married" 2 "Separated" 3 "Divorced" 4 "Widowed" 5 "Never Married" 6 "Other/Don't Know", modify
//label values marital marital
tab marital, missing

generate byte married = .
replace married = 1 if (marital==1)
replace married = 0 if (marital!=1 & marital <.)
label variable married "Married"
//label define married 1 "Married" 0 "Not Married", modify
//label values married married
tab married, missing 

generate byte marital_sep = .
replace marital_sep = 1 if (marital==2)
replace marital_sep = 0 if (marital!=2 & marital <.)
label variable marital_sep "Separated"
//label define marital_sep 1 "Separated" 0 "Not Separated", modify
//label values marital_sep marital_sep
tab marital_sep, missing 

generate byte marital_div = .
replace marital_div = 1 if (marital==3)
replace marital_div = 0 if (marital!=3 & marital <.)
label variable marital_div "Divorced"
//label define marital_div 1 "Divorced" 0 "Not Divorced", modify
//label values marital_div marital_div
tab marital_div, missing 

generate byte marital_wid = .
replace marital_wid = 1 if (marital==4)
replace marital_wid = 0 if (marital!=4 & marital <.)
label variable marital_wid "Widowed"
//label define marital_wid 1 "Widowed" 0 "Not Widowed", modify
//label values marital_wid marital_wid
tab marital_wid, missing 

generate byte marital_nev = .
replace marital_nev = 1 if (marital==5)
replace marital_nev = 0 if (marital!=5 & marital <.)
label variable marital_nev "Never Married"
//label define marital_nev 1 "Never Married" 0 "Not Never Married", modify
//label values marital_nev marital_nev
tab marital_nev, missing 

generate byte marital_sd = .
replace marital_sd = 1 if (marital_sep==1 | marital_div==1)
replace marital_sd = 0 if (marital_sep==0 & marital_div==0)
label variable marital_sd "Separated or Divorced"
//label define marital_sd 1 "Separated or Divorced" 0 "Not Separated or Divorced", modify
//label values marital_sd marital_sd
tab marital_sd, missing

generate byte marital_missing = 0
replace marital_missing = 1 if ((marital >=.)|(marital==6))
label variable marital_missing "Marital Status Missing"
//label define marital_missing 1 "Marital Status Missing" 0 "Not Missing", modify
//label values marital_missing marital_missing
tab marital_missing, missing

*********************************************************************************
//  Insurance status information - from exit interview
*********************************************************************************
// Covered by Medicare at time of death?
// r2585
generate byte medicare = .
replace medicare= 1 if ((sn001==1) | (tn001==1)| (un001==1)| (vn001==1)| (wn001==1)) //yes
replace medicare= 0 if ((sn001==5) | (tn001==5)| (un001==5)| (vn001==5)| (wn001==5)) //no
label variable medicare "Medicare, 1=yes"

//Covered by Medicare Part B at time of death?
// r2587
generate byte medicareb = .
replace medicareb= 1 if ((sn004==1) | (tn004==1)| (un004==1)| (vn004==1)| (wn004==1)) //yes
replace medicareb= 0 if ((sn004==5) | (tn004==5)| (un004==5)| (vn004==5)| (wn004==5)) //no
replace medicareb= 0 if ((medicare== 0))
label variable medicareb "Medicare Part B, 1=yes"

//Medicaid coverage since last core interview or last 2 years of life?
// r2588 r2589
generate byte medicaid = .
replace medicaid= 1 if ((sn005==1) | (tn005==1)| (un005==1)| (vn005==1)| (wn005==1)) //yes
replace medicaid= 0 if ((sn005==5) | (tn005==5)| (un005==5)| (vn005==5) | (wn005==5)) //no
label variable medicaid "Medicaid, 1=yes"

// CHAMPUS or other veterans health care at time of death?
// r2598
generate byte champus = .
replace champus= 1 if ((sn007==1) | (tn007==1)| (un007==1)|(vn007==1)|(wn007==1)) //yes
replace champus = 0 if ((sn007==5)|(tn007==5)|(un007==5)|(vn007==5)|(wn007==5))  //no
label variable champus "CHAMPUS, 1=yes"

// HMO for Medicare / Medicaid coverage?
// r2601
generate byte hmo = .
replace hmo= 1 if ((sn009==1) | (tn009==1)| (un009==1)|(vn009==1)|(wn009==1)) //yes
replace hmo = 0 if ((sn009==5)|(tn009==5)|(un009==5)|(vn009==5)|(wn009==5)) //no
label variable hmo "HMO, 1=yes"

// Private health insurance plans?
// r2623
generate medigap = .
replace medigap= 1 if ( (sn023>=1 &sn023<98) | ///   //yes
        (tn023>=1&tn023<98) | (un023>=1&un023<98) | (vn023>=1&vn023<98) | (wn023>=1&wn023<98))
replace medigap= 0 if ((sn023==0) | (tn023==0)| (un023==0)| (vn023==0)| (wn023==0)) //no
label variable medigap "Medigap, 1=yes"
tab medigap, missing

tab medicare, missing
tab medicareb, missing
tab medicaid, missing
tab champus, missing
tab hmo, missing
tab medigap, missing

egen catinsur= concat(medicare medicareb medicaid champus hmo medigap)
tab catinsur

*********************************************************************************
*********************************************************************************
*********************************************************************************
//  Nursing Home and Hospice Residence - from exit interview
// These variables should be reviewed! Question changed, no option
// to say hospice for 2002 and 2010 interviews

//Maybe split into 3 variables
//(1) Living in NH or other health care facility at time of death (incl hospice)
//(2) Living in NH (only populate in 2004-2008)
//(3) Living in hospice (only populate in 2004-2008)
*********************************************************************************
*********************************************************************************
*********************************************************************************

// "Was R living in a NH or other health care facility at the time he/she died?"
// Survey questions changed  between exit interview years
// sa028, wa028 - ask nursing home at time of death (1) yes (5) no
// ta167, ua167, va167 ask either nursing home (1) or hospice (2) at time of death
generate nhres = .
replace nhres = 1 if ((sa028==1)| (ta167==1)| (ua167==1)| (va167==1)| (wa028==1))
replace nhres = 0 if ((sa028==5)| (ta167==5)| (ua167==5)| (va167==5)| (wa028==5) | ///
         (ta167==2)| (ua167==2)| (sa028==2) | (va167==2))
label variable nhres "Nursing Home Resident"
//label define nhres 0 "No" 1 "Yes", modify
//label values nhres nhres
tab nhres, missing

// "Was R living in a NH or other health care facility at the time he/she died?" 
// answer '2'=hospice, '1'=NH
// This question is not asked in the 2002 and 2010 exit interviews
// so no observations have hospice = 1 in those interview years
// However, if nursing home, code as not in hospice

generate hospice = .
replace hospice = 0 if (sa028==5)| (ta167==5)| (ua167==5)| (va167==5)| (wa028==5)| ///
         (sa028==1)| (ta167==1)| (ua167==1) | (va167==1) | (wa028==1)
replace hospice = 1 if ((ta167==2)|(ua167==2)|(va167==2))
label variable hospice "Hospice Resident"
//label define hospice 0 "No" 1 "Yes", modify
//label values hospice hospice
tab hospice, missing 

*********************************************************************************
*********************************************************************************
//  Nursing Home Use, details - from exit interview
*********************************************************************************
*********************************************************************************
*********************************************************************************
// Nursing home residence at time of death - start month, year
*********************************************************************************
/*
Month:
1998 Core 	F718
2000 Core 	G789
2002-10 Core 	xA065
Year:
1998 Core 	F719
2000 Core 	G790
2002-10 Core 	xA066
*/
gen nhres_start_mo = .
replace nhres_start_mo = sa065 if exit_year==2002
replace nhres_start_mo = ta065 if exit_year==2004
replace nhres_start_mo = ua065 if exit_year==2006
replace nhres_start_mo = va065 if exit_year==2008
replace nhres_start_mo = wa065 if exit_year==2010
replace nhres_start_mo = . if inlist(nhres_start_mo,98,99) | nhres == 0
la var nhres_start_mo "Start month for curr. NH residents"
tab nhres_start_mo exit_year, missing

gen nhres_start_yr = .
replace nhres_start_yr = sa066 if exit_year==2002
replace nhres_start_yr = ta066 if exit_year==2004
replace nhres_start_yr = ua066 if exit_year==2006
replace nhres_start_yr = va066 if exit_year==2008
replace nhres_start_yr = wa066 if exit_year==2010
replace nhres_start_yr = . if inlist(nhres_start_yr,9998,9999) | nhres == 0
la var nhres_start_yr "Start year for curr. NH residents"
tab nhres_start_yr exit_year, missing



*********************************************************************************
// Frequency of religious services
*********************************************************************************
//Frequency of Religious Services "How often did R attend services in last year 
// of life?".  Core 2004 (jb082) asks directly, but prior cores do not**
generate freqrelg = .
replace freqrelg = 1 if ((sb082==1)|(tb082==1)|(ub082==1)|(vb082==1)|(wb082==1))
replace freqrelg = 2 if ((sb082==2)|(tb082==2)|(ub082==2)|(vb082==2)|(wb082==2))
replace freqrelg = 3 if ((sb082==3)|(tb082==3)|(ub082==3)|(vb082==3)|(wb082==3))
replace freqrelg = 4 if ((sb082==4)|(tb082==4)|(ub082==4)|(vb082==4)|(wb082==4))
replace freqrelg = 5 if ((sb082==5)|(tb082==5)|(ub082==5)|(vb082==5)|(wb082==5))
replace freqrelg = 6 if ((sb082==8)|(tb082==8)|(ub082==8)|(vb082==8)|(wb082==8)| ///
        (sb082==9)|(tb082==9)|(ub082==9)|(vb082==9)|(wb082==9))
replace freqrelg = 6 if ((sb082>=.)&(tb082>=.)&(ub082>=.)&(vb082>=.)&(wb082>=.))
label variable freqrelg "Frequency of Religious Services per proxy"
//label define freqrelg 1 "> Once a Week" 2 "Once a Week" 3 "2-3 Times a Month" ///
//      4 "2-3 Times a Year" 5 "Not at All" 6 "Don't Know / Refused/Missing", modify
//label values freqrelg freqrelg
tab freqrelg, missing 

*********************************************************************************
// Number of Children
*********************************************************************************
generate child = .
replace child = sa101 if (exit_year==2002)
replace child = ta101 if (exit_year==2004)
replace child = ua101 if (exit_year==2006)
replace child = va101 if (exit_year==2008)
replace child = wa101 if (exit_year==2010)
label variable child "Number of Children, not their children's spouses"
sum child, detail

*********************************************************************************
// Number of Grandchildren
*********************************************************************************
 //Coding of variables changed over the years
//2002 exit - se100 = 5 if no grandchildren, then se046=number gc capped at 80
//2004 exit - can code 0 for te046, code 95 for not asked b/c assumed 0 not used
//2006 exit - ue046, same as 2004
//2008 exit - some have 0 for ve046, others use code 95 for not asked b/c 
//       assumed to be 0
//2010 exit - we046, same as 2008
generate gchil = .
//2002 exit
replace gchil = se046 if (exit_year==2002)
replace gchil =0 if (exit_year==2002 & se100==5)
//2004 exit
replace gchil = te046 if (exit_year==2004)
//2006 exit
replace gchil = ue046 if (exit_year==2006)
//2008 exit
replace gchil = ve046 if (exit_year==2008)
//2010 exit
replace gchil = we046 if (exit_year==2010)
replace gchil = 0 if gchil==95
replace gchil = . if inlist(gchil,98, 998, 999)
label variable gchil "Number of Grandchildren (capped at 80)"
sum gchil, detail

*********************************************************************************
// Total Number of Children, Children-in-law, and Grandchildren
*********************************************************************************
generate allchil = .
replace allchil = sa113 if (exit_year==2002)
replace allchil = ta113 if (exit_year==2004)
replace allchil = ua113 if (exit_year==2006)
replace allchil = va113 if (exit_year==2008)
replace allchil = wa113 if (exit_year==2010)
label variable allchil "Total Number of Children, Children-in-law, and Grandchildren"
sum allchil, detail

*********************************************************************************
// Number of Resident Children
*********************************************************************************
generate reschil = .
replace reschil = sa099 if (exit_year==2002)
replace reschil = ta099 if (exit_year==2004)
replace reschil = ua099 if (exit_year==2006)
replace reschil = va099 if (exit_year==2008)
replace reschil = wa099 if (exit_year==2010)
label variable reschil "Number of Resident Children"
sum reschil, detail

// Resident Children as indicator variable
generate reschil_d = .
replace reschil_d = 0 if ((reschil==0) & (reschil<.))|(nhres==1)|(hospice==1)
replace reschil_d = 1 if ((reschil>0) & (reschil<.))&(nhres!=1)&(hospice!=1)
label variable reschil_d "Living with Children"
//label define reschil_d 1 "Live with 1 or more Children" 0 "Not Resident Children", modify
tab reschil_d, missing

*********************************************************************************
// Living with spouse (at time of death/before move to hospice)
*********************************************************************************
generate resspouse = .
replace resspouse = 0 if ((sa030==5)|(ta030==5)|(ua030==5)|(va030==5)|(wa030==5)|(married==0))
replace resspouse = 1 if ((sa030==1)|(ta030==1)|(ua030==1)|(va030==1)|(wa030==1))
label variable resspouse "Living with Spouse/Partner"
//label define resspouse 1 "Live with Spouse" 0 "No", modify
tab resspouse, missing

*********************************************************************************
** Number of Household Members
*********************************************************************************
generate hhm = .
replace hhm = sa098 if (exit_year==2002)
replace hhm = ta098 if (exit_year==2004)
replace hhm = ua098 if (exit_year==2006)
replace hhm = va098 if (exit_year==2008)
replace hhm = wa098 if (exit_year==2010)
label variable hhm "Number of Household Members"
sum hhm, detail
tab hhm, missing

*********************************************************************************
** Living Alone in Community
*********************************************************************************
generate livealone=.
replace livealone=1 if ((hhm==0)&(hhm <.)&(nhres!=1)&(hospice!=1))
replace livealone=0 if  ((hhm!=0)&(hhm <.))|(nhres==1)|(hospice==1)
label variable livealone "Live Alone in Community"
//label define livealone 0 "No" 1 "Yes", modify
//label values livealone livealone
tab livealone, missing

save exit_02_10_clean1.dta, replace
log close



H="Exit - variable cleaning - part 2 - adls and iadls"

/*This section processes ADL and IADL variables*/
capture log close

clear all
set mem 1g
set matsize 800
set more off

//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\4_HRS_exit_clean_part2.txt", text replace
cd `datapath'

use exit_02_10_clean1.dta

tab exit_year, missing

*******************************************************************************************
// Proxy for ADLs
*******************************************************************************************
** These variables are proxies report of the person's ADLs 
** for the last 3 months of life.  In general the question 
** was framed "Because of a health or memory problem, did 
** anyone help him with X during the last 3 months of 
** life?" Each ADL is coded "Yes- needed help" if the 
** proxies' response was "Yes" "Couldn't do it" or "Didn't 
** Do it"; and "No" if the proxies' response was "Needed no help"
** A skip pattern indicated that if the subject had "stayed in bed
** for more than 85 days in the 3 months before death" than all ADL
** and IADL items were skipped and left BLANK.

//HRS coding 1 = yes, help provided, 5 = no help, 6 = couldnt do, 7=didnt do, 8,9 = dont know
// blank = inapplicable b/c bedbound
*******************************************************************************************

// Number of days in last 3 months restricted to bed
// r1862
gen byte adl_bedbound = .
replace adl_bedbound = 0 if (sg129<85)&exit_year==2002
replace adl_bedbound = 0 if (tg129<85)&exit_year==2004
replace adl_bedbound = 0 if (ug129<85)&exit_year==2006
replace adl_bedbound = 0 if (vg129<85)&exit_year==2008
replace adl_bedbound = 0 if (wg129<85)&exit_year==2010

replace adl_bedbound= 1 if ((sg129<94)&(sg129>=85)) & exit_year==2002
replace adl_bedbound= 1 if ((tg129<994)&(tg129>=85))&exit_year==2004
replace adl_bedbound= 1 if ((ug129<994)&(ug129>=85))&exit_year==2006
replace adl_bedbound= 1 if ((vg129<994)&(vg129>=85))&exit_year==2008
replace adl_bedbound= 1 if ((wg129<994)&(wg129>=85))&exit_year==2010
label variable adl_bedbound "Restricted to Bed"
tab adl_bedbound, missing

*******************************************************************************************
// Days restricted to bed
*******************************************************************************************
gen days_bed_ill = .
replace days_bed_ill = sg129 if exit_year==2002
replace days_bed_ill = tg129 if exit_year==2004
replace days_bed_ill = ug129 if exit_year==2006
replace days_bed_ill = vg129 if exit_year==2008
replace days_bed_ill = wg129 if exit_year==2010
replace days_bed_ill = . if days_bed_ill >=98 & exit_year==2002
replace days_bed_ill = . if days_bed_ill >=998 & inlist(exit_year,2004,2006,2008,2010)
replace days_bed_ill = 93 if inlist(days_bed_ill,100,993)
la var days_bed_ill "Days restricted to bed in last 3 months, 93=every day"
tab days_bed_ill exit_year,missing

*******************************************************************************************
// ADLs
*******************************************************************************************

//Dressing, r1872
generate adl_dr = .
replace adl_dr = 1 if inlist(sg015,1,6,7)&exit_year==2002
replace adl_dr = 1 if inlist(tg015,1,6,7)&exit_year==2004
replace adl_dr = 1 if inlist(ug015,1,6,7)&exit_year==2006
replace adl_dr = 1 if inlist(vg015,1,6,7)&exit_year==2008
replace adl_dr = 1 if inlist(wg015,1,6,7)&exit_year==2010

replace adl_dr = 0 if (sg015==5)&exit_year==2002
replace adl_dr = 0 if (tg015==5)&exit_year==2004
replace adl_dr = 0 if (ug015==5)&exit_year==2006
replace adl_dr = 0 if (vg015==5)&exit_year==2008
replace adl_dr = 0 if (wg015==5)&exit_year==2010

replace adl_dr=1 if adl_bedbound==1
label variable adl_dr "Help Dressing"
//label define adl_dr 0 "No" 1 "Yes", modify
//label values adl_dr adl_dr
tab adl_dr adl_bedbound, missing 

//Walking, r1879
generate adl_wk = .
replace adl_wk = 1 if inlist(sg020,1,6,7)&exit_year==2002
replace adl_wk = 1 if inlist(tg020,1,6,7)&exit_year==2004
replace adl_wk = 1 if inlist(ug020,1,6,7)&exit_year==2006
replace adl_wk = 1 if inlist(vg020,1,6,7)&exit_year==2008
replace adl_wk = 1 if inlist(wg020,1,6,7)&exit_year==2010

replace adl_wk = 0 if (sg020==5)&exit_year==2002
replace adl_wk = 0 if (tg020==5)&exit_year==2004
replace adl_wk = 0 if (ug020==5)&exit_year==2006
replace adl_wk = 0 if (vg020==5)&exit_year==2008
replace adl_wk = 0 if (wg020==5)&exit_year==2010
replace adl_wk=1 if adl_bedbound==1

label variable adl_wk "Help Walking"
//label define adl_wk 0 "No" 1 "Yes", modify
//label values adl_wk adl_wk
tab adl_wk adl_bedbound, missing 

//Bathing, r1894
generate adl_bh = .
replace adl_bh = 1 if inlist(sg022,1,6,7)&exit_year==2002
replace adl_bh = 1 if inlist(tg022,1,6,7)&exit_year==2004
replace adl_bh = 1 if inlist(ug022,1,6,7)&exit_year==2006
replace adl_bh = 1 if inlist(vg022,1,6,7)&exit_year==2008
replace adl_bh = 1 if inlist(wg022,1,6,7)&exit_year==2010

replace adl_bh = 0 if (sg022==5)&exit_year==2002
replace adl_bh = 0 if (tg022==5)&exit_year==2004
replace adl_bh = 0 if (ug022==5)&exit_year==2006
replace adl_bh = 0 if (vg022==5)&exit_year==2008
replace adl_bh = 0 if (wg022==5)&exit_year==2010

replace adl_bh=1 if adl_bedbound==1
label variable adl_bh "Help Bathing"
//label define adl_bh 0 "No" 1 "Yes", modify
//label values adl_bh adl_bh
tab adl_bh adl_bedbound, missing 

//Eating, r1909
generate adl_e = .
replace adl_e = 1 if inlist(sg024,1,6,7)&exit_year==2002
replace adl_e = 1 if inlist(tg024,1,6,7)&exit_year==2004
replace adl_e = 1 if inlist(ug024,1,6,7)&exit_year==2006
replace adl_e = 1 if inlist(vg024,1,6,7)&exit_year==2008
replace adl_e = 1 if inlist(wg024,1,6,7)&exit_year==2010

replace adl_e = 0 if (sg024==5)&exit_year==2002
replace adl_e = 0 if (tg024==5)&exit_year==2004
replace adl_e = 0 if (ug024==5)&exit_year==2006
replace adl_e = 0 if (vg024==5)&exit_year==2008
replace adl_e = 0 if (wg024==5)&exit_year==2010

replace adl_e=1 if adl_bedbound==1
label variable adl_e "Help Eating"
//label define adl_e 0 "No" 1 "Yes", modify
//label values adl_e adl_e
tab adl_e adl_bedbound, missing 

//Transfers to Bed, r1924
generate adl_tx = .
replace adl_tx = 1 if inlist(sg029,1,6,7)&exit_year==2002
replace adl_tx = 1 if inlist(tg029,1,6,7)&exit_year==2004
replace adl_tx = 1 if inlist(ug029,1,6,7)&exit_year==2006
replace adl_tx = 1 if inlist(vg029,1,6,7)&exit_year==2008
replace adl_tx = 1 if inlist(wg029,1,6,7)&exit_year==2010

replace adl_tx = 0 if (sg029==5)&exit_year==2002
replace adl_tx = 0 if (tg029==5)&exit_year==2004
replace adl_tx = 0 if (ug029==5)&exit_year==2006
replace adl_tx = 0 if (vg029==5)&exit_year==2008
replace adl_tx = 0 if (wg029==5)&exit_year==2010

replace adl_tx=1 if adl_bedbound==1
label variable adl_tx "Help with Transfers to Bed"
//label define adl_tx 0 "No" 1 "Yes", modify
//label values adl_tx adl_tx
tab adl_tx adl_bedbound, missing 

//Toileting, r1942
generate adl_t = .
replace adl_t = 1 if inlist(sg031,1,6,7)&exit_year==2002
replace adl_t = 1 if inlist(tg031,1,6,7)&exit_year==2004
replace adl_t = 1 if inlist(ug031,1,6,7)&exit_year==2006
replace adl_t = 1 if inlist(vg031,1,6,7)&exit_year==2008
replace adl_t = 1 if inlist(wg031,1,6,7)&exit_year==2010

replace adl_t = 0 if (sg031==5)&exit_year==2002
replace adl_t = 0 if (tg031==5)&exit_year==2004
replace adl_t = 0 if (ug031==5)&exit_year==2006
replace adl_t = 0 if (vg031==5)&exit_year==2008
replace adl_t = 0 if (wg031==5)&exit_year==2010

replace adl_t=1 if adl_bedbound==1
label variable adl_t "Help Toileting"
//label define adl_t 0 "No" 1 "Yes", modify
//label values adl_t adl_t
tab adl_t adl_bedbound, missing 


*******************************************************************************************
// ADL Index and categorical variables
*******************************************************************************************

** Index of ADLs: First step is a simple count
** Then the index is divided by categoies: 
** independent (0 ADL deficiencies), partial dependence (1-3 ),
** severe dependence (>4).

generate adl_index = .
replace adl_index = adl_dr + adl_wk + adl_bh + adl_e + adl_tx + adl_t
label variable adl_index "Index of ADLs"
tab adl_index, missing 

generate adl_cat = .
replace adl_cat = 0 if (adl_index ==0)
replace adl_cat = 1 if inlist(adl_index,1,2,3)
replace adl_cat = 2 if inlist(adl_index,4,5,6)
replace adl_cat = 3 if (adl_bedbound==1)
label variable adl_cat "ADLs, Categorical"
//label define adl_cat 0 "Independent" 1 "Partial Dependence" 2 "Severe Dependence" ///
//      3 "Restricted to Bed", modify
//label values adl_cat adl_cat
tab adl_cat, missing

//Create dummy variables for ADL Categories
generate adl_independent = .
replace adl_independent = 1 if (adl_cat==0)
replace adl_independent = 0 if ((adl_cat == 1)| (adl_cat == 2))
replace adl_independent=0 if adl_bedbound==1
label variable adl_independent "Independent for ADLs"
tab adl_independent, missing

generate adl_partial = .
replace adl_partial = 1 if (adl_cat==1)
replace adl_partial = 0 if ((adl_cat == 0)| (adl_cat == 2))
replace adl_partial=0 if adl_bedbound==1
label variable adl_partial "Partial Dependence for ADLs"
tab adl_partial, missing

generate adl_severe = .
replace adl_severe= 1 if (adl_cat==2)
replace adl_severe = 0 if ((adl_cat == 0)| (adl_cat == 1))
replace adl_severe=1 if adl_bedbound==1
label variable adl_severe "Severe Dependence for ADLs (includes bedbound)"
tab adl_severe, missing


tab adl_dr, missing
tab adl_wk, missing
tab adl_bh, missing
tab adl_e, missing
tab adl_tx, missing
tab adl_t, missing
tab adl_index, missing
tab adl_cat, missing
tab adl_independent, missing
tab adl_partial, missing
tab adl_severe, missing

*******************************************************************************************
** IADLs
// Same responses as ADLs (1=yes (help provided) 2=no etc.
// However, IADL questions do not seem like they were skipped if the respondent
// was bedbound as they were for ADLs
*******************************************************************************************

//Meal Prep, r2002
generate iadl_mp = .
replace iadl_mp = 1 if inlist(sg043,1,6,7)&exit_year==2002
replace iadl_mp = 1 if inlist(tg043,1,6,7)&exit_year==2004
replace iadl_mp = 1 if inlist(ug043,1,6,7)&exit_year==2006
replace iadl_mp = 1 if inlist(vg043,1,6,7)&exit_year==2008
replace iadl_mp = 1 if inlist(wg043,1,6,7)&exit_year==2010
replace iadl_mp = 0 if (sg043==5)&exit_year==2002
replace iadl_mp = 0 if (tg043==5)&exit_year==2004
replace iadl_mp = 0 if (ug043==5)&exit_year==2006
replace iadl_mp = 0 if (vg043==5)&exit_year==2008
replace iadl_mp = 0 if (wg043==5)&exit_year==2010
replace iadl_mp=1 if adl_bedbound==1
label variable iadl_mp  "Help with Meal Prep"
//label define iadl_mp 0 "No" 1 "Yes", modify
//label values iadl_mp iadl_mp 
tab iadl_mp adl_bedbound, missing

//Grocery Shopping, r2012
generate iadl_gr = .
replace iadl_gr = 1 if inlist(sg046,1,6,7)&exit_year==2002
replace iadl_gr = 1 if inlist(tg046,1,6,7)&exit_year==2004
replace iadl_gr = 1 if inlist(ug046,1,6,7)&exit_year==2006
replace iadl_gr = 1 if inlist(vg046,1,6,7)&exit_year==2008
replace iadl_gr = 1 if inlist(wg046,1,6,7)&exit_year==2010
replace iadl_gr = 0 if (sg046==5)&exit_year==2002
replace iadl_gr = 0 if (tg046==5)&exit_year==2004
replace iadl_gr = 0 if (ug046==5)&exit_year==2006
replace iadl_gr = 0 if (vg046==5)&exit_year==2008
replace iadl_gr = 0 if (wg046==5)&exit_year==2010
replace iadl_gr=1 if adl_bedbound==1
label variable iadl_gr  "Help with Grocery Shopping"
//label define iadl_gr 0 "No" 1 "Yes", modify
//label values iadl_gr iadl_gr
tab iadl_gr adl_bedbound, missing

//Phone Calls, r2022
generate iadl_ph = .
replace iadl_ph = 1 if inlist(sg049,1,6,7)&exit_year==2002
replace iadl_ph = 1 if inlist(tg049,1,6,7)&exit_year==2004
replace iadl_ph = 1 if inlist(ug049,1,6,7)&exit_year==2006
replace iadl_ph = 1 if inlist(vg049,1,6,7)&exit_year==2008
replace iadl_ph = 1 if inlist(wg049,1,6,7)&exit_year==2010
replace iadl_ph = 0 if (sg049==5)&exit_year==2002
replace iadl_ph = 0 if (tg049==5)&exit_year==2004
replace iadl_ph = 0 if (ug049==5)&exit_year==2006
replace iadl_ph = 0 if (vg049==5)&exit_year==2008
replace iadl_ph = 0 if (wg049==5)&exit_year==2010
replace iadl_ph=1 if adl_bedbound==1
label variable iadl_ph  "Help with Phone Calls"
//label define iadl_ph 0 "No" 1 "Yes", modify
//label values iadl_ph iadl_ph 
tab iadl_ph adl_bedbound, missing

//Medications, r2032
generate iadl_rx = .
replace iadl_rx = 1 if inlist(sg053,1,6,7)&exit_year==2002
replace iadl_rx = 1 if inlist(tg053,1,6,7)&exit_year==2004
replace iadl_rx = 1 if inlist(ug053,1,6,7)&exit_year==2006
replace iadl_rx = 1 if inlist(vg053,1,6,7)&exit_year==2008
replace iadl_rx = 1 if inlist(wg053,1,6,7)&exit_year==2010
replace iadl_rx = 0 if (sg053==5)&exit_year==2002
replace iadl_rx = 0 if (tg053==5)&exit_year==2004
replace iadl_rx = 0 if (ug053==5)&exit_year==2006
replace iadl_rx = 0 if (vg053==5)&exit_year==2008
replace iadl_rx = 0 if (wg053==5)&exit_year==2010
replace iadl_rx=1 if adl_bedbound==1
label variable iadl_rx  "Help with Medications"
//label define iadl_rx 0 "No" 1 "Yes", modify
//label values iadl_rx iadl_rx 
tab iadl_rx adl_bedbound, missing

//Money, r2077

generate iadl_m = .
replace iadl_m = 1 if inlist(sg061,1,6,7)&exit_year==2002
replace iadl_m = 1 if inlist(tg061,1,6,7)&exit_year==2004
replace iadl_m = 1 if inlist(ug061,1,6,7)&exit_year==2006
replace iadl_m = 1 if inlist(vg061,1,6,7)&exit_year==2008
replace iadl_m = 1 if inlist(wg061,1,6,7)&exit_year==2010
replace iadl_m = 0 if (sg061==5)&exit_year==2002
replace iadl_m = 0 if (tg061==5)&exit_year==2004
replace iadl_m = 0 if (ug061==5)&exit_year==2006
replace iadl_m = 0 if (vg061==5)&exit_year==2008
replace iadl_m = 0 if (wg061==5)&exit_year==2010
replace iadl_m=1 if adl_bedbound==1
label variable iadl_m  "Help with Money"
//label define iadl_m 0 "No" 1 "Yes", modify
//label values iadl_m iadl_m
tab iadl_m adl_bedbound, missing

*******************************************************************************************
** Index of IADLs: First step is a simple count
** Then the index is divided by categoies: 
** independent (0 IADL deficiencies), partial dependence (1-3 ),
** severe dependence (>4).
*******************************************************************************************
generate iadl_ind = .
replace iadl_ind = iadl_mp + iadl_gr + iadl_ph + iadl_rx + iadl_m
label variable iadl_ind "Index of IADLs"
tab iadl_ind, missing 

generate iadl_cat = .
replace iadl_cat = 0 if (iadl_ind ==0)
replace iadl_cat = 1 if inlist(iadl_ind,1,2,3)
replace iadl_cat = 2 if inlist(iadl_ind,4,5)
replace iadl_cat = 3 if (adl_bedbound==1)
label variable iadl_cat "IADLs, Categorical"
//label define iadl_cat 0 "Independent" 1 "Partial Dependence" 2 "Severe Dependence" ///
//       3 "Restricted to Bed", modify
//label values iadl_cat iadl_cat
tab iadl_cat, missing 

// Create dummy variables for IADL Categories, 'Restricted to bed' defined as '0' in all cases
// This is different from ADL categories where bedbound is included in the
// severe category
generate iadl_independent = .
replace iadl_independent = 1 if (iadl_cat==0)
replace iadl_independent = 0 if inlist(iadl_cat,1,2,3)
label variable iadl_independent "Independent for IADLs"
tab iadl_independent, missing

generate iadl_partial = .
replace iadl_partial = 1 if (iadl_cat==1)
replace iadl_partial = 0 if inlist(iadl_cat,0,2,3)
label variable iadl_partial "Partial Dependence for IADLs"
tab iadl_partial, missing

generate iadl_severe = .
replace iadl_severe= 1 if (iadl_cat==2)
replace iadl_severe = 0 if inlist(iadl_cat,0,1,3)
label variable iadl_severe "Severe Dependence for IADLs (excludes bedbound)"
tab iadl_severe, missing

//Helper information for ADLs and IADLs
/*ADL Helper relationship to R
2002 Exit 	SG033_1
2004 Exit 	TG033_1
2006 Exit 	UG033_1
2008 Exit 	VG033_1
2010 Exit 	WG033_1

Helper ID's (PN) are from variables G032_1 thru _7
*/
gen byte adl_sp_helper = 0
replace adl_sp_helper = 1 if (exit_year==2002 & sg033_1==2)
replace adl_sp_helper = 1 if (exit_year==2004 & tg033_1==2)
replace adl_sp_helper = 1 if (exit_year==2006 & ug033_1==2)
replace adl_sp_helper = 1 if (exit_year==2008 & vg033_1==2)
replace adl_sp_helper = 1 if (exit_year==2010 & wg033_1==2)
la var adl_sp_helper "ADL Spouse Helper, 1=yes"
tab adl_sp_helper exit_year, missing

gen byte adl_oth_helper = 0
replace adl_oth_helper = 1 if (exit_year==2002 & 2< sg033_1 & sg033_1<21)
replace adl_oth_helper = 1 if (exit_year==2004 & 2< tg033_1 & tg033_1<21)
replace adl_oth_helper = 1 if (exit_year==2006 & 2< ug033_1 & ug033_1<21)
replace adl_oth_helper = 1 if (exit_year==2008 & 2< vg033_1 & vg033_1<21)
replace adl_oth_helper = 1 if (exit_year==2010 & 2< wg033_1 & wg033_1<21)
la var adl_oth_helper "ADL Other Helper, 1=yes"
tab adl_oth_helper exit_year, missing


//max number of helpers = 7
//create common helper variables across all years
gen adl_helper_1 = sg032_1 if (exit_year==2002)
replace adl_helper_1 = tg032_1 if (exit_year==2004)
replace adl_helper_1 = ug032_1 if (exit_year==2006)
replace adl_helper_1 = vg032_1 if (exit_year==2008)
replace adl_helper_1 = wg032_1 if (exit_year==2010)
la var adl_helper_1 "ADL Helper 1 PN"

gen adl_helper_2 = sg032_2 if (exit_year==2002)
replace adl_helper_2 = tg032_2 if (exit_year==2004)
replace adl_helper_2 = ug032_2 if (exit_year==2006)
replace adl_helper_2 = vg032_2 if (exit_year==2008)
replace adl_helper_2 = wg032_2 if (exit_year==2010)
la var adl_helper_2 "ADL Helper 2 PN"

gen adl_helper_3 = sg032_3 if (exit_year==2002)
replace adl_helper_3 = tg032_3 if (exit_year==2004)
replace adl_helper_3 = ug032_3 if (exit_year==2006)
replace adl_helper_3 = vg032_3 if (exit_year==2008)
replace adl_helper_3 = wg032_3 if (exit_year==2010)
la var adl_helper_3 "ADL Helper 3 PN"

gen adl_helper_4 = sg032_4 if (exit_year==2002)
replace adl_helper_4 = tg032_4 if (exit_year==2004)
replace adl_helper_4 = ug032_4 if (exit_year==2006)
replace adl_helper_4 = vg032_4 if (exit_year==2008)
replace adl_helper_4 = wg032_4 if (exit_year==2010)
la var adl_helper_4 "ADL Helper 4 PN"

gen adl_helper_5 = sg032_5 if (exit_year==2002)
replace adl_helper_5 = tg032_5 if (exit_year==2004)
replace adl_helper_5 = ug032_5 if (exit_year==2006)
replace adl_helper_5 = vg032_5 if (exit_year==2008)
replace adl_helper_5 = wg032_5 if (exit_year==2010)
la var adl_helper_5 "ADL Helper 5 PN"

gen adl_helper_6 = sg032_6 if (exit_year==2002)
replace adl_helper_6 = tg032_6 if (exit_year==2004)
replace adl_helper_6 = ug032_6 if (exit_year==2006)
replace adl_helper_6 = vg032_6 if (exit_year==2008)
replace adl_helper_6 = wg032_6 if (exit_year==2010)
la var adl_helper_6 "ADL Helper 6 PN"

gen adl_helper_7 = sg032_7 if (exit_year==2002)
replace adl_helper_7 = tg032_7 if (exit_year==2004)
replace adl_helper_7 = ug032_7 if (exit_year==2006)
replace adl_helper_7 = vg032_7 if (exit_year==2008)
replace adl_helper_7 = wg032_7 if (exit_year==2010)
la var adl_helper_7 "ADL Helper 7 PN"

gen adl_helper_count = 0
qui forval i = 1/`=_N' {
	foreach v of var adl_helper_1-adl_helper_7 {
		if `v'[`i'] != "" & `v'[`i'] != " " {
			local all `"`all' `"`=`v'[`i']'"'"'
		}
	}
	local all : list uniq all
	replace adl_helper_count = `: list sizeof all' in `i'
	local all
}
la var adl_helper_count "Count of unique ADL helpers"
tab adl_helper_count, missing


/* IADL Helper
2002 Exit 	SG055_1
2004 Exit 	TG055_1
2006 Exit 	UG055_1
2008 Exit 	VG055_1
2010 Exit 	WG055_1

Helper ID's (PN) are from variables G054_1 thru _6

*/
gen byte iadl_sp_helper = 0
replace iadl_sp_helper = 1 if (exit_year==2002 & sg055_1==2)
replace iadl_sp_helper = 1 if (exit_year==2004 & tg055_1==2)
replace iadl_sp_helper = 1 if (exit_year==2006 & ug055_1==2)
replace iadl_sp_helper = 1 if (exit_year==2008 & vg055_1==2)
replace iadl_sp_helper = 1 if (exit_year==2010 & wg055_1==2)
la var iadl_sp_helper "IADL Spouse Helper, 1=yes"
tab iadl_sp_helper exit_year, missing

gen byte iadl_oth_helper = 0
replace iadl_oth_helper = 1 if (exit_year==2002 & 2<sg055_1 & sg055_1<21)
replace iadl_oth_helper = 1 if (exit_year==2004 & 2<tg055_1 & tg055_1<21)
replace iadl_oth_helper = 1 if (exit_year==2006 & 2<ug055_1 & ug055_1<21)
replace iadl_oth_helper = 1 if (exit_year==2008 & 2<vg055_1 & vg055_1<21)
replace iadl_oth_helper = 1 if (exit_year==2010 & 2<wg055_1 & wg055_1<21)
la var iadl_oth_helper "IADL Other Helper, 1=yes"
tab iadl_oth_helper exit_year, missing

//max number of helpers = 6
//create common helper variables across all years
gen iadl_helper_1 = sg054_1 if (exit_year==2002)
replace iadl_helper_1 = tg054_1 if (exit_year==2004)
replace iadl_helper_1 = ug054_1 if (exit_year==2006)
replace iadl_helper_1 = vg054_1 if (exit_year==2008)
replace iadl_helper_1 = wg054_1 if (exit_year==2010)
la var iadl_helper_1 "IADL Helper 1 PN"

gen iadl_helper_2 = sg054_2 if (exit_year==2002)
replace iadl_helper_2 = tg054_2 if (exit_year==2004)
replace iadl_helper_2 = ug054_2 if (exit_year==2006)
replace iadl_helper_2 = vg054_2 if (exit_year==2008)
replace iadl_helper_2 = wg054_2 if (exit_year==2010)
la var iadl_helper_2 "IADL Helper 2 PN"

gen iadl_helper_3 = sg032_3 if (exit_year==2002)
replace iadl_helper_3 = tg032_3 if (exit_year==2004)
replace iadl_helper_3 = ug032_3 if (exit_year==2006)
replace iadl_helper_3 = vg032_3 if (exit_year==2008)
replace iadl_helper_3 = wg032_3 if (exit_year==2010)
la var iadl_helper_3 "IADL Helper 3 PN"

gen iadl_helper_4 = sg054_4 if (exit_year==2002)
replace iadl_helper_4 = tg054_4 if (exit_year==2004)
replace iadl_helper_4 = ug054_4 if (exit_year==2006)
replace iadl_helper_4 = vg054_4 if (exit_year==2008)
replace iadl_helper_4 = wg054_4 if (exit_year==2010)
la var iadl_helper_4 "IADL Helper 4 PN"

gen iadl_helper_5 = sg054_5 if (exit_year==2002)
replace iadl_helper_5 = tg054_5 if (exit_year==2004)
replace iadl_helper_5 = ug054_5 if (exit_year==2006)
replace iadl_helper_5 = vg054_5 if (exit_year==2008)
replace iadl_helper_5 = wg054_5 if (exit_year==2010)
la var iadl_helper_5 "IADL Helper 5 PN"

gen iadl_helper_6 = sg054_6 if (exit_year==2002)
replace iadl_helper_6 = tg054_6 if (exit_year==2004)
replace iadl_helper_6 = ug054_6 if (exit_year==2006)
replace iadl_helper_6 = vg054_6 if (exit_year==2008)
replace iadl_helper_6 = wg054_6 if (exit_year==2010)
la var iadl_helper_6 "IADL Helper 6 PN"

gen iadl_helper_count = 0
qui forval i = 1/`=_N' {
	foreach v of var iadl_helper_1-iadl_helper_6 {
		if `v'[`i'] != "" & `v'[`i'] != " " {
			local all `"`all' `"`=`v'[`i']'"'"'
		}
	}
	local all : list uniq all
	replace iadl_helper_count = `: list sizeof all' in `i'
	local all
}
la var iadl_helper_count "Count of unique IADL helpers"
tab iadl_helper_count, missing

// Home health worker
/*
(Since [PREV WAVE IW MONTH], [PREV WAVE IW YEAR]/Since [PREV WAVE IW YEAR]/In
        the last two years), has any medically-trained person come to your home to
        help you, yourself?
1998 Core 	F2357
2000 Core 	G2634
2002 Core 	HN189
2002 Exit 	SN189
2004 Core 	JN189
2004 Exit 	TN189
2006 Core 	KN189
2006 Exit 	UN189
2008 Core 	LN189
2008 Exit 	VN189
2010 Core 	MN189
2010 Exit 	WN189
*/
gen hh_worker = .
replace hh_worker=1 if sn189==1 | tn189==1 | un189==1 | vn189==1 | wn189==1
replace hh_worker=0 if sn189==5 | tn189==5 | un189==5 | vn189==5 | wn189==5
la var hh_worker "Home health worker help? 1=yes"
tab hh_worker exit_year, missing


//save dataset with adls and iadls
save exit_02_10_clean2.dta, replace

log close

H="Exit - variable cleaning - part 3 - comorbidities"

/*Code cleans exit interview variables, 2002-2010
Mostly taken from HRS Outline_11_22_11.txt
With some taken from spouse_data_mar11_2013.txt

Divided into x headings simply to keep the sections to a reasonable length
*/

capture log close

clear all
set mem 1g
set matsize 800
set more off

//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\5_HRS_exit_clean_part3.txt", text replace
cd `datapath'

use exit_02_10_clean2.dta

tab exit_year, missing


******************************************************************************************
** Each comorbidity variable is by proxy report of the person's health in the past two years.
** In each case the question states, "Had a doctor ever told NAME that s/he had X?"
** The interviewer also referenced the answer from the last interview: "Our records show that
** NAME had X?  If the proxy disputed that record (VERY few cases) this coding scheme
** favors the proxy report.  So, "Yes" includes "Yes" and "Disputes past record, 
** person did have the condition"; and "No" includes "No" and "Disputes past record,
** person did NOT have the condition"; "don't know" "not ascertained" and "refused" were left as missing.

// HRS coding: 1 = Yes, 3 = R has condition, this disputes previous wave answer
// 4 = R does not have condition, disputes previous wave answer  5 = No
**
** The Exit interview did not ask directly about HTN, DM, Psychiatric conditions, or Arthritis.
** These comorbidities are reported in the exit interview by pulling in information from the prior wave (Core interview)
*********************************************************************************************

//Cancer, r1174
generate cancer_hrs = .
replace cancer_hrs = 1 if (exit_year==2002 & inlist(sc018,1,3))
replace cancer_hrs = 1 if (exit_year==2004 & inlist(tc018,1,3))
replace cancer_hrs = 1 if (exit_year==2006 & inlist(uc018,1,3))
replace cancer_hrs = 1 if (exit_year==2008 & inlist(vc018,1,3))
replace cancer_hrs = 1 if (exit_year==2010 & inlist(wc018,1,3))
replace cancer_hrs = 0 if (exit_year==2002 & inlist(sc018,4,5))
replace cancer_hrs = 0 if (exit_year==2004 & inlist(tc018,4,5))
replace cancer_hrs = 0 if (exit_year==2006 & inlist(uc018,4,5))
replace cancer_hrs = 0 if (exit_year==2008 & inlist(vc018,4,5))
replace cancer_hrs = 0 if (exit_year==2010 & inlist(wc018,4,5))
label variable cancer_hrs "Cancer"
//label define cancer_hrs 0 "No" 1 "Yes", modify
//label values cancer_hrs cancer_hrs
tab cancer_hrs, missing 

//Lung Disease, r1191
generate lung_hrs = .
replace lung_hrs = 1 if (exit_year==2002 & inlist(sc030,1,3))
replace lung_hrs = 1 if (exit_year==2004 & inlist(tc030,1,3))
replace lung_hrs = 1 if (exit_year==2006 & inlist(uc030,1,3))
replace lung_hrs = 1 if (exit_year==2008 & inlist(vc030,1,3))
replace lung_hrs = 1 if (exit_year==2010 & inlist(wc030,1,3))
replace lung_hrs = 0 if (exit_year==2002 & inlist(sc030,4,5))
replace lung_hrs = 0 if (exit_year==2004 & inlist(tc030,4,5))
replace lung_hrs = 0 if (exit_year==2006 & inlist(uc030,4,5))
replace lung_hrs = 0 if (exit_year==2008 & inlist(vc030,4,5))
replace lung_hrs = 0 if (exit_year==2010 & inlist(wc030,4,5))
label variable lung_hrs "Lung Disease"
//label define lung_hrs 0 "No" 1 "Yes" , modify
//label values lung_hrs lung_hrs
tab lung_hrs, missing 

//Heart Condition: "heart attack, coronary heart disease, angina, 
//congestive heart failure, or other heart problems?", r1201
generate heart_hrs = .
replace heart_hrs = 1 if (exit_year==2002 & inlist(sc036,1,3))
replace heart_hrs = 1 if (exit_year==2004 & inlist(tc036,1,3))
replace heart_hrs = 1 if (exit_year==2006 & inlist(uc036,1,3))
replace heart_hrs = 1 if (exit_year==2008 & inlist(vc036,1,3))
replace heart_hrs = 1 if (exit_year==2010 & inlist(wc036,1,3))
replace heart_hrs = 0 if (exit_year==2002 & inlist(sc036,4,5))
replace heart_hrs = 0 if (exit_year==2004 & inlist(tc036,4,5))
replace heart_hrs = 0 if (exit_year==2006 & inlist(uc036,4,5))
replace heart_hrs = 0 if (exit_year==2008 & inlist(vc036,4,5))
replace heart_hrs = 0 if (exit_year==2010 & inlist(wc036,4,5))
label variable heart_hrs "Heart Condition"
//label define heart_hrs 0 "No" 1 "Yes" 9 "Don't Know/Refused", modify
//label values heart_hrs heart_hrs
tab heart_hrs, missing 

//CHF: Only asked of those who said "YES" to Heart Condition, 
//so those who said "NO" are coded "0" here. r1216

generate chf_hrs = .
replace chf_hrs = 1 if (exit_year==2002 & inlist(sc048,1,3))
replace chf_hrs = 1 if (exit_year==2004 & inlist(tc048,1,3))
replace chf_hrs = 1 if (exit_year==2006 & inlist(uc048,1,3))
replace chf_hrs = 1 if (exit_year==2008 & inlist(vc048,1,3))
replace chf_hrs = 1 if (exit_year==2010 & inlist(wc048,1,3))
replace chf_hrs = 0 if (exit_year==2002 & inlist(sc048,4,5))
replace chf_hrs = 0 if (exit_year==2004 & inlist(tc048,4,5))
replace chf_hrs = 0 if (exit_year==2006 & inlist(uc048,4,5))
replace chf_hrs = 0 if (exit_year==2008 & inlist(vc048,4,5))
replace chf_hrs = 0 if (exit_year==2010 & inlist(wc048,4,5))
replace chf_hrs =0 if (heart_hrs==0)
label variable chf_hrs "CHF"
//label define chf_hrs 0 "No" 1 "Yes" , modify
//label values chf_hrs chf_hrs
tab chf_hrs, missing

//Stroke, missing r1221

generate stroke_hrs = .
replace stroke_hrs = 1 if (exit_year==2002 & inlist(sc053,1,3))
replace stroke_hrs = 1 if (exit_year==2004 & inlist(tc053,1,3))
replace stroke_hrs = 1 if (exit_year==2006 & inlist(uc053,1,3))
replace stroke_hrs = 1 if (exit_year==2008 & inlist(vc053,1,3))
replace stroke_hrs = 1 if (exit_year==2010 & inlist(wc053,1,3))
replace stroke_hrs = 0 if (exit_year==2002 & inlist(sc053,4,5))
replace stroke_hrs = 0 if (exit_year==2004 & inlist(tc053,4,5))
replace stroke_hrs = 0 if (exit_year==2006 & inlist(uc053,4,5))
replace stroke_hrs = 0 if (exit_year==2008 & inlist(vc053,4,5))
replace stroke_hrs = 0 if (exit_year==2010 & inlist(wc053,4,5))
label variable stroke_hrs "Stroke"
//label define stroke_hrs 0 "No" 1 "Yes", modify
//label values stroke_hrs stroke_hrs
tab stroke_hrs, missing

//Memory Disease (diagnosed by a doctor, per the proxy report) r1240
generate memory_hrs = .
replace memory_hrs = 1 if (exit_year==2002 & inlist(sc069,1,3))
replace memory_hrs = 1 if (exit_year==2004 & inlist(tc069,1,3))
replace memory_hrs = 1 if (exit_year==2006 & inlist(uc069,1,3))
replace memory_hrs = 1 if (exit_year==2008 & inlist(vc069,1,3))
replace memory_hrs = 1 if (exit_year==2010 & inlist(wc069,1,3))
replace memory_hrs = 0 if (exit_year==2002 & inlist(sc069,4,5))
replace memory_hrs = 0 if (exit_year==2004 & inlist(tc069,4,5))
replace memory_hrs = 0 if (exit_year==2006 & inlist(uc069,4,5))
replace memory_hrs = 0 if (exit_year==2008 & inlist(vc069,4,5))
replace memory_hrs = 0 if (exit_year==2010 & inlist(wc069,4,5))
label variable memory_hrs "Memory Disease"
//label define memory_hrs 0 "No" 1 "Yes", modify
//label values memory_hrs memory_hrs
tab memory_hrs, missing

// Falls r1230
// only asked for those who were greater than 65 when died
// not compared to previous interview response
generate falls_hrs = .
replace falls_hrs = 1 if (exit_year==2002 & sc079==1)
replace falls_hrs = 1 if (exit_year==2004 & tc079==1)
replace falls_hrs = 1 if (exit_year==2006 & uc079==1)
replace falls_hrs = 1 if (exit_year==2008 & vc079==1)
replace falls_hrs = 1 if (exit_year==2010 & wc079==1)
replace falls_hrs = 0 if (exit_year==2002 & sc079==5)
replace falls_hrs = 0 if (exit_year==2004 & tc079==5)
replace falls_hrs = 0 if (exit_year==2006 & uc079==5)
replace falls_hrs = 0 if (exit_year==2008 & vc079==5)
replace falls_hrs = 0 if (exit_year==2010 & wc079==5)
label variable falls_hrs "Falls"
//label define falls_hrs 0 "No" 1 "Yes", modify
//label values falls_hrs falls_hrs
tab falls_hrs, missing

// Incontinence
// one month in last year of life, not compared to previous interview
generate incont_hrs = .
replace incont_hrs = 1 if (exit_year==2002 & sc208==1)
replace incont_hrs = 1 if (exit_year==2004 & tc208==1)
replace incont_hrs = 1 if (exit_year==2006 & uc208==1)
replace incont_hrs = 1 if (exit_year==2008 & vc208==1)
replace incont_hrs = 1 if (exit_year==2010 & wc208==1)
replace incont_hrs = 0 if (exit_year==2002 & sc208==5)
replace incont_hrs = 0 if (exit_year==2004 & tc208==5)
replace incont_hrs = 0 if (exit_year==2006 & uc208==5)
replace incont_hrs = 0 if (exit_year==2008 & vc208==5)
replace incont_hrs = 0 if (exit_year==2010 & wc208==5)
label variable incont_hrs "Incontinence"
//label define incont_hrs 0 "No" 1 "Yes", modify
//label values incont_hrs incont_hrs
tab incont_hrs, missing

// Pain r1246  often troubled by pain in the last year of life
generate pain_hrs = .
replace pain_hrs = 1 if (exit_year==2002 & sc104==1)
replace pain_hrs = 1 if (exit_year==2004 & tc104==1)
replace pain_hrs = 1 if (exit_year==2006 & uc104==1)
replace pain_hrs = 1 if (exit_year==2008 & vc104==1)
replace pain_hrs = 1 if (exit_year==2010 & wc104==1)
replace pain_hrs = 0 if (exit_year==2002 & sc104==5)
replace pain_hrs = 0 if (exit_year==2004 & tc104==5)
replace pain_hrs = 0 if (exit_year==2006 & uc104==5)
replace pain_hrs = 0 if (exit_year==2008 & vc104==5)
replace pain_hrs = 0 if (exit_year==2010 & wc104==5)
label variable pain_hrs "Pain"
//label define pain_hrs 0 "No" 1 "Yes" , modify
//label values pain_hrs pain_hrs
tab pain_hrs, missing 

/*How bad was pain if yes above?
1 = mild, 2 = moderate, 3 = severe, 8,9 = don't know, refused
2002 Exit 	SC105
2004 Core 	JC105
2004 Exit 	TC105
2006 Core 	KC105
2006 Exit 	UC105
2008 Core 	LC105
2008 Exit 	VC105
2010 Core 	MC105
2010 Exit 	WC105 
*/
gen pain_level_hrs = .
replace pain_level_hrs = sc105 if exit_year==2002
replace pain_level_hrs = tc105 if exit_year==2004
replace pain_level_hrs = uc105 if exit_year==2006
replace pain_level_hrs = vc105 if exit_year==2008
replace pain_level_hrs = wc105 if exit_year==2010
replace pain_level_hrs = . if inlist(pain_level_hrs,8,9)
la var pain_level_hrs "How bad was pain? 1=mild, 2=mod, 3=severe"
tab pain_level_hrs exit_year , missing


// HTN  high blood pressure as populated from previous core interview
generate htn_hrs = .
replace htn_hrs = 1 if (exit_year==2002 & sz101==1)
replace htn_hrs = 1 if (exit_year==2004 & tz101==1)
replace htn_hrs = 1 if (exit_year==2006 & uz101==1)
replace htn_hrs = 1 if (exit_year==2008 & vz101==1)
replace htn_hrs = 1 if (exit_year==2010 & wz101==1)
replace htn_hrs = 0 if (exit_year==2002 & sz101==5)
replace htn_hrs = 0 if (exit_year==2004 & tz101==5)
replace htn_hrs = 0 if (exit_year==2006 & uz101==5)
replace htn_hrs = 0 if (exit_year==2008 & vz101==5)
replace htn_hrs = 0 if (exit_year==2010 & wz101==5)
label variable htn_hrs "Hypertension"
//label define htn_hrs 0 "No" 1 "Yes", modify
//label values htn_hrs htn_hrs
tab htn_hrs, missing 

// Diabetes
generate dm_hrs = .
replace dm_hrs = 1 if (exit_year==2002 & sz102==1)
replace dm_hrs = 1 if (exit_year==2004 & tz102==1)
replace dm_hrs = 1 if (exit_year==2006 & uz102==1)
replace dm_hrs = 1 if (exit_year==2008 & vz102==1)
replace dm_hrs = 1 if (exit_year==2010 & wz102==1)
replace dm_hrs = 0 if (exit_year==2002 & sz102==5)
replace dm_hrs = 0 if (exit_year==2004 & tz102==5)
replace dm_hrs = 0 if (exit_year==2006 & uz102==5)
replace dm_hrs = 0 if (exit_year==2008 & vz102==5)
replace dm_hrs = 0 if (exit_year==2010 & wz102==5)
label variable dm_hrs "Diabetes"
//label define dm_hrs 0 "No" 1 "Yes", modify
//label values dm_hrs dm_hrs
tab dm_hrs, missing 

// Psychiatric Condition ("doctor ever told... emotional, nervous or psychiatric problems?")
// from previous core interview
generate psych_hrs = .
replace psych_hrs = 1 if (exit_year==2002 & sz107==1)
replace psych_hrs = 1 if (exit_year==2004 & tz107==1)
replace psych_hrs = 1 if (exit_year==2006 & uz107==1)
replace psych_hrs = 1 if (exit_year==2008 & vz107==1)
replace psych_hrs = 1 if (exit_year==2010 & wz107==1)
replace psych_hrs = 0 if (exit_year==2002 & sz107==5)
replace psych_hrs = 0 if (exit_year==2004 & tz107==5)
replace psych_hrs = 0 if (exit_year==2006 & uz107==5)
replace psych_hrs = 0 if (exit_year==2008 & vz107==5)
replace psych_hrs = 0 if (exit_year==2010 & wz107==5)
label variable psych_hrs "Psychiatric Condition"
//label define psych_hrs 0 "No" 1 "Yes", modify
//label values psych_hrs psych_hrs
tab psych_hrs, missing 

// Arthritis from previous core interview
generate arth_hrs = .
replace arth_hrs = 1 if (exit_year==2002 & sz108==1)
replace arth_hrs = 1 if (exit_year==2004 & tz108==1)
replace arth_hrs = 1 if (exit_year==2006 & uz108==1)
replace arth_hrs = 1 if (exit_year==2008 & vz108==1)
replace arth_hrs = 1 if (exit_year==2010 & wz108==1)
replace arth_hrs = 0 if (exit_year==2002 & sz108==5)
replace arth_hrs = 0 if (exit_year==2004 & tz108==5)
replace arth_hrs = 0 if (exit_year==2006 & uz108==5)
replace arth_hrs = 0 if (exit_year==2008 & vz108==5)
replace arth_hrs = 0 if (exit_year==2010 & wz108==5)
label variable arth_hrs "Arthritis"
//label define arth_hrs 0 "No" 1 "Yes", modify
//label values arth_hrs arth_hrs
tab arth_hrs, missing 

/*Hip fracture since last interview
Only asked if age >=65 when died
1998 Core 	F1215
2000 Core 	G1348
2002 Core 	HC082
2002 Exit 	SC082
2004 Core 	JC082
2004 Exit 	TC082
2006 Core 	KC082
2006 Exit 	UC082
2008 Core 	LC082
2008 Exit 	VC082
2010 Core 	MC082
2010 Exit 	WC082 */
gen byte hip_frac_hrs = .
replace hip_frac_hrs=1 if sc082==1 | tc082==1 | uc082==1 | vc082==1 | wc082==1
replace hip_frac_hrs=0 if sc082==5 | tc082==5 | uc082==5 | vc082==5 | wc082==5
la var hip_frac_hrs "Hip fracture"
tab hip_frac_hrs exit_year , missing


***********************************************************************
** Index of Comorbidities: First step is a simple count
** Then the index is divided by categoies:
** None (0), Mild (1-3), Moderate (4-6), Severe (>7).
// If an individual has missing for any of the included comorbidities,
// then the index is missing as well
***********************************************************************

generate comor_in_hrs = .
replace comor_in_hrs = (cancer_hrs + lung_hrs + heart_hrs + chf_hrs + ///
         stroke_hrs + memory_hrs + htn_hrs + dm_hrs + psych_hrs)
label variable comor_in_hrs "Index of Comorbidities (9 max.)"
tab comor_in_hrs, missing  
 
generate comor_c_hrs = .
replace comor_c_hrs = 0 if (comor_in_hrs ==0)
replace comor_c_hrs = 1 if inlist(comor_in_hrs,1,2,3)
replace comor_c_hrs = 2 if inlist(comor_in_hrs,4,5,6)
replace comor_c_hrs = 3 if inlist(comor_in_hrs,7,8,9)
label variable comor_c_hrs "Comorbidity Index, Categorical"
//label define comor_c_hrs 0 "None (0)" 1 "Mild (1-3)" 2 "Moderate (4-6)" ///
//       3 "Severe (>7)", modify
//label values comor_c_hrs comor_c_hrs
tab comor_c_hrs, missing 

save exit_02_10_clean3.dta, replace

log close


H="Exit - variable cleaning - part 4 - EOL"
/*Part 4 of cleaning exit variables
Questions relate to medical care and decisions at end of life */

capture log close

clear all
set mem 1g
set matsize 800
set more off

//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\6_HRS_exit_clean_part4.txt", text replace
cd `datapath'

use exit_02_10_clean3.dta

tab exit_year, missing

***********************************************************************
** Hospitalizations between death and last core interview or last 2 yrs
***********************************************************************

** Hospital Admission, Dichotomous: "Don't Know/Refused" coded as missing 
generate hosp = .
replace hosp = 1 if ((sn099==1)|(tn099==1)|(un099==1)|(vn099==1)|(wn099==1))
replace hosp = 0 if ((sn099==5)|(tn099==5)|(un099==5)|(vn099==5)|(wn099==5))
label variable hosp "Hospital Admission in 2 yrs"
//label define hosp 0 "No" 1 "Yes", modify
//label values hosp hosp
tab hosp, missing 


** The exit interview only asked about ICU admissions, Life Support
** & Dialysis for those who reported a hospital admission and there were 
** no missing responses.  For that reason, I coded "yes" as "yes" and all 
** others "no".  Also, this question was framed "During any of
** those admissions..." not necessarily the terminal admission.

// ICU Admission in 2yrs
generate icu = 0
replace icu = 1 if ((sn305==1)|(tn305==1)|(un305==1)|(vn305==1)|(wn305==1))
label variable icu "ICU Admission in 2yrs"
//label define icu 0 "No" 1 "Yes", modify
//label values icu icu
tab icu, missing

// Life Support
generate vent = 0
replace vent = 1 if ((sn306==1)|(tn306==1)|(un306==1)|(vn306==1)|(wn306==1))
label variable vent "Life Support"
//label define vent 0 "No" 1 "Yes", modify
//label values vent vent
tab vent, missing

// Dialysis
generate dialysis = 0
replace dialysis = 1 if ((sn307==1)|(tn307==1)|(un307==1)|(vn307==1)|(wn307==1))
label variable dialysis "Dialysis"
//label define dialysis 0 "No" 1 "Yes", modify
//label values dialysis dialysis
tab dialysis, missing 


*******************************************************************************************
** The Exit interview asks the proxy about what decisions were made
** regarding intensity of care at the EOL.  This question was only
** asked of those who reported that EOL decisions had to be made 
** (st218, tt218, ut218).  Therefore, those for whom no decisions were
** necessary are coded "No" for each of the following items.
*******************************************************************************************

// Decision to Give All Care Possible
generate dec_all = 0
replace dec_all = 1 if ((st230==1)|(tt230==1)|(ut230==1)|(vt230==1)|(wt230==1))
label variable dec_all "Decision to Give All Care Possible"
//label define dec_all 0 "No" 1 "Yes", modify
//label values dec_all dec_all
tab dec_all, missing 

// Decision to Limit Some Care
generate dec_lim = 0
replace dec_lim = 1 if ((st231==1)|(tt231==1)|(ut231==1)|(vt231==1)|(wt231==1))
label variable dec_lim "Decision to Limit Some Care"
//label define dec_lim 0 "No" 1 "Yes", modify
//label values dec_lim dec_lim
tab dec_lim, missing 

// Decision to Withhold Some Care
generate dec_whld = 0
replace dec_whld = 1 if ((st232==1)|(tt232==1)|(ut232==1)|(vt232==1)|(wt232==1))
label variable dec_whld "Decision to Withhold Some Care"
//label define dec_whld 0 "No" 1 "Yes", modify
//label values dec_whld dec_whld
tab dec_whld, missing 

// Decision to Focus on Comfort
generate dec_comf = 0
replace dec_comf = 1 if ((st233==1)|(tt233==1)|(ut233==1)|(vt233==1)|(wt233==1))
label variable dec_comf "Decision to Focus on Comfort"
//label define dec_comf 0 "No" 1 "Yes", modify
//label values dec_comf dec_comf 
tab dec_comf, missing  

** EOL Decisions, Categorical
generate dec_cat = 0
replace dec_cat = 4 if (dec_all ==1)
replace dec_cat = 3 if (dec_lim ==1)
replace dec_cat = 2 if (dec_whld ==1)
replace dec_cat = 1 if (dec_comf ==1)
label variable dec_cat "EOL Decisions, Categorical"
//label define dec_cat 0 "Not Applicable" 1 "Comfort" 2 "Withhold" 3 "Limit" ///
//      4 "All Possible", modify
//label values dec_cat dec_cat
tab dec_cat, missing

*******************************************************************************************
** The following variables capture elements of the context surrounding 
** the EOL.  All per proxy report from the Exit interviews.
*******************************************************************************************

** Death Expected: "Other/Don't Know/Refused" were coded missing by removing:
** replace dexp = 9 if ((sa131==97)|(ta131==97)|(ua131==97)|(sa131==98)|(ta131==98)|
** (ua131==98)|(sa131==99)|(ta131==99)|(ua131==99))
generate dexp = .
replace dexp = 1 if ((sa131==1)|(ta131==1)|(ua131==1)|(va131==1)|(wa131==1))
replace dexp = 0 if ((sa131==2)|(ta131==2)|(ua131==2)|(va131==2)|(wa131==2))
label variable dexp "Death Expected by Family"
//label define dexp 0 "No" 1 "Yes", modify
//label values dexp dexp 
tab dexp, missing 

** EOL care Decisions Had to be Made: "Other/Don't Know/Refused" were coded missing by removing:
** replace eoldec = 9 if ((st218==8)|(tt218==8)|(ut218==8)|(st218==9)|(tt218==9)|(ut218==9))
generate eoldec = .
replace eoldec = 1 if ((st218==1)|(tt218==1)|(ut218==1)|(vt218==1)|(wt218==1))
replace eoldec = 0 if ((st218==5)|(tt218==5)|(ut218==5)|(vt218==5)|(wt218==5))
label variable eoldec "EOL care Decisions Had to be Made"
//label define eoldec 0 "No" 1 "Yes", modify
//label values eoldec eoldec
tab eoldec, missing  

** Pt Able to Participate in Decision Making: "Other/Don't Know/Refused" were coded 
** missing by removing:
** replace capacity = 9 if ((st223==8)|(tt223==8)|(ut223==8)|(st223==9)|(tt223==9)|(ut223==9)) 
** This variable was only asked for those who said EOL decisions had to be made
generate capacity = .
replace capacity = 1 if ((st223==1)|(tt223==1)|(ut223==1)|(vt223==1)|(wt223==1))
replace capacity = 0 if ((st223==5)|(tt223==5)|(ut223==5)|(vt223==5)|(wt223==5))
label variable capacity "Pt Able to Particpate in Decision Making"
//label define capacity 0 "No" 1 "Yes", modify
//label values capacity capacity
replace capacity=0 if eoldec==0
tab capacity, missing  

** Duration of Final Illness
generate duration = .
replace duration = 1 if ((sa134==1) | (ta134==1)| (ua134==1)| (va134==1)| (wa134==1))
replace duration = 2 if ((sa134==2) | (ta134==2)| (ua134==2)| (va134==2)| (wa134==2))
replace duration = 3 if ((sa134==3) | (ta134==3)| (ua134==3)| (va134==3)| (wa134==3))
replace duration = 4 if ((sa134==4) | (ta134==4)| (ua134==4)| (va134==4)| (wa134==4))
replace duration = 5 if ((sa134==5) | (ta134==5)| (ua134==5)| (va134==5)| (wa134==5))
replace duration = 6 if ((sa134==6) | (ta134==6)| (ua134==6)| (va134==6)| (wa134==6))
replace duration = 9 if (inlist(sa134,8,9,.) & exit_year==2002)
replace duration = 9 if (inlist(ta134,8,9,.) & exit_year==2004)
replace duration = 9 if (inlist(ua134,8,9,.) & exit_year==2006)
replace duration = 9 if (inlist(va134,8,9,.) & exit_year==2008)
replace duration = 9 if (inlist(wa134,8,9,.) & exit_year==2010)
label variable duration "Duration of Final Illness"
//label define duration 1 "Sudden" 2 "<1 day" 3 "<1 week" 4 "<1 month" ///
//      5 "<1 year" 6 ">1 year" 9 "Don't Know/Refused", modify
//label values duration duration
tab duration, missing

** Advance Directive was Applicable
// only asked if reported yes in question t190 (have advance directive)
generate adapp = .
replace adapp = 1 if ((st197==1)|(tt197==1)|(ut197==1)|(vt197==1)|(wt197==1))
replace adapp = 0 if ((st197==5)|(tt197==5)|(ut197==5)|(vt197==5)|(wt197==5))
replace adapp = 9 if ((st197==8)|(tt197==8)|(ut197==8)|(vt197==8)|(wt197==8) ///
        |(st197==9)|(tt197==9)|(ut197==9)|(vt197==9)|(wt197==9))
label variable adapp "Advance Directive was Applicable"
//label define adapp 0 "No" 1 "Yes" 9 "Other/Don't Know/Refused", modify
//label values adapp adapp
replace adapp=0 if eoldec==0 // no if report not having to make eol care decisions
tab adapp, missing

// Trouble Following Advance Directive
// Left missing if blank, question not asked if advance directive na reported in t197
generate adprob = .
replace adprob = 1 if ((st204==1)|(tt204==1)|(ut204==1)|(vt204==1)|(wt204==1)) & adapp ==1
replace adprob = 0 if ((st204==5)|(tt204==5)|(ut204==5)|(vt204==5)|(wt204==5)) & adapp ==1
replace adprob = 9 if ((st204==8)|(tt204==8)|(ut204==8)|(vt204==8)|(wt204==8)| ///
        (st204==9)|(tt204==9)|(ut204==9)|(vt204==9)|(wt204==9)) & adapp ==1
label variable adprob "Trouble Following Advance Directive"
//label define adprob 0 "No" 1 "Yes" 9 "Other/Don't Know/Refused", modify
//label values adprob adprob
replace adprob=0 if eoldec==0
tab adprob, missing  

// Main EOL Decision Maker
generate decmaker = .
replace decmaker = 1 if ((st227==1) | (tt227==1)| (ut227==1)| (vt227==1)| (wt227==1))
replace decmaker = 2 if ((st227==2) | (tt227==2)| (ut227==2)| (vt227==2)| (wt227==2)| ///
(st227==3) | (tt227==3)| (ut227==3)| (vt227==3)| (wt227==3))
replace decmaker = 3 if ((st227==4) | (tt227==4)| (ut227==4)| (vt227==4)| (wt227==4))
replace decmaker = 4 if ((st227==5) | (tt227==5)| (ut227==5)| (vt227==5)| (wt227==5))
replace decmaker = 5 if ((st227==6) | (tt227==6)| (ut227==6)| (vt227==6)| (wt227==6))
replace decmaker = 6 if ((st227==7) | (tt227==7)| (ut227==7)| (vt227==7)| (wt227==7))
replace decmaker = 7 if ((st227==8) | (tt227==8)| (ut227==8)| (vt227==8)| (wt227==8))
replace decmaker = 8 if (inlist(st227,9,10,97) | inlist(tt227,9,10,97)| ///
        inlist(ut227,9,10,97)| inlist(vt227,9,10,97)|inlist(wt227,9,10,97))
replace decmaker = 9 if (inlist(st227,98,99) | inlist(tt227,98,99)| ///
        inlist(ut227,98,99)| inlist(vt227,98,99)|inlist(wt227,98,99))
label variable decmaker "Main EOL Decision Maker"
//label define decmaker 0 "N/A No EOL care decision made" 1 "Patient" ///
//      2 "Spouse or Partner or Exit Int Proxy" ///
//      3 "Child/Child-in-law/Grandchild" 4 "Other Relative" 5 "Friend" ///
//      6 "Physician/Health Care Provider" 7 "Minister/Rabbi/Priest" ///
//      8 "Other" 9 "Don't Know/Refused", modify
//label values decmaker decmaker
replace decmaker=0 if eoldec==0  //set to 0 if no decision made
tab decmaker, missing 


*******************************************************************************************
** The following variables capture the EOL care planning including Advance directives and
** discussion of wishes (all per proxy report) from the Exit interview.
*******************************************************************************************

** Living Will
generate lwill = .
replace lwill = 1 if ((st190==1)|(tt190==1)|(ut190==1)|(vt190==1)|(wt190==1))
replace lwill = 0 if ((st190==5)|(tt190==5)|(ut190==5)|(vt190==5)|(wt190==5))
replace lwill = 9 if (inlist(st190,8,9,.) & exit_year==2002)
replace lwill = 9 if (inlist(tt190,8,9,.) & exit_year==2004)
replace lwill = 9 if (inlist(ut190,8,9,.) & exit_year==2006)
replace lwill = 9 if (inlist(vt190,8,9,.) & exit_year==2008)
replace lwill = 9 if (inlist(wt190,8,9,.) & exit_year==2010)
label variable lwill "Living Will"
//label define lwill 0 "No" 1 "Yes" 9 "Don't Know / Refused / Missing", modify
//label values lwill lwill
tab lwill, missing

** Living Will Said: Give All Care Possible
// if no living will, this is coded to no also
generate lw_all = .
replace lw_all = 1 if ((st193==1)|(tt193==1)|(ut193==1)|(vt193==1)|(wt193==1))
replace lw_all = 0 if ((st193==5)|(tt193==5)|(ut193==5)|(vt193==5)|(wt193==5))
label variable lw_all "Living Will Said: Give All Care Possible"
//label define lw_all 0 "No" 1 "Yes", modify
//label values lw_all lw_all
replace lw_all=0 if lwill==0 // if no living will, set lw_all=no
tab lw_all, missing

** Living Will Said: Limit Some Care
generate lw_lim = .
replace lw_lim = 1 if ((st194==1)|(tt194==1)|(ut194==1)|(vt194==1)|(wt194==1))
replace lw_lim = 0 if ((st194==5)|(tt194==5)|(ut194==5)|(vt194==5)|(wt194==5))
label variable lw_lim "Living Will Said: Limit Some Care"
//label define lw_lim 0 "No" 1 "Yes", modify
//label values lw_lim lw_lim
replace lw_lim=0 if lwill==0  // if no living will, set lw_all=no
tab lw_lim, missing

** Living Will Said: Withhold Some Care
generate lw_whld = .
replace lw_whld = 1 if ((st195==1)|(tt195==1)|(ut195==1)|(vt195==1)|(wt195==1))
replace lw_whld = 0 if ((st195==5)|(tt195==5)|(ut195==5)|(vt195==5)|(wt195==5))
label variable lw_whld "Living Will Said: Withhold Some Care"
//label define lw_whld 0 "No" 1 "Yes", modify
//label values lw_whld lw_whld
replace lw_whld=0 if lwill==0 // if no living will, set lw_all=no
tab lw_whld, missing 

** Living Will Said: Focus on Comfort
generate lw_comf = .
replace lw_comf = 1 if ((st196==1)|(tt196==1)|(ut196==1)|(vt196==1)|(wt196==1))
replace lw_comf = 0 if ((st196==5)|(tt196==5)|(ut196==5)|(vt196==5)|(wt196==5))
label variable lw_comf "Living Will Said: Focus on Comfort"
//label define lw_comf 0 "No" 1 "Yes", modify
//label values lw_comf lw_comf 
replace lw_comf=0 if lwill==0   // if no living will, set lw_all=no
tab lw_comf, missing  

** Living Will Said, Categorical
// The options to make this categorical variable were not mutually exclusive
// This makes this variable hard to interpret.
generate lw_cat = .
replace lw_cat = 4 if (lw_all ==1)
replace lw_cat = 3 if (lw_lim ==1)
replace lw_cat = 2 if (lw_whld ==1)
replace lw_cat = 1 if (lw_comf ==1)
replace lw_cat = 0 if (lwill == 0)  // if no living will, set lw_cat=na
label variable lw_cat "Living Will Said, Categorical"
//label define lw_cat 0 "Not Applicable" 1 "Comfort" 2 "Withhold" 3 "Limit" ///
//      4 "All Possible", modify
//label values lw_cat lw_cat
tab lw_cat, missing 

** Durable Power of Attorney for Health Care
generate hcp = .
replace hcp = 1 if ((st206==1)|(tt206==1)|(ut206==1)|(vt206==1)|(wt206==1))
replace hcp = 0 if ((st206==5)|(tt206==5)|(ut206==5)|(vt206==5)|(wt206==5))
replace hcp = 9 if (inlist(st206,8,9,.) & exit_year==2002)
replace hcp = 9 if (inlist(tt206,8,9,.) & exit_year==2004)
replace hcp = 9 if (inlist(ut206,8,9,.) & exit_year==2006)
replace hcp = 9 if (inlist(vt206,8,9,.) & exit_year==2008)
replace hcp = 9 if (inlist(wt206,8,9,.) & exit_year==2010)
label variable hcp "Durable Power of Attorney for Health Care"
//label define hcp 0 "No" 1 "Yes" 9 "Don't Know / Refused / Missing", modify
//label values hcp hcp
tab hcp, missing  

** Discussion of EOL Care Preferences
generate discuss = .
replace discuss = 1 if ((st213==1)|(tt213==1)|(ut213==1)|(vt213==1)|(wt213==1))
replace discuss = 0 if ((st213==5)|(tt213==5)|(ut213==5)|(vt213==5)|(wt213==5))
replace discuss = 9 if (inlist(st213,8,9,.) & exit_year==2002)
replace discuss = 9 if (inlist(tt213,8,9,.) & exit_year==2004)
replace discuss = 9 if (inlist(ut213,8,9,.) & exit_year==2006)
replace discuss = 9 if (inlist(vt213,8,9,.) & exit_year==2008)
replace discuss = 9 if (inlist(wt213,8,9,.) & exit_year==2010)
label variable discuss "Discussion of EOL Care Preferences"
//label define discuss 0 "No" 1 "Yes" 9 "Don't Know / Refused / Missing", modify
//label values discuss discuss
tab discuss, missing  

** Advance Directive
generate advdir = .
replace advdir = 1 if ((hcp==1)|(lwill==1))
replace advdir = 0 if ((hcp==0)&(lwill==0))
label variable advdir "Advance Directive"
//label define advdir 0 "No" 1 "Yes", modify
//label values advdir advdir
tab advdir, missing 

** Any EOL care Planning
generate eolplan = .
replace eolplan = 1 if ((hcp==1)|(lwill==1)|(discuss==1))
replace eolplan = 0 if ((hcp==0)&(lwill==0)&(discuss==0))
label variable eolplan "Any EOL care Planning"
//label define eolplan 0 "No" 1 "Yes", modify
//label values eolplan eolplan
tab eolplan, missing  


** Location of Death

generate location = .
replace location = 1 if ((sa124==1) | (ta124==1)| (ua124==1)| (va124==1)| (wa124==1))
replace location = 2 if ((sa124==2) | (ta124==2)| (ua124==2)| (va124==2)| (wa124==2))
replace location = 3 if ((sa124==3) | (ta124==3)| (ua124==3)| (va124==3)| (wa124==3))
replace location = 4 if ((sa124==4) | (ta124==4)| (ua124==4)| (va124==4)| (wa124==4))
replace location = 5 if ((sa124==5) | (ta124==5)| (ua124==5)| (va124==5)| (wa124==5))
replace location = 6 if (inlist(sa124,7,8) & exit_year==2002)
replace location = 6 if (inlist(ta124,7,8) & exit_year==2004)
replace location = 6 if (inlist(ua124,7,8) & exit_year==2006)
replace location = 6 if (inlist(va124,7,8) & exit_year==2008)
replace location = 6 if (inlist(wa124,7,8) & exit_year==2010)
label variable location "Location of Death"
//label define location 1  "Hospital" 2 "Nursing Home" 3 "Home" 4 "Hospice" ///
//      5 "Assisted Living/Retirement Home" 6 "Other/Don't Know "
//label values location location
tab location, missing 

//Location of death = hospital - indicator variable
generate loc_hosp = .
replace loc_hosp = 1 if (location==1)
replace loc_hosp = 0 if (inlist(location,2,3,4,5))
replace loc_hosp = 0 if ((sa124==7) | (ta124==7)| (ua124==7)| (va124==7)| (wa124==7))
label variable loc_hosp  "Death in the Hospital"
//label define loc_hosp  1 "Yes" 0 "No", modify
//label values loc_hosp  loc_hosp 
tab loc_hosp , missing 

***********************************************************************************
***********************************************************************************
//Symptoms last year of life
***********************************************************************************
***********************************************************************************

//Depression last year of life?
//skip pattern from interview type is not clear, if na in codebook, left as missing here
gen byte depr_exit = .
replace depr_exit =1 if sc202==1 | tc202==1 | uc202==1 | vc202==1 | wc202==1
replace depr_exit =0 if sc202==5 | tc202==5 | uc202==5 | vc202==5 | wc202==5
la var depr_exit "Depression in last year of life? 1=yes"
tab depr_exit exit_year , missing

//Periodic confusing last year of life?
//skip pattern from interview type is not clear, if na in codebook, left as missing here
gen byte delirium_exit = .
replace delirium_exit =1 if sc203==1 | tc203==1 | uc203==1 | vc203==1 | wc203==1
replace delirium_exit =0 if sc203==5 | tc203==5 | uc203==5 | vc203==5 | wc203==5
la var delirium_exit "Periodic confusion in last year of life? 1=yes"
tab delirium_exit exit_year , missing

//Shortness of breath?
//skip pattern from interview type is not clear, if na in codebook, left as missing here
gen byte dyspnea_hrs = .
replace dyspnea_hrs = 1 if sc198==1 | tc198==1 | uc198==1 | vc198==1 | wc198==1
replace dyspnea_hrs = 0 if sc198==5 | tc198==5 | uc198==5 | vc198==5 | wc198==5
la var dyspnea_hrs "Dyspnea in last year of life? 1=yes"
tab dyspnea_hrs exit_year, missing

//Severe fatigue or exhaustion?
//skip pattern from interview type is not clear, if na in codebook, left as missing here
gen byte fatigue_hrs = .
replace fatigue_hrs = 1 if sc204==1 | tc204==1 | uc204==1 | vc204==1 | wc204==1
replace fatigue_hrs = 0 if sc204==5 | tc204==5 | uc204==5 | vc204==5 | wc204==5
la var fatigue_hrs "Severe fatigue or exhaustion in last year of life? 1=yes"
tab fatigue_hrs exit_year, missing

//Very little appetite?
//skip pattern from interview type is not clear, if na in codebook, left as missing here
gen byte no_appet_hrs = .
replace no_appet_hrs = 1 if sc199==1 | tc199==1 | uc199==1 | vc199==1 | wc199==1
replace no_appet_hrs = 0 if sc199==5 | tc199==5 | uc199==5 | vc199==5 | wc199==5
la var no_appet_hrs "Very little appetite in last year of life? 1=yes"
tab no_appet_hrs exit_year, missing



save exit_02_10_clean4.dta, replace

log close




H="Exit - variable cleaning - nursing home"
/*Part 5 of cleaning exit variables
Questions relate to nursing home use */

capture log close

clear all
set mem 1g
set matsize 800
set more off


//Amy's PC
//local logpath E:\data\hrs_cleaned\logs
//local datapath E:\data\hrs_cleaned\working

//RG PC
local logpath C:\HRS\hrs_cleaned\logs
local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\6a_HRS_exit_clean_part5.txt", text replace
cd `datapath'

use exit_02_10_clean4.dta

tab exit_year, missing

*********************************************************************************
// Nursing home residence at time of death - variable nhres processed in Part 1
*********************************************************************************
tab nhres exit_year, missing

*********************************************************************************
// Nursing home in past 2 years, excluding stay at time of death - exit interview
*********************************************************************************
/*
2002 Exit 	SN114
2004 Exit 	TN114
2006 Exit 	UN114
2008 Exit 	VN114
2010 Exit 	WN114
*/
generate nhres_2yr_exit = .
replace nhres_2yr_exit = 1 if ((sn114==1)| (tn114==1)| (un114==1)| (vn114==1)| (wn114==1))
replace nhres_2yr_exit = 0 if ((sn114==5)| (tn114==5)| (un114==5)| (vn114==5)| (wn114==5))

label variable nhres_2yr_exit "Nursing Home Resident in 2 years prior to death (excludes final stay)"
//label define nhres_2yr_exit 0 "No" 1 "Yes", modify
//label values nhres_2yr_exit nhres_2yr_exit 
tab nhres_2yr_exit exit_year, missing

*********************************************************************************
// Number of times in a nursing home in past 2 years - exit interview
*********************************************************************************
/* 2004-2010: Inlcuding final stay, number of times patient overnight in a hn?
2002: Excluding final stay, number of times patient?
2002 values for this and count of nights therefore have more missingness than 
other years since they were skipped if didn't have a nh stay that was not
the stay in which R died
2002 Exit 	SN115
2004 Exit 	TN115
2006 Exit 	UN115
2008 Exit 	VN115
2010 Exit 	WN115
*/
generate nh_stays_exit = .
replace nh_stays_exit = sn115 if exit_year==2002
replace nh_stays_exit = tn115 if exit_year==2004
replace nh_stays_exit = un115 if exit_year==2006
replace nh_stays_exit = vn115 if exit_year==2008
replace nh_stays_exit = wn115 if exit_year==2010
replace nh_stays_exit = 0 if (nhres_2yr_exit ==0&nhres==0)
replace nh_stays_exit = . if inlist(nh_stays,98,99)
label variable nh_stays_exit "Number of times a patient in NH 2 years before death"
tab nh_stays_exit exit_year,missing
sum nh_stays_exit if nh_stays_exit != 0

*********************************************************************************
// Total nursing home nights in the last 2 years - exit interview
*********************************************************************************
/*Nights response:
2002 Exit 	SN116
2004 Exit 	TN116
2006 Exit 	UN116
2008 Exit 	VN116
2010 Exit 	WN116
996 = continuous since last core interview; 998, 999 = dont know / refused
Months response:
2002 Exit 	SN117
2004 Exit 	TN117
2006 Core 	KN117
2008 Core 	LN117
2010 Core 	MN117
2010 Exit 	WN117
98, 99 = dont know / refused
Variable coded here is in nights, convert months * 30.5 = number of nights,
continuous = 365*2 = 770
Some respondants report values greater than 2 years, in those cases, cap at 770 days / 2 years

See note above re. skip pattern for 2002 resulting in lower counts of days for that year
*/
gen nh_nights_exit=.
replace nh_nights_exit= sn116 if (exit_year==2002 & sn117==.)
replace nh_nights_exit= tn116 if (exit_year==2004 & tn117==.)
replace nh_nights_exit= un116 if (exit_year==2006 & un117==.)
replace nh_nights_exit= vn116 if (exit_year==2008 & vn117==.)
replace nh_nights_exit= wn116 if (exit_year==2010 & wn117==.)
replace nh_nights_exit=770 if nh_nights_exit==996
replace nh_nights_exit=. if (inlist(sn116,998,999)|inlist(tn116,998,999)| ///
 inlist(un116,998,999)|inlist(vn116,998,999)|inlist(wn116,998,999))
sum nh_nights_exit if (0<nh_nights_exit & nh_nights_exit!=770), detail
tab nh_nights_exit exit_year, missing

gen nh_mos_exit=.
replace nh_mos_exit= sn117 if (exit_year==2002 & sn116==.)
replace nh_mos_exit= tn117 if (exit_year==2004 & tn116==.)
replace nh_mos_exit= un117 if (exit_year==2006 & un116==.)
replace nh_mos_exit= vn117 if (exit_year==2008 & vn116==.)
replace nh_mos_exit= wn117 if (exit_year==2010 & wn116==.)
replace nh_mos_exit=. if (inlist(sn117,98,99)|inlist(tn117,98,99)| ///
 inlist(un117,98,99)|inlist(vn117,98,99)|inlist(wn117,98,99))
tab nh_mos_exit exit_year, missing
sum nh_mos_exit, detail

replace nh_nights_exit=ceil(30.5*nh_mos_exit) if nh_mos_exit!=.
replace nh_nights_exit=770 if nh_nights_exit>770
replace nh_nights_exit=0 if (nhres_2yr_exit==0&nhres==0)
sum nh_nights_exit, detail
sum nh_nights_exit if(nhres_2yr_exit!=0|nhres==1), detail
tab nh_nights_exit exit_year, missing

drop nh_mos_exit

*********************************************************************************
// Nursing home covered by insurance - core interview
// missing if no nursing home
*********************************************************************************
gen nh_ins_exit = .
replace nh_ins_exit = 1 if ((sn118==1)|(tn118==1)|(un118==1)|(vn118==1)|(wn118==1))
replace nh_ins_exit = 2 if ((sn118==3)|(tn118==3)|(un118==3)|(vn118==3)|(wn118==3))
replace nh_ins_exit = 3 if ((sn118==5)|(tn118==5)|(un118==5)|(vn118==5)|(wn118==5))
replace nh_ins_exit = 4 if (inlist(sn118,7,8,9)|inlist(tn118,7,8,9)| ///
  inlist(un118,7,8,9)|inlist(vn118,7,8,9)|inlist(wn118,7,8,9))
la var nh_ins_exit "Nursing home covered by insurance"
// la define nh_ins_exit 1 "Fully covered by insurance" 2 ///
// "Partially covered (or covered w/ copay)" 3 "Not covered" 4 "Unknown, not provided"
// la val nh_ins_exit nh_ins_exit
tab nh_ins_exit exit_year, missing

//check for duplicate ids
sort id
quietly by id: gen dup = cond(_N==1,0,_n)
drop if dup>1
drop dup

//drop raw variables
keep id  hhid pn exit_year proxy_exit female marital married marital* medicare ///
medicareb ///
medicaid champus hmo medigap catinsur nhres* hospice freqrelg child gchil allchil ///
reschil reschil_d resspouse hhm livealone location loc_hosp icu vent dialysis dec_* ///
dexp eoldec capacity duration adapp adprob decmaker lwill lw_* hcp discuss advdir ///
eolplan adl* days_bed_ill iadl* hh_worker cancer* psych* *_hrs delirium_exit depr_exit /// 
nhres_2yr_exit nh_stays_exit nh_nights_exit nh_ins_exit 

save exit_02_10_clean.dta, replace

log close


H="Misc vars - core and exit - NOT USED"
This variable not generated because so many missing answers

****************************************************************************
****************************************************************************
//Immigrant Status: this variable is of limited value because 3889 did not answer due
//to a skip pattern that is unclear
//from core and exit
//multiple sources: xb002: born in the us?; xb086: born us citizen?
//neither question asked in exit 2006 so just use core 2006 for that wave
generate immig = .
replace immig = 0 if ((sb002==1)|(tb002==1)|(ub086==1)|(vb002==1)| ///
(g1060==1)|(hb002==1)|(jb002==1)|(kb002==1)|(lb002==1))
replace immig = 1 if ((sb002==5)|(tb002==5)|(ub086==5)| (vb002==5)| ///
(g1060==5)|(hb002==5)|(jb002==5)|(kb002==5)|(lb002==5))
label variable immig "Immigrant Status"
//label define immig 0 "No" 1 "Yes", modify
//label values immig immig
tab immig, missing



H="Restricted 2010 Dataset"
/*restricted files cleaning
Based on code in spouse_data_mar11_2013.txt

Restricted files received November 2013
Raw files converted to sas datasets here:
E:\data\hrs_restricted_2010

dob2010 - date of birth
dod2010 - date of death
doi2010 - date of interviews
hrscms2008 - hrs / cms crosswalk
hrsxgeo10 - detailed geographic information
ndi2010com_r - cause of death, common information
ndi2010i9_r - cause of death using ICD-9 coding
ndi2010i10_r - cause of death using ICD-10 coding

Files are cleaned and then merged into single file
*/

/*raw data as received from HRS*/
libname rest_raw "E:\data\hrs_restricted_2010\raw";
/*working data that is being processed*/
libname rest_wk "E:\data\hrs_restricted_2010";

/************************************************************/
/*date of death file initial processing*/
/************************************************************/

%let file=dod2010;

proc contents data= rest_raw.&file;
run;
/*check for duplicate entries by hhid+np = no duplicates found*/
proc sort data=rest_raw.&file nodupkey;
by hhid pn;
run;

/*create death date variable
if month, day or year coded as 97 = unknown, then get null for 
death_date variable - 621 observations
month missing: 105
year missing: 41
day missing: 526
Since so many missing day, set to 15, create indicator variable to note
that day of death was imputed here
*/
proc freq table=rest_raw.dod2010;
table EXDEATHDAY EXDEATHMO EXDEATHYR /missprint;
run;

data rest_wk.&file._2;
set rest_raw.&file;
dod_imp=0;
label dod_imp ="Indicator for DOD imputed";
if EXDEATHDAY=97 then do;
	 EXDEATHDAY=15;
	 dod_imp=1; /*set imputed variable = 1 if have to set death day*/
	end;
if EXDEATHMO=97 then EXDEATHMO=.;
if EXDEATHYR=9997 then EXDEATHYR=.;
if EXDEATHMO=2 and EXDEATHDAY>28 then EXDEATHDAY=28;
if EXDEATHMO in (4,6,9,11) and EXDEATHDAY>30 then EXDEATHDAY=30;
death_date=mdy(EXDEATHMO,EXDEATHDAY,EXDEATHYR);

/*create id variable as concat of hhid and pn*/
length id $9 hhid $6 pn $3;
id=hhid||pn;

/*drop unneeded variables*/
keep id hhid pn death_date dod_imp;
run;

proc sort data=rest_wk.&file._2;
by id;
run;
/*216 observatons have missing death date*/
proc sql;
select count(*) from rest_wk.&file._2 where death_date=.;
quit;
proc sort data=rest_wk.&file._2;
by id;
run;

/*check for the death date range we have in our dataset
Most recent one is May 2, 2011*/
proc sort data=rest_wk.&file._2 out=last_dt;
by death_date;
run;

data last_dt;
set last_dt;
format death_date date9.;
run;


/************************************************************/
/*date of birth file initial processing*/
/************************************************************/

%let file=dob2010;

proc contents data= rest_raw.&file;
run;
proc sort data=rest_raw.&file nodupkey;
by hhid pn;
run;

/*note there are 1160 missing birthday,while they have birth_month,and birthyr (184 are missing birthmo,72 missing year)
so put those birthday=15
create indicator for observations where birthday is assigned here*/
data rest_wk.&file._2;
set rest_raw.&file;
dob_imp=0;
label dob_imp ="Indicator for DOB imputed";
if birthday=. then do;
	 birthday=15;
	 dob_imp=1; /*set imputed variable = 1 if have to set birthday*/
	end;
if  birthmo=2 and birthday>28 then birthday=28;
if  birthmo in (4,6,9,11) and birthday>30 then birthday=30;
/*create birth_date variable*/
birth_date=mdy(birthmo,birthday,birthyr);
length id $9 hhid $6 pn $3;
id=hhid||pn;
keep hhid pn  birth_date birthyr birthmo birthday id dob_imp;
run;
proc sort data=rest_wk.&file._2;
by id;
run;
proc freq;
table dob_imp*birthday /missprint;
run;

proc sql;
select count(*) from rest_wk.&file._2 where birth_date=.; /* 185 obs*/
select hhid,pn from rest_wk.&file._2 where birth_date=.;
select count(*) from rest_wk.&file._2 where birthday=.; /* 0 obs*/
select count(*) from rest_wk.&file._2 where  birthmo=.; /* 184 obs*/
select count(*) from rest_wk.&file._2 where  birthyr=.; /* 72 obs*/
quit;

/************************************************************/
/*race and ethnicity file initial processing*/
/************************************************************/

*race, race1 and hispanic1 is for those <=2004;
/*
RACE2M1        RACE/ETHNICITY - MULTIPLE MENTION 1
         Section: RE    Level: Respondent      Type: Numeric    Width: 2   Decimals: 0
         Ref: SecB.OtherBackground.B089M[1]

         What race do you consider yourself to be: White, Black or African American,
         American Indian, Alaska Native, Asian, Native Hawaiian, Pacific Islander, or
         something else?

         .................................................................................
         12054           0.  Not obtained
         15252           1.  White/Caucasian
          2695           2.  Black/African-American
           194           3.  American Indian
             2           4.  Alaskan Native
           167           5.  Asian
             3           6.  Native Hawaiian
            15           7.  Pacific Islander
           573          97.  Other (Specify)
            55          98.  DK
            12          99.  Unknown

RACE1          RACE/ETHNICITY 2004
         Section: RE    Level: Respondent      Type: Numeric    Width: 1   Decimals: 0

         This is the race/ethnicity of a respondent through 2004

         .................................................................................
           482           0.  Not obtained
         24288           1.  White/Caucasian
          4537           2.  Black/African-American
           332           3.  American Indian or Alaskan Native
           325           4.  Asian or Pacific Islander
           732           7.  Other
             8           8.  DK
             6           9.  Refused
           02       Blank.  Entered sample after 2004


==========================================================================================

HISPANIC1      HISPANIC TYPE 2004
         Section: RE    Level: Respondent      Type: Numeric    Width: 1   Decimals: 0

         This is the hispanicity of a respondent through 2004.

         .................................................................................
           444           0.  Not obtained
          1536           1.  Mexican-American/Chicano
           238           2.  Puerto Rican
           257           3.  Cuban American
           591           5.  Other
         27644           7.  Not Hispanic
           02       Blank.  Entered sample after 2004


HISPANIC2M1
==========================================================================================

HISPANIC2M1    HISPANIC TYPE - MULTIPLE MENTION 1
         Section: RE    Level: Respondent      Type: Numeric    Width: 1   Decimals: 0
         Ref: SecB.OtherBackground.B029M[1]

         Would you say you are Mexican American, Puerto Rican, Cuban American or
         something else?

         .................................................................................
         12123           0.  Not obtained
          1088           1.  Mexican-American/Chicano
           150           2.  Puerto Rican
           130           3.  Cuban American
         17085           6.  Not Hispanic
           413           7.  Other (Specify)
            32           8.  DK
             1           9.  Refused
*/
%let file=re2010;

proc contents data= rest_raw.&file;
run;

data &file._1;
set rest_raw.&file;
run;

/*no duplicates*/ 
proc sort data=&file._1 nodupkey;
by hhid pn;
run;

proc freq;
table RACE1 FIRSTIW;
run;

/*table of ids that entered post 2004 and use new variables*/
proc sql;
create table lt_2004 as 
select * from &file._1 where RACE1=.;
quit;

data &file._2(rename=(hhid2=hhid pn2=pn));
set &file._1;
if race1~=. then race=race1;
/*set race based on 2006 and later variable*/
if race1=. then do;
race=race2m1;
if race2m1 in (3,4) then race=3;
if race2m1 in (5,6,7) then race=4;
if race2m1 in (97) then race=7;
if race2m1 in (98,99) then race=8;
end;

/*set hispanic based on 2004 variable*/
if hispanic1~=. then hispanic=hispanic1;

/*set hispanic based on 2006 amd later variable*/
if hispanic1=. then do;
hispanic=hispanic2m1;
if hispanic2m1 in (7) then hispanic=5;
if hispanic2m1 in (6) then hispanic=7;
end;


/* Hispanic Ethnicity and Subgroups */
hisp_eth=.;
if ((hispanic=1)|(hispanic=2)|(hispanic=3)|(hispanic=5)) then hisp_eth=1;
if (hispanic=7) then hisp_eth=0;
label hisp_eth= "Hispanic Ethnicity";

white=0;
if (race=1 & hisp_eth=0) then white=1;
if race in (0,8,9) then white=.;
label white= "Non-Hispanic White/Caucasian";

black=0;
if (race=2 & hisp_eth=0) then black=1;
if race in (0,8,9) then black=.;
label black= "Non-Hispanic black or African American";

native_amer=0;
if (race=3 & hisp_eth=0) then native_amer=1;
if race in (0,8,9) then native_amer=.;
label native_amer= " American Indian or Alaskan Native" ;

asian_pi=0;
if (race=4 & hisp_eth=0) then asian_pi=1;
if race in (0,8,9) then asian_pi=.;
label asian_pi= "Asian or Pacific Islander" ;

other_race=0;
if (race=7 & hisp_eth=0) then other_race=1;
if race in (0,8,9) then other_race=.;
label other_race= "Other Non-Hispanic Race" ;

/*Due to small number of subjects that are native american, asian/pi, those groups are combined with 'other' race in this new variable*/
other_na_api_race=0;
if (race in (3,4,7) & hisp_eth=0) then other_na_api_race=1;
if race in (0,8,9) then other_na_api_race=.;
label other_na_api_race= "Native American, Asian Pacific Islander, or Other Non-Hispanic Race" ;


length id $9 hhid2 $6 pn2 $3;
hhid2=put(hhid,$6.);
pn2=put(pn,$3.);
drop hhid pn;

id=hhid2||pn2;
label id="hhid+pn";
label race="raw race,multiple";
label hispanic="raw hispanic,1,2,3,5=hispanic eth";
keep id hhid2 pn2 race hispanic hisp_eth white black native_amer asian_pi  other_race other_na_api_race;
run;

proc contents data=&file._2;
run;

proc sort data=&file._2 out=rest_wk.&file._3;
by id;
run;

proc freq;
table RACE hispanic white black native_amer asian_pi other_race other_na_api_race;
run;

/************************************************************/
/*cause of death file initial processing*/
/************************************************************/
/*
Start with two files, one is ICD-9 codes, other uses ICD-10 codes
Need to match variables with 12 category cause of death to
use for analysis
Z403_10             CAUS:113 CAUSE RECODE (ICD-10)
Z403_9             CAUS:113 CAUSE RECODE (ICD-9)

Final categories are:
1 = Infectious disease (not including HIV/AIDS/viral hepatitis)
2 = HIV/AIDS
3 = Cardiovascular disease
4 = Chronic lower resperiatory disease
5 = Other Respiratory disease
6 = Diabetes
7 = Alzheimers Disease
8 = N/A
9 = Neoplasms
10 = Kidney Disease (not infectious) 
11 = Liver, Gallbladder, Stomach and/or Intestinal disease
12 = Accidents, Suicide, Homicide
13 = Other
14 = Unknown (coded as 999 in original data)
*/
 
/*Bring in excel lists of cause of death*/

proc import 
datafile='E:\projects\HRS_general\ref_docs\cause_death_resource\Cause_death_9.xls'
out=cd_9 dbms=xls replace;
run;

proc import 
datafile='E:\projects\HRS_general\ref_docs\cause_death_resource\Cause_death_10.xls'
out=cd_10 dbms=xls replace;
run;

/*merge 12 category list with ICD-9 dataset using 72 categories variable
No observations with missing values*/
data rest_wk.ndi2010i9_r_2(keep=id z403_9_n);
set rest_raw.ndi2010i9_r;
length id $9 hhid2 $6 pn2 $3;
hhid2=put(hhid,$6.);
pn2=put(pn,$3.);
drop hhid pn;
id=hhid2||pn2;
label id="hhid+pn";
z403_9_n=z403_9+0;
run;

proc freq data=rest_wk.ndi2010i9_r_2;
table z403_9_n /missprint;
run;

proc sql;
create table rest_wk.ndi2010i9_r_3 as 
select a.*,b.cause_death_12_n
from rest_wk.ndi2010i9_r_2 a
left join
cd_9 b
on a.Z403_9_n=b.id_icd9_z403_9;
quit;

proc freq data=rest_wk.ndi2010i9_r_3;
table cause_death_12_n /missprint;
run;

proc sort data=rest_wk.ndi2010i9_r_3 nodupkey;
by id;
run;

/*merge 12 category list with ICD-10 dataset using 113 categories variable
ICD-10 list has 687 obs have raw icd-10 cause of death code (z401_10)
but are missing the 358 and 113 category cause of death
I will code these manually from the raw ICD-10 codes
Source for manual coding: ICD10_RECODES.doc received with restricted dataset,
saved here: E:\data\hrs_restricted_2010\20131104_received\NDI\reference_files\reference_files
*/

/*get dataset that has the ICD-10 codes missing the 113 category classification*/
data ndi2010_1(keep=id z401_10 z402_10 z403_10 z403_10_n);
set rest_raw.ndi2010i10_r;
length id $9 hhid2 $6 pn2 $3;
hhid2=put(hhid,$6.);
pn2=put(pn,$3.);
drop hhid pn;
id=hhid2||pn2;
label id="hhid+pn";
z403_10_n=z403_10+0;
run;

proc freq;
table z403_10_n /missprint;
run;

data ndi2010_miss_2;
set ndi2010_1;
if z403_10='';
run;



proc sql outobs=10;
select id,z401_10,z402_10,z403_10 from ndi2010_miss_2;
quit;

proc print data=ndi2010_miss_2;
hhidpn

data ndi2010_miss_2a(keep=z401_10);
set ndi2010_miss_2;
run;

proc sort data=ndi2010_miss_2a nodupkey;
by z401_10;
run;

/*merge the 12 category where the 113 category is present*/
/*dataset where 113 category is not missing*/
data ndi2010_2(keep=id z403_10_n);
set ndi2010_1;
if z403_10~='';
run;

proc freq data=ndi2010_2;
table z403_10_n /missprint;
run;

proc sql;
create table rest_wk.ndi2010i10_r_3 as 
select a.*,b.cause_death_12_n
from ndi2010_2 a
left join
cd_10 b
on a.Z403_10_n=b.ID_ICD10_Z403_10;
quit;

proc freq data=rest_wk.ndi2010i10_r_3;
table cause_death_12_n/missprint;
run;

/*merge the 12 category where the 113 category is not present*/
/*first, bring in 113 category from excel list*/
proc import 
datafile='E:\projects\HRS_general\ref_docs\cause_death_resource\icd_10_to_113_categ.xls'
out=match_cd_10_113 dbms=xls replace;
run;

proc sql;
create table ndi2010_miss_3 as select
a.Z401_10,a.id,b.equiv_z403_10_category from
ndi2010_miss_2 a left join
match_cd_10_113 b
on a.Z401_10=b.Z401_10;
quit;

proc freq;
table equiv_z403_10_category /missprint;
run;

/*now go from 113 category to 12 category cause of death*/
proc sql;
create table rest_wk.ndi2010i10_r_3a as 
select a.*,b.cause_death_12_n
from ndi2010_miss_3 a
left join
cd_10 b
on a.equiv_z403_10_category=b.ID_ICD10_Z403_10;
quit;

proc freq;
table cause_death_12_n /missprint;
run;


/*merge icd-9 and icd-10 cause of death datasets into single dataset
with just the 12 category cause of death*/
data ndi_2010_1;
set rest_wk.ndi2010i9_r_3;
keep id cause_death_12_n;
run;

data ndi_2010_2;
set rest_wk.ndi2010i10_r_3;
keep id cause_death_12_n;
run;

data ndi_2010_3;
set rest_wk.ndi2010i10_r_3a;
keep id cause_death_12_n;
run;


data ndi_2010_4;
set ndi_2010_1 ndi_2010_2  ndi_2010_3;
run;

proc freq;
table cause_death_12_n /missprint;
run;

proc sort data=ndi_2010_4 out=rest_wk.ndi_2010_r_3 nodupkey;
by id;
run;


/********************************************************************************/
/* Geographic information (zip code) initial processing 
Dataset has zip code for each interview year that applies*/
/********************************************************************************/

/*for 2010 zip codes, 2 variables:
ZIP10_2000          2010 ZIP CODE (CENSUS 2000)
         Section: A     Level: Respondent      Type: Character  Width: 5   Decimals: 0
         Ref: ZIP10

         USPS ZIP Code associated with the geographic location where the respondent was
         living when contacted in 2010 -- match based on Census 2000.

         .................................................................................
         26274             00601-99921.  ZIP Codes
            83                   99999.  NA; Foreign Address
         11451                   Blank.  Not interviewed this wave


==========================================================================================

ZIP10_2010          2010 ZIP CODE (CENSUS 2010)
         Section: A     Level: Respondent      Type: Character  Width: 5   Decimals: 0
         Ref: ZIP10

         USPS ZIP Code associated with the geographic location where the respondent was
         living when contacted in 2010 -- match based on Census 2010.

         .................................................................................
         26274             00601-99921.  ZIP Codes
            83                   99999.  NA; Foreign Address
         11451                   Blank.  Not interviewed this wave

*/

data rest_wk.hrsxgeo10_2;
set rest_raw.hrsxgeo10;
length id $9 hhid2 $6 pn2 $3;
hhid2=put(hhid,$6.);
pn2=put(pn,$3.);
drop hhid pn;

id=hhid2||pn2;
label id="hhid+pn";

keep id zip:;
run;

data rest_wk.hrsxgeo10_3;
set rest_wk.hrsxgeo10_2;
drop ZIP10_2010;
run;

proc contents data=rest_wk.hrsxgeo10_3;
run;

/*no duplicates by id*/
proc sort data=rest_wk.hrsxgeo10_3 nodupkey;
by id;
run;

/********************************************************************************/
/* Merge the individual restricted files into one dataset and 
save to the hrs_clean folder for use in other projects */
/********************************************************************************/

libname hrs_cln 'E:\data\hrs_cleaned';

data hrs_cln.restricted_v2010;
merge rest_wk.dob2010_2 rest_wk.re2010_3 rest_wk.dod2010_2 rest_wk.ndi_2010_r_3 rest_wk.hrsxgeo10_3;
by id;
run;

data hrs_cln.restricted_v2010;
set hrs_cln.restricted_v2010(drop=id);
id=hhid*1000+pn;
label id="HRS resp ID";
run;

proc sort data=hrs_cln.restricted_v2010 nodupkey;
by id;
run;

proc freq;
table cause_death_12_n;
run;


H="Add core interview date to core dataset (from restricted)"
/*to get the core interview date from restricted file 
Uses 2010 restricted dataset

Saves this version of the clean core interviews to the 
hrs_cleaned folder: 'E:\data\hrs_cleaned';
*/

/*2010 restricted files*/
/*raw data as received from HRS*/
libname rest_raw "E:\data\hrs_restricted_2010\raw";
/*working data that is being processed*/
libname rest_wk "E:\data\hrs_restricted_2010";

/*HRS temporary data files*/
libname hrs_int "E:\data\hrs_cleaned\working";

data IVWDATE ;
set rest_raw.doi2010;
run;

proc freq data=IVWDATE;
table miwyear;
run;

/*convert STATA HRS core dataset to SAS
RG PC Filepath
proc import 
datafile="E:\data\hrs_cleaned\working\core_98_10_nw_tics.dta" 
out=hrs_int.core_00_10_nw_tics replace;
run; */


/*convert STATA HRS core dataset to SAS
Amy PC filepath*/
proc import 
datafile="E:\data\hrs_cleaned\working\core_98_10_nw_tics.dta" 
out=hrs_int.core_00_10_nw_tics replace;
run;

/*compress dataset*/
data hrs_int.core_00_10_nw_tics  (compress=yes);
set hrs_int.core_00_10_nw_tics;
run;

%let year=1998;
proc sql;
create table core_98_date
as select a.hhid,a.pn,a.core_year,b.FIWMONTH as c_ivw_month,b.FIWDAY as c_ivw_day,FIWyear as c_ivw_year
from hrs_int.core_00_10_nw_tics(where=(core_year=&year)) a left join
IVWDATE b
on a.hhid=b.hhid and a.pn=b.pn;
quit;

data core_98_date_1;
set core_98_date;
if c_ivw_day=. then do;
	c_ivw_day=15;
	c_ivw_day_imp=1;
	end;
run;

proc freq;
table c_ivw_day c_ivw_month c_ivw_year core_year c_ivw_day_imp /missprint;
run;

%let year=2000;
proc sql;
create table core_00_date
as select a.hhid,a.pn,a.core_year,b.GIWMONTH as c_ivw_month,b.GIWDAY as c_ivw_day,GIWyear as c_ivw_year
from hrs_int.core_00_10_nw_tics(where=(core_year=&year)) a left join
IVWDATE b
on a.hhid=b.hhid and a.pn=b.pn;
quit;

data core_00_date_1;
set core_00_date;
if c_ivw_day=. then do;
	c_ivw_day=15;
	c_ivw_day_imp=1;
	end;
run;

proc freq;
table c_ivw_day c_ivw_month c_ivw_year core_year c_ivw_day_imp /missprint;
run;

%let year=2002;
proc sql;
create table core_02_date
as select a.hhid,a.pn,a.core_year,b.hIWMONTH as c_ivw_month,b.hIWDAY as c_ivw_day,hIWyear as c_ivw_year
from hrs_int.core_00_10_nw_tics(where=(core_year=&year)) a left join
IVWDATE b
on a.hhid=b.hhid and a.pn=b.pn;
quit;

data core_02_date_1;
set core_02_date;
if c_ivw_day=. then do;
	c_ivw_day=15;
	c_ivw_day_imp=1;
	end;
run;

proc freq;
table c_ivw_day c_ivw_month c_ivw_year core_year c_ivw_day_imp /missprint;
run;

%let year=2004;
proc sql;
create table core_04_date
as select a.hhid,a.pn,a.core_year,b.jIWMONTH as c_ivw_month,b.jIWDAY as c_ivw_day,jIWyear as c_ivw_year
from hrs_int.core_00_10_nw_tics(where=(core_year=&year)) a left join
IVWDATE b
on a.hhid=b.hhid and a.pn=b.pn;
quit;

data core_04_date_1;
set core_04_date;
if c_ivw_day=. then do;
	c_ivw_day=15;
	c_ivw_day_imp=1;
	end;
run;

proc freq;
table c_ivw_day c_ivw_month c_ivw_year core_year c_ivw_day_imp /missprint;
run;

%let year=2006;
proc sql;
create table core_06_date
as select a.hhid,a.pn,a.core_year,b.kIWMONTH as c_ivw_month,b.kIWDAY as c_ivw_day,kIWyear as c_ivw_year
from hrs_int.core_00_10_nw_tics(where=(core_year=&year)) a left join
IVWDATE b
on a.hhid=b.hhid and a.pn=b.pn;
quit;

data core_06_date_1;
set core_06_date;
if c_ivw_day=. then do;
	c_ivw_day=15;
	c_ivw_day_imp=1;
	end;
run;

proc freq;
table c_ivw_day c_ivw_month c_ivw_year core_year c_ivw_day_imp /missprint;
run;

%let year=2008;
proc sql;
create table core_08_date
as select a.hhid,a.pn,a.core_year,b.lIWMONTH as c_ivw_month,b.lIWDAY as c_ivw_day,lIWyear as c_ivw_year
from hrs_int.core_00_10_nw_tics(where=(core_year=&year)) a left join
IVWDATE b
on a.hhid=b.hhid and a.pn=b.pn;
quit;

data core_08_date_1;
set core_08_date;
if c_ivw_day=. then do;
	c_ivw_day=15;
	c_ivw_day_imp=1;
	end;
run;

proc freq;
table c_ivw_day c_ivw_month c_ivw_year core_year c_ivw_day_imp /missprint;
run;

%let year=2010;
proc sql;
create table core_10_date
as select a.hhid,a.pn,a.core_year,b.mIWMONTH as c_ivw_month,b.mIWDAY as c_ivw_day,mIWyear as c_ivw_year
from hrs_int.core_00_10_nw_tics(where=(core_year=&year)) a left join
IVWDATE b
on a.hhid=b.hhid and a.pn=b.pn;
quit;

data core_10_date_1;
set core_10_date;
if c_ivw_day=. then do;
	c_ivw_day=15;
	c_ivw_day_imp=1;
	end;
run;

proc freq;
table c_ivw_day c_ivw_month c_ivw_year core_year c_ivw_day_imp /missprint;
run;

data core_date_00_10;
set core_98_date_1
core_00_date_1
core_02_date_1
core_04_date_1
core_06_date_1
core_08_date_1
core_10_date_1;
length id $9 hhid $6 pn $3;
id=hhid||pn;
c_ivw_date=mdy(c_ivw_month,c_ivw_day,c_ivw_year);
format c_ivw_date date9.;
label c_ivw_date="Core Interview Date";
label c_ivw_month="Core Interview Month";
label c_ivw_day="Core Interview Day";
label c_ivw_day_imp="Indicator for imputed core int. day";
label id="HRS id";
run;

proc sort data=core_date_00_10 out=temp_date nodupkey;
by id core_year;
run;

proc freq;
table core_year;
run;

/*merge interview date into the core data set*/
proc sql;
create table core_00_to_10_dt as 
select * from 
hrs_int.core_00_10_nw_tics a 
left join 
temp_date(drop=hhid pn ) b
on a.id=b.id and a.core_year=b.core_year;
quit;

/*approximately half of this dataset is missing interview date*/
proc freq;
table core_year c_ivw_date;
run;

libname hrs_cln 'E:\data\hrs_cleaned';

/*save core dataset with interview date in the hrs_cleaned directory*/
data hrs_cln.core_00_to_10;
set core_00_to_10_dt;
run;


H="Add exit interview date to exit dataset (from restr.)"
/*to get the exit interview date from restricted file 
Uses 2010 restricted dataset*/

/*2010 restricted files*/
/*raw data as received from HRS*/
libname rest_raw "E:\data\hrs_restricted_2010\raw";
/*working data that is being processed*/
libname rest_wk "E:\data\hrs_restricted_2010";

data IVWDATE ;
set rest_raw.doi2010;
run;

proc freq data=IVWDATE;
table miwyear;
run;

/*bring Stata exit dataset into SAS*/
proc import datafile="E:\data\hrs_cleaned\working\exit_02_10_clean.dta"
out=exit_02_10 dbms=stata replace;
run;

data hrs_int.exit_02_10 (compress = yes);
set exit_02_10;
run;

/*bring interview dates to exit dataset*/
proc sql;
create table exit_ivwdt_1 as select a.*,b.HIWMONTH,b.HIWDAY,b.HIWYEAR,
	b.JIWMONTH,b.JIWDAY,b.JIWYEAR,b.KIWMONTH,b.KIWDAY,b.KIWYEAR,
	b.LIWMONTH,b.LIWDAY,b.LIWYEAR,b.MIWMONTH,b.MIWDAY,b.MIWYEAR
from hrs_int.exit_02_10 a
left join IVWDATE b 
on a.hhid=b.hhid and a.pn=b.pn;
quit;

data exit_ivwdt_2;
set exit_ivwdt_1;
if exit_year=2002 then do;
	e_ivw_month=HIWMONTH;
	e_ivw_day=HIWDAY;
	e_ivw_year=HIWYEAR;
	end;
if exit_year=2004 then do;
	e_ivw_month=JIWMONTH;
	e_ivw_day=JIWDAY;
	e_ivw_year=JIWYEAR;
	end;
if exit_year=2006 then do;
	e_ivw_month=KIWMONTH;
	e_ivw_day=KIWDAY;
	e_ivw_year=KIWYEAR;
	end;
if exit_year=2008 then do;
	e_ivw_month=LIWMONTH;
	e_ivw_day=LIWDAY;
	e_ivw_year=LIWYEAR;
	end;
if exit_year=2010 then do;
	e_ivw_month=MIWMONTH;
	e_ivw_day=MIWDAY;
	e_ivw_year=MIWYEAR;
	end;
run;

proc freq data=exit_ivwdt_2;
table e_ivw_day e_ivw_month e_ivw_year exit_year /missprint;
run;

/*4038 have missing day, 2776 have day provided so impute missing days,
month and year are complely filled in for 6814 obs.*/
data exit_ivwdt_3;
set exit_ivwdt_2(drop=HIWMONTH HIWDAY HIWYEAR
	JIWMONTH JIWDAY JIWYEAR KIWMONTH KIWDAY KIWYEAR
	LIWMONTH LIWDAY LIWYEAR MIWMONTH MIWDAY MIWYEAR);
if e_ivw_day=. then do;
	e_ivw_day=15;
	e_ivw_day_imp=1;
	end;
run;

proc freq;
table e_ivw_day e_ivw_month e_ivw_year exit_year e_ivw_day_imp /missprint;
run;

data exit_ivwdt_4;
set exit_ivwdt_3;
length id $9 hhid $6 pn $3;
id=hhid||pn;
e_ivw_date=mdy(e_ivw_month,e_ivw_day,e_ivw_year);
format e_ivw_date date9.;
label e_ivw_date="Exit Interview Date";
label e_ivw_month="Exit Interview Month";
label e_ivw_day="Exit Interview Day";
label e_ivw_year="Exit Interview Year";
label e_ivw_day_imp="Indicator for imputed exit int. day";
label id="HRS id";
run;

proc sort data=exit_ivwdt_4 out=temp_date nodupkey;
by id;
run;

proc freq data=exit_ivwdt_4;
table exit_year e_ivw_date /missprint;
run;

libname hrs_cln 'E:\data\hrs_cleaned';

/*save exit dataset with interview date in the hrs_cleaned directory*/
data hrs_cln.exit_02_to_10_dt;
set exit_ivwdt_4;
run;



H="End HRS cleaning"
/*
Have 3 datasets at this point:

sur_int.core_00_to_10.sas7bdat - core, with observation for each core interview, includes
net worth data, TICS score and interview date from restricted dataset

sur_int.exit_02_to_10_dt.sas7bdat - exit dataset with interview date from restricted dataset

rest_wk.restricted_v2010.sas7bdat - restricted dataset

The core file has multiple rows per beneficiary, one for each core interview
Exit and restricted do not have duplicate rows per beneficiary

These can then be used in project specific data applications

*/