= V4 Outline MultiLine NoSorting TabWidth=30

H="Dementia Porbability Construction"
This code will (hopefully) construct dementia probabilities comparable to Hurd's that can be used in the larger sample (as his data is only through '06).



H="sas get tics results"
libname cogn 'E:\data\hrs_public_2012\HRS_Cog';


%macro gettics(w=,year=);

data tics1_&w;
set cogn.cogimp9212a_r;
keep hhid pn core_year prediction_year
r&w.cogtot r&w.status r&w.bwc20 r&w.vp
 r&w.ser7  r&w.scis r&w.cact r&w.pres r&w.mo r&w.dy r&w.yr r&w.dw
 r&w.imrc r&w.dlrc r&w.vocab r&w.mstot;
core_year=&year;
prediction_year=&year+1;
run;

data tics2_&w;
set tics1_&w;
rename r&w.cogtot=TICS_tot;
rename r&w.status=imp_elig_status;
rename r&w.mo=mo;
rename r&w.dy=dy;
rename r&w.yr=yr;
rename r&w.dw=dw;
rename r&w.bwc20=bwc20;
rename r&w.ser7=ser7 ;
rename r&w.scis=scis;
rename r&w.cact=cact;
rename r&w.pres=pres;
rename r&w.imrc=imrc;
rename r&w.dlrc=dlrc;
rename r&w.vp=vp;
rename r&w.vocab=vocab;
rename r&w.mstot=mstot;




%mend;

%gettics(w=4,year=1998);
%gettics(w=5,year=2000);
%gettics(w=6,year=2002);
%gettics(w=7,year=2004);
%gettics(w=8,year=2006);
%gettics(w=9,year=2008);
%gettics(w=10,year=2010);
%gettics(w=11,year=2012);

data tics_9812;
set tics2_4 tics2_5 tics2_6 tics2_7 tics2_8 tics2_9 tics2_10 tics2_11;
label TICS_tot='TICS Cognition Score, scale 0-35';
run;

proc sort nodupkey; by hhid pn core_year ; run;

/*convert to stata*/
proc export data=tics_9812 
outfile="E:\data\hrs_cleaned\working\tics_9812.dta"
replace;
run;

proc means data=tics_9812; run;

H="stata construction"

use "E:\data\hrs_cleaned\working\tics_9812.dta", clear
merge 1:1 hhid pn core_year using  "E:\data\hrs_cleaned\core_00_to_12.dta", nogen keep(match)
merge 1:1 hhid pn prediction_year using  "E:\data\hrs_public_2012\dementia\pdem_withvarnames.dta", keepusing(prob) keep(match master)
drop _m
merge m:1 hhid  pn using "E:\data\hrs_cleaned\restricted_tracker_v2012.dta", keepusing(birth_date gender) keep(match master)
merge

gen twrtot=tics_tot-mstot
sum mstot
gen d_mstot=mstot<=r(mean)-1.5*r(sd)
sum twrto
gen d_twrt=twrtot<=r(mean)-1.5*r(sd)
sum tics_tot
gen d_tics=tics_tot<=r(mean)-1.5*r(sd)

keep if prob_!=.
gen dem_likely=prob>.5



gen age=floor((c_ivw_date-birth_date)/365.25)
gen age_cat=1
replace age_cat=2 if age>=70
replace age_cat=3 if age>=75
replace age_cat=4 if age>=80
replace age_cat=5 if age>=85
replace age_cat=6 if age>=90
tab age_cat, gen(age_cat)
label define agecat 1 "Age<70" 2 "Age 70-74" 3 "Age 75-79" 4 "Age 80-84" ///
5 "Age 85-89" 6 "Age>=90"
label values age_cat agecat

gen ed_hs_only=educ==2
gen ed_gt_hs=educ>2


local cogvars imrc dlrc ser7 bwc20 mo dy yr dw scis cact pres vp adl_index_core ///
iadl_ind_core 

foreach x of local cogvars {
gen prev`x'=.
forvalues i= 1998(2)2012 {
gen `x'`i'=`x' if core_year==`i'
replace `x'`i'=0 if `x'`i'==.
by id, sort: egen `x'1=max(`x'`i')
replace prev`x'=`x'`i' if core_year==`i'+2
replace prev`x'=`x'1 if core_year==`i'+2
drop `x'`i' `x'1
}
}




foreach x of local cogvars {
gen ch_`x'=`x'-prev`x'
*replace ch_`x'=0 if ch_`x'==.
}


drop if proxy==1

gen age_cat0=age_cat<3
gen dates=mo+dy+yr+dw
gen ch_dates=ch_mo+ch_yr+ch_dy+ch_dw


local regvars age_cat3 age_cat4 age_cat5 age_cat6 ed_hs_only ed_gt_hs female ///
adl_index_core iadl_ind_core ch_adl_index_core ch_iadl_ind_core dates bwc20 ///
ser7 sci cact pres imrc dlrc ch_dates ch_bwc20 ch_ser7 ch_sci ch_cact ch_pres ///
ch_imrc ch_dlrc
*reg prob_ `regvars'
foreach x of local regvars {
sum `x'
drop if `x'==.
}
preserve
drop if core_year>2002
glm prob_ `regvars', link(logit) fam(binomial)
restore
predict pglm
gen glm_l=pglm>.5
corr pglm prob_
tab glm_l if dem_l==1
tab glm_l if dem_l==0

gen ptot =glm_l
replace ptot=1 if memory==1
replace ptot=1 if d_twr==1 & d_mstot==1

tab ptot if dem_l==1 
tab ptot if dem_l==0

gen demcat=1 if prob_>.5 & prob_!=.
replace demcat=2 if prob_>.1 & prob<=.5
replace demcat=3 if prob_<=.1
preserve
drop if core_year>2002
/*
oprobit demcat `regvars'

mat estimates = e(b)

mat estimates[1,1]=-0.031
mat estimates[1,2]=-0.634
mat estimates[1,3]=-0.545
mat estimates[1,4]=-0.903
mat estimates[1,5]=-0.452
mat estimates[1,6]=-0.221
mat estimates[1,7]=-0.075
mat estimates[1,8]=0.020
mat estimates[1,9]=-0.206
mat estimates[1,10]=-0.063
mat estimates[1,11]=0.099
mat estimates[1,12]=0.367
mat estimates[1,13]=-0.337
mat estimates[1,14]=0.119
mat estimates[1,15]=-0.740
mat estimates[1,16]=0.035
mat estimates[1,17]=0.329
mat estimates[1,18]=0.235
mat estimates[1,19]=0.222
mat estimates[1,20]=-0.100
mat estimates[1,21]=0.530
mat estimates[1,22]=0.021
mat estimates[1,23]=0.415
mat estimates[1,24]=0.310
mat estimates[1,25]=0.239
mat estimates[1,26]=-0.098
mat estimates[1,27]=-0.057
mat estimates[1,28]=0.075

capture program drop estuse
program estuse, eclass
ereturn repost b=estimates
end

estuse

restore

predict poprobit 
corr poprobit pglm prob_

gen glm_l=pglm>.5
gen oprobit_l=popro>.5
gen ptot=pglm>.5 | (d_tw==1 & d_ms==1)
gen potot=oprob==1 | (d_tw==1 & d_ms==1)
/*
local rownum : word count `regvars'
mat dmnt=J(`rownum',4,.)
local r=1

probit dem_li `regvars'


foreach x of local regvars {
	sum `x' if probp!=.
	mat dmnt[`r',1]=r(mean)
	sum `x' if dem_li==1 & probp==1
	mat dmnt[`r',2]=r(mean)
	sum `x' if dem_li==1 & probp==0
	mat dmnt[`r',3]=r(mean)
	ttest `x' if dem_li==1, by(probp)
	mat dmnt[`r',4]=r(p)
	local r=`r'+1
	
}


foreach x of local regvars {
	sum `x' if probp!=.
	mat dmnt[`r',1]=r(mean)
	sum `x' if dem_li==1 & probp!=.
	mat dmnt[`r',2]=r(mean)
	ttest `x', by(dem_li)
	mat dmnt[`r',3]=r(p)
	local r=`r'+1
	
}
mat rownames dmnt= `regvars'

frmttable, statmat(dmnt) varlabels ctitles("" "mean" "probp==1" "probp==0")






H="another version (the same?)"
/*
use "E:\data\hrs_cleaned\working\tics_9812.dta", clear
merge 1:1 hhid pn core_year using  "E:\data\hrs_cleaned\core_00_to_12.dta", nogen
merge 1:1 hhid pn prediction_year using  "E:\data\hrs_public_2012\dementia\pdem_withvarnames.dta", keepusing(prob) keep(match master) nogen
merge 1:1 hhid pn core_year using "E:\data\hrs_public_2012\dementia\ADAMS\dementia_dx_adams_wave1_only.dta", nogen
merge m:1 hhid  pn using "E:\data\hrs_cleaned\restricted_tracker_v2012.dta", keepusing(birth_date gender) keep(match master) nogen

*/


use "E:\data\hrs_cleaned\core_00_to_12.dta", clear
gen prediction_year=core_year+1
merge 1:1 hhid pn core_year using "E:\data\hrs_cleaned\working\tics_9812.dta" , nogen keep(match master)
merge 1:1 hhid pn prediction_year using  "E:\data\hrs_public_2012\dementia\pdem_withvarnames.dta", keepusing(prob)  keep(match) nogen
merge 1:1 hhid pn core_year using "E:\data\hrs_public_2012\dementia\ADAMS\dementia_dx_adams_wave1_only.dta", nogen
merge m:1 hhid  pn using "E:\data\hrs_cleaned\restricted_tracker_v2012.dta", keepusing(birth_date gender) keep(match master) nogen



gen twrtot=tics_tot-mstot
sum mstot
gen d_mstot=mstot<=r(mean)-1.5*r(sd)
sum twrto
gen d_twrt=twrtot<=r(mean)-1.5*r(sd)
sum tics_tot
gen d_tics=tics_tot<=r(mean)-1.5*r(sd)

keep if prob_!=.
gen dem_likely=prob>.5



gen age=floor((c_ivw_date-birth_date)/365.25)
gen age_cat=1
replace age_cat=2 if age>=70
replace age_cat=3 if age>=75
replace age_cat=4 if age>=80
replace age_cat=5 if age>=85
replace age_cat=6 if age>=90
tab age_cat, gen(age_cat)
label define agecat 1 "Age<70" 2 "Age 70-74" 3 "Age 75-79" 4 "Age 80-84" ///
5 "Age 85-89" 6 "Age>=90"
label values age_cat agecat

gen ed_hs_only=educ==2
gen ed_gt_hs=educ>2


local cogvars imrc dlrc ser7 bwc20 mo dy yr dw scis cact pres vp adl_index_core ///
iadl_ind_core 

foreach x of local cogvars {
gen prev`x'=.
forvalues i= 1998(2)2012 {
gen `x'`i'=`x' if core_year==`i'
replace `x'`i'=0 if `x'`i'==.
by id, sort: egen `x'1=max(`x'`i')
replace prev`x'=`x'`i' if core_year==`i'+2
replace prev`x'=`x'1 if core_year==`i'+2
drop `x'`i' `x'1
}
}




foreach x of local cogvars {
gen ch_`x'=`x'-prev`x'
*replace ch_`x'=0 if ch_`x'==.
}


*drop if proxy==1

gen age_cat0=age_cat<3
gen dates=mo+dy+yr+dw
gen ch_dates=ch_mo+ch_yr+ch_dy+ch_dw


local regvars age_cat3 age_cat4 age_cat5 age_cat6 ed_hs_only ed_gt_hs female ///
adl_index_core iadl_ind_core ch_adl_index_core ch_iadl_ind_core dates bwc20 ///
ser7 sci cact pres imrc dlrc ch_dates ch_bwc20 ch_ser7 ch_sci ch_cact ch_pres ///
ch_imrc ch_dlrc memory_hrs

ologit dx `regvars'

predict p2

foreach x of local regvars {
di "`x'"
*ttest `x' if wrong==1, by(churd)
}

foreach x of local regvars {
sum `x'
drop if `x'==.
}
oprobit dx `regvars' 

predict pdem
gen lp=pdem>.5
gen dem_l=prob>.5
replace lp=. if pdem==.
replace dem_l=. if prob_==.
gen c1=lp==deme if deme!=.
gen c2=dem_l==deme if deme!=.

ologit dx `regvars'

predict p2
/*
*reg prob_ `regvars'

preserve
drop if core_year>2002
glm prob_ `regvars', link(logit) fam(binomial)
restore
predict pglm
gen glm_l=pglm>.5
corr pglm prob_
tab glm_l if dem_l==1
tab glm_l if dem_l==0

gen ptot =glm_l
replace ptot=1 if memory==1
replace ptot=1 if d_twr==1 & d_mstot==1

tab ptot if dem_l==1 
tab ptot if dem_l==0

gen demcat=1 if prob_>.5 & prob_!=.
replace demcat=2 if prob_>.1 & prob<=.5
replace demcat=3 if prob_<=.1
preserve
drop if core_year>2002
/*
oprobit demcat `regvars'

mat estimates = e(b)

mat estimates[1,1]=-0.031
mat estimates[1,2]=-0.634
mat estimates[1,3]=-0.545
mat estimates[1,4]=-0.903
mat estimates[1,5]=-0.452
mat estimates[1,6]=-0.221
mat estimates[1,7]=-0.075
mat estimates[1,8]=0.020
mat estimates[1,9]=-0.206
mat estimates[1,10]=-0.063
mat estimates[1,11]=0.099
mat estimates[1,12]=0.367
mat estimates[1,13]=-0.337
mat estimates[1,14]=0.119
mat estimates[1,15]=-0.740
mat estimates[1,16]=0.035
mat estimates[1,17]=0.329
mat estimates[1,18]=0.235
mat estimates[1,19]=0.222
mat estimates[1,20]=-0.100
mat estimates[1,21]=0.530
mat estimates[1,22]=0.021
mat estimates[1,23]=0.415
mat estimates[1,24]=0.310
mat estimates[1,25]=0.239
mat estimates[1,26]=-0.098
mat estimates[1,27]=-0.057
mat estimates[1,28]=0.075

capture program drop estuse
program estuse, eclass
ereturn repost b=estimates
end

estuse

restore

predict poprobit 
corr poprobit pglm prob_

gen glm_l=pglm>.5
gen oprobit_l=popro>.5
gen ptot=pglm>.5 | (d_tw==1 & d_ms==1)
gen potot=oprob==1 | (d_tw==1 & d_ms==1)
/*
local rownum : word count `regvars'
mat dmnt=J(`rownum',4,.)
local r=1

probit dem_li `regvars'


foreach x of local regvars {
	sum `x' if probp!=.
	mat dmnt[`r',1]=r(mean)
	sum `x' if dem_li==1 & probp==1
	mat dmnt[`r',2]=r(mean)
	sum `x' if dem_li==1 & probp==0
	mat dmnt[`r',3]=r(mean)
	ttest `x' if dem_li==1, by(probp)
	mat dmnt[`r',4]=r(p)
	local r=`r'+1
	
}


foreach x of local regvars {
	sum `x' if probp!=.
	mat dmnt[`r',1]=r(mean)
	sum `x' if dem_li==1 & probp!=.
	mat dmnt[`r',2]=r(mean)
	ttest `x', by(dem_li)
	mat dmnt[`r',3]=r(p)
	local r=`r'+1
	
}
mat rownames dmnt= `regvars'

frmttable, statmat(dmnt) varlabels ctitles("" "mean" "probp==1" "probp==0")




