= V4 Outline MultiLine NoSorting TabWidth=30

H="Serious illness cohort definition development"
HRS variables are processed in file HRS_Processing.txt
1998-2010 Core interviews
2002-2010 Exit interviews
Restricted data received in November 2013


******************************************************************

/*hrs cleaned path*/
libname hrs_fnl 'E:\data\hrs_cleaned';

/*medicare xwalk and claims path*/
libname medi 'E:\data\cms_DUA_25000_2010';

/*project data paths*/
libname sic_int 'E:\data\serious_ill\int_data';
libname sic_ref 'E:\data\serious_ill\ref_data';


H="Initial core criteria"
/***********************************************************************/
/*Core interview dataset, merge with dob from restricted               */
/***********************************************************************/

libname hrs_fnl 'E:\data\hrs_cleaned';

data core;
set hrs_fnl.core_00_to_10;
run;

proc sort data=core nodupkey;
by id core_year;
run;

data restr;
set hrs_fnl.restricted_v2010;
id_c=trim(hhid)||trim(pn);
drop id;
rename id_c=id;
run;

proc sort data=restr nodupkey;
by id;
run;

/*need to merge in the dob and core interview date to get age at core ivw*/
proc sql;
create table core_dob as select a.*, b.birth_date
from core a left join
restr b
on a.id=b.id;
quit;

data sic_int.core_age_1;
set core_dob;
age_at_core=(c_ivw_date-birth_date)/365.25;
label age_at_core="Age at core interview";
if age_at_core>=65 then age_ge_65=1;
if age_at_core<65 then age_ge_65=0;
label age_ge_65="Age at core interview > 65";
run;

proc freq data=sic_int.core_age_1;
table age_ge_65 /missprint;
run;

ods rtf body=" E:\data\serious_ill\logs\core_00_to_08_meet_criteria.rtf" ;
proc sql;
title "meet age>=65 at core interview,2000-2008";
select count(distinct id) from sic_int.core_age_1 
where age_ge_65=1 and core_year in (2000,2002,2004,2006,2008);
create table age_ge_65 as 
select * from sic_int.core_age_1 
where age_ge_65=1 and core_year in (2000,2002,2004,2006,2008);

title "those meet age>=65,srf(poor,fair)";
select count(distinct id) from age_ge_65 
where srh_pf=1 ;

title "those meet age>=65,chf";
select count(distinct id) from age_ge_65 
where chf_hrs=1 ;

title "those meet age>=65,lung";
select count(distinct id) from age_ge_65 
where lung_hrs=1 ;

title "those meet age>=65,diabetes";
select count(distinct id) from age_ge_65 
where dm_hrs=1 ;

title "those meet age>=65,cancer";
select count(distinct id) from age_ge_65 
where cancer_hrs=1 ;

title "those meet age>=65,chf or lung or diabetes or cancer";
select count(distinct id) from age_ge_65 
where  chf_hrs=1 or lung_hrs=1 or dm_hrs=1 or cancer_hrs=1 ;

title "those meet age>=65,hosp_last_2yr,since last interview";
select count(distinct id) from age_ge_65 
where hosp_last_2yr=1 ;

title "those meet age>=65,meet at least one,fair or poor self report/chf/lung/diabet/cancer/hosp_last_2yr";
select count(distinct id) from age_ge_65 
where  srh_pf=1 or chf_hrs=1 or lung_hrs=1 or dm_hrs=1 or cancer_hrs=1 or hosp_last_2yr=1 ;

title "age>=65,meet at least one,fair or poor self report/chf/lung/diabet/cancer/hosp_last_2yr/1 adl";
select count(distinct id) from age_ge_65 
where  srh_pf=1 or chf_hrs=1 or lung_hrs=1 or dm_hrs=1 or cancer_hrs=1 or hosp_last_2yr=1 
or adl_independent_core=0;

quit;
ods rtf close;



H="Create frequency tables of core variables"
/*creates log file to review with Amy for new variables*/

capture log close

clear all
set mem 1g
set matsize 800
set more off

//Need to create project file paths for new dataset, logs!
//Amy's PC
local logpath E:\data\serious_ill\logs
local datapath E:\data\hrs_cleaned\working

//RG PC
//local logpath C:\data\serious_illness_cohort\logs
//local datapath C:\HRS\hrs_cleaned\working

log using "`logpath'\1_sic_new_variables.txt", text replace
cd `datapath'

***********************************************************************
//Core interview dataset
***********************************************************************
use core_98_10_nw_tics.dta //dataset without core interview dates added (all public)

//indicator, categorical variables local, want frequency tables
local catvars alz_hrs dem_hrs cancer_hrs cancer_treat_hrs heart_hrs chf_hrs chfadmit_hrs ///
lung_hrs lung_o2_hrs lung_lim_hrs dm_hrs dm_ins_hrs dm_kidn_hrs hip_frac_hrs nhres ///
nhres_start_mo nhres_start_yr nhres_2yr  hh_worker hosp_last_2yr pain_hrs pain_level_hrs ///
pain_limit_act_hrs cesd_tot cesd_tot_ge3 dyspnea_hrs swelling_feet_hrs dizzy_hrs ///
back_pain_hrs headache_hrs fatigue_hrs cough_hrs depr_2_wks_hrs insom_falling_asleep insom_waking_up ///
insom_too_early insom_rested insom_med_sleep insom_med_dr sr_memory sr_mem_change ///
pr_memory pr_mem_change adl_diff_dr adl_dr_core adl_diff_wk adl_equip_wk adl_wk_core adl_diff_bh ///
 adl_bh_core adl_diff_e adl_e_core adl_diff_tx adl_equip_tx adl_tx_core adl_diff_t adl_t_core ///
 iadl_diff_map iadl_diff_mp iadl_mp_core iadl_diff_gr iadl_gr_core iadl_diff_ph iadl_ph_core ///
 iadl_diff_rx iadl_rx_core iadl_diff_m iadl_m_core  fl_diff_wk_many fl_diff_wk_one fl_diff_sit ///
 fl_diff_gu fl_diff_sta_many fl_diff_sta_one fl_diff_stp fl_diff_reach fl_diff_push fl_diff_lift ///
 fl_diff_dime adl_sp_helper adl_oth_helper iadl_sp_helper iadl_sp_helper adl_hlp_freq_imp_ed iadl_hlp_freq_imp_ed

//continuouse variables
local contvars nh_nights hosp_stays_2yr hosp_nights_2yr TICS_tot adl_helper_count iadl_helper_count ///
adl_hlp_freq_imp_mo iadl_hlp_freq_imp_mo adl_help_hours iadl_help_hours

//describe

tab core_year, missing

foreach v in `catvars' {
tab `v' core_year, missing
}

foreach v in `contvars' {
sum `v', detail
}


***********************************************************************
//Exit interview dataset
***********************************************************************
clear 
use exit_02_10_clean.dta //exit prior to adding interview dates

local xcatvars nhres nhres_start_mo nhres_start_yr pain_hrs ///
pain_level_hrs depr_exit delirium_exit dyspnea_hrs fatigue_hrs ///
no_appet_hrs discuss dexp

foreach v in `xcatvars' {
tab `v' exit_year, missing
}

log close


H="Process Claims Relative to Core Interview Date"
/*Get claims 1 year and 2 year before each core interview*/

/*Step 1: Bring in mc xwalk id
sic_int.core_xwalk_1 has core interviews, age and claims xwalk id */

/*prepare core dataset to merge*/
data core_id;
set sic_int.core_age_1;
run;

proc sort data=core_id nodupkey;
by id c_ivw_date;
run;

/*prepare xwalk id file to merge*/
data crosswalk_1;
set medi.cmsxref2010;
keep bid_hrs_19 hhid pn;
run;

/*get 2 variables bid_hrs = claims id, id=HRS id*/
data crosswalk_2;
set crosswalk_1;
bid_hrs=bid_hrs_19;
id=trim(hhid)||trim(pn);
drop hhid pn;
drop bid_hrs_19;
run;

proc sort data= crosswalk_2;
by bid_hrs;
run;

/*bring in xwalk id to core interview dataset*/
proc sql;
create table core_xwalk as select
a.*,b.bid_hrs from
core_id a
left join
crosswalk_2 b
on a.id=b.id;
quit;

/*check for missing xwalk ids
38947 of 130333 interviews are missing xwalk ids*/
data check1;
set core_xwalk ;
if bid_hrs ='';
run;

/*create indicator for having xwalk id*/
data sic_int.core_xwalk_1;
set core_xwalk;
xwalk_yes=.;
if bid_hrs ='' then xwalk_yes=0;
if bid_hrs~='' then xwalk_yes=1;
run;

proc freq;
table xwalk_yes*core_year /missprint;
run;

/*just get information needed to grab claims, drop rest of interview data
So pulls all interviews for r's with the mc linkage*/
data sic_int.core_lmt_xwalk_2;
set sic_int.core_xwalk_1(keep=id core_year c_ivw_date c_ivw_year c_ivw_month bid_hrs xwalk_yes);
if xwalk_yes=1;
run;


H="Step 2a - Identify FFS MC 1yr and 2yrs preceeding core interview"
/*Use denominator file to determine which interviews / r's have ffs mc
during the time preceeding the core interview*/

proc sort data=medi.dn_2000_2010 out=dn_2000_20102  nodupkey;
by BID_HRS_19 year;
run;

proc sort data=sic_int.core_lmt_xwalk_2 out=core_mc_ids nodupkey;
by bid_hrs c_ivw_year;
run;

/*pull medicare and hmo status variables from dn file
for the core interview years
interviews are dropped if they don't have a matching dn entry that year*/
proc sql;
create table dn_core_y as select
a.*,,b.buyin12,b.year,b.HMOIND12
from core_ids_1yr_criteria a inner join
dn_2000_20102 b
on trim(left(a.BID_hrs))=trim(left(b.BID_hrs_19))
and a.c_ivw_year=b.year;
quit;

/*if find that month is missing, think about assigning it january...
so we don't lose these observations in this step*/
proc freq data=dn_core_y ;
table c_ivw_year c_ivw_month;
run;

/*xxx r's have at least 1 interview with a denominator file linked*/
proc sql;
select count(distinct BID_hrs) from dn_core_y ;
quit;

data dn_core_y2;
set dn_core_y;
if length(trim(left(buyin12)))=12 and c_ivw_month>0 then do;
buyin_dy=substr(trim(left(buyin12)),1,c_ivw_month);
hmo_dy=substr(trim(left(HMOIND12)),1,c_ivw_month);
end;
else do;
buyin_dy=trim(left(buyin12));
hmo_dy=trim(left(HMOIND12));
end;
format c_ivw_date date9.;
run;
proc means n;
var  c_ivw_month;
run;

/*Check year prior to core interview to backfill for interview dates
in the first half of the year (since doing 12 mo look back)*/
/* xxx have the -1 year dn file*/
proc sql;
create table dn_core_y_bef as select
a.BID_hrs,a.c_ivw_year ,
b.year as c_ivw_year_bef,
b.year,b.buyin12,b.HMOIND12
from dn_core_y a inner join
dn_2000_20102 b
on trim(left(a.BID_hrs))=trim(left(b.BID_hrs_19))
and 0<a.c_ivw_year-b.year<=1 order by bid_hrs,c_ivw_year;
quit;

proc sql;
create table all_insurance as select a.*,b.buyin12 as buyin_bef,b.HMOIND12 as hmo_bef from
dn_core_y2 a
left join
dn_core_y_bef b
on trim(left(a.BID_hrs))=trim(left(b.r_BID_hrs)) 
and a.c_ivw_year=b.c_ivw_year;
quit;

/*merge surgery year and year before surgery buy-in and hmo variables
Trim so the final variable _12m is 12 months pre-interview
Note: indicator variables for parts a and b and hmo are null if don't
have information for full 12 months pre-interview*/
data all_insurance2;
set all_insurance;
buyin_2y=trim(left(buyin_bef))||trim(left(buyin_dy));
hmo_2y=trim(left(hmo_bef))||trim(left(hmo_dy));

buyin_2y_r=reverse(trim(buyin_2y));
hmo_2y_r=reverse(trim(hmo_2y));

/*create 12 month variable*/
if length(buyin_2y_r)>11 then buyin_12m_r=substr(trim(left(buyin_2y)),1,12);
if length(hmo_2y_r)>11 then hmo_12m_r=substr(trim(left(hmo_2y)),1,12);

if length(buyin_2y_r)<12 then buyin_12m_r="";
if length(hmo_2y_r)<12 then hmo_12m_r="";

buyin_12m=reverse(trim(buyin_12m_r));
hmo_12m=reverse(trim(hmo_12m_r));

/*create indicator variable for mc coverage 12 mo. 0=no, 1=yes*/
if length(buyin_12m)=12 then do;
if indexc(buyin_12m,"0","1","2","A","B") then part_ab_12m=0;
if indexc(buyin_12m,"0","1","2","A","B")=0 then part_ab_12m=1;
end;
if length(hmo_12m)=12 then do;
if index(hmo_12m,"00000000000") then hmo_d_12m=0;
if index(hmo_12m,"00000000000")=0 then hmo_d_12m=1;
end;

run;

/*xx observations don't have full denominator data re insurance status
either interview Before Jan 2001 or are missing year -1 dn file*/
proc freq;
table part_ab_12m hmo_d_12m;
run;

/*bring indicators into full interview dataset*/
proc sql;
create table sic_int.core_xwalk_ins as select a.*,b.buyin_12m,b.hmo_12m from
sic_int.core_xwalk_1 a left join
all_insurance_2
on a.bid_hrs=a.bid_hrs and a.c_ivw_year=b.c_ivw_year;
quit;

proc freq;
table age_ge_65*part_ab_12m /missprint;
run;

H="Step 2 - Get claims"
/*Get claims 1 year and 2 year before each core interview*/

/*Step 2: Pull claims lists using mc xwalk id and interview date
Save claims lists to project folder for use later */


/****************************************************************************/
/* Macro to pull claims lists, saves lists to int_data folder               */
/****************************************************************************/

/*macros to create claims lists, one for all but medpar, one for medpar*/
%macro other(days_start=,days_bef_core=,source= );

proc sql;
create table sic_int.&source._meet_&days_bef_core. as select a.*,b.c_ivw_date,b.core_year
from medi.&source._2000_2010 a inner join
sic_int.core_lmt_xwalk_2 b
on trim(left(a.bid_hrs_19))=trim(left(b.bid_hrs))
and &days_start<=b.c_ivw_date-a.admit_date<=&days_bef_core;
quit;

%mend;


%macro mp(days_start=,days_bef_core=,source=,time_label=);
%let source0=mp;

proc sql;
create table &source._meet as select a.*,b.c_ivw_date,b.core_year
from medi.&source0._2000_2010 a inner join
sic_int.core_lmt_xwalk_2 b
on trim(left(a.bid_hrs_19))=trim(left(b.bid_hrs))
and &days_start<=b.c_ivw_date-a.admit_date<=&days_bef_core;
quit;

proc sql;
create table &source._meet2 as select a.*,b.c_ivw_date,b.core_year
from medi.&source0._2000_2010 a inner join
sic_int.core_lmt_xwalk_2 b
on trim(left(a.bid_hrs_19))=trim(left(b.bid_hrs))
and b.c_ivw_date-a.admit_date>&days_bef_core and b.c_ivw_date-a.disch_date<=&days_bef_core;
quit;

data sic_int.&source._meet3_&days_bef_core.;
set &source._meet &source._meet2;
run;

%mend;

/*run to get claims list 6 months pre-core for medpar
Use to get indicator of hospitalizations 6 m prior to interview*/
%mp(days_start=0,days_bef_core=183,source=mp );

/*run to get claims lists 1 year pre-core
Datasets are sic_int.mp_meet3_365, sic_int.hh_meet_365, etc.*/
%mp(days_start=0,days_bef_core=365,source=mp );
%other(days_start=0,days_bef_core=365,source=hh );
%other(days_start=0,days_bef_core=365,source=hs );
%other(days_start=0,days_bef_core=365,source=dm);
%other(days_start=0,days_bef_core=365,source=op );
%other(days_start=0,days_bef_core=365,source=pb );

/*run to get claims lists 2 years pre-core
Datasets are sic_int.mp_meet3_730, sic_int.hh_meet_730, etc.*/
%mp(days_start=0,days_bef_core=730,source=mp );
%other(days_start=0,days_bef_core=730,source=hh );
%other(days_start=0,days_bef_core=730,source=hs );
%other(days_start=0,days_bef_core=730,source=dm );
%other(days_start=0,days_bef_core=730,source=op );
%other(days_start=0,days_bef_core=730,source=pb );


/****************************************************************************/
/* Macro to pull dx from claims lists, saves dx lists to int_data folder    */
/****************************************************************************/

%macro dx_time_range(range1=, range2=, days_bef_core=);

/*Process carrier medicare claims to pull out dx codes
Multiple lines per each BID*/
data pb_last_&range2._dx(keep=bid_hrs_19 core_year diag);
set sic_int.pb_meet_&days_bef_core.(keep=bid_hrs_19 core_year PDGNS_CD DGNS_CD1-DGNS_CD12 );
array dx PDGNS_CD DGNS_CD1-DGNS_CD12;
do over dx;
diag=dx ;
output;
end;
run;
/*check for and remove duplicates, note this doesn't remove blanks*/
proc sort data=pb_last_&range2._dx out=pb_last_&range2._dx2 nodupkey;
by bid_hrs_19 core_year diag;
run;


/*Process outpatient medicare claims to pull out dx codes
Dataset being created: op_last_&range2._dx2*/
data op_last_&range2._dx(keep=bid_hrs_19 core_year diag);
set sic_int.op_meet_&days_bef_core.(keep=bid_hrs_19 core_year PDGNS_CD DGNSCD01-DGNSCD25  );
array dx PDGNS_CD DGNSCD01-DGNSCD25 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=op_last_&range2._dx out=op_last_&range2._dx2 nodupkey;
by bid_hrs_19 core_year diag;
run;

/*Process medpar medicare claims to pull out dx codes
Dataset being created: mp_last_&range2._dx2*/
data mp_last_&range2._dx(keep=bid_hrs_19 core_year diag);
set sic_int.mp_meet3_&days_bef_core.(keep=bid_hrs_19 core_year AD_DGNS DGNS_CD01-DGNS_CD25 );
array dx AD_DGNS DGNS_CD01-DGNS_CD25 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=mp_last_&range2._dx out=mp_last_&range2._dx2 nodupkey;
by bid_hrs_19 core_year diag;
run;

/*Process dme medicare claims to pull out dx codes
Dataset being created: dm_last_&range2._dx2*/
data dm_last_&range2._dx(keep=bid_hrs_19 core_year diag);
set sic_int.dm_meet_&days_bef_core.(keep=bid_hrs_19 core_year PDGNS_CD DGNS_CD1-DGNS_CD12 );
array dx PDGNS_CD DGNS_CD1-DGNS_CD12 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=dm_last_&range2._dx out=dm_last_&range2._dx2 nodupkey;
by bid_hrs_19 core_year diag;
run;

/*Process hh medicare claims to pull out dx codes
Dataset being created: dm_last_&range2._dx2*/
data hh_last_&range2._dx(keep=bid_hrs_19 core_year diag);
set sic_int.hh_meet_&days_bef_core.(keep=bid_hrs_19 core_year PDGNS_CD DGNSCD01-DGNSCD25 );
array dx PDGNS_CD DGNSCD01-DGNSCD25 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=hh_last_&range2._dx out=hh_last_&range2._dx2 nodupkey;
by bid_hrs_19 core_year diag;
run;

/*Process hs medicare claims to pull out dx codes
Dataset being created: dm_last_&range2._dx2*/
data hs_last_&range2._dx(keep=bid_hrs_19 core_year diag);
set sic_int.hs_meet_&days_bef_core.(keep=bid_hrs_19 core_year PDGNS_CD DGNSCD01-DGNSCD25 );
array dx PDGNS_CD DGNSCD01-DGNSCD25 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=hs_last_&range2._dx out=hs_last_&range2._dx2 nodupkey;
by bid_hrs_19 core_year diag;
run;


/*set diag variable length = 7 chars since that's the max length from the mc claims
Need to do this because length varies across the different mc claim types*/
data hs_last_&range2._dx3;
length diag $7;
set hs_last_&range2._dx2;
run;
data hh_last_&range2._dx3;
length diag $7;
set hh_last_&range2._dx2;
run;
data mp_last_&range2._dx3;
length diag $7;
set mp_last_&range2._dx2;
run;
data dm_last_&range2._dx3;
length diag $7;
set dm_last_&range2._dx2;
run;
data op_last_&range2._dx3;
length diag $7;
set op_last_&range2._dx2;
run;
data pb_last_&range2._dx3;
length diag $7;
set pb_last_&range2._dx2;
run;


/*merge diagnoses from each claim type into single dataset*/
data dx_all_last_&range2.;
set hs_last_&range2._dx3
hh_last_&range2._dx3
mp_last_&range2._dx3
dm_last_&range2._dx3
op_last_&range2._dx3
pb_last_&range2._dx3;
run;
proc sort data=dx_all_last_&range2.(where=(diag~="")) out=sic_int.dx_&range1._&range2 nodupkey;
by bid_hrs_19 core_year diag;
run;

%mend;

/*1 and 2 years pre-interview: sic_int.dx_0_1yr, sic_int.dx_0_2yr */
%dx_time_range(range1=0, range2=1yr, days_bef_core=365);
%dx_time_range(range1=0, range2=2yr, days_bef_core=730);

H="Step 3 - Elixhauser comorbidities"
/****************************************************************************/
/* Rename variables macro                                                   */
/****************************************************************************/

%macro rename(lib,dsn,pre);
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "Before Renaming All Variables";
run;
proc sql noprint;
select nvar into :num_vars
from dictionary.tables
where libname="&LIB" and
memname="&DSN";
select distinct(name) into :var1-
:var%TRIM(%LEFT(&num_vars))
from dictionary.columns
where libname="&LIB" and
memname="&DSN";
quit;
run;
proc datasets library=&LIB;
modify &DSN;
rename
%do i=1 %to &num_vars;
&&var&i=&&var&i.._&pre 
%end;
;
quit;
run;
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "After Renaming All Variables";
run;
%mend rename;




/****************************************************************************/
/* Elixhauser comorbidities macro                                           */
/****************************************************************************/

%macro elixhauser(range1=, range2=);

data dx_31_comor;
set sic_int.dx_&range1._&range2(rename=(diag=dx_0));
dx=trim(left(dx_0));

if dx~="" then do;

comorbi_1=0;
comorbi_2=0;
comorbi_3=0;
comorbi_4=0;
comorbi_5=0;
comorbi_6=0;
comorbi_7=0;
comorbi_8=0;
comorbi_9=0;
comorbi_10=0;
comorbi_11=0;
comorbi_12=0;
comorbi_13=0;
comorbi_14=0;
comorbi_15=0;
comorbi_16=0;
comorbi_17=0;
comorbi_18=0;
comorbi_19=0;
comorbi_20=0;
comorbi_21=0;
comorbi_22=0;
comorbi_23=0;
comorbi_24=0;
comorbi_25=0;
comorbi_26=0;
comorbi_27=0;
comorbi_28=0;
comorbi_29=0;
comorbi_30=0;
*end of intialize of 30 binary variables;
*add dementia and CAD and ALS;
dementia=0;
cad=0;
als=0;

*do over dx;
	*Congestive Heart Failure;
	if (substr(dx,1,5)='39891' or
		substr(dx,1,5)='40211' or
		substr(dx,1,5)='40291' or
		substr(dx,1,5)='40411' or
		substr(dx,1,5)='40413' or
		substr(dx,1,5)='40491' or
		substr(dx,1,5)='40493' or
		substr(dx,1,3)='428') 
		and comorbi_1=0 
		then comorbi_1=1;*add one binary variables here.;
	*Cariac Arrhythmias;
	if (substr(dx,1,5)='42610' or
		substr(dx,1,5)='42611' or
		substr(dx,1,5)='42613' or
		substr(dx,1,4)='4262' or
		substr(dx,1,4)='4263' or
		substr(dx,1,4)='4264' or
		substr(dx,1,5)='42650' or
		substr(dx,1,5)='42651' or
		substr(dx,1,5)='42652' or
		substr(dx,1,5)='42653' or
		substr(dx,1,4)='4266' or
		substr(dx,1,4)='4267' or
		substr(dx,1,4)='4268' or
		substr(dx,1,4)='4270' or
		substr(dx,1,4)='4272' or
		substr(dx,1,5)='42731' or
		substr(dx,1,5)='42760' or
		substr(dx,1,4)='4279' or
		substr(dx,1,4)='7850' or
		substr(dx,1,4)='V450' or
		substr(dx,1,4)='V533')
			and comorbi_2=0 
		then comorbi_2=1;
	* Valvular Disease ;
	if (substr(dx,1,5)='09320' or
		substr(dx,1,5)='09321' or
		substr(dx,1,5)='09322' or
		substr(dx,1,5)='09323' or
		substr(dx,1,5)='09324' or
		substr(dx,1,3)='394' or
		substr(dx,1,3)='395' or
		substr(dx,1,3)='396' or
		substr(dx,1,4)='3970' or
		substr(dx,1,4)='3971' or
		substr(dx,1,4)='4240' or
		substr(dx,1,4)='4241' or
		substr(dx,1,4)='4242' or
		substr(dx,1,4)='4243' or
		substr(dx,1,4)='4244' or
		substr(dx,1,4)='4245' or
		substr(dx,1,4)='4246' or
		substr(dx,1,4)='4247' or
		substr(dx,1,4)='4248' or
		substr(dx,1,5)='42490' or
		substr(dx,1,5)='42491' or
		substr(dx,1,4)='7463' or
		substr(dx,1,4)='7464' or
		substr(dx,1,4)='7465' or
		substr(dx,1,4)='7466' or
		substr(dx,1,4)='V422' or
		substr(dx,1,5)='V433')
			and comorbi_3=0 
		then comorbi_3=1;
	*Pulmonary Circulation Disorders;
	if (substr(dx,1,3)='416' or
		substr(dx,1,4)='4179')
			and comorbi_4=0 
		then comorbi_4=1;
	*Peripheral Vascular Disorders;
	if (substr(dx,1,3)='440' or
		substr(dx,1,4)='4412' or
		substr(dx,1,4)='4414' or
		substr(dx,1,4)='4417' or
		substr(dx,1,4)='4419' or
		substr(dx,1,4)='4431' or
		substr(dx,1,4)='4432' or
		substr(dx,1,4)='4438' or
		substr(dx,1,4)='4439' or
		substr(dx,1,4)='4471' or
		substr(dx,1,4)='5571' or
		substr(dx,1,4)='5579' or
		substr(dx,1,4)='V434')
			and comorbi_5=0 
		then comorbi_5=1;
	*Hypertension;
	if ((substr(dx,1,4)='4011' or
		substr(dx,1,4)='4019')) or
	   ((substr(dx,1,5)='40210' or
		substr(dx,1,5)='40290' or
		substr(dx,1,5)='40410' or
		substr(dx,1,5)='40490' or
		substr(dx,1,5)='40511' or
		substr(dx,1,5)='40519' or
		substr(dx,1,5)='40591' or
		substr(dx,1,5)='40599')) 
			and comorbi_6=0 
		then comorbi_6=1;
	*Paralysis;	
	if (substr(dx,1,4)='3420' or
		substr(dx,1,5)='34210' or
		substr(dx,1,5)='34211' or
		substr(dx,1,5)='34212' or
		substr(dx,1,4)='3429' or
		substr(dx,1,3)='343' or
		substr(dx,1,3)='344')
			and comorbi_7=0 
		then comorbi_7=1;
	*Other Neurological Disorders;
	if (substr(dx,1,4)='3319' or
		substr(dx,1,4)='3320' or
		substr(dx,1,4)='3334' or
		substr(dx,1,4)='3335' or
		substr(dx,1,3)='334' or
		substr(dx,1,3)='335' or
		substr(dx,1,3)='340' or
		substr(dx,1,4)='3411' or
		substr(dx,1,4)='3418' or
		substr(dx,1,4)='3419' or
		substr(dx,1,5)='34500' or
		substr(dx,1,5)='34501' or
		substr(dx,1,5)='34510' or
		substr(dx,1,5)='34511' or
		substr(dx,1,4)='3454' or
		substr(dx,1,5)='34550' or
		substr(dx,1,5)='34551' or
		substr(dx,1,4)='3458' or
		substr(dx,1,5)='34590' or
		substr(dx,1,5)='34591' or
		substr(dx,1,4)='3481' or
		substr(dx,1,4)='3483' or
		substr(dx,1,4)='7803' or
		substr(dx,1,4)='7843') 
			and comorbi_8=0 
		then comorbi_8=1;	
	*Chronic Pulmonary Disease;
	if (substr(dx,1,3)='490' or
		substr(dx,1,3)='491' or
		substr(dx,1,3)='492' or
		substr(dx,1,4)='4930' or
		substr(dx,1,4)='4931' or
		substr(dx,1,4)='4932' or
		substr(dx,1,4)='4938' or
		substr(dx,1,5)='49390' or
		substr(dx,1,5)='49391' or
		substr(dx,1,3)='494' or
		substr(dx,1,3)='495' or
		substr(dx,1,3)='496' or
		substr(dx,1,3)='497' or
		substr(dx,1,3)='498' or
		substr(dx,1,3)='499' or
		substr(dx,1,3)='500' or
		substr(dx,1,3)='501' or
		substr(dx,1,3)='502' or
		substr(dx,1,3)='503' or
		substr(dx,1,3)='504' or
		substr(dx,1,3)='505' or
		substr(dx,1,4)='5064') 
			and comorbi_9=0 
		then comorbi_9=1;	
	*Diabetes, uncomplicated;
	if (substr(dx,1,4)='2500' or
		substr(dx,1,4)='2501' or
		substr(dx,1,4)='2502' or
		substr(dx,1,4)='2503') 
			and comorbi_10=0 
		then comorbi_10=1;
	*Diabetes, complicated;
	if (substr(dx,1,4)='2504' or
		substr(dx,1,4)='2505' or
		substr(dx,1,4)='2506' or
		substr(dx,1,4)='2507' or
		substr(dx,1,4)='2509') 
			and comorbi_11=0 
		then comorbi_11=1;
	*Hypothyroidism;
	if (substr(dx,1,3)='243' or
		substr(dx,1,4)='2440' or
		substr(dx,1,4)='2441' or
		substr(dx,1,4)='2442' or
		substr(dx,1,4)='2448' or
		substr(dx,1,4)='2449') 	
			and comorbi_12=0 
		then comorbi_12=1;
	*Renal Failure;
	if (substr(dx,1,5)='40311' or
		substr(dx,1,5)='40391' or
		substr(dx,1,5)='40412' or
		substr(dx,1,5)='40492' or
		substr(dx,1,3)='585' or
		substr(dx,1,3)='586' or
		substr(dx,1,4)='V420' or
		substr(dx,1,4)='V451' or
		substr(dx,1,4)='V560' or
		substr(dx,1,4)='V568') 
			and comorbi_13=0 
		then comorbi_13=1;
	*Liver Disease;
	if (substr(dx,1,5)='07032' or
		substr(dx,1,5)='07033' or
		substr(dx,1,5)='07054' or
		substr(dx,1,4)='4560' or
		substr(dx,1,4)='4561' or
		substr(dx,1,5)='45620' or
		substr(dx,1,5)='45621' or
		substr(dx,1,4)='5710' or
		substr(dx,1,4)='5712' or
		substr(dx,1,4)='5713' or
		substr(dx,1,4)='5714' or
		substr(dx,1,4)='5715' or
		substr(dx,1,4)='5716' or
		substr(dx,1,4)='5718' or
		substr(dx,1,4)='5719' or
		substr(dx,1,4)='5723' or
		substr(dx,1,4)='5728' or
		substr(dx,1,4)='V427') 
			and comorbi_14=0 
		then comorbi_14=1;
	*Peptic Ulcer Disease excluding bleeding;
	if (substr(dx,1,5)='53170' or
		substr(dx,1,5)='53190' or
		substr(dx,1,5)='53270' or
		substr(dx,1,5)='53290' or
		substr(dx,1,5)='53370' or
		substr(dx,1,5)='53390' or
		substr(dx,1,5)='53470' or
		substr(dx,1,5)='53490' or
		substr(dx,1,5)='V1271') 
			and comorbi_15=0 
		then comorbi_15=1;
	*AIDS;
	if (substr(dx,1,3)='042' or
		substr(dx,1,3)='043' or
		substr(dx,1,3)='044') 
			and comorbi_16=0 
		then comorbi_16=1;
	*Lymphoma;
	if (substr(dx,1,3)='200' or
		substr(dx,1,4)='201' or
		substr(dx,1,4)='2020' or
		substr(dx,1,4)='2021' or
		substr(dx,1,4)='2022' or
		substr(dx,1,4)='2023' or
		substr(dx,1,4)='2025' or
		substr(dx,1,4)='2026' or
		substr(dx,1,4)='2027' or
		substr(dx,1,4)='2028' or
		substr(dx,1,4)='2029' or
		substr(dx,1,4)='2030' or
		substr(dx,1,4)='2038' or
		substr(dx,1,4)='2386' or
		substr(dx,1,4)='2733' or
		substr(dx,1,4)='V1071' or
		substr(dx,1,4)='V1072' or
		substr(dx,1,4)='V1079')
			and comorbi_17=0 
		then comorbi_17=1;
	*Metastatic Cancer;
	if (substr(dx,1,3)='196' or
		substr(dx,1,3)='197' or
		substr(dx,1,3)='198' or
		substr(dx,1,4)='199') 
			and comorbi_18=0 
		then comorbi_18=1;	
	*Solid Tumor without Metastisis;
	if (substr(dx,1,2)='14' or
		substr(dx,1,2)='15' or
		substr(dx,1,2)='16' or
		substr(dx,1,3)='170' or
		substr(dx,1,3)='171' or
		substr(dx,1,3)='172' or
		substr(dx,1,3)='174' or
		substr(dx,1,3)='175' or
		substr(dx,1,3)='179' or
		substr(dx,1,2)='18' or
		substr(dx,1,3)='190' or
		substr(dx,1,3)='191' or
		substr(dx,1,3)='192' or
		substr(dx,1,3)='193' or
		substr(dx,1,3)='194' or
		substr(dx,1,3)='195' or
		substr(dx,1,3)='V10')
			and comorbi_19=0 
		then comorbi_19=1;
	*Rheumatoid Arthritis/Collagen Vascular Diseases;
	if (substr(dx,1,4)='7010' or
		substr(dx,1,3)='710' or
		substr(dx,1,3)='714' or
		substr(dx,1,3)='720' or
		substr(dx,1,3)='725') 
			and comorbi_20=0 
		then comorbi_20=1;
	*Coagulopathy;
	if (substr(dx,1,3)='286' or
		substr(dx,1,4)='2871' or
		substr(dx,1,4)='2873' or
		substr(dx,1,4)='2874' or
		substr(dx,1,4)='2875') 
			and comorbi_21=0 
		then comorbi_21=1;
	*Obesity;
	if (substr(dx,1,4)='2780')  
			and comorbi_22=0 
		then comorbi_22=1;
	*Weight Loss;
	if (substr(dx,1,3)='260' or
		substr(dx,1,3)='261' or
		substr(dx,1,3)='262' or
		substr(dx,1,3)='263') 
			and comorbi_23=0 
		then comorbi_23=1;	
	*Fluid and Electrolyte Disorders;
	if (substr(dx,1,3)='276') 
			and comorbi_24=0 
		then comorbi_24=1;
	*Blood Loss Anemia;
	if (substr(dx,1,4)='2800') 
			and comorbi_25=0 
		then comorbi_25=1;
	*Deficiency Anemias;
	if (substr(dx,1,4)='2801' or
		substr(dx,1,4)='2808' or
		substr(dx,1,4)='2809' or
		substr(dx,1,4)='2859') 
			and comorbi_26=0 
		then comorbi_26=1;
	*Alcohol Abuse;
	if (substr(dx,1,4)='2911' or
		substr(dx,1,4)='2912' or
		substr(dx,1,4)='2915' or
		substr(dx,1,4)='2918' or
		substr(dx,1,4)='2919' or
		substr(dx,1,4)='3039' or
		substr(dx,1,4)='3050' or
		substr(dx,1,4)='V113') 
			and comorbi_27=0 
		then comorbi_27=1;
	*Drug Abuse;
	if (substr(dx,1,4)='2920' or
		substr(dx,1,5)='29282' or
		substr(dx,1,5)='29283' or
		substr(dx,1,5)='29284' or
		substr(dx,1,5)='29289' or
		substr(dx,1,4)='2929' or
		substr(dx,1,3)='304' or
		substr(dx,1,4)='3052' or
		substr(dx,1,4)='3053' or
		substr(dx,1,4)='3054' or
		substr(dx,1,4)='3055' or
		substr(dx,1,4)='3056' or
		substr(dx,1,4)='3057' or
		substr(dx,1,4)='3058' or
		substr(dx,1,4)='3059')
			and comorbi_28=0 
		then comorbi_28=1;	
	*Psychoses;
	if (substr(dx,1,3)='295' or
		substr(dx,1,3)='296' or
		substr(dx,1,3)='297' or
		substr(dx,1,3)='298' or
		substr(dx,1,4)='2991') 
			and comorbi_29=0 
		then comorbi_29=1;
	*Depression;
	if (substr(dx,1,4)='3004' or
		substr(dx,1,5)='30112' or
		substr(dx,1,4)='3090' or
		substr(dx,1,4)='3091' or
		substr(dx,1,3)='311')
			and comorbi_30=0 
		then comorbi_30=1;

	*Dementia;
	if (substr(dx,1,4) in ('3310','3311','3312','2900','2901',
             '2902','2903','2912','2948','2949') or
		substr(dx,1,5) in ('29410','29411','29040','29041','29042','29043')) 
		and dementia=0 
          then dementia=1;

	*CAD coronary artery disease;
	if (substr(dx,1,4) in ('4140','4142','4143','4148','4149') or 
		substr(dx,1,3) in ('410','411','412','413') or
		substr(dx,1,5) in ('V4581','V4582'))
		and cad=0 
          then cad=1;

	*ALS Amyotrophic lateral sclerosis;
	if (substr(dx,1,5)='33520') and als=0 
		then als=1;

end;

run;

/*get count of each comorbidity for each id-core year combination*/
proc sql;
create table com_test1 as
select distinct BID_hrs_19,core_year,
sum(comorbi_1) as com_1,
sum(comorbi_2) as com_2,
sum(comorbi_3) as com_3,
sum(comorbi_4) as com_4,
sum(comorbi_5) as com_5,
sum(comorbi_6) as com_6,
sum(comorbi_7) as com_7,
sum(comorbi_8) as com_8,
sum(comorbi_9) as com_9,
sum(comorbi_10) as com_10,
sum(comorbi_11) as com_11,
sum(comorbi_12) as com_12,
sum(comorbi_13) as com_13,
sum(comorbi_14) as com_14,
sum(comorbi_15) as com_15,
sum(comorbi_16) as com_16,
sum(comorbi_17) as com_17,
sum(comorbi_18) as com_18,
sum(comorbi_19) as com_19,
sum(comorbi_20) as com_20,
sum(comorbi_21) as com_21,
sum(comorbi_22) as com_22,
sum(comorbi_23) as com_23,
sum(comorbi_24) as com_24,
sum(comorbi_25) as com_25,
sum(comorbi_26) as com_26,
sum(comorbi_27) as com_27,
sum(comorbi_28) as com_28,
sum(comorbi_29) as com_29,
sum(comorbi_30) as com_30,
sum(dementia) as dementia,
sum(cad) as cad,
sum(als) as als
from dx_31_comor
group by BID_hrs_19,core_year;
quit;

/*convert counts of diagnoses for each comorbidity to indicator variables*/ 
data comorbidity_1(keep=BID_hrs_19 core_year comorb_1-comorb_33 comorb_all);
set com_test1;
array list_com com_1-com_30 dementia cad als;
array list_com_bin comorb_1-comorb_30 comorb_31 comorb_32 comorb_33;

do over list_com;
  list_com_bin=0;

  if list_com>0 then do;
    list_com_bin=1;
   end;

end;
/*note this comorb_all count does not include CAD or ALS*/
comorb_all=comorb_1+comorb_2+comorb_3+comorb_4+comorb_5+comorb_6+comorb_7+comorb_8+comorb_9+comorb_10
+comorb_11+comorb_12+comorb_13+comorb_14+comorb_15+comorb_16+comorb_17+comorb_18+comorb_19+comorb_20
+comorb_21+comorb_22+comorb_23+comorb_24+comorb_25+comorb_26+comorb_27+comorb_28+comorb_29+comorb_30
+comorb_31;

run;

/*merge in to list of core ivw dates for those with xwalk id*/
proc sort data=comorbidity_1 nodupkey;
by BID_hrs_19 core_year;
run;

proc sql;
create table core_xwalk_elix_1(drop=BID_hrs_19 core_year2) as
select a.*,b.*
from sic_int.core_lmt_xwalk_2 a 
left join
comorbidity_1(rename=(core_year=core_year2)) b
on trim(left(a.BID_hrs))=trim(left(b.BID_hrs_19)) and a.core_year=b.core_year2;
quit;

data sic_int.elix_&range1._&range2;
set core_xwalk_elix_1 ;

label comorb_1 ="Congestive Heart Failure";
label comorb_2 ="Cariac Arrhythmias";
label comorb_3 ="Valvular Disease";
label comorb_4 ="Pulmonary Circulation Disorders";
label comorb_5 ="Peripheral Vascular Disorders";
label comorb_6 ="Hypertension";
label comorb_7 ="Paralysis";
label comorb_8 ="Other Neurological Disorders";
label comorb_9 ="Chronic Pulmonary Disease";
label comorb_10 ="Diabetes, uncomplicated";
label comorb_11 ="Diabetes, complicated";
label comorb_12 ="Hypothyroidism";
label comorb_13 ="Renal Failure";
label comorb_14 ="Liver Disease";
label comorb_15 ="Peptic Ulcer Disease excluding bleeding";
label comorb_16 ="AIDS";
label comorb_17 ="Lymphoma";
label comorb_18 ="Metastatic Cancer";
label comorb_19 ="Solid Tumor without Metastisis";
label comorb_20 ="Rheumatoid Arthritis/Collagen Vascular Diseases";
label comorb_21 ="Coagulopathy";
label comorb_22 ="Obesity";
label comorb_23 ="Weight Loss";
label comorb_24 ="Fluid and Electrolyte Disorders";
label comorb_25 ="Blood Loss Anemia";
label comorb_26 ="Deficiency Anemias";
label comorb_27 ="Alcohol Abuse";
label comorb_28 ="Drug Abuse";
label comorb_29 ="Psychoses";
label comorb_30 ="Depression";
label comorb_31 ="Dementia";
label comorb_32 ="CAD";
label comorb_33 ="ALS";
label comorb_all ="Count of Elix comorbidities";
run;

data test;
set sic_int.elix_&range1._&range2;
run;

%rename(WORK,TEST,&range1._&range2);

data sic_int.elix_&range1._&range2._2(rename =(bid_hrs_&range1._&range2=bid_hrs
core_year_&range1._&range2=core_year));
set test;
keep bid_hrs_&range1._&range2 comorb: core_year:;
run;
proc sort data=sic_int.elix_&range1._&range2._2;
by bid_hrs core_year;
run;

%mend;

/*Run for 1 year, 2 year datasets, resulting datasets are sic_int.elix_0_1yr_2, sic_int.elix_0_2yr_2*/
%elixhauser(range1=0, range2=1yr);
%elixhauser(range1=0, range2=2yr);

proc freq data=sic_int.elix_0_1yr_2;
table comorb:;
run;

proc freq data=sic_int.elix_0_2yr_2;
table comorb:;
run;

/****************************************************************************/
/* Macro to merge Elixhauser comorbidities with core full interviews        */
/****************************************************************************/
/*note resulting datasets have all interviews
If no xwalk id, then the the elix comorb are left as missing*/
%macro mergeel(range2=);
proc sql;
create table sic_int.core_ids_elix_&range2(drop=BID_hrs2 core_year2) as select a.*,
b.*
from 
sic_int.core_xwalk_ins /*sic_int.core_xwalk_1*/ a left join
sic_int.elix_0_&range2._2(rename=(BID_hrs=BID_hrs2 core_year=core_year2)) b
on trim(left(a.BID_hrs))=trim(left(b.BID_hrs2)) and a.core_year=b.core_year2;
quit;
%mend;

%mergeel(range2=1yr);
%mergeel(range2=2yr);

proc freq data=sic_int.core_ids_elix_1yr;
table comorb:;
run;

proc freq data=sic_int.core_ids_elix_2yr;
table comorb:;
run;


H="Step 4 - DW chronic conditions"
/*CMS Data Warehouse Chronic Conditions*/

/****************************************************************************/
/*First get the dx list into dot format using Stata*/
/****************************************************************************/

/*export to Stata*/
proc export data=sic_int.dx_0_1yr
outfile="E:\data\serious_ill\int_data\dx_0_1yr.dta" replace;
run;

proc export data=sic_int.dx_0_2yr
outfile="E:\data\serious_ill\int_data\dx_0_2yr.dta" replace;
run;

/****************************************************************************/
/****************************************************************************/
/*SWITCH TO STATA HERE*/
/****************************************************************************/
/****************************************************************************/

clear
set more off
set memory 500m
local datapath E:\data\serious_ill\int_data

use `datapath'\dx_0_1yr.dta,clear

// convert diagnosis codes to string variables, tostring diag,gen(icd9_c)
gen new=ltrim(diag)
icd9 check new,gen(icd9_c)
replace new="" if icd9_c>0 
// convert into dot format (ex 12.1 instead of 121)
icd9 clean new,dots 

replace diag=new
drop icd9_c new

save `datapath'\dx_0_1yr_2.dta,replace

clear all

use `datapath'\dx_0_2yr.dta,clear

// convert diagnosis codes to string variables, tostring diag,gen(icd9_c)
gen new=ltrim(diag)
icd9 check new,gen(icd9_c)
replace new="" if icd9_c>0 
// convert into dot format (ex 12.1 instead of 121)
icd9 clean new,dots 

replace diag=new
drop icd9_c new

save `datapath'\dx_0_2yr_2.dta,replace

/****************************************************************************/
/****************************************************************************/
/*SWITCH TO SAS HERE*/
/****************************************************************************/
/****************************************************************************/

proc import 
datafile="E:\data\serious_ill\int_data\dx_0_1yr_2.dta" 
out=dx_0_1yr_2 replace;
run;

proc import 
datafile="E:\data\serious_ill\int_data\dx_0_2yr_2.dta" 
out=dx_0_2yr_2 replace;
run;

/*bring in excel list of dx codes associated with each chronic condition*/
proc import 
datafile='E:\data\serious_ill\ref_data\chronic_21_condition_icd9.xls'
out=icd9_21_chronic dbms=xls replace;
run;

proc contents data=icd9_21_chronic;
run;

/*creates macro variables of each of the chronic conditions listing of dx codes*/
proc sql;
select icd_9 into :chronic_desc1-:chronic_desc21 from icd9_21_chronic;
quit;
%put &chronic_desc10;
%put &chronic_desc5;

/*******************************************************************/
/*Macro to generate chronic conditions indicators using dx codes   */
/*******************************************************************/

%macro cc(precore=);

data list_&precore._dx;
set dx_0_&precore._2;
array list CC_1_AMI
CC_2_ALZH
CC_3_ALZHDMTA
CC_4_ATRIALFB
CC_5_CATARACT
CC_6_CHRNKIDN
CC_7_COPD
CC_8_CHF
CC_9_DIABETES
CC_10_GLAUCOMA
CC_11_HIPFRAC
CC_12_ISCHMCHT
CC_13_DEPRESSN
CC_14_OSTEOPRS
CC_15_RA_OA
CC_16_STRKETIA
CC_17_CNCRBRST
CC_18_CNCRCLRC
CC_19_CNCRPRST
CC_20_CNCRLUNG
CC_21_CNCREndM;
do over list ;
list=0;
end;

diag_string=diag;

/* for dx codes that begin with numbers, process chronic cond variables*/
if anydigit(substr(trim(left(diag_string)),1,1))=1 then do;
diag=diag_string+0;

if diag in (&chronic_desc1) then CC_1_AMI=1;
if diag in (&chronic_desc2)  then CC_2_ALZH=1;
if diag in (&chronic_desc3)  then CC_3_ALZHDMTA=1;
if diag in (&chronic_desc4) then CC_4_ATRIALFB=1;
if diag in (&chronic_desc5) then CC_5_CATARACT=1;
if diag in (&chronic_desc6) then CC_6_CHRNKIDN=1;
if diag in (&chronic_desc7) then CC_7_COPD=1;
if diag in (&chronic_desc8) then CC_8_CHF=1;
if diag in (&chronic_desc9) then CC_9_DIABETES=1;
if diag in (&chronic_desc10) then CC_10_GLAUCOMA=1;
if diag in (&chronic_desc11) then CC_11_HIPFRAC=1;
if diag in (&chronic_desc12) then CC_12_ISCHMCHT=1;
if diag in (&chronic_desc13) then CC_13_DEPRESSN=1;
if diag in (&chronic_desc14) then CC_14_OSTEOPRS=1;
if diag in (&chronic_desc15) then CC_15_RA_OA=1;
if diag in (&chronic_desc16) then CC_16_STRKETIA=1;
if diag in (&chronic_desc17) then CC_17_CNCRBRST=1;
if diag in (&chronic_desc18) then CC_18_CNCRCLRC=1;
if diag in (&chronic_desc19) then CC_19_CNCRPRST=1;
if diag in (&chronic_desc20) then CC_20_CNCRLUNG=1;
if diag in (&chronic_desc21) then CC_21_CNCREndM=1;
end;

/*Process with dx codes that start with letters
Only two of them in the list*/
if anydigit(substr(trim(left(diag_string)),1,1))=0 then do;
if trim(left(diag_string)) in ("V431") then CC_5_CATARACT=1;
if trim(left(diag_string)) in ("V801") then CC_10_GLAUCOMA=1;
end;

run;


proc sql;
create table bid_dx_0_&precore.(rename=(bid_hrs_19=bid)) as
select distinct bid_hrs_19,core_year,
sum(CC_1_AMI) as CC_1_AMI,
sum(CC_2_ALZH) as CC_2_ALZH,
sum(CC_3_ALZHDMTA) as CC_3_ALZHDMTA,
sum(CC_4_ATRIALFB) as CC_4_ATRIALFB,
sum(CC_5_CATARACT) as CC_5_CATARACT,
sum(CC_6_CHRNKIDN) as CC_6_CHRNKIDN,
sum(CC_7_COPD) as CC_7_COPD,
sum(CC_8_CHF) as CC_8_CHF,
sum(CC_9_DIABETES) as CC_9_DIABETES,
sum(CC_10_GLAUCOMA) as CC_10_GLAUCOMA,
sum(CC_11_HIPFRAC) as CC_11_HIPFRAC,
sum(CC_12_ISCHMCHT) as CC_12_ISCHMCHT,
sum(CC_13_DEPRESSN) as CC_13_DEPRESSN,
sum(CC_14_OSTEOPRS) as CC_14_OSTEOPRS,
sum(CC_15_RA_OA) as CC_15_RA_OA,
sum(CC_16_STRKETIA) as CC_16_STRKETIA,
sum(CC_17_CNCRBRST) as CC_17_CNCRBRST,
sum(CC_18_CNCRCLRC) as CC_18_CNCRCLRC,
sum(CC_19_CNCRPRST) as CC_19_CNCRPRST,
sum(CC_20_CNCRLUNG) as CC_20_CNCRLUNG,
sum(CC_21_CNCREndM) as CC_21_CNCREndM

from list_&precore._dx group by bid_hrs_19,core_year;
quit;

data bid_dx_0_&precore.1;
set bid_dx_0_&precore.;


/*merge chronic conditions into interview list of bid's by bid*/
 proc sql;
 create table bid_dx_0_&precore.2(drop=bid) as select a.bid_hrs,b.*
 from sic_int.core_lmt_xwalk_2 a
 left join
 bid_dx_0_&precore. b 
 on trim(left(a.bid_hrs))=trim(left(b.bid))
and a.core_year=b.core_year;
 quit;

/*convert to chronic condition vars. to binary variables*/
 data bid_dx_0_&precore.3;
 set bid_dx_0_&precore.2;
 array list CC_1_AMI
CC_2_ALZH
CC_3_ALZHDMTA
CC_4_ATRIALFB
CC_5_CATARACT
CC_6_CHRNKIDN
CC_7_COPD
CC_8_CHF
CC_9_DIABETES
CC_10_GLAUCOMA
CC_11_HIPFRAC
CC_12_ISCHMCHT
CC_13_DEPRESSN
CC_14_OSTEOPRS
CC_15_RA_OA
CC_16_STRKETIA
CC_17_CNCRBRST
CC_18_CNCRCLRC
CC_19_CNCRPRST
CC_20_CNCRLUNG
CC_21_CNCREndM
;
do over list ;
if list>0 then list=1;
if list<=0 then list=0;
end;

/*create aggregated indicators*/
CC_AMI_isch=CC_1_AMI|CC_12_ISCHMCHT;
CC_alzheim=CC_2_ALZH|CC_3_ALZHDMTA;
CC_cncr_chronic=CC_17_CNCRBRST | CC_18_CNCRCLRC | CC_19_CNCRPRST | CC_20_CNCRLUNG | 
	CC_21_CNCREndM ;
run;

proc means;
var CC_1_AMI
CC_2_ALZH
CC_3_ALZHDMTA
CC_4_ATRIALFB
CC_5_CATARACT
CC_6_CHRNKIDN
CC_7_COPD
CC_8_CHF
CC_9_DIABETES
CC_10_GLAUCOMA
CC_11_HIPFRAC
CC_12_ISCHMCHT
CC_13_DEPRESSN
CC_14_OSTEOPRS
CC_15_RA_OA
CC_16_STRKETIA
CC_17_CNCRBRST
CC_18_CNCRCLRC
CC_19_CNCRPRST
CC_20_CNCRLUNG
CC_21_CNCREndM;
run;

/*run rename macro*/
data test;
set bid_dx_0_&precore.3;
run;

%rename(WORK,TEST,&precore.);

data sic_int.chronic_21_&precore.3_0;
set test;
bid_hrs=bid_hrs_&precore.;
drop bid_hrs_&precore.;
core_year=core_year_&precore.;
drop core_year_&precore.;
run;

%mend;

/*2 datasets are sic_int.chronic_21_1yr_0 and sic_int.chronic_21_2yr_0*/
%cc(precore=1yr);
%cc(precore=2yr);

proc freq data=sic_int.chronic_21_1yr3_0;
table cc_:;
run;

proc freq data=sic_int.chronic_21_2yr3_0;
table cc_:;
run;

proc contents data=sic_int.chronic_21_1yr3_0;
run;

/****************************************************************************/
/* Merge cc's with interivew, elix dataset                                  */
/****************************************************************************/
%macro mergecc(precore=);

proc sort data=sic_int.core_ids_elix_&precore.;
by bid_hrs core_year;
run;

proc sort data=sic_int.chronic_21_&precore.3_0;
by bid_hrs core_year;
run;


proc sql;
create table sic_int.core_ids_elix_cc_&precore.(drop=bid_hrs2 core_year2)
as select * from
sic_int.core_ids_elix_&precore. a
left join
sic_int.chronic_21_&precore.3_0(rename=(bid_hrs=bid_hrs2 core_year=core_year2)) b 
on (a.bid_hrs)=(b.bid_hrs2) and a.core_year=b.core_year2;
quit;

%mend;

%mergecc(precore=1yr);
%mergecc(precore=2yr);

/* the above file contains all interviews, if mc xwalk id
is missing then elixhauser comorbidities and cc's are missing

File names are:
sic_int.core_ids_elix_cc_1yr
sic_int.core_ids_elix_cc_2yr*/

proc contents data=sic_int.core_ids_elix_cc_1yr;
run;

proc contents data=sic_int.core_ids_elix_cc_2yr;
run;

proc freq data=sic_int.core_ids_elix_cc_1yr;
table cc_:;
run;

proc freq data=sic_int.core_ids_elix_cc_2yr;
table cc_:;
run;


H="Step 5 - Get additional utilization information from claims"
/****************************************************************************/
/*Get indicator of any hospital admission 6 months pre-core interview*/
/****************************************************************************/

/*pull list if ip claims from all medpar claims 6 months pre-interview*/
data ip_meet_183;
set sic_int.mp_meet3_183(where=(trim(left(SSLSSNF))~="N"));
run;

data ip_2;
set ip_meet_183;
if icarecnt=. then icarecnt=0; /*medpar intensive care day count*/
if CRNRYDAY=. then CRNRYDAY=0; /*medpar coronary day count*/
icu_days=icarecnt+CRNRYDAY;
run;

proc sort data=ip_2;
by BID_hrs_19 core_year;
run;

proc sql;
create table ip_3 as select distinct BID_hrs_19,core_year,
sum(icu_days) as icu_days_6m label="total icu days 6 mo pre core ivw",
count(*) as n_ip_admit_6m label="total n of hospital admit 6 mo pre core ivw",
sum(LOSCNT) as n_hospd_6m label="total hospital days 6 mo pre core ivw"
 from ip_2 group by BID_hrs_19,core_year;
quit;

/*merge the new variables with the overall dataset with ivws, elix and cc's
variables left blank if no ip claims*/
proc sql;
create table core_ids_criteria_1 as select a.*,b.icu_days_6m,
b.n_ip_admit_6m,b.n_hospd_6m 
from sic_int.core_ids_elix_cc_1yr a
left join
ip_3 b 
on trim(left(a.bid_hrs))=trim(left(b.bid_hrs_19)) and a.core_year=b.core_year;
quit;

/*******************************************************************************/
/*need to check this!! for now, if missing comorbidities, then set to 0
Probably want to change this once have ffs mc status*/
 data core_ids_1yr_criteria ;
 set core_ids_criteria_1 ;
 array list icu_days_6m n_ip_admit_6m n_hospd_6m;
 do over list;
 if list=. & comorb_1_0_1yr~=. then list=0;
 end;
 if n_ip_admit_6m=0 then ind_hosp_adm_6m=0;
 if n_ip_admit_6m>0 & n_ip_admit_6m~=. then ind_hosp_adm_6m=1;
 label ind_hosp_adm_6m="Indicator for any hospital admission 6m pre core";
 run;

 proc freq;
 table icu_days_6m n_ip_admit_6m n_hospd_6m ind_hosp_adm_6m /missprint;
 run;
/*******************************************************************************/

/****************************************************************************/
/*Get indicator of ESRD codes from the denominator file the year of the interview*/
/****************************************************************************/
proc sort data=medi.dn_2000_2010 out=dn_2000_20102  nodupkey;
by BID_HRS_19 year;
run;

/*pull ESRD status variable from dn file
for the core interview years*/
proc sql;
create table dn_core_y as select
a.*,b.ESRD_IND from 
core_ids_1yr_criteria a left join
dn_2000_20102 b
on trim(left(a.BID_hrs))=trim(left(b.BID_hrs_19))
and a.c_ivw_year=b.year;
quit;

proc freq;
table ESRD_IND /missprint;
run;

data core_ids_1yr_criteria_2;
set dn_core_y ;
if ESRD_IND='Y' then esrd_ind_n=1;
if ESRD_IND='0' then esrd_ind_n=0;
label esrd_ind_n="ESRD indicator from claims denominator file";
drop ESRD_IND;
run;

proc freq;
table esrd_ind_n /missprint;
run;


/****************************************************************************/
/*Get indicator of Home 02 use 12 months pre interview from DME claims*/
/****************************************************************************/
data oxygen_1(keep=BID_HRS_19 core_year home_oxygen);
set sic_int.dm_meet_365;
home_oxygen=0;
label home_oxygen="Home O2 from DME claims";
array list BETOS01:BETOS13;
do over list;
if list = 'D1C' then home_oxygen=1;
end;
run; 

proc sort data=oxygen_1;
by bid_hrs_19 core_year;
run;

proc freq;
table core_year /missprint;
run;

proc sql;
create table oxygen_2 as
select distinct bid_hrs_19,core_year,
sum(home_oxygen) as home_oxygen
from oxygen_1 group by bid_hrs_19,core_year;
quit;

/*convert to binary variables*/
data oxygen_3;
set oxygen_2 ;
if home_oxygen>0 then home_oxygen=1;
if home_oxygen<=0 then home_oxygen=0;
run;

proc freq;
table home_oxygen;
run;

/*merge Oxygen use variable into the overall dataset*/
proc sql;
create table core_ids_1yr_criteria_3 as select
a.*,b.home_oxygen
from core_ids_1yr_criteria_2 a left join
oxygen_3 b
on trim(left(a.BID_hrs))=trim(left(b.BID_hrs_19))
and a.core_year=b.core_year;
quit;

data sic_int.core_ids_1yr_criteria_4;
set core_ids_1yr_criteria_3;
if home_oxygen=. and comorb_1_0_1yr~=. then home_oxygen=0;
label home_oxygen="Home O2 use from DME claims 1yr pre ivw";
run;

proc freq;
table home_oxygen /missprint;
run;


H="Step 6 - HRS variable cleaning and check criteria"
data sic_int.core_ids_1yr_criteria_5;
set sic_int.core_ids_1yr_criteria_4 ;

/*create tics categorical variable*/
if tics_tot>8 then tics_cat=1 ;
if 5<=tics_tot<=8 then tics_cat=2 ;
if 0<=tics_tot<=4 then tics_cat=3 ;
label tics_cat="TICS 1=normal, 2=MCI, 3=Demented";

/*any elixhauser cancer dx*/
if comorb_17_0_1yr=1 | comorb_18_0_1yr=1 | comorb_19_0_1yr=1 then el_cancer_1yr=1;
if comorb_17_0_1yr=1 & comorb_18_0_1yr=1 & comorb_19_0_1yr=1 then el_cancer_1yr=1;

/*4 or more comorbidities*/
if comorb_all_0_1yr>3 then el_ge4_comorb_1yr=1;
if 0=<comorb_all_0_1yr<=3 then el_ge4_comorb_1yr=0;

cc_all_count_1yr = cc_1_ami_1yr + cc_2_alzh_1yr + cc_3_alzhdmta_1yr + 
cc_4_atrialfb_1yr + cc_5_cataract_1yr + cc_6_chrnkidn_1yr + 
cc_7_copd_1yr + cc_8_chf_1yr + cc_9_diabetes_1yr + cc_10_glaucoma_1yr + 
cc_11_hipfrac_1yr + cc_12_ischmcht_1yr + cc_13_depressn_1yr + 
cc_14_osteoprs_1yr + cc_15_ra_oa_1yr + cc_16_strketia_1yr + 
cc_17_cncrbrst_1yr + cc_18_cncrclrc_1yr + cc_19_cncrprst_1yr + 
cc_20_cncrlung_1yr + cc_21_cncrendm_1yr;

if cc_all_count_1yr >3 then cc_ge4_comorb_1yr=1;
if 0=<cc_all_count_1yr <=3 then cc_ge4_comorb_1yr=0;

/*cc's excluding cataract and glaucoma*/
cc_all_count_1yr_2 = cc_1_ami_1yr + cc_2_alzh_1yr + cc_3_alzhdmta_1yr + 
cc_4_atrialfb_1yr + /*cc_5_cataract_1yr +*/ cc_6_chrnkidn_1yr + 
cc_7_copd_1yr + cc_8_chf_1yr + cc_9_diabetes_1yr + /*cc_10_glaucoma_1yr +*/ 
cc_11_hipfrac_1yr + cc_12_ischmcht_1yr + cc_13_depressn_1yr + 
cc_14_osteoprs_1yr + cc_15_ra_oa_1yr + cc_16_strketia_1yr + 
cc_17_cncrbrst_1yr + cc_18_cncrclrc_1yr + cc_19_cncrprst_1yr + 
cc_20_cncrlung_1yr + cc_21_cncrendm_1yr;
label cc_all_count_1yr_2="Count of cc's, excludes cataract and glaucoma";

if cc_all_count_1yr_2>3 then cc2_ge4_comorb_1yr=1;
if 0=<cc_all_count_1yr_2<=3 then cc2_ge4_comorb_1yr=0;

label el_ge4_comorb_1yr="4+ Elixhauser comorbidities";
label cc_ge4_comorb_1yr="4+ DW Chronic Conditions";
label cc2_ge4_comorb_1yr="4+ DW Chronic Conditions, excl cataract and glaucoma";

/*create indicators for any indication of the serious medical illnesses across
variables (cc's elix hrs survey) */
if comorb_31_0_1yr=1 | CC_alzheim_1yr=1 | CC_2_ALZH_1yr=1 | CC_3_ALZHDMTA_1yr=1 | 
tics_cat=3 then dem_any_ind=1;
if if comorb_31_0_1yr=0 & CC_alzheim_1yr=0 & CC_2_ALZH_1yr=0 & CC_3_ALZHDMTA_1yr=0 & 
(tics_cat=1 | tics_cat=2) then dem_any_ind=1;
label dem_any_ind="Any indicator of Dementia 1yr";

if el_cancer_1yr=1 | CC_cncr_chronic_1yr=1 | cancer_hrs=1 then cancer_any_ind=1;
if el_cancer_1yr=0 & CC_cncr_chronic_1yr=0 & cancer_hrs=0 then cancer_any_ind=0;
label cancer_any_ind="Any indicator of Cancer 1yr";

if comorb_13_0_1yr=1 | esrd_ind_n=1 then esrd_any_ind=1;
if comorb_13_0_1yr=0 & esrd_ind_n=0 then esrd_any_ind=0;
label esrd_any_ind="Any indicator of ESRD 1yr";

if comorb_1_0_1yr=1 | CC_8_CHF_1yr=1 | chf_hrs=1 | chfadmit_hrs=1 then chf_any_ind=1;
if comorb_1_0_1yr=0 & CC_8_CHF_1yr=0 & chf_hrs=0 & chfadmit_hrs=0 then chf_any_ind=0;
label chf_any_ind="Any indicator of CHF 1yr";

if (comorb_9_0_1yr=1 | CC_7_COPD_1yr=1 | lung_hrs=1) & (lung_o2_hrs=1 | home_oxygen=1) then lung_02_ind=1;
if (comorb_9_0_1yr=0 & CC_7_COPD_1yr=0 & lung_hrs=0) & (lung_o2_hrs=0 & home_oxygen=0) then lung_02_ind=0;
label lung_02_ind="Any indicator of lung disease+home O2 use 1yr";

if (comorb_10_0_1yr=1 | comorb_11_0_1yr=1 | CC_9_DIABETES_1yr=1 | dm_hrs=1 ) & 
	(comorb_32_0_1yr=1 | CC_6_CHRNKIDN_1yr=1 | dm_kidn_hrs=1) then diab_compl_ind=1; 
if (comorb_10_0_1yr=0 & comorb_11_0_1yr=0 & CC_9_DIABETES_1yr=0 & dm_hrs=0 ) & 
	(comorb_32_0_1yr=0 & CC_6_CHRNKIDN_1yr=0 & dm_kidn_hrs=0) then diab_compl_ind=0; 
label diab_compl_ind="Any indicator of diabetes+CKD or CAD 1yr";

if comorb_14_0_1yr=1 then liver_any_ind=1;
if comorb_14_0_1yr=0 then liver_any_ind=0;
label liver_any_ind="Any indicator of Advanced liver disease/cirrhosis 1yr";

if comorb_16_0_1yr=1 then hiv_any_ind=1;
if comorb_16_0_1yr=0 then hiv_any_ind=0;
label hiv_any_ind "Any indicator of HIV with and AIDS defining illness 1yr";

if comorb_33_0_1yr=1 then als_any_ind=1;
if comorb_33_0_1yr=0 then als_any_ind=0;
label als_any_ind "Any indicator of ALS 1yr";

/*doesn't use the cc definition excluding cataract,glaucoma cc2_ge4_comorb_1yr */
if el_ge4_comorb_1yr=1 | cc_ge4_comorb_1yr=1 | comor_c_hrs=1 then multi_any_ind=1;
if el_ge4_comorb_1yr=0 & cc_ge4_comorb_1yr=0 & comor_c_hrs=0 then multi_any_ind=0;
label multi_any_ind="Any indicator of Multimorbidity 4+ chronic conditions 1yr";

if CC_11_HIPFRAC_1yr=1 | hip_frac_hrs=1 then hip_any_ind=1;
if CC_11_HIPFRAC_1yr=0 & hip_frac_hrs=0 then hip_any_ind=0;
label hip_any_ind="Any indicator of Hip fracture 1yr";

/*indicator for any serious medical illness*/
if dem_any_ind=1 | cancer_any_ind=1 | esrd_any_ind=1 | chf_any_ind=1 | lung_02_ind=1 | 
 diab_compl_ind=1 | liver_any_ind=1 | hiv_any_ind=1 | als_any_ind=1 | multi_any_ind=1 | hip_any_ind=1
 then ser_med_illness=1;
if dem_any_ind=0 & cancer_any_ind=0 & esrd_any_ind=0 & chf_any_ind=0 & lung_02_ind=0 & 
 diab_compl_ind=0 & liver_any_ind=0 & hiv_any_ind=0 & als_any_ind=0 & multi_any_ind=0 & hip_any_ind=0
 then ser_med_illness=0;
label ser_med_illness="Any indicator of serious medical illness 1yr";

run;

 ods rtf body="E:\data\serious_ill\logs\criteria_vars_before_coredate.rtf";

title "Number of unique people in full cohort 2000-2010";
proc sql;
select count(distinct id) from sic_int.core_ids_1yr_criteria_5
where core_year in (2000,2002,2004,2006,2008,2010);

title "Age 65+, With mc xwalk id";
select count(distinct id) from sic_int.core_ids_1yr_criteria_5
where age_ge_65=1 and xwalk_yes=1 and core_year in (2000,2002,2004,2006,2008,2010);

create table age_ge_65_mc as 
select * from sic_int.core_ids_1yr_criteria_5
where age_ge_65=1 and xwalk_yes=1 and core_year in (2000,2002,2004,2006,2008,2010);
quit;

title "Dementia variables - elix, cc, TICS";
proc freq data=age_ge_65_mc ;
table comorb_31_0_1yr CC_alzheim_1yr CC_2_ALZH_1yr CC_3_ALZHDMTA_1yr tics_cat /missprint;
run;

title "Cancer variables - elix, cc, interviews";
proc freq data=age_ge_65_mc ;
table comorb_17_0_1yr comorb_18_0_1yr comorb_19_0_1yr el_cancer_1yr
CC_17_CNCRBRST_1yr CC_18_CNCRCLRC_1yr CC_19_CNCRPRST_1yr CC_20_CNCRLUNG_1yr 
CC_21_CNCREndM_1yr CC_cncr_chronic_1yr
cancer_hrs cancer_treat_hrs
/missprint ;
run;

title "End Stage Renal Disease - elix, claims denominator file year of core ivw";
proc freq data=age_ge_65_mc ;
table comorb_13_0_1yr esrd_ind_n /missprint;
run;

title "CHF+Indicator of more advanced disease - elix, cc, HRS, needs work!";
proc freq data=age_ge_65_mc ;
table comorb_1_0_1yr CC_8_CHF_1yr heart_hrs chf_hrs chfadmit_hrs /missprint;
run;

title "COPD/Lung disease+home o2 - elix, cc, HRS, needs work!, Home O2 from DME claims";
proc freq data=age_ge_65_mc ;
table comorb_9_0_1yr CC_7_COPD_1yr lung_hrs lung_o2_hrs lung_lim_hrs home_oxygen /missprint;
run;

title "Diabetes + CKD or CAD - elix, cc, HRS";
proc freq data=age_ge_65_mc ;
table comorb_10_0_1yr comorb_11_0_1yr comorb_32_0_1yr 
CC_9_DIABETES_1yr CC_6_CHRNKIDN_1yr 
dm_hrs dm_ins_hrs dm_kidn_hrs  /missprint;
run;

title "Advanced liver disease/cirrhosis - elix (check dx codes included, maybe more?)";
proc freq data=age_ge_65_mc ;
table comorb_14_0_1yr  /missprint;
run;

title "HIV with and AIDS defining illness - elix (check dx codes included, maybe more?)";
proc freq data=age_ge_65_mc ;
table comorb_16_0_1yr  /missprint;
run;

title "ALS - just single dx code (check dx codes included, maybe more?)";
proc freq data=age_ge_65_mc ;
table comorb_33_0_1yr  /missprint;
run;

title "Multimorbidity 4+ chronic conditions, Elix, CC, HRS";
proc freq data=age_ge_65_mc ;
table el_ge4_comorb_1yr cc_ge4_comorb_1yr cc2_ge4_comorb_1yr comor_c_hrs /missprint;
run;

title "Hip fracture, CC, HRS";
proc freq data=age_ge_65_mc ;
table CC_11_HIPFRAC_1yr hip_frac_hrs /missprint;
run;

title "Any ADL help, HRS";
proc freq data=age_ge_65_mc ;
table adl_independent_core iadl_independent_core /missprint;
run;

title "Hospital admissions 6 months before core interview";
proc freq data=age_ge_65_mc  ;
table icu_days_6m n_ip_admit_6m n_hospd_6m ind_hosp_adm_6m /missprint;
run;

title "Number of R's that meet A)Any serious illness";
proc sql;
select count(distinct id) from age_ge_65_mc  
where ser_med_illness=1;

title "Number of R's that meet B)Any ADL help";
proc sql;
select count(distinct id) from age_ge_65_mc  
where adl_independent_core=1;

title "Number of R's that meet C)Any hospital admission 6m preceeding core interview";
proc sql;
select count(distinct id) from age_ge_65_mc  
where ind_hosp_adm_6m=1;

title "Number of R's that meet A)Any serious illness + B)ADL help";
proc sql;
select count(distinct id) from age_ge_65_mc  
where (ser_med_illness=1 and adl_independent_core=1) ;

title "Number of R's that meet A)Any serious illness + C)Hospital admission";
proc sql;
select count(distinct id) from age_ge_65_mc  
where (ser_med_illness=1 and ind_hosp_adm_6m=1) ;

ods rtf close; 



H="xxxx Additional checks"
proc freq data=bid_dx_0_1yr;
table cc_1_ami  /missprint;
run;

proc freq data=bid_dx_0_1yr2;
table cc_1_ami  /missprint;
run;

proc freq data=sic_int.core_ids_elix_1yr;
table comorb:;
run;

proc sql;
select count(distinct cats(BID_HRS_19,core_year)) from sic_int.dx_0_1yr;
quit;



H="xxxxAdditional variables from claims"
/*********************************************************/
/******* Any admission to the ICU                *********/
/*********************************************************/
/*Comes from medpar claims
Code below from Melissa's hospice project, need to adapt
for the HRS linked MC claims*/

proc freq data=medpar2;
table ICU_IND_CD /missprint;
run;

/*create indicator for ICU and/or ED use during stay
ICUED=0 - no icu or ed use
=1 ED only
=2 ICU only
=3 ICU and ED*/
data medpar3;
	set medpar2;
	if ICU_IND_CD ~= . or INTNSV_CARE_DAY_CNT>0 then ICU = 1;
	if ICU_IND_CD = . and INTNSV_CARE_DAY_CNT=0 then ICU = 0;
	if SS_LS_SNF_IND_CD ~= 'N';
	ED = 0;
	if ER_CHRG_AMT > 0 then ED = 1;
	if ICU = 1 and ED = 1 then ICUED = 3;
	if ICU = 1 and ED = 0 then ICUED = 2;
	if ICU = 0 and ED = 1 then ICUED = 1;
	if ICU = 0 and ED = 0 then ICUED = 0;
	drop icu ed;
run;