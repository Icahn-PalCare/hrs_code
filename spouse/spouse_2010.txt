= V4 Outline MultiLine NoSorting TabWidth=30

H="Spouse outcomes project"
Use the HRS datasets already cleaned (using HRS_Processing.txt sas/stata code)

hrs_cln.core_00_to_10.sas7bdat - core, with observation for each core interview, includes
net worth data, TICS score and interview date from restricted dataset

hrs_cln.exit_02_to_10_dt.sas7bdat - exit dataset with interview date added from restricted dataset

hrs_cln.restricted_v2010.sas7bdat - restricted dataset

Steps are:
1. Add r's medicare xwalk to r's exit interview dataset
2. Merge restricted info to r's exit data
3. Get Spouse id from Rand and get S's mc xwalk id
4. Merge in the following:
	r's core n1 and n2 interviews
	s's core n1, n2, p1 interviews
	s's exit and restricted information
5. Medicare FFS determination based on 6 months pre-r's death date
6. Use claims to get additional medicare usage data 
	(LOS, Elixhauser comorbidities, chronic conditions)
7. Merge in regional data
8. Define sample based on interviews, Medicare coverage, spouse interviews



H="Merge 2010 exit, restricted and mc xwalk ids to get decedent dataset"
/*
Create respondant dataset with exit, restricted HRS and medicare xwalk

Resulting dataset is:
spo_int.exit_restricted_02_to_10_v1
*/

/*Set libnames for the project*/
libname hrs_cln 'E:\data\hrs_cleaned'; /*(contains exit, restricted, and core ivw's)*/
libname spo_int 'E:\data\spouse\int_data';
libname xwalk 'E:\data\cms_DUA_25000_2010';
libname rand 'E:\data\hrs_public_2010\rand2010\data';
libname medi 'E:\data\cms_DUA_25000_2010';

/*******************************************************************/
/*******************************************************************/
/*  Bring medicare xwalk id to exit interview dataset              */
/*******************************************************************/
/*******************************************************************/

proc contents data=hrs_cln.exit_02_to_10_dt(keep=id);
run;

data exit_1;
set hrs_cln.exit_02_to_10_dt;
run;

/*just keep cleaned variables from exit interview*/
data exit;
set exit_1(keep=ID EXIT_YEAR PROXY_EXIT FEMALE MARITAL MARRIED MARITAL_SEP MARITAL_DIV MARITAL_WID MARITAL_NEV
MARITAL_SD MARITAL_MISSING MEDICARE MEDICAREB MEDICAID CHAMPUS HMO MEDIGAP CATINSUR NHRES
HOSPICE FREQRELG CHILD GCHIL ALLCHIL RESCHIL RESCHIL_D RESSPOUSE HHM LIVEALONE LOCATION LOC_HOSP
ICU VENT DIALYSIS DEC_ALL DEC_LIM DEC_WHLD DEC_COMF DEC_CAT DEXP EOLDEC CAPACITY DURATION ADAPP
ADPROB DECMAKER LWILL LW_ALL LW_LIM LW_WHLD LW_COMF LW_CAT HCP DISCUSS ADVDIR EOLPLAN
ADL_BEDBOUND DAYS_BED_ILL ADL_DR ADL_WK ADL_BH ADL_E ADL_TX ADL_T ADL_INDEX ADL_CAT ADL_INDEPENDENT
ADL_PARTIAL ADL_SEVERE IADL_MP IADL_GR IADL_PH IADL_RX IADL_M IADL_IND IADL_CAT IADL_INDEPENDENT
IADL_PARTIAL IADL_SEVERE ADL_SP_HELPER ADL_OTH_HELPER IADL_SP_HELPER IADL_OTH_HELPER adl_helper_count iadl_helper_count adl_helper_1-adl_helper_7 iadl_helper_1-iadl_helper_6 HH_WORKER CANCER_HRS LUNG_HRS HEART_HRS CHF_HRS STROKE_HRS MEMORY_HRS FALLS_HRS
INCONT_HRS PAIN_HRS HTN_HRS DM_HRS PSYCH_HRS ARTH_HRS COMOR_IN_HRS COMOR_C_HRS 
nhres_2yr_exit nh_stays_exit nh_nights_exit nh_ins_exit e_ivw_day e_ivw_month e_ivw_year 
e_ivw_date e_ivw_day_imp) ;
run;


/*HRS - CMS 2010 crosswalk initial processing 
xwalk file: cmsxref2010.sas7bdat
*/

data crosswalk_1;
set xwalk.cmsxref2010;
keep bid_hrs_19 hhid pn;
run;

/*get 2 variables bid_hrs = claims id, id=HRS id*/
data crosswalk_2;
set crosswalk_1;
bid_hrs=bid_hrs_19;
id=trim(hhid)||trim(pn);
drop hhid pn;
drop bid_hrs_19;
run;

proc sort data= crosswalk_2;
by bid_hrs;
run;

proc sort data=exit_1;
by id;
run;

/*bring in xwalk id to exit interview dataset*/
proc sql;
create table exit_xwalk as select
a.*,b.bid_hrs from
exit a
left join
crosswalk_2 b
on a.id=b.id;
quit;

/*check for missing xwalk ids
913 r's with exit interviews are missing xwalk ids*/
data check1;
set exit_xwalk ;
if bid_hrs ='';
run;

/*create indicator for having xwalk id*/
data exit_xwalk_1;
set exit_xwalk;
xwalk_yes=.;
if bid_hrs ='' then xwalk_yes=0;
if bid_hrs~='' then xwalk_yes=1;
run;

proc freq;
table xwalk_yes*exit_year /missprint;
run;

/*keep a version before renaming so can use it later to get spouse exit*/
data exit_xwalk_2;
set exit_xwalk_1;
run;

/*******************************************************************/
/*******************************************************************/
/* Rename variables with r_ prefix and _x suffix for exit dataset  */
/*******************************************************************/
/*******************************************************************/
*options macrogen mprint mlogic;
%macro rename2(lib,dsn,pre,first);
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "Before Renaming All Variables";
run;
proc sql noprint;
select nvar into :num_vars
from dictionary.tables
where libname="&LIB" and
memname="&DSN";
select distinct(name) into :var1-
:var%TRIM(%LEFT(&num_vars))
from dictionary.columns
where libname="&LIB" and
memname="&DSN" ;
quit;
run;
proc datasets library=&LIB;
modify &DSN;
rename
%do i=1 %to &num_vars;

&&var&i=&first.&&var&i.&&pre.
%end;
;
quit;
run;
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "After Renaming All Variables";
run;
%mend ;
%rename2(WORK,EXIT_XWALK_2,_x,r_);

data exit_xwalk_3;
set exit_xwalk_2;
rename r_id_x=r_id;
rename r_bid_hrs_x=r_BID_hrs;
rename r_xwalk_yes_x=r_xwalk_yes;
run;

proc print data=exit_xwalk_3(keep=r_id r_BID_hrs obs=10);
run;
proc sort data=exit_xwalk_3;
by r_id;
run;

/*******************************************************************/
/*******************************************************************/
/*  Merge the exit w/ mc xwalk with the restricted dataset         */
/*******************************************************************/
/*******************************************************************/

proc contents data=hrs_cln.restricted_v2010(keep=id);
run;

data restricted;
set hrs_cln.restricted_v2010;
run;

proc sort data=exit_xwalk_3 nodupkey;
by r_id;
run;

/*replace id with character id so restricted dataset can be merged in
to the exit dataset*/
data restricted_2;
set restricted;
length id_new $9 hhid $6 pn $3;
id_new=hhid||pn;
drop id;
rename id_new=id;
run;

/*get restricted dataset that is just decedents*/
proc sql;
create table restricted_r as select * from
restricted_2 where id in (select r_id from exit_xwalk_3);
quit;


/*rename variables in restricted dataset with r_ prefix and _e suffix*/
%rename2(WORK,RESTRICTED_R,_e,r_);

data restricted_r3;
set restricted_r;
rename r_id_e=r_id;
run;
proc print data=restricted_r3(keep=r_id obs=10);
run;
proc sort data=restricted_r3 nodupkey;
by r_id;
run;

/*this dataset = 6814 decedents from 2002 - 2010 exit interviews*/
proc sql;
create table exit_restricted_02_to_10(drop=r_id2) as 
select *
from  exit_xwalk_3 a
left join
restricted_r3(rename=(r_id=r_id2)) b
on a.r_id=b.r_id2;
quit;

/*this dataset = 6814 decedents from 2002 - 2010 exit interviews*/
data spo_int.exit_restricted_02_to_10_v1;
set exit_restricted_02_to_10;
if r_id<0 or r_id=. then delete;
run;

proc freq;
table r_CAUSE_DEATH_12_N_e;
run;

/*there are a handful of observations where the death year
is several years before the exit interview year*/
data death_year;
set spo_int.exit_restricted_02_to_10_v1;
r_death_year=year(r_death_date_e);
run;

proc freq;
table r_death_year*r_EXIT_YEAR_x /missprint;
run;


H="Get spouse id from Rand spouse mc xwalk id"
/*Gets spouse id for each decedent from rand xwave file
Get spouse medicare xwalk id from xwalk file */

libname spo_int 'E:\data\spouse\int_data';
libname rand 'E:\data\hrs_public_2010\rand2010\data';
*libname rand 'C:\HRS\rand2010\data';


/**********************************************************/
/******* Get spouse id from rand                  *********/
/**********************************************************/
/*pull each wave spouse id from rand xwave data file
wave 5 = 2000
wave 6 = 2002 ... wave 10 = 2010
*/
options fmterr=no;
data sp_rand;
set rand.rndhrs_m(keep=hhid pn s1HHIDPN s2HHIDPN S3HHIDPN S4HHIDPN S5HHIDPN s6HHIDPN s7HHIDPN s8HHIDPN s9HHIDPN s10HHIDPN);

id=hhid*1000+pn;
keep id s1HHIDPN s2HHIDPN S3HHIDPN S4HHIDPN S5HHIDPN s6HHIDPN s7HHIDPN s8HHIDPN s9HHIDPN s10HHIDPN;
label id="HRS resp ID";
run;

/*need to get id from decedent dataset into numeric format to match
that in rand so can merge*/
data exit_restr;
set spo_int.exit_restricted_02_to_10_v1;
id_num=r_id+0;
label id_num="HRS resp ID";
run;

/*merge all wave spouse ids to exit dataset*/
proc sql;
create table exit_02_to_10_sp_1(drop=id) as
select * from 
exit_restr a
left join 
sp_rand b
 on a.id_num=b.id;
quit;

/*assign the spouse id as that reported in the the core interview
in the 2 years prior to exit interview
first check if spouse id listed in exit year
if no exit year, then try core the n1 core year
use x = wave number (1998=wave 1, 2000=wave2, etc) to get the 
specific wave spouse id b/c rand is a xwave dataset*/
data exit_02_to_10_sp_2;
set exit_02_to_10_sp_1;
x=(r_EXIT_YEAR_x-1992)/2+1;
sp_id_var=('s'||trim(left(x))||"HHIDPN");
*the spouse id at the exit interview year,or n1 core;
sp_id = vvaluex('s'||trim(left(x))||"HHIDPN")+0 ;
if sp_id =. then sp_id = vvaluex('s'||trim(left(x-1))||"HHIDPN")+0 ;
label sp_id ="spouse hrs id from resp's exit year or the wave before exit year";
run;


/**********************************************************/
/******* Get spouse medicare id from xwalk file   *********/
/**********************************************************/
libname xwalk 'E:\data\cms_DUA_25000_2010';

data crosswalk_1_sp;
set xwalk.cmsxref2010;
keep bid_hrs_19 hhid pn;
run;

/*get 2 variables bid_hrs = claims id, id=HRS id*/
data crosswalk_2_sp;
set crosswalk_1_sp;
bid_hrs=bid_hrs_19;
id=trim(hhid)||trim(pn);
drop hhid pn;
drop bid_hrs_19;
run;

/*convert id from xwalk to numeric variable type*/
data crosswalk_3_sp;
set crosswalk_2_sp;
id_num=input(id,9.);
label id_num="HRS hhidpn";
drop id;
rename id_num=id;
run;

proc sort data=crosswalk_3_sp nodupkey;
by id;
run;

/* bring in mc xwalk id if in xwalk file
sp_bid = . if missing from xwalk file */
proc sql;
create table exit_02_to_10_sp_3 as
select a.*,b.bid_hrs as sp_bid label="spouse medicare id " from 
exit_02_to_10_sp_2 a
left join 
crosswalk_3_sp b
on a.sp_id=b.id;
quit;

data spo_int.exit_restricted_02_to_10_sp;
set exit_02_to_10_sp_3(drop=r_id s1hhidpn s2hhidpn s3hhidpn 
s4hhidpn s5hhidpn s6hhidpn s7hhidpn s8hhidpn s9hhidpn s10hhidpn
x sp_id_var ) ;
rename id_num = r_id; /*numeric id*/
if sp_bid='' then s_xwalk_yes=0;
if sp_bid~='' then s_xwalk_yes=1;
label s_xwalk_yes="Spouse has Medicare xwalk id";
run;

proc freq; table s_xwalk_yes; run;





H="xxx - Add r's n1 core and s's p1 core interviews to dataset"

/*******************************************************************/
/*******************************************************************/
/*  get the negative one core variables for the spouse             */
/*******************************************************************/
/*******************************************************************/



/*get list of all spouse core interviews before r's death date*/
proc sql;
create table s_n1_core_before_death(drop=id)
as select a.id_new as r_id,b.*,a.sp_id
 from spo_int.exit_restricted_02_to_10_sp(where=(sp_id>0)) a 
 inner join
core_00_to_10_idnum b
  on a.sp_id=b.id and a.death_date>b.c_ivw_date;
  quit;

proc sort data=s_n1_core_before_death ;
by sp_id c_ivw_date;
run;

/*just keep the n1 core interview for the spouse
**2561 interviews*/
data sp_core_n1;
set s_n1_core_before_death;
by sp_id c_ivw_date;
if last.sp_id;
run;

proc freq;
table core_year;
run;

/*list of spouses with no n1 core per the list above*/
proc sql;
create table temp1 as select a.*,b.sp_id as sp_id2
from s_n1_core_before_death a left join
sp_core_n1 b
on a.sp_id=b.sp_id and a.core_year=b.core_year;
quit;
data temp2;
set temp1;
if sp_id2=.;
run;

proc sort data=temp2 ;
by sp_id c_ivw_date;
run;

/*look at n2 core from spouse where n1 core was present, just to get
an idea of where n2 cores are available **1953 n2 cores ??*/
data sp_core_n2;
set temp2;
by sp_id c_ivw_date;
if last.sp_id;
run;
proc freq;
table core_year;
run;
/*******************************************************************/
/*******************************************************************/
/*  Get the p1 core interview for the spouse                       */
/*******************************************************************/
/*******************************************************************/

/*get list of all spouse core interviews post r's death*/
proc sql;
create table p1_core_after_death(drop=id)
as select a.id_new as r_id,b.*,a.sp_id
 from spo_int.exit_restricted_02_to_10_sp(where=(sp_id>0)) a 
 inner join
core_00_to_10_idnum b
  on a.sp_id=b.id and a.death_date<b.c_ivw_date;
  quit;

proc sort data=p1_core_after_death ;
by sp_id c_ivw_date;
run;

/*just keep first interview after r's death
**2274 interviews*/
data sp_core_p1;
set p1_core_after_death;
by sp_id c_ivw_date;
if first.sp_id;
run;

/*******************************************************************/
/*******************************************************************/
/*  rename variables with s_ and r_ prefixes and _n1 _p1 suffix    */
/*******************************************************************/
/*******************************************************************/

*options macrogen mprint mlogic;
%macro rename2(lib,dsn,pre,first);
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "Before Renaming All Variables";
run;
proc sql noprint;
select nvar into :num_vars
from dictionary.tables
where libname="&LIB" and
memname="&DSN";
select distinct(name) into :var1-
:var%TRIM(%LEFT(&num_vars))
from dictionary.columns
where libname="&LIB" and
memname="&DSN" ;
quit;
run;
proc datasets library=&LIB;
modify &DSN;
rename
%do i=1 %to &num_vars;

&&var&i=&first.&&var&i.&&pre.
%end;
;
quit;
run;
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "After Renaming All Variables";
run;
%mend ;
%rename2(WORK,RESP_CORE_N1,_n1,r_);
%rename2(WORK,SP_CORE_P1,_p1,s_);
%rename2(WORK,SP_CORE_N1,_n1,s_);
*%rename2(WORK,RESP_CORE_N2,_n2,r_);
*%rename2(WORK,SP_CORE_N2,_n2,s_);

/*******************************************************************/
/*******************************************************************/
/*  Merge s and r interviews into singlet dataset                  */
/*******************************************************************/
/*******************************************************************/

/*prepare resp n1 core for merge*/
data RESP_CORE_N1;
set RESP_CORE_N1;
r_id=r_r_id_n1;
run;
proc print data=RESP_CORE_N1(keep=r_id obs=10);
run;
proc sort data=RESP_CORE_N1;
by r_id;
run;

/*prepare spouse core n1 for merge*/
data SP_CORE_N1;
set SP_CORE_N1;
sp_id=s_sp_id_n1;
r_id=s_r_id_n1;
run;
proc print data=SP_CORE_N1(keep=r_id sp_id obs=10);
run;
proc sort data=SP_CORE_n1;
by r_id;
run;

/*prepare spouse p1 core for merge*/
data SP_CORE_P1;
set SP_CORE_P1;
sp_id=s_sp_id_P1;
r_id=s_r_id_p1;
run;
proc print data=SP_CORE_p1(keep=r_id sp_id obs=10);
run;
proc sort data=SP_CORE_p1;
by r_id;
run;

/*merge the datasets by respondant id*/
data spo_int.r_sp_core_n1_p1;
merge RESP_CORE_N1 SP_CORE_N1 SP_CORE_P1;
by r_id;
run;


/*******************************************************************/
/*******************************************************************/
/*  Bring core interviews into decedent's restr and exit data      */
/*******************************************************************/
/*******************************************************************/

/*Note this should be updated when do final dataset to bring
in the spouses restricted information and also add prefixes to
variable names from restricted and exit*/

proc sql;
create table spo_int.exit_rest_r_s_core_n1_p1
 as select * from
spo_int.exit_restricted_02_to_10_sp a 
left join 
spo_int.r_sp_core_n1_p1 b
on a.id_new=b.r_id;
quit;






H="Get r's core interviews"
/*Get r's n1 and n2 core interviews*/

libname hrs_cln 'E:\data\hrs_cleaned';
libname spo_int 'E:\data\spouse\int_data';


/*******************************************************************/
/*******************************************************************/
/*  get the negative one core variables for the respondent         */
/*******************************************************************/
/*******************************************************************/

/*convert the id from the core dataset to a numeric variable*/
data core_00_to_10_idnum;
set hrs_cln.core_00_to_10;
id_num=input(id,9.);
label id_num="HRS hhidpn";
drop id;
rename id_num=id;
run;


/*list of all core interviews before death date*/
proc sql;
create table r_n1_core_before_death(drop=id)
as select b.*,b.id as r_id label="respondent's id"
 from spo_int.exit_restricted_02_to_10_sp a 
 inner join
core_00_to_10_idnum b
  on a.r_id=b.id and a.r_death_date_e>b.c_ivw_date;
  quit;

proc sort data=r_n1_core_before_death ;
by r_id c_ivw_date;
run;

/*keep only the n1 core interview
6509 interviews identified
of these, 143 are in 1998 so will be dropped because no n2 core*/
data resp_core_n1;
set r_n1_core_before_death;
by r_id c_ivw_date;
if last.r_id;
run;
proc freq;
table core_year;
run;

/*******************************************************************/
/*******************************************************************/
/*  get the negative 2 core variables for the respondent         */
/*******************************************************************/
/*******************************************************************/
/*list of all core interviews before n1 interview*/
proc sql;
create table r_n2_core_before_death(drop=id)
as select b.*,b.id as r_id label="respondent's id"
 from resp_core_n1 a 
 inner join
core_00_to_10_idnum b
  on a.r_id=b.id and a.c_ivw_date>b.c_ivw_date;
  quit;

proc sort data=r_n2_core_before_death ;
by r_id c_ivw_date;
run;

/*keep only the n2 core interview
6222 interviews identified*/
data resp_core_n2;
set r_n2_core_before_death;
by r_id c_ivw_date;
if last.r_id;
run;
proc freq;
table core_year;
run;

/*******************************************************************/
/*******************************************************************/
/*  get the negative 3 core education variable for the respondent   */
/*******************************************************************/
/*******************************************************************/
/*need to do this since education is only asked during r's
first core interview and only backfilled for an overall education
level through 2004*/
proc sql;
create table r_n3_core_before_death
as select b.educ,b.c_ivw_date,b.core_year,b.id as r_id label="respondent's id"
 from resp_core_n2 a 
 inner join
core_00_to_10_idnum b
  on a.r_id=b.id and a.c_ivw_date>b.c_ivw_date;
  quit;

proc sort data=r_n3_core_before_death ;
by r_id c_ivw_date;
run;

/*keep only the n3 core interview
4692 interviews identified*/
data resp_core_n3;
set r_n3_core_before_death;
by r_id c_ivw_date;
if last.r_id;
run;
proc freq;
table core_year;
run;



H="Get s's core, restricted and exit interviews"
/*Get spouse's n1, n2, and p1 core interviews
and s's exit interview and restricted data*/

/*******************************************************************/
/*******************************************************************/
/******         Spouse n1 interview                         ********/ 
/*******************************************************************/
/*******************************************************************/

/*get list of all spouse core interviews before r's death date*/
proc sql;
create table s_n1_core_before_death(drop=id)
as select b.*,a.sp_id,a.r_id
 from spo_int.exit_restricted_02_to_10_sp(where=(sp_id>0)) a 
 inner join
core_00_to_10_idnum b
  on a.sp_id=b.id and a.r_death_date_e>b.c_ivw_date;
  quit;

proc sort data=s_n1_core_before_death ;
by sp_id c_ivw_date;
run;

/*just keep the n1 core interview for the spouse
**2565 interviews*/
data sp_core_n1;
set s_n1_core_before_death;
by sp_id c_ivw_date;
if last.sp_id;
run;

proc freq;
table core_year;
run;

/*******************************************************************/
/*******************************************************************/
/******         Spouse n2 interview                         ********/ 
/*******************************************************************/
/*******************************************************************/
proc sql;
create table s_n2_core_before_death(drop=id)
as select b.*,a.sp_id,a.r_id
 from sp_core_n1 a 
 inner join
core_00_to_10_idnum b
  on a.sp_id=b.id and a.c_ivw_date>b.c_ivw_date;
  quit;

proc sort data=s_n2_core_before_death ;
by sp_id c_ivw_date;
run;

/*just keep the n2 core interview for the spouse
**2506 interviews*/
data sp_core_n2;
set s_n2_core_before_death;
by sp_id c_ivw_date;
if last.sp_id;
run;

proc freq;
table core_year;
run;

/*******************************************************************/
/*******************************************************************/
/*  get the negative 3 core education variable for the spouse   */
/*******************************************************************/
/*******************************************************************/
/*need to do this since education is only asked during s's
first core interview and only backfilled for an overall education
level through 2004*/
proc sql;
create table s_n3_core_before_death
as select b.educ,b.c_ivw_date,b.core_year,a.sp_id,a.r_id
 from sp_core_n2 a 
 inner join
core_00_to_10_idnum b
  on a.sp_id=b.id and a.c_ivw_date>b.c_ivw_date;
  quit;

proc sort data=s_n3_core_before_death ;
by sp_id c_ivw_date;
run;

/*keep only the n3 core interview
1878 interviews identified*/
data sp_core_n3;
set s_n3_core_before_death;
by sp_id c_ivw_date;
if last.sp_id;
run;
proc freq;
table core_year;
run;


/*******************************************************************/
/*******************************************************************/
/******         Spouse p1 interview                         ********/ 
/*******************************************************************/
/*******************************************************************/

/*get list of all spouse core interviews after r's death date*/
proc sql;
create table s_p1_core_after_death(drop=id)
as select b.*,a.sp_id,a.r_id
 from spo_int.exit_restricted_02_to_10_sp(where=(sp_id>0)) a 
 inner join
core_00_to_10_idnum b
  on a.sp_id=b.id and a.r_death_date_e<b.c_ivw_date;
  quit;

proc sort data=s_p1_core_after_death ;
by sp_id c_ivw_date;
run;

/*just keep the p1 core interview for the spouse
**2274 interviews*/
data sp_core_p1;
set s_p1_core_after_death;
by sp_id c_ivw_date;
if first.sp_id;
run;

proc freq;
table core_year;
run;



/*******************************************************************/
/*******************************************************************/
/******         Spouse restricted data, add xwalk id        ********/ 
/*******************************************************************/
/*******************************************************************/

data restricted;
set hrs_cln.restricted_v2010;
run;

proc sort data=restricted nodupkey; by id ; run;

proc sql;
create table s_restr
as select * from restricted  
where id in (select sp_id from spo_int.exit_restricted_02_to_10_sp) ;
quit;

/*get spouse id list from exit/restr dataset*/
data spid;
set spo_int.exit_restricted_02_to_10_sp(keep=sp_id sp_bid s_xwalk_yes);
if sp_id~='' & sp_id~=0;
run;

proc sort data=spid out=spid_2 nodupkey; by sp_id; run;

/*bring in spouse xwalk id and indicator*/
proc sql;
create table s_restr_a as select a.*,b.sp_bid,b.s_xwalk_yes from
s_restr a left join
spid_2 b
on a.id=b.sp_id;
quit;

data s_restr_1;
set s_restr_a;
rename id=sp_id;
run;

proc freq; table s_xwalk_yes; run;

/*******************************************************************/
/*******************************************************************/
/******         Spouse exit interview                       ********/ 
/*******************************************************************/
/*******************************************************************/

/*get id in exit-xwalk dataset to number format*/
data exit_xwalk_1a;
set exit;
id_num = input(id,9.);
run;

proc contents;
run;

/*754 spouse exit interviews */
proc sql;
create table s_exit
as select * from exit_xwalk_1a  
where id_num in (select sp_id from spo_int.exit_restricted_02_to_10_sp) ;
quit;

data s_exit_1;
set s_exit;
rename id_num=sp_id;
drop id;
run;


H="Merge r+s interviews into single dataset"
/*First rename variables*/

%rename2(WORK,RESP_CORE_N1,_n1,r_);
%rename2(WORK,RESP_CORE_N2,_n2,r_);
%rename2(WORK,RESP_CORE_N3,_n3,r_);

%rename2(WORK,SP_CORE_P1,_p1,s_);
%rename2(WORK,SP_CORE_N1,_n1,s_);
%rename2(WORK,SP_CORE_N2,_n2,s_);
%rename2(WORK,SP_CORE_N3,_n3,s_);

%rename2(WORK,S_RESTR_1,_e,s_);
%rename2(WORK,S_EXIT_1,_x,s_);

/*Rename id variables and sort to prepare to merge*/

/*r's n1 core*/
data resp_core_n1_a;
set RESP_CORE_N1;
rename r_r_id_n1 = r_id;
run;

proc sort data=resp_core_n1_a nodupkey;
by r_id;
run;

/*r's n2 core*/
data resp_core_n2_a;
set RESP_CORE_N2;
rename r_r_id_n2 = r_id; 
run;

proc sort data=resp_core_n2_a nodupkey;
by r_id;
run;

/*r's n3 core*/
data resp_core_n3_a;
set RESP_CORE_N3;
rename r_r_id_n3 = r_id; 
run;

proc sort data=resp_core_n3_a nodupkey;
by r_id;
run;


/*s's p1 core*/
data sp_core_p1_a;
set SP_CORE_P1;
rename s_sp_id_p1 = s_id; 
rename s_r_id_p1 = r_id;
run;

proc sort data=sp_core_p1_a nodupkey;
by r_id;
run;

/*s's n1 core*/
data sp_core_n1_a;
set SP_CORE_N1;
rename s_sp_id_n1 = s_id;
rename s_r_id_n1= r_id;
run;

proc sort data=sp_core_n1_a nodupkey;
by r_id;
run;

/*s's n2 core*/
data sp_core_n2_a;
set SP_CORE_N2;
rename s_sp_id_n2 = s_id;
rename s_r_id_n2 = r_id;
run;

proc sort data=sp_core_n2_a nodupkey;
by r_id;
run;

/*s's n3 core*/
data sp_core_n3_a;
set SP_CORE_N3;
rename s_sp_id_n3 = s_id;
rename s_r_id_n3 = r_id;
run;

proc sort data=sp_core_n3_a nodupkey;
by r_id;
run;

/*s's restricted (no r_id in this dataset)*/
data s_restr_1_a;
set S_RESTR_1;
rename s_sp_id_e = s_id ;
run;

proc sort data=s_restr_1_a nodupkey;
by s_id;
run;

/*s's exit (no r_id in this dataset)*/
data s_exit_1_a;
set S_EXIT_1;
rename s_sp_id_x = s_id; 
run;

proc sort data=s_exit_1_a nodupkey;
by s_id;
run;

/*merge datasets*/
/*Step 1, merge r's interviews with exit/restricted dataset*/
/*Sort r's exit and restricted dataset including r and s xwalk ids*/
proc sort data=spo_int.exit_restricted_02_to_10_sp out=r_ex_restr;
by r_id;
run;

proc contents; run;

data r_x_r_n1_n2;
merge r_ex_restr resp_core_n1_a resp_core_n2_a resp_core_n3_a;
by r_id;
run;

/*Step 2, bring in spouse core interviews*/
proc sort data=r_x_r_n1_n2;
by r_id;
run;

data r_all_s_n1_n2_p1;
merge r_x_r_n1_n2 sp_core_n1_a sp_core_n2_a sp_core_n3_a sp_core_p1_a ;
by r_id;
run;

/*Step 3, merge in spouse exit and restricted*/
data spouse_x_e;
merge s_restr_1_a s_exit_1_a ;
by s_id;
run;

proc sort data=r_all_s_n1_n2_p1;
by s_id;
run;

proc sql;
create table r_s_core_x_e(drop=s_id2) as select a.*, b.* from 
r_all_s_n1_n2_p1 a
left join
spouse_x_e(rename=(s_id=s_id2)) b
on a.s_id=b.s_id2;
quit;

proc contents; run;

/*drop extra id variables*/
data r_s_core_x_e_1;
set r_s_core_x_e;
rename sp_bid=s_bid_hrs;
drop sp_id;
label r_BID_hrs = "R's claims ID";
run;

proc freq data=r_s_core_x_e_1;
table r_core_year_n1 r_core_year_n2;
run;

/*Final dataset:
Contains: R's core n1, n2, exit, restricted, mc id and S's core n1, n2, p1, exit, restricted, mc id
r_ prefix: respondant
s_ prefix: spouse
_n1 _n2 _3 suffix: pre-r's death core interviews (n3 is just education info)
_p1 suffix: post-r's death core interview for spouse
_x suffix: exit interview
_e suffix: restricted HRS*/
proc sort data=r_s_core_x_e_1 out=spo_int.r_s_core_x_e nodupkey;
by r_id;
run;

proc contents;
run;

H="Medicare FFS determination"
/*Create indicator variables for Respondant
1. Parts a and b coverage for 6 months prior to death
2. No HMO coveage during that time (so fee for service)
*/

libname spo_int 'E:\data\spouse\int_data';
libname medi 'E:\data\cms_DUA_25000_2010';

/*sort claims denominator file*/
proc sort data=medi.dn_2000_2010 out=dn_2000_20102  nodupkey;
by BID_HRS_19 year;
run;

/*assign death year using merged dataset with all r and s info*/
data r_sp;
set spo_int.r_s_core_x_e;
r_death_year=year(r_death_date_e);
run;

/*get denominator file for just death year
for those with xwalk id only*/
proc sql;
create table dn_death_y as select
a.*,b.buyin12,b.year,b.HMOIND12
from r_sp a inner join
dn_2000_20102 b
on trim(left(a.r_BID_hrs))=trim(left(b.BID_hrs_19))
and a.r_death_year=b.year;
quit;

proc freq data=dn_death_y;
table r_death_year;
run;

/*5547 from exit have denominator file linked*/
proc sql;
select count(distinct r_BID_hrs) from dn_death_y;
quit;

/*note death month should from restricted file*/
data dn_death_y2;
set dn_death_y;
death_month=month(r_death_date_e);
if length(trim(left(buyin12)))=12 and death_month>0 then do;
buyin_dy=substr(trim(left(buyin12)),1,death_month);
hmo_dy=substr(trim(left(HMOIND12)),1,death_month);
end;
else do;
buyin_dy=trim(left(buyin12));
hmo_dy=trim(left(HMOIND12));
end;
format r_death_date_e date9.;
run;
proc means n;
var  death_month;
run;

/*Check year prior to death to backfill for death dates
in the first half of the year (since doing 6 mo look back)*/
/* 5265 have the -1 year dn file*/
proc sql;
create table dn_death_y_bef as select
a.r_BID_hrs,a.year as death_year,
b.year as death_year_bef,
b.year,b.buyin12,b.HMOIND12
from dn_death_y a inner join
dn_2000_20102 b
on trim(left(a.r_BID_hrs))=trim(left(b.BID_hrs_19))
and 0<a.year-b.year<=1 order by r_bid_hrs,year;
quit;

proc sql;
create table all_insurance as select a.*,b.buyin12 as buyin_bef,b.HMOIND12 as hmo_bef from
dn_death_y2 a
left join
dn_death_y_bef b
on trim(left(a.r_BID_hrs))=trim(left(b.r_BID_hrs));
quit;

/*merge surgery year and year before surgery buy-in and hmo variables
Trim so the final variable _6m is 6 months pre-death
Note: indicator variables for parts a and b and hmo are null if don't
have information for full 6 months pre-death*/
data all_insurance2;
set all_insurance;
buyin_2y=trim(left(buyin_bef))||trim(left(buyin_dy));
hmo_2y=trim(left(hmo_bef))||trim(left(hmo_dy));

buyin_2y_r=reverse(trim(buyin_2y));
hmo_2y_r=reverse(trim(hmo_2y));

/*create 6 month variable*/
if length(buyin_2y_r)>5 then buyin_6m_r=substr(trim(left(buyin_2y_r)),1,6);
if length(hmo_2y_r)>5 then hmo_6m_r=substr(trim(left(hmo_2y_r)),1,6);

if length(buyin_2y_r)<6 then buyin_6m_r="";
if length(hmo_2y_r)<6 then hmo_6m_r="";

buyin_6m=reverse(trim(buyin_6m_r));
hmo_6m=reverse(trim(hmo_6m_r));

/*create indicator variable for mc coverage 6 mo. 0=no, 1=yes*/
if length(buyin_6m)=6 then do;
if indexc(buyin_6m,"0","1","2","A","B") then part_ab_6m=0;
if indexc(buyin_6m,"0","1","2","A","B")=0 then part_ab_6m=1;
end;
if length(hmo_6m)=6 then do;
if index(hmo_6m,"00000") then hmo_d_6m=0;
if index(hmo_6m,"00000")=0 then hmo_d_6m=1;
end;

/*create 6 month variable - old, incorrect version, just for comparison
delete this after sending it off to KO*/
if length(buyin_2y_r)>5 then buyin_6m_r_old=substr(trim(left(buyin_2y)),1,6);
if length(hmo_2y_r)>5 then hmo_6m_r_old=substr(trim(left(hmo_2y)),1,6);

if length(buyin_2y_r)<6 then buyin_6m_r_old="";
if length(hmo_2y_r)<6 then hmo_6m_r_old="";

buyin_6m_old=reverse(trim(buyin_6m_r_old));
hmo_6m_old=reverse(trim(hmo_6m_r_old));

/*create indicator variable for mc coverage 6 mo. 0=no, 1=yes*/
if length(buyin_6m_old)=6 then do;
if indexc(buyin_6m_old,"0","1","2","A","B") then part_ab_6m_old=0;
if indexc(buyin_6m_old,"0","1","2","A","B")=0 then part_ab_6m_old=1;
end;
if length(hmo_6m_old)=6 then do;
if index(hmo_6m_old,"00000") then hmo_d_6m_old=0;
if index(hmo_6m_old,"00000")=0 then hmo_d_6m_old=1;
end;

run;

/*42 observations don't have full denominator data re insurance status
either died Before July 2000 or are missing year -1 dn file*/
proc freq;
table part_ab_6m hmo_d_6m;
run;

data zzzztest;
set all_insurance2;
if part_ab_6m=.;
run;

/*bring in insurance indicators to full decedent dataset*/
proc sql;
create table spo_int.r_sp_core_n1_p1_n2_ins as select
a.*, b.part_ab_6m as r_part_ab_6m , b.hmo_d_6m as r_hmo_d_6m , 
	b.part_ab_6m_old as r_part_ab_6m_old , b.hmo_d_6m_old as r_hmo_d_6m_old
from spo_int.r_s_core_x_e a
left join all_insurance2 b
on trim(left(a.r_BID_hrs))=trim(left(b.r_BID_hrs));
quit;

proc freq;
table r_part_ab_6m*r_hmo_d_6m;
run;


H="xxxx Get counts for sample size estimate - Stata"
/*export to stata and get table to illustrate sample size per KO requirements*/

proc export data=spo_int.exit_rest_r_s_core_n1_p1_ins
outfile="E:\data\spouse\int_data\exit_rest_r_s_core_n1_p1_ins.dta"
replace;
run;

/**********************************************************************/
/*         STATA DO FILE STARTS HERE                                  */
/**********************************************************************/
/*Spouse project 2000-2010 HRS dataset
Sample size estimate sent to Katherine on 12/20/13*/ 

capture log close

clear all
set mem 500m
set matsize 800
set more off

local logpath E:\data\spouse\logs\

log using `logpath'2000_2010_sample-LOG.txt, text replace

cd "E:\data\spouse\int_data\"

use exit_rest_r_s_core_n1_p1_ins.dta

mat deced_core=J(6,1,.)

//all decedents from 2002-2010 exit interviews
sum exit_year, detail
mat deced_core[1,1]=r(N)

gen n1core_ind=.
replace n1core_ind=0 if  r_core_year_n1==.
replace n1core_ind=1 if  r_core_year_n1!=.
tab n1core_ind, missing

//decedents with n1 core interview
sum exit_year if n1core_ind==1, detail
mat deced_core[2,1]=r(N)

//decedents with n1 core + xwalk
sum exit_year if n1core_ind==1 & xwalk_yes==1, detail
mat deced_core[3,1]=r(N)

//with ffs mc last 6 months of life
//have parst a and b coverage and no hmo
gen byte ins_ind=.
replace ins_ind=1 if part_ab_6m==1 & hmo_d_6m==0
replace ins_ind=0 if part_ab_6m!=1 | hmo_d_6m!=0
tab ins_ind, missing

//decedents with n1 core + xwalk + ffs mc last 6 months of life
sum exit_year if n1core_ind==1 & xwalk_yes==1 & ins_ind==1, detail
mat deced_core[4,1]=r(N)

//decedents with n1 core + xwalk + married
sum exit_year if n1core_ind==1 & xwalk_yes==1 & ins_ind==1 & married==1, detail
mat deced_core[5,1]=r(N)

//have spouse p1 interview
gen byte sp1core_ind=.
replace sp1core_ind=0 if s_core_year_p1==.
replace sp1core_ind=1 if s_core_year_p1!=.
tab sp1core_ind, missing

//decedents with n1 core + xwalk + married + spouse p1 interview
sum exit_year if n1core_ind==1 & xwalk_yes==1 & ins_ind==1 & married==1 & sp1core_ind==1, detail
mat deced_core[6,1]=r(N)

mat list deced_core

	
frmttable using `logpath'\2010_sample_est , statmat(deced_core) ///
	title("2010 sample size estimate - requiring an n1 core interview") ///
	ctitle("","n") rtitle("All decedents from exit interviews" \ "With n1 core interview" \ ///
	"With mc xwalk id" \ "With FFS mc last 6 months of life" \ "Married at time of death" \ ///
	"Spouse p1 core interview") ///
	sdec(0) replace


tab exit_year if n1core_ind==1 & xwalk_yes==1 & ins_ind==1 & married==1 & sp1core_ind==1

log close


H="Create additional medicare use variables from claims"
/*Variables required are:
1. Number of IP, SNF and hospice days in last 2 years of life
2. Elixhauser comorbidities
3. Chronic conditions
*/

/*Medicare claims files - 2010*/
libname medi 'E:\data\cms_DUA_25000_2010';

/*project working data folder*/
libname spo_int 'E:\data\spouse\int_data';

proc contents data=spo_int.r_sp_core_n1_p1_n2_ins;
run;

/*first, get list of mc id's and death dates for each r
5901 decedents have xwalk id*/
data r_dod;
set spo_int.r_sp_core_n1_p1_n2_ins;
if r_xwalk_yes=1;
death_date=r_death_date_e;
keep r_BID_hrs death_date;
run;

/*****************************************************************/
/*Get lists of IP, SNF and hospice claims 2 years before death */
/*****************************************************************/

/*macro to get claims before death*/
%macro claims(days_start=,days_bef_death=,source=,suf=);

/*claims fully within 2 years of death date*/
proc sql;
create table &source._meet_1 as select a.*,b.death_date
from medi.&source._2000_2010 a inner join
r_dod b
on trim(left(a.bid_hrs_19))=trim(left(b.r_bid_hrs))
and &days_start<=b.death_date-a.admit_date<=&days_bef_death ;
quit;

/*claims that start earlier than 2 years but span into 2 years before death*/
proc sql;
create table &source._meet_2 as select a.*,b.death_date
from medi.&source._2000_2010 a inner join
r_dod b
on trim(left(a.bid_hrs_19))=trim(left(b.r_bid_hrs))
and b.death_date-a.admit_date>&days_bef_death and b.death_date-a.disch_date<=&days_bef_death;
quit;

data &source._meet_&suf.(compress=yes);
set &source._meet_1 &source._meet_2;
run;
%mend;

/*run for hospice*/
%claims(days_start=0,days_bef_death=(365*2),source=hs,suf=24m);
/*medpar (ip + snf)*/
%claims(days_start=0,days_bef_death=(365*2),source=mp,suf=24m);

/*split medpar claims list into separate lists for ip and snf claims*/
data snf_meet_24m;
set mp_meet_24m(where=(trim(left(SSLSSNF))="N"));
run;

data ip_meet_24m;
set mp_meet_24m(where=(trim(left(SSLSSNF))~="N"));
run;

/*get hospice claims last 1 year for additional LOS variable*/
%claims(days_start=0,days_bef_death=(365),source=hs,suf=12m);


/*****************************************************************/
/*Use macro to get hospice, ip and snf days */
/*****************************************************************/

%macro los(source=,days_bef_death=,days=);
/*for claims that span the 2 years before death cutoff, change admit
date to calculate los*/
data &source._meet_3;
set &source._meet_&days_bef_death.;
if admit_date < (death_date - &days. ) then admit_date=(death_date - &days. );
run;

data &source._meet_4;
set &source._meet_3;
los = disch_date - admit_date;
if los=0 then los=1;
run;

proc sort data=&source._meet_4 nodupkey;
by bid_hrs_19 admit_date disch_date;
run;

proc means;
var los;
run;

proc sql;
create table spo_int.&source.&days_bef_death. as select 
bid_hrs_19,sum(los) as &source._los_&days_bef_death. from &source._meet_4
group by bid_hrs_19;
quit;

proc means;
var &source._los: ;
run;

%mend;

/*macro saves datasets to spo_int library*/
%los(source=hs,days_bef_death=24m,days=(365*2));
%los(source=ip,days_bef_death=24m,days=(365*2));
%los(source=snf,days_bef_death=24m,days=(365*2));
%los(source=hs,days_bef_death=12m,days=(365));

/*****************************************************************/
/*pull los variables into main dataset*/
/*****************************************************************/
/*try compressing the main dataset before adding new variables*/
data ivws(compress=yes);
set spo_int.r_sp_core_n1_p1_n2_ins;
run;

proc sql;
create table add_los1 as select a.*, b.hs_los_24m from
ivws a
left join
spo_int.hs24m b
on a.r_bid_hrs = b.bid_hrs_19;
quit;

proc sql;
create table add_los2 as select a.*, b.ip_los_24m from
add_los1 a
left join
spo_int.ip24m b
on a.r_bid_hrs = b.bid_hrs_19;
quit;

proc sql;
create table add_los2a as select a.*, b.snf_los_24m from
add_los2 a
left join
spo_int.snf24m b
on a.r_bid_hrs = b.bid_hrs_19;
quit;

proc sql;
create table add_los2b as select a.*, b.hs_los_12m from
add_los2a a
left join
spo_int.hs12m b
on a.r_bid_hrs = b.bid_hrs_19;
quit;

data spo_int.add_los3;
set add_los2b ;
array list ip_los_24m snf_los_24m hs_los_24m  hs_los_12m;
do over list;
if list=. then list=0;
end;
run;

proc means;
var hs_los_24m ip_los_24m snf_los_24m hs_los_12m ;
run;

/*the dataset spo_int.add_los3 has all of the survey data and the los
for ip, snf, and hs for 2 years prior to r's death*/

/**********************************************************/
/**********************************************************/
/*  Get list of diagnoses across all claims before death  */
/**********************************************************/
/**********************************************************/

/*First need to get lists of claims across all claim
types for 12 months before death*/

/*use claims macro created above, re-run for 12 months across
all claim types, list includes claims fully within 1 year and 
those that span the 1 year cutoff*/

%claims(days_start=0,days_bef_death=365,source=hh,suf=12m); /*home health*/
%claims(days_start=0,days_bef_death=365,source=hs,suf=12m); /*hospice*/
%claims(days_start=0,days_bef_death=365,source=mp,suf=12m); /*medpar*/
%claims(days_start=0,days_bef_death=365,source=dm,suf=12m); /*dme*/
%claims(days_start=0,days_bef_death=365,source=op,suf=12m); /*outpatient*/
%claims(days_start=0,days_bef_death=365,source=pb,suf=12m); /*carrier*/


%macro dx_time_range(range1=, range2=, suf=);
/*pulls just dx codes from carrier claims*/
data pb_last_&range2._dx(keep=bid_hrs_19 diag);
set pb_meet_&suf.(keep=bid_hrs_19 PDGNS_CD DGNS_CD1-DGNS_CD12 );
array dx PDGNS_CD DGNS_CD1-DGNS_CD12;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=pb_last_&range2._dx out=pb_last_&range2._dx2 nodupkey;
by bid_hrs_19 diag;
run;

/*outpatient claims*/
data op_last_&range2._dx(keep=bid_hrs_19 diag);
set op_meet_&suf.(keep=bid_hrs_19 PDGNS_CD DGNSCD01-DGNSCD25  );
array dx PDGNS_CD DGNSCD01-DGNSCD25 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=op_last_&range2._dx out=op_last_&range2._dx2 nodupkey;
by bid_hrs_19 diag;
run;

/*medpar claims*/
data mp_last_&range2._dx(keep=bid_hrs_19 diag);
set mp_meet_&suf.(keep=bid_hrs_19 AD_DGNS DGNS_CD01-DGNS_CD25 );
array dx D_DGNS DGNS_CD01-DGNS_CD25 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=mp_last_&range2._dx out=mp_last_&range2._dx2 nodupkey;
by bid_hrs_19 diag;
run;

/*dme claims*/
data dm_last_&range2._dx(keep=bid_hrs_19 diag);
set dm_meet_&suf.(keep=bid_hrs_19 PDGNS_CD DGNS_CD1-DGNS_CD12 );
array dx PDGNS_CD DGNS_CD1-DGNS_CD12 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=dm_last_&range2._dx out=dm_last_&range2._dx2 nodupkey;
by bid_hrs_19 diag;
run;

/*home health agency*/
data hh_last_&range2._dx(keep=bid_hrs_19 diag);
set hh_meet_&suf.(keep=bid_hrs_19 PDGNS_CD DGNSCD01-DGNSCD25 );
array dx PDGNS_CD DGNSCD01-DGNSCD25 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=hh_last_&range2._dx out=hh_last_&range2._dx2 nodupkey;
by bid_hrs_19 diag;
run;

/*hospice*/
data hs_last_&range2._dx(keep=bid_hrs_19 diag);
set hs_meet_&suf.(keep=bid_hrs_19 PDGNS_CD DGNSCD01-DGNSCD25 );
array dx PDGNS_CD DGNSCD01-DGNSCD25 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=hs_last_&range2._dx out=hs_last_&range2._dx2 nodupkey;
by bid_hrs_19 diag;
run;

/*set diag variable length = 7 chars since that's the max length from the mc claims
Need to do this because length varies across the different mc claim types*/
data hs_last_&range2._dx3;
length diag $7;
set hs_last_&range2._dx2;
run;
data hh_last_&range2._dx3;
length diag $7;
set hh_last_&range2._dx2;
run;
data mp_last_&range2._dx3;
length diag $7;
set mp_last_&range2._dx2;
run;
data dm_last_&range2._dx3;
length diag $7;
set dm_last_&range2._dx2;
run;
data op_last_&range2._dx3;
length diag $7;
set op_last_&range2._dx2;
run;
data pb_last_&range2._dx3;
length diag $7;
set pb_last_&range2._dx2;
run;

data dx_all_last_&range2.;
set hs_last_&range2._dx3
hh_last_&range2._dx3
mp_last_&range2._dx3
dm_last_&range2._dx3
op_last_&range2._dx3
pb_last_&range2._dx3;
run;
proc sort data=dx_all_last_&range2.(where=(diag~="")) out=spo_int.dx_&range1._&range2 nodupkey;
by bid_hrs_19 diag;
run;

%mend;

/*run macro to create data file spo_int.dx_0d_n12m */
%dx_time_range(range1=0d, range2=n12m, suf=12m);

/*5335 bid's have at least 1 dx in the 1 year before death*/
proc sql;
select count(distinct BID_hrs_19) from spo_int.dx_0d_n12m;
quit;



H="r's elixhauser comorbidities from dx codes"
/*creates indicators for each of the Elixhauser comorbidities
based on the dx codes 12 months  before death

resulting dataset is spo_int.hrs_elix_n12m*/

/*rename macro - called within the elixhauser macro
to add time suffix to variables

lib=library
dsn=dataset name
pre=suffix to be added to all of the variable names
*/

%macro rename(lib,dsn,pre);
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "Before Renaming All Variables";
run;

proc sql noprint;
select nvar into :num_vars
from dictionary.tables
where libname="&LIB" and
memname="&DSN";
select distinct(name) into :var1-
:var%TRIM(%LEFT(&num_vars))
from dictionary.columns
where libname="&LIB" and
memname="&DSN";
quit;
run;

proc datasets library=&LIB;
modify &DSN;
rename
%do i=1 %to &num_vars;
&&var&i=&&var&i.._&pre 
%end;
;
quit;
run;
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "After Renaming All Variables";
run;
%mend rename;



/*Elixhauser index macro
Note includes additional 2 comorbidities: Dementia and Coronary Artery Disease*/

%macro elixhauser(range1=, range2=);

data dx_31_comor_&range2;
set spo_int.dx_&range1._&range2(rename=(diag=dx_0));
dx=trim(left(dx_0));

if dx~="" then do;

comorbi_1=0;
comorbi_2=0;
comorbi_3=0;
comorbi_4=0;
comorbi_5=0;
comorbi_6=0;
comorbi_7=0;
comorbi_8=0;
comorbi_9=0;
comorbi_10=0;
comorbi_11=0;
comorbi_12=0;
comorbi_13=0;
comorbi_14=0;
comorbi_15=0;
comorbi_16=0;
comorbi_17=0;
comorbi_18=0;
comorbi_19=0;
comorbi_20=0;
comorbi_21=0;
comorbi_22=0;
comorbi_23=0;
comorbi_24=0;
comorbi_25=0;
comorbi_26=0;
comorbi_27=0;
comorbi_28=0;
comorbi_29=0;
comorbi_30=0;
*end of intialize of 30 binary variables;
*add dementia and CAD;
dementia=0;
cad=0;

*do over dx;
	*Congestive Heart Failure;
	if (substr(dx,1,5)='39891' or
		substr(dx,1,5)='40211' or
		substr(dx,1,5)='40291' or
		substr(dx,1,5)='40411' or
		substr(dx,1,5)='40413' or
		substr(dx,1,5)='40491' or
		substr(dx,1,5)='40493' or
		substr(dx,1,3)='428') 
		and comorbi_1=0 
		then comorbi_1=1;*add one binary variables here.;
	*Cardiac Arrhythmias;
	if (substr(dx,1,5)='42610' or
		substr(dx,1,5)='42611' or
		substr(dx,1,5)='42613' or
		substr(dx,1,4)='4262' or
		substr(dx,1,4)='4263' or
		substr(dx,1,4)='4264' or
		substr(dx,1,5)='42650' or
		substr(dx,1,5)='42651' or
		substr(dx,1,5)='42652' or
		substr(dx,1,5)='42653' or
		substr(dx,1,4)='4266' or
		substr(dx,1,4)='4267' or
		substr(dx,1,4)='4268' or
		substr(dx,1,4)='4270' or
		substr(dx,1,4)='4272' or
		substr(dx,1,5)='42731' or
		substr(dx,1,5)='42760' or
		substr(dx,1,4)='4279' or
		substr(dx,1,4)='7850' or
		substr(dx,1,4)='V450' or
		substr(dx,1,4)='V533')
			and comorbi_2=0 
		then comorbi_2=1;
	* Valvular Disease ;
	if (substr(dx,1,5)='09320' or
		substr(dx,1,5)='09321' or
		substr(dx,1,5)='09322' or
		substr(dx,1,5)='09323' or
		substr(dx,1,5)='09324' or
		substr(dx,1,3)='394' or
		substr(dx,1,3)='395' or
		substr(dx,1,3)='396' or
		substr(dx,1,4)='3970' or
		substr(dx,1,4)='3971' or
		substr(dx,1,4)='4240' or
		substr(dx,1,4)='4241' or
		substr(dx,1,4)='4242' or
		substr(dx,1,4)='4243' or
		substr(dx,1,4)='4244' or
		substr(dx,1,4)='4245' or
		substr(dx,1,4)='4246' or
		substr(dx,1,4)='4247' or
		substr(dx,1,4)='4248' or
		substr(dx,1,5)='42490' or
		substr(dx,1,5)='42491' or
		substr(dx,1,4)='7463' or
		substr(dx,1,4)='7464' or
		substr(dx,1,4)='7465' or
		substr(dx,1,4)='7466' or
		substr(dx,1,4)='V422' or
		substr(dx,1,5)='V433')
			and comorbi_3=0 
		then comorbi_3=1;
	*Pulmonary Circulation Disorders;
	if (substr(dx,1,3)='416' or
		substr(dx,1,4)='4179')
			and comorbi_4=0 
		then comorbi_4=1;
	*Peripheral Vascular Disorders;
	if (substr(dx,1,3)='440' or
		substr(dx,1,4)='4412' or
		substr(dx,1,4)='4414' or
		substr(dx,1,4)='4417' or
		substr(dx,1,4)='4419' or
		substr(dx,1,4)='4431' or
		substr(dx,1,4)='4432' or
		substr(dx,1,4)='4438' or
		substr(dx,1,4)='4439' or
		substr(dx,1,4)='4471' or
		substr(dx,1,4)='5571' or
		substr(dx,1,4)='5579' or
		substr(dx,1,4)='V434')
			and comorbi_5=0 
		then comorbi_5=1;
	*Hypertension;
	if ((substr(dx,1,4)='4011' or
		substr(dx,1,4)='4019')) or
	   ((substr(dx,1,5)='40210' or
		substr(dx,1,5)='40290' or
		substr(dx,1,5)='40410' or
		substr(dx,1,5)='40490' or
		substr(dx,1,5)='40511' or
		substr(dx,1,5)='40519' or
		substr(dx,1,5)='40591' or
		substr(dx,1,5)='40599')) 
			and comorbi_6=0 
		then comorbi_6=1;
	*Paralysis;	
	if (substr(dx,1,4)='3420' or
		substr(dx,1,5)='34210' or
		substr(dx,1,5)='34211' or
		substr(dx,1,5)='34212' or
		substr(dx,1,4)='3429' or
		substr(dx,1,3)='343' or
		substr(dx,1,3)='344')
			and comorbi_7=0 
		then comorbi_7=1;
	*Other Neurological Disorders;
	if (substr(dx,1,4)='3319' or
		substr(dx,1,4)='3320' or
		substr(dx,1,4)='3334' or
		substr(dx,1,4)='3335' or
		substr(dx,1,3)='334' or
		substr(dx,1,3)='335' or
		substr(dx,1,3)='340' or
		substr(dx,1,4)='3411' or
		substr(dx,1,4)='3418' or
		substr(dx,1,4)='3419' or
		substr(dx,1,5)='34500' or
		substr(dx,1,5)='34501' or
		substr(dx,1,5)='34510' or
		substr(dx,1,5)='34511' or
		substr(dx,1,4)='3454' or
		substr(dx,1,5)='34550' or
		substr(dx,1,5)='34551' or
		substr(dx,1,4)='3458' or
		substr(dx,1,5)='34590' or
		substr(dx,1,5)='34591' or
		substr(dx,1,4)='3481' or
		substr(dx,1,4)='3483' or
		substr(dx,1,4)='7803' or
		substr(dx,1,4)='7843') 
			and comorbi_8=0 
		then comorbi_8=1;	
	*Chronic Pulmonary Disease;
	if (substr(dx,1,3)='490' or
		substr(dx,1,3)='491' or
		substr(dx,1,3)='492' or
		substr(dx,1,4)='4930' or
		substr(dx,1,4)='4931' or
		substr(dx,1,4)='4932' or
		substr(dx,1,4)='4938' or
		substr(dx,1,5)='49390' or
		substr(dx,1,5)='49391' or
		substr(dx,1,3)='494' or
		substr(dx,1,3)='495' or
		substr(dx,1,3)='496' or
		substr(dx,1,3)='497' or
		substr(dx,1,3)='498' or
		substr(dx,1,3)='499' or
		substr(dx,1,3)='500' or
		substr(dx,1,3)='501' or
		substr(dx,1,3)='502' or
		substr(dx,1,3)='503' or
		substr(dx,1,3)='504' or
		substr(dx,1,3)='505' or
		substr(dx,1,4)='5064') 
			and comorbi_9=0 
		then comorbi_9=1;	
	*Diabetes, uncomplicated;
	if (substr(dx,1,4)='2500' or
		substr(dx,1,4)='2501' or
		substr(dx,1,4)='2502' or
		substr(dx,1,4)='2503') 
			and comorbi_10=0 
		then comorbi_10=1;
	*Diabetes, complicated;
	if (substr(dx,1,4)='2504' or
		substr(dx,1,4)='2505' or
		substr(dx,1,4)='2506' or
		substr(dx,1,4)='2507' or
		substr(dx,1,4)='2509') 
			and comorbi_11=0 
		then comorbi_11=1;
	*Hypothyroidism;
	if (substr(dx,1,3)='243' or
		substr(dx,1,4)='2440' or
		substr(dx,1,4)='2441' or
		substr(dx,1,4)='2442' or
		substr(dx,1,4)='2448' or
		substr(dx,1,4)='2449') 	
			and comorbi_12=0 
		then comorbi_12=1;
	*Renal Failure;
	if (substr(dx,1,5)='40311' or
		substr(dx,1,5)='40391' or
		substr(dx,1,5)='40412' or
		substr(dx,1,5)='40492' or
		substr(dx,1,3)='585' or
		substr(dx,1,3)='586' or
		substr(dx,1,4)='V420' or
		substr(dx,1,4)='V451' or
		substr(dx,1,4)='V560' or
		substr(dx,1,4)='V568') 
			and comorbi_13=0 
		then comorbi_13=1;
	*Liver Disease;
	if (substr(dx,1,5)='07032' or
		substr(dx,1,5)='07033' or
		substr(dx,1,5)='07054' or
		substr(dx,1,4)='4560' or
		substr(dx,1,4)='4561' or
		substr(dx,1,5)='45620' or
		substr(dx,1,5)='45621' or
		substr(dx,1,4)='5710' or
		substr(dx,1,4)='5712' or
		substr(dx,1,4)='5713' or
		substr(dx,1,4)='5714' or
		substr(dx,1,4)='5715' or
		substr(dx,1,4)='5716' or
		substr(dx,1,4)='5718' or
		substr(dx,1,4)='5719' or
		substr(dx,1,4)='5723' or
		substr(dx,1,4)='5728' or
		substr(dx,1,4)='V427') 
			and comorbi_14=0 
		then comorbi_14=1;
	*Peptic Ulcer Disease excluding bleeding;
	if (substr(dx,1,5)='53170' or
		substr(dx,1,5)='53190' or
		substr(dx,1,5)='53270' or
		substr(dx,1,5)='53290' or
		substr(dx,1,5)='53370' or
		substr(dx,1,5)='53390' or
		substr(dx,1,5)='53470' or
		substr(dx,1,5)='53490' or
		substr(dx,1,5)='V1271') 
			and comorbi_15=0 
		then comorbi_15=1;
	*AIDS;
	if (substr(dx,1,3)='042' or
		substr(dx,1,3)='043' or
		substr(dx,1,3)='044') 
			and comorbi_16=0 
		then comorbi_16=1;
	*Lymphoma;
	if (substr(dx,1,3)='200' or
		substr(dx,1,4)='201' or
		substr(dx,1,4)='2020' or
		substr(dx,1,4)='2021' or
		substr(dx,1,4)='2022' or
		substr(dx,1,4)='2023' or
		substr(dx,1,4)='2025' or
		substr(dx,1,4)='2026' or
		substr(dx,1,4)='2027' or
		substr(dx,1,4)='2028' or
		substr(dx,1,4)='2029' or
		substr(dx,1,4)='2030' or
		substr(dx,1,4)='2038' or
		substr(dx,1,4)='2386' or
		substr(dx,1,4)='2733' or
		substr(dx,1,4)='V1071' or
		substr(dx,1,4)='V1072' or
		substr(dx,1,4)='V1079')
			and comorbi_17=0 
		then comorbi_17=1;
	*Metastatic Cancer;
	if (substr(dx,1,3)='196' or
		substr(dx,1,3)='197' or
		substr(dx,1,3)='198' or
		substr(dx,1,4)='199') 
			and comorbi_18=0 
		then comorbi_18=1;	
	*Solid Tumor without Metastisis;
	if (substr(dx,1,2)='14' or
		substr(dx,1,2)='15' or
		substr(dx,1,2)='16' or
		substr(dx,1,3)='170' or
		substr(dx,1,3)='171' or
		substr(dx,1,3)='172' or
		substr(dx,1,3)='174' or
		substr(dx,1,3)='175' or
		substr(dx,1,3)='179' or
		substr(dx,1,2)='18' or
		substr(dx,1,3)='190' or
		substr(dx,1,3)='191' or
		substr(dx,1,3)='192' or
		substr(dx,1,3)='193' or
		substr(dx,1,3)='194' or
		substr(dx,1,3)='195' or
		substr(dx,1,3)='V10')
			and comorbi_19=0 
		then comorbi_19=1;
	*Rheumatoid Arthritis/Collagen Vascular Diseases;
	if (substr(dx,1,4)='7010' or
		substr(dx,1,3)='710' or
		substr(dx,1,3)='714' or
		substr(dx,1,3)='720' or
		substr(dx,1,3)='725') 
			and comorbi_20=0 
		then comorbi_20=1;
	*Coagulopathy;
	if (substr(dx,1,3)='286' or
		substr(dx,1,4)='2871' or
		substr(dx,1,4)='2873' or
		substr(dx,1,4)='2874' or
		substr(dx,1,4)='2875') 
			and comorbi_21=0 
		then comorbi_21=1;
	*Obesity;
	if (substr(dx,1,4)='2780')  
			and comorbi_22=0 
		then comorbi_22=1;
	*Weight Loss;
	if (substr(dx,1,3)='260' or
		substr(dx,1,3)='261' or
		substr(dx,1,3)='262' or
		substr(dx,1,3)='263') 
			and comorbi_23=0 
		then comorbi_23=1;	
	*Fluid and Electrolyte Disorders;
	if (substr(dx,1,3)='276') 
			and comorbi_24=0 
		then comorbi_24=1;
	*Blood Loss Anemia;
	if (substr(dx,1,4)='2800') 
			and comorbi_25=0 
		then comorbi_25=1;
	*Deficiency Anemias;
	if (substr(dx,1,4)='2801' or
		substr(dx,1,4)='2808' or
		substr(dx,1,4)='2809' or
		substr(dx,1,4)='2859') 
			and comorbi_26=0 
		then comorbi_26=1;
	*Alcohol Abuse;
	if (substr(dx,1,4)='2911' or
		substr(dx,1,4)='2912' or
		substr(dx,1,4)='2915' or
		substr(dx,1,4)='2918' or
		substr(dx,1,4)='2919' or
		substr(dx,1,4)='3039' or
		substr(dx,1,4)='3050' or
		substr(dx,1,4)='V113') 
			and comorbi_27=0 
		then comorbi_27=1;
	*Drug Abuse;
	if (substr(dx,1,4)='2920' or
		substr(dx,1,5)='29282' or
		substr(dx,1,5)='29283' or
		substr(dx,1,5)='29284' or
		substr(dx,1,5)='29289' or
		substr(dx,1,4)='2929' or
		substr(dx,1,3)='304' or
		substr(dx,1,4)='3052' or
		substr(dx,1,4)='3053' or
		substr(dx,1,4)='3054' or
		substr(dx,1,4)='3055' or
		substr(dx,1,4)='3056' or
		substr(dx,1,4)='3057' or
		substr(dx,1,4)='3058' or
		substr(dx,1,4)='3059')
			and comorbi_28=0 
		then comorbi_28=1;	
	*Psychoses;
	if (substr(dx,1,3)='295' or
		substr(dx,1,3)='296' or
		substr(dx,1,3)='297' or
		substr(dx,1,3)='298' or
		substr(dx,1,4)='2991') 
			and comorbi_29=0 
		then comorbi_29=1;
	*Depression;
	if (substr(dx,1,4)='3004' or
		substr(dx,1,5)='30112' or
		substr(dx,1,4)='3090' or
		substr(dx,1,4)='3091' or
		substr(dx,1,3)='311')
			and comorbi_30=0 
		then comorbi_30=1;


	*Dementia;
	if (substr(dx,1,4) in ('3310','3311','3312','2900','2901',
             '2902','2903','2912','2948','2949') or
		substr(dx,1,5) in ('29410','29411','29040','29041','29042','29043')) 
		and dementia=0 
          then dementia=1;

	*CAD coronary artery disease;
	if (substr(dx,1,4) in ('4140','4142','4143','4148','4149') or 
		substr(dx,1,3) in ('410','411','412','413') or
		substr(dx,1,5) in ('V4581','V4582'))
		and cad=0 
          then cad=1;

/* CAD list
410.00-410.92
411.0-411.89
412
413.0-413.9
414.00-414.07
414.2
414.3
414.8
414.9
V45.81
V45.82 */

end;
run;


/*check sums of each comorbidity for each ID*/
proc sql;
create table com_test1_&range2 as
select distinct BID_hrs_19,
sum(comorbi_1) as com_1,
sum(comorbi_2) as com_2,
sum(comorbi_3) as com_3,
sum(comorbi_4) as com_4,
sum(comorbi_5) as com_5,
sum(comorbi_6) as com_6,
sum(comorbi_7) as com_7,
sum(comorbi_8) as com_8,
sum(comorbi_9) as com_9,
sum(comorbi_10) as com_10,
sum(comorbi_11) as com_11,
sum(comorbi_12) as com_12,
sum(comorbi_13) as com_13,
sum(comorbi_14) as com_14,
sum(comorbi_15) as com_15,
sum(comorbi_16) as com_16,
sum(comorbi_17) as com_17,
sum(comorbi_18) as com_18,
sum(comorbi_19) as com_19,
sum(comorbi_20) as com_20,
sum(comorbi_21) as com_21,
sum(comorbi_22) as com_22,
sum(comorbi_23) as com_23,
sum(comorbi_24) as com_24,
sum(comorbi_25) as com_25,
sum(comorbi_26) as com_26,
sum(comorbi_27) as com_27,
sum(comorbi_28) as com_28,
sum(comorbi_29) as com_29,
sum(comorbi_30) as com_30,
sum(dementia) as com_31,
sum(cad) as com_32
from dx_31_comor_&range2
group by BID_hrs_19;
quit;

/*define comorbidities as binary indicators*/
data comorbidity_&range2.(keep=BID_hrs_19 comorb_1-comorb_32 comorb_all);
set com_test1_&range2;
array list_com com_1-com_30 com_31 com_32;
array list_com_bin comorb_1-comorb_30 comorb_31 comorb_32;

/*note this defines comorbidity 31 = dementia & 32 = cad*/
do over list_com;
  list_com_bin=0;

  if list_com>0 then do;
    list_com_bin=1;
   end;

end;

/*define aggregate comorbidity as sum of 30 individual indicator vars.
note: CAD not included in this aggregate score*/
comorb_all=comorb_1+comorb_2+comorb_3+comorb_4+comorb_5+comorb_6+comorb_7+
comorb_8+comorb_9+comorb_10+comorb_11+comorb_12+comorb_13+comorb_14+
comorb_15+comorb_16+comorb_17+comorb_18+comorb_19+comorb_20+comorb_21+
comorb_22+comorb_23+comorb_24+comorb_25+comorb_26+comorb_27+comorb_28+
comorb_29+comorb_30+comorb_31;
run;


proc sort data=comorbidity_&range2. nodupkey;
by BID_hrs_19;
run;

/*merges with table r's with hrs dataset by id
leaves blanks for comorbidities observations with no dx but with xwalk id*/
proc sql;
create table ids_w_xwalk_&range2._1 as
select a.r_bid_hrs,b.*
from r_dod a 
left join
comorbidity_&range2. b
on trim(left(a.r_bid_hrs))=trim(left(b.BID_hrs_19));
quit;

/*if comorbidity=null, set to zero*/
data spo_int.elix_&range1._&range2;
set ids_w_xwalk_&range2._1;
array list comorb_1-comorb_32 comorb_all;
do over list;
	if list=. then list=0;
	end;

label comorb_1 ="Congestive Heart Failure";
label comorb_2 ="Cardiac Arrhythmias";
label comorb_3 ="Valvular Disease";
label comorb_4 ="Pulmonary Circulation Disorders";
label comorb_5 ="Peripheral Vascular Disorders";
label comorb_6 ="Hypertension";
label comorb_7 ="Paralysis";
label comorb_8 ="Other Neurological Disorders";
label comorb_9 ="Chronic Pulmonary Disease";
label comorb_10 ="Diabetes, uncomplicated";
label comorb_11 ="Diabetes, complicated";
label comorb_12 ="Hypothyroidism";
label comorb_13 ="Renal Failure";
label comorb_14 ="Liver Disease";
label comorb_15 ="Peptic Ulcer Disease excluding bleeding";
label comorb_16 ="AIDS";
label comorb_17 ="Lymphoma";
label comorb_18 ="Metastatic Cancer";
label comorb_19 ="Solid Tumor without Metastisis";
label comorb_20 ="Rheumatoid Arthritis/Collagen Vascular Diseases";
label comorb_21 ="Coagulopathy";
label comorb_22 ="Obesity";
label comorb_23 ="Weight Loss";
label comorb_24 ="Fluid and Electrolyte Disorders";
label comorb_25 ="Blood Loss Anemia";
label comorb_26 ="Deficiency Anemias";
label comorb_27 ="Alcohol Abuse";
label comorb_28 ="Drug Abuse";
label comorb_29 ="Psychoses";
label comorb_30 ="Depression";
label comorb_31 ="Dementia";
label comorb_32 ="Coronary Artery Disease";

/*drop extra bid field*/
drop BID_HRS_19;
run;


data test;
set spo_int.elix_&range1._&range2;
run;

/*calls rename macro*/
%rename(WORK,TEST,&range1._&range2);

/*rename r_BID_hrs_&range1._&range2=r_BID_hrs*/
data spo_int.elix_&range1._&range2._2(rename =(r_BID_hrs_&range1._&range2=r_BID_hrs));
set test;
keep r_bid_hrs_&range1._&range2 comorb:;
run;

proc sort data=spo_int.elix_&range1._&range2._2;
by r_bid_hrs;
run;

%mend;

/*run macro to get elixhauser comorbidities 12 months pre-surgery
resulting dataset is spo_int.elix_0d_n12m_2 which has r_bid_hrs to merge back to dataset*/
%elixhauser(range1=0d, range2=n12m);

proc freq data=spo_int.elix_0d_n12m;
table comorb:;
run;

/*merge comorbidities into HRS dataset
for observations with no mc xwalk, the comorbidities are left as null*/
proc sql;
create table spo_int.hrs_elix_n12m(drop=bid_hrs2)
as select a.*,b.*
from 
spo_int.add_los3 a 
left join
spo_int.elix_0d_n12m_2(rename=(r_bid_hrs=bid_hrs2)) b
on a.r_bid_hrs = b.bid_hrs2;
quit;

/*913 have no xwalk id so missing comorbidities*/
proc freq data=spo_int.hrs_elix_n12m;
table comorb: ;
run;


H="r's chronic conditions from dx codes"
/*begin of chronic 21 conditions.
Determines presence of 21 chronic conditions 12 months pre-death

Note this pulls from a list of icd-9 codes associated with each of the chronic
conditions. The file path may need to be updated depending on the PC the
code is run from

Dataset created is spo_int.hrs_elix_cc_n12m
*/

/*export list of diagnosis codes to Stata*/
proc export data=spo_int.dx_0d_n12m
outfile="E:\data\spouse\int_data\dx_0d_n12m.dta" replace;
run;

/*******************************************************************/
/*put the sas data to stata in to dot format
This is STATA code*/
/*******************************************************************/

clear
set memory 500m

//process diagnosis codes 12 months pre-surgery
clear
use "E:\data\spouse\int_data\dx_0d_n12m.dta",clear

// convert diagnosis codes to string variables, tostring diag,gen(icd9_c)
gen new=ltrim(diag)
icd9 check new,gen(icd9_c)
replace new="" if icd9_c>0 
// convert into dot format (ex 12.1 instead of 121)
icd9 clean new,dots 

replace diag=new
drop icd9_c new

save "E:\data\spouse\int_data\dx_0d_n12m_2.dta",replace

/*******************************************************************/
//Convert back to SAS
//This is SAS Code
/* to the cms 21 chronic comorbidity*/ /*******************************************************************/

/*bring in formatted Stata dataset of dx codes*/
proc import 
datafile="E:\data\spouse\int_data\dx_0d_n12m_2.dta" 
out=dx_0d_n12m_2 replace;
run;

/*bring in excel list of dx codes associated with each chronic condition*/
proc import /*datafile="C:\projects\Hospice_impact_on_utilization\raw_data\chronic_21_condition_icd9.xls" */
datafile='E:\data\spouse\ref_data\chronic_21_condition_icd9.xls'
out=icd9_21_chronic dbms=xls replace;
run;

data icd9_21_chronic2;
set icd9_21_chronic;
/*create new variable of icd 9 code list NOT in dot format
Don't actually use this variable in the following code*/
icd9_wo_dot=compress(icd_9,".");
run;
proc contents data=icd9_21_chronic;
run;

/*creates macro variables of each of the chronic conditions listing of dx codes*/
proc sql;
select icd_9 into :chronic_desc1-:chronic_desc21 from icd9_21_chronic;
quit;
%put &chronic_desc10;
%put &chronic_desc5;

/*******************************************************************/
/*Generate chronic conditions indicator variables using dx
codes 12 months pre-death */
/*******************************************************************/

/*macro to create indicator variables for 21 chronic conditions
resulting file has chronic conditions using dx codes 12 months 
before death
predeath= n12m */

%macro cc(predeath=);

/*initialize the chronic conditions variables*/
data list_&predeath._dx;
set dx_0d_&predeath._2;
array list CC_1_AMI
CC_2_ALZH
CC_3_ALZHDMTA
CC_4_ATRIALFB
CC_5_CATARACT
CC_6_CHRNKIDN
CC_7_COPD
CC_8_CHF
CC_9_DIABETES
CC_10_GLAUCOMA
CC_11_HIPFRAC
CC_12_ISCHMCHT
CC_13_DEPRESSN
CC_14_OSTEOPRS
CC_15_RA_OA
CC_16_STRKETIA
CC_17_CNCRBRST
CC_18_CNCRCLRC
CC_19_CNCRPRST
CC_20_CNCRLUNG
CC_21_CNCREndM
;
do over list ;
list=0;
end;

diag_string=diag;

/* for dx codes that begin with numbers, process chronic cond variables*/
if anydigit(substr(trim(left(diag_string)),1,1))=1 then do;
diag=diag_string+0;

if diag in (&chronic_desc1) then CC_1_AMI=1;
if diag in (&chronic_desc2)  then CC_2_ALZH=1;
if diag in (&chronic_desc3)  then CC_3_ALZHDMTA=1;
if diag in (&chronic_desc4) then CC_4_ATRIALFB=1;
if diag in (&chronic_desc5) then CC_5_CATARACT=1;
if diag in (&chronic_desc6) then CC_6_CHRNKIDN=1;
if diag in (&chronic_desc7) then CC_7_COPD=1;
if diag in (&chronic_desc8) then CC_8_CHF=1;
if diag in (&chronic_desc9) then CC_9_DIABETES=1;
if diag in (&chronic_desc10) then CC_10_GLAUCOMA=1;
if diag in (&chronic_desc11) then CC_11_HIPFRAC=1;
if diag in (&chronic_desc12) then CC_12_ISCHMCHT=1;
if diag in (&chronic_desc13) then CC_13_DEPRESSN=1;
if diag in (&chronic_desc14) then CC_14_OSTEOPRS=1;
if diag in (&chronic_desc15) then CC_15_RA_OA=1;
if diag in (&chronic_desc16) then CC_16_STRKETIA=1;
if diag in (&chronic_desc17) then CC_17_CNCRBRST=1;
if diag in (&chronic_desc18) then CC_18_CNCRCLRC=1;
if diag in (&chronic_desc19) then CC_19_CNCRPRST=1;
if diag in (&chronic_desc20) then CC_20_CNCRLUNG=1;
if diag in (&chronic_desc21) then CC_21_CNCREndM=1;
end;

/*deal with dx codes that start with letters
Only two of them in the list we have to worry about*/
if anydigit(substr(trim(left(diag_string)),1,1))=0 then do;
if trim(left(diag_string)) in ("V431") then CC_5_CATARACT=1;
if trim(left(diag_string)) in ("V801") then CC_10_GLAUCOMA=1;
end;

run;

/*aggregate all chronic condition variables by bid*/
proc sql;
create table bid_dx_0d_&predeath.(rename=(bid_hrs_19=bid)) as
select distinct bid_hrs_19,
sum(CC_1_AMI) as CC_1_AMI,
sum(CC_2_ALZH) as CC_2_ALZH,
sum(CC_3_ALZHDMTA) as CC_3_ALZHDMTA,
sum(CC_4_ATRIALFB) as CC_4_ATRIALFB,
sum(CC_5_CATARACT) as CC_5_CATARACT,
sum(CC_6_CHRNKIDN) as CC_6_CHRNKIDN,
sum(CC_7_COPD) as CC_7_COPD,
sum(CC_8_CHF) as CC_8_CHF,
sum(CC_9_DIABETES) as CC_9_DIABETES,
sum(CC_10_GLAUCOMA) as CC_10_GLAUCOMA,
sum(CC_11_HIPFRAC) as CC_11_HIPFRAC,
sum(CC_12_ISCHMCHT) as CC_12_ISCHMCHT,
sum(CC_13_DEPRESSN) as CC_13_DEPRESSN,
sum(CC_14_OSTEOPRS) as CC_14_OSTEOPRS,
sum(CC_15_RA_OA) as CC_15_RA_OA,
sum(CC_16_STRKETIA) as CC_16_STRKETIA,
sum(CC_17_CNCRBRST) as CC_17_CNCRBRST,
sum(CC_18_CNCRCLRC) as CC_18_CNCRCLRC,
sum(CC_19_CNCRPRST) as CC_19_CNCRPRST,
sum(CC_20_CNCRLUNG) as CC_20_CNCRLUNG,
sum(CC_21_CNCREndM) as CC_21_CNCREndM

from list_&predeath._dx group by bid_hrs_19;
quit;


/*merges with table r's with hrs dataset by id*/
 proc sql;
 create table bid_dx_0d_&predeath.2(drop=bid) as 
select a.r_bid_hrs,b.*
 from r_dod a
 left join
  bid_dx_0d_&predeath. b 
 on trim(left(a.r_bid_hrs))=trim(left(b.bid));
 quit;

/*convert to chronic condition vars. to binary variables*/
 data bid_dx_0d_&predeath.3;
 set bid_dx_0d_&predeath.2;
 array list CC_1_AMI
CC_2_ALZH
CC_3_ALZHDMTA
CC_4_ATRIALFB
CC_5_CATARACT
CC_6_CHRNKIDN
CC_7_COPD
CC_8_CHF
CC_9_DIABETES
CC_10_GLAUCOMA
CC_11_HIPFRAC
CC_12_ISCHMCHT
CC_13_DEPRESSN
CC_14_OSTEOPRS
CC_15_RA_OA
CC_16_STRKETIA
CC_17_CNCRBRST
CC_18_CNCRCLRC
CC_19_CNCRPRST
CC_20_CNCRLUNG
CC_21_CNCREndM
;
do over list ;
if list>0 then list=1;
if list<=0 then list=0;
end;

/*create aggregated indicators*/
CC_AMI_isch=CC_1_AMI|CC_12_ISCHMCHT;
CC_alzheim=CC_2_ALZH|CC_3_ALZHDMTA;
CC_cncr_chronic=CC_17_CNCRBRST | CC_18_CNCRCLRC | CC_19_CNCRPRST | CC_20_CNCRLUNG | 
	CC_21_CNCREndM ;

/*label variables*/
label CC_1_AMI="AMI"
CC_2_ALZH="Alzheimer's disease"
CC_3_ALZHDMTA="Alzheimer's or Dementia"
CC_4_ATRIALFB="Atrial fibrillation"
CC_5_CATARACT="Cataract"
CC_6_CHRNKIDN="Chronic kidney disease"
CC_7_COPD="COPD"
CC_8_CHF="CHF"
CC_9_DIABETES="Diabetes"
CC_10_GLAUCOMA="Glaucoma"
CC_11_HIPFRAC="Hip fracture"
CC_12_ISCHMCHT="Ischemic heart disease"
CC_13_DEPRESSN="Depression"
CC_14_OSTEOPRS="Osteoporosis"
CC_15_RA_OA="Arthritis"
CC_16_STRKETIA="Stroke/TIA"
CC_17_CNCRBRST="Breast cancer"
CC_18_CNCRCLRC="Colorectal cancer"
CC_19_CNCRPRST="Prostate cancer"
CC_20_CNCRLUNG="Lung cancer"
CC_21_CNCREndM="Endometrial cancer"
CC_AMI_isch="AMI or Ischemic heart failure"
CC_alzheim="Alzheimer's or dementia"
CC_cncr_chronic="Cancer, all types"
;
run;


proc means;
var CC_1_AMI
CC_2_ALZH
CC_3_ALZHDMTA
CC_4_ATRIALFB
CC_5_CATARACT
CC_6_CHRNKIDN
CC_7_COPD
CC_8_CHF
CC_9_DIABETES
CC_10_GLAUCOMA
CC_11_HIPFRAC
CC_12_ISCHMCHT
CC_13_DEPRESSN
CC_14_OSTEOPRS
CC_15_RA_OA
CC_16_STRKETIA
CC_17_CNCRBRST
CC_18_CNCRCLRC
CC_19_CNCRPRST
CC_20_CNCRLUNG
CC_21_CNCREndM;
run;

%mend;

%cc(predeath=n12m);

/*so resulting datastets is bid_dx_0d_n12m3 with variable r_bid_hrs to merge*/

/************************************************************/
/*rename the 12 month pre-surgery chronic condition vars*/
/************************************************************/

/*creates dataset to use in the rename macro below*/
data test;
set bid_dx_0d_n12m3;
run;

/*rename macro to add _n12mn0 suffix to the chronic conditions variable names
Data file is still work.test but variables renamed after running this macro*/
%rename(WORK,TEST,n12mn0);

/*Changes name of bid_hrs variable so no _n12mn0*/
data spo_int.chronic_21_n12m_n0_0;
set test;
r_bid_hrs=r_bid_hrs_n12mn0;
drop r_bid_hrs_n12mn0;
run;

proc freq data=spo_int.chronic_21_n12m_n0_0;
table cc_alzheim_n12mn0 cc_cncr_chronic_n12mn0;
run;
proc contents;
run;

/************************************************************/
/*Merge into HRS dataset with elix already added */
/************************************************************/
/*merge chronic conditions into HRS dataset
again leave cc's blank if no hrs xwalk id to claims *913 missing*/
proc sql;
create table spo_int.hrs_elix_cc_n12m(drop=bid_hrs2) as select a.*,
b.*
from 
spo_int.hrs_elix_n12m a 
left join
spo_int.chronic_21_n12m_n0_0(rename=(r_bid_hrs=bid_hrs2)) b
on a.r_bid_hrs = b.bid_hrs2;
quit;

proc freq data=spo_int.hrs_elix_cc_n12m;
table cc_alzheim_n12mn0 cc_cncr_chronic_n12mn0;
run;




H="Merge in regional data"
/*Use Ling's processed, merged regional data file
Skip next heading section, this section should be revised
if we want to revisit the regional controls

Per Katherine email on 1/16/2014, don't need to update at this time 

starting datasets:
spo_int.exit_rest_r_s_core_n1_p1_ins
E:\data\Dartmouth_misc\zip_hrr_hci_bed_eol_3 - saved in E:/data/spouse/ref_data

starting hrs dataset spo_int.hrs_elix_cc_n12m

Final dataset: spo_int.hrs_elix_cc_n12m_reg

*/

libname ref "E:/data/spouse/ref_data";
proc contents data=ref.zip_hrr_hci_bed_eol_3;
run;

/*get r's zip code from exit interviews*/
data id_zip;
set spo_int.hrs_elix_cc_n12m(rename=(r_ZIP10_2000_e=r_ZIP10_e));
/*use zip code variable from restricted dataset for year of exit interview*/
zip_exit=vvaluex("r_zip"||substr(trim(left(r_exit_year_x)),3,2)||"_E" );
run;

/*2 obs have missing zip in exit year
They have zip in previous wave so use that*/
data zztestzip1;
set id_zip;
if zip_exit = "";
run;

/*if no zip in exit year, then use zip from wave prior to exit*/
data id_zip_2;
set id_zip;
if zip_exit="" then zip_exit=vvaluex("r_zip"||substr(trim(left(r_exit_year_x-2)),3,2)||"_E"  );
run;

/*check to see if obs still have missing zip - none*/
data zztestzip2;
set id_zip_2;
if zip_exit = "";
run;

proc sql outobs=10;
select zip_exit  from id_zip_2;
quit;

/*convert zip to numeric variable*/
data id_zip_3;
set id_zip_2;
zip_exit_n=zip_exit+0;
drop zip_exit;
run;

/*merge in the region data by zip code*/
proc sql;
create table spo_int.hrs_elix_cc_n12m_reg as select a.*,b.*
from id_zip_3 a 
left join
ref.zip_hrr_hci_bed_eol_3 b
on a.zip_exit_n=b.zip;
quit;



H="xxxx = Process location level raw data"
/*
Can skip this step and just use the location data already processed
by Ling saved:
E:\data\Dartmouth_misc\zip_hrr_hci_bed_eol_3




Process various data files with location data into a single file with a zip code link
so can link up to zip code in HRS dataset

Raw data is saved here:
RG PC: C:\data\dartmouth\raw_data\
Refer to readme.txt file for links / descriptions of data sources
AK PC: Created new folder for Dartmouth data to be merged into 2010 dataset
E:\data\Dartmouth_misc_2010\raw_data
Working data saved in E:\data\Dartmouth_misc_2010

Final dataset to link to HRS is:
 */

/***********************************************************************/
/***********************************************************************/
/*bring in excel data files
two sections, one for RG PC, one for Amy's PC*/
/***********************************************************************/
/***********************************************************************/

/***********************************************************************/
/*AK filepaths*/
/***********************************************************************//*
/*the zip hrr crosswalk,from year 2007*/
/*proc import datafile="E:\data\Dartmouth_misc\ZipHsaHrr07.xls"  */
proc import datafile="E:\data\Dartmouth_misc_2010\raw_data\ZipHsaHrr07.xls"
out=zip_hrr 
replace;
run;

/*hci index at hrr level */
/* proc import datafile="C:\data\Dartmouth_misc\hci_hrr.xls" */
proc import datafile="E:\data\Dartmouth_misc_2010\raw_data\hci_hrr.xls" 
out=hrr_hci_index 
replace;
run;

/*capacity data per capita - number beds/physicians/specialists*/
/*proc import datafile="E:\data\Dartmouth_misc\HRR_data_beds_specialist_per_capital.xls" */  
proc import datafile="E:\data\Dartmouth_misc_2010\raw_data\HRR_data_beds_specialist_per_capital.xls"
out=hrr_beds_per_capita 
replace;
run;
proc contents ;
run;

/*Hrr_eol_ei_annals_2003*/
/* proc import datafile="C:\projects\Hospice_impact_on_utilization\raw_data\Hrr_eol_ei_annals_2003.xls" */ 
proc import datafile="E:\data\Dartmouth_misc_2010\raw_data\Hrr_eol_ei_annals_2003.xls"
out=hrr_eol 
replace;
run;

/*Wage index by CBSA from CMS*/
/* proc import datafile="E:\data\Dartmouth_misc\wage_index_cbsa_2008.xls"  */
proc import datafile="E:\data\Dartmouth_misc_2010\raw_data\wage_index_cbsa_2008.xls"  
out=wage_index 
replace;
run;

/*Create new libname for data to merge into 2010 dataset*/
*libname d_raw "E:\data\Dartmouth_misc";
libname d_raw "E:\data\Dartmouth_misc_2010\raw_data";
libname d_wk "E:\data\Dartmouth_misc_2010";


/***********************************************************************/
/*RG filepaths*/
/***********************************************************************/
/*the zip hrr crosswalk,from year 2007*/
proc import datafile="C:\data\dartmouth\raw_data\ZipHsaHrr07.xls"  out=zip_hrr 
replace;
run;

/*hci index at hrr level */
 proc import datafile="C:\data\dartmouth\raw_data\hci_hrr.xls"  out=hrr_hci_index 
replace;
run;

/*2006 beds and physicians per capita dataset from Dartmouth*/
proc import datafile="C:\data\dartmouth\raw_data\HRR_data_beds_specialist_per_capital.xls"  out=hrr_beds_per_capita 
replace;
run;
proc contents ;
run;

/*Hrr_eol_ei_annals_2003*/
proc import datafile="C:\data\dartmouth\raw_data\Hrr_eol_ei_annals_2003.xls" 
out=hrr_eol 
replace;
run;

/*Wage index by CBSA from CMS*/
proc import datafile="C:\data\dartmouth\raw_data\wage_index_cbsa_2008.xls"  out=wage_index 
replace;
run;

/*Create new libname for data to merge into 2010 dataset*/
libname d_raw "C:\data\dartmouth\raw_data";
libname d_wk "C:\data\dartmouth";

/***********************************************************************/
/***********************************************************************/
/*Create single dataset with regional data at the HRR level
Zip, HRR, HCI, capacity per capita, quintile of intensity, 
pct with pal care, pct teaching hospitals */
/***********************************************************************/
/***********************************************************************/

/*Add HCI index to zip code / HRR list*/
proc sql;
create table zip_hrr_hci as select a.*,b.hci_index
from zip_hrr a 
left join
hrr_hci_index b
on a.hrrnum=b.geoid;
quit;

proc means ;
var hci_index;
run;

/*Add labels for beds/ physician per capita dataset*/
data hrr_beds_per_capita2;
set hrr_beds_per_capita;
label hospital_beds="Acute Care Hospital Beds per 1,000 Residents,2006,at hrr";
label Medical_Specialists="Medical_Specialists per 100,000 Residents,2006,at hrr";
label Physicians="Physicians per 100,000 Residents,2006,at hrr";
label Primary_Care="Primary_Care per 100,000 Residents,2006,at hrr";
label Specialists="Total Specialists per 100,000 Residents,2006,at hrr";
run;
proc sort data=hrr_beds_per_capita2 out=hrr_beds_per_capita3 nodupkey;
by hrr;
run;

/*merge capacity data with zip/hci dataset*/
proc sql;
create table zip_hrr_hci_bed(drop=hrr) as select *
from zip_hrr_hci  a 
left join
hrr_beds_per_capita3 b
on a.hrrnum=b.hrr;
quit;

proc means ;
var hospital_beds;
run;

/*add quintile of intensity by HRR*/
proc sql;
create table zip_hrr_hci_bed_eol as select a.*,b.Quintile_of_Intensity as Quintile_of_eol
from zip_hrr_hci_bed a 
left join
hrr_eol b
on a.hrrnum=b.hrr_number;
quit;

/*no exclusions dataset?? not sure where this comes from...
Appears to be a hospital level dataset with hospital
characteristics that are then averaged by HRR to get
the following variables:
1. pct of  hospitals with Pal care at HRR level (canypal)
2. pct of teaching hospitals at HRR level (medsch)
*/
proc contents data=d_raw.no_exclusions2;
run;
proc sql outobs=10;
select distinct canypal from d_raw.no_exclusions2;
quit;
proc freq data=d_raw.no_exclusions2;
table canypal uanypal medsch;
run;

data no_exclusions2;
set d_raw.no_exclusions2;
hrrnum=hrrcode+0;
run;

proc sql;
create table pct_pal_hrr as
select distinct hrrnum,sum(canypal)/count(*)*100 as pct_pal_hrr from no_exclusions2
where hrrnum~=. and canypal~=. group by hrrnum;
quit;
proc means;
var pct_pal_hrr;
run;
proc sql;
create table pct_teach_hrr as
select distinct hrrnum,sum(medsch)/count(*)*100 as pct_teach_hrr from no_exclusions2
where hrrnum~=. and medsch~=. group by hrrnum;
quit;
proc means;
var pct_teach_hrr;
run;

/*merge palliative care percentage with other zip-hrr level data*/
proc sql;
create table zip_hrr_hci_bed_eol_2 as select a.*,b.pct_pal_hrr
from zip_hrr_hci_bed_eol a 
left join
pct_pal_hrr b
on a.hrrnum=b.hrrnum;
quit;

/*Final merge to get the saved data file, includes:
Hrr level, with zip:
hci_index
Beds per 1,000 Residents,2006,at hrr
Specialist per 1,000 Residents,2006,at hrr
Quintile_of_eol,
pct_teach_hrr,pct teaching hosp
pct_pal_hrr,pct palliative program
*/
proc sql;
create table d_wk.zip_hrr_hci_bed_eol_3 as select a.*,b.pct_teach_hrr
from zip_hrr_hci_bed_eol_2 a 
left join
pct_teach_hrr b
on a.hrrnum=b.hrrnum;
quit;

/*****************************************************************************/
/*Process wage index so have by zip rather than cbsa as received from cms
Note, this is the same as was done for the oop project in the
code file oop_mc_outline.otl*/
/*****************************************************************************/ 

/*Step 1: create clean xwalk between cbsa and zip*/

/*Bring in xwalk file between CBSA codes and zip codes
Note only keep variables needed from xwalk file because formats 
are missing for some of the other text variables*/
data zip_cb;
set d_raw.xtract(keep=zip5 cbsa state);
zip_n=zip5+0;
cbsa_n=cbsa+0;
/*If zip code is missing, add state code*/
if zip_n~=.;
state_n=state+0;
run;

*Remove duplicate entries for zip5 and cbsa from xwalk file;
*Goes from 39904 to 49289 rows;
proc sort data=zip_cb out=zip_cb2 nodupkey;
by zip_n cbsa_n;
run;

*Check to see zip codes in a cbsa code for Rochester, NY;
proc sql;
select zip5, cbsa from zip_cb2
where cbsa_n in (40380);
quit;

/*note several zip codes have multiple cbsa*/
/*create dataset with just one entry for each zip code
8029 zip codes have more than one cbsa code
Just use the first one when sort*/

/*this is a little different from Ling's original code
Don't want to keep the entries where cbsa is missing for a zip code
so drop those obs first, then sort, keep first and re-merge to get full
list of zip codes*/
/*for zip codes with cbsa codes*/
data zip_cb3;
set zip_cb2;
if cbsa_n ~= .;
run;

proc sort data=zip_cb3 out=zip_cb4 nodupkey;
by zip_n;
run;

/*for zip codes without cbsa codes*/
data zip_cb3a;
set zip_cb2;
if cbsa_n = .;
run;

proc sort data=zip_cb3a out=zip_cb4a nodupkey;
by zip_n;
run;

proc sql;
create table zip_cb5 as select * from
zip_cb4a
where zip_n not in (select zip_n from zip_cb4); 
quit;

data cbsa_zip_final;
set zip_cb4 zip_cb4;
run;

/*check - there should be no duplicates
This is final xwalk of zip and cbsa*/
proc sort data=cbsa_zip_final nodupkey;
by zip_n;
run;

*Check to see zip codes in a cbsa code for Rochester, NY;
proc sql;
select zip_n, cbsa from cbsa_zip_final
where cbsa_n in (40380);
quit;

/*Step 2: For cases with missing wage index at the cbsa level,
replace with state average values*/

/*replace those in 3 states missing wage_index as the state average*/
data wage_index2;
set wage_index;
cbsa_n=cbsa_code+0;
if trim(left(cbsa_code))~="";
wage_index_2008=Full_Wage_Index;
if index(trim(left(Urban_Area_Title)),", MA")>0 then MA=1;
if index(trim(left(Urban_Area_Title)),", NJ")>0 then NJ=1;
if index(trim(left(Urban_Area_Title)),", RI")>0 then RI=1;
if state_in_wage_index=25 then wage_index_2008=1.0953286; 
if state_in_wage_index=34 then wage_index_2008=1.092057; 
if state_in_wage_index=44 then wage_index_2008=1.0783000; 
run;

*As a check look at observations from Rhode Island
Mean is the assigned wage index for the state;
proc freq data=wage_index2(where=(ri=1));
table Urban_Area_Title;
run;

%let var=ri;
proc means data=wage_index2;
class &var;
var wage_index_2008;
run;

/******************************************************************/
/* Create dataset with cbsa, wage index and zip code */
/******************************************************************/
proc sql;
create table zip_cbsa_wage_index as
select a.*,b.wage_index_2008 from
cbsa_zip_final a
left join
wage_index2 b
on a.cbsa_n=b.cbsa_n;
quit;

/*Check for and remove duplicates by zip - no duplicates*/
proc sort data=zip_cbsa_wage_index out=zip_cbsa_wage_index2 nodupkey;
by zip_n;
run;

/******************************************************************/
/*merge into the dataset using zip code*/
/******************************************************************/

/*sort files to prepare to merge*/
proc sort data=zip_cbsa_wage_index out=zip_cbsa_wage_index2 nodupkey;
by zip_n;
run;

proc sort data=d_wk.zip_hrr_hci_bed_eol_3 out=zip_old nodupkey;
by zipcode07;
run;

proc sql;
create table d_wk.zip_hrr_hci_bed_eol_4 as select a.*,b.wage_index_2008
from zip_old a 
left join
zip_cbsa_wage_index2(where=(zip_n~=.)) b
on a.zipcode07=b.zip_n;
quit;

/*21814 zip codes do not have wage index at the cbsa level*/
proc freq;
table wage_index_2008 /missprint;
run;

/*for these missing wage index, use the state average*/



H="Create additional variables"
/*creates the following additional variables:
1. r_adl change between waves
2. age at death
3. female indicator
4. hs education
5. relig importance
6. live alone different waves
*/

proc freq data=spo_int.hrs_elix_cc_n12m_reg;
table r_adl_cat_core_n1 r_adl_cat_core_n2 /missprint;
run;

data adl_change_1;
set spo_int.hrs_elix_cc_n12m_reg;

/*initalize variable - stable ind = 1 if stays the same or improves (0 if declines)*/
r_adl_stable_ind_n1n2=0;
if ((r_adl_cat_core_n1=0) & (r_adl_cat_core_n2=0)) then r_adl_stable_ind_n1n2=1 ;
* to account from those who improved from moderate to independent (overlap with r_adl_improved_n1n2);
if ((r_adl_cat_core_n1=0) & (r_adl_cat_core_n2=1 | r_adl_cat_core_n2=2)) then r_adl_stable_ind_n1n2=1 ;

r_adl_stable_partial_n1n2=0;
if ((r_adl_cat_core_n1=1) & (r_adl_cat_core_n2=1)) then r_adl_stable_partial_n1n2=1 ;;
* to account from those who improved from severe to moderate (overlap with r_adl_improved_n1n2);
if ((r_adl_cat_core_n1=1) & (r_adl_cat_core_n2=2)) then r_adl_stable_partial_n1n2=1 ;

r_adl_stable_severe_n1n2=0;
 if ((r_adl_cat_core_n1=2) & (r_adl_cat_core_n2=2)) then r_adl_stable_severe_n1n2=1;

r_adl_change_i_m_n1n2=0;
if ((r_adl_cat_core_n1=1) & (r_adl_cat_core_n2=0)) then r_adl_change_i_m_n1n2=1 ;

r_adl_change_i_s_n1n2=0;
if ((r_adl_cat_core_n1=2) & (r_adl_cat_core_n2=0)) then r_adl_change_i_s_n1n2=1 ;

r_adl_change_m_s_n1n2=0;
if ((r_adl_cat_core_n1=2)& (r_adl_cat_core_n2=1)) then r_adl_change_m_s_n1n2=1 ;

r_adl_improved_n1n2=0;
 if ((r_adl_cat_core_n1=1) & (r_adl_cat_core_n2=2)) then r_adl_improved_n1n2=1;
if ((r_adl_cat_core_n1=0) & (r_adl_cat_core_n2=1 | r_adl_cat_core_n2=2)) then r_adl_improved_n1n2=1 ;

/*if n1 or n2 adl category is missing, new category for missing data so not dropped from analysis*/
array list r_adl_stable_ind_n1n2 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 r_adl_change_i_m_n1n2 r_adl_change_i_s_n1n2 r_adl_change_m_s_n1n2 r_adl_improved_n1n2;
do over list;
if r_adl_cat_core_n1=. or  r_adl_cat_core_n2=.  then list=0;
end;

r_adl_change_n1n2_miss=0;
if r_adl_cat_core_n1=. or  r_adl_cat_core_n2=.  then r_adl_change_n1n2_miss=1;


label r_adl_stable_ind_n1n2="R ADL Ind. stable or improving n2 to n1, 1=Yes";
label r_adl_stable_partial_n1n2="R ADL Partial Depend, stable n2 to n1, 1=Yes";
label r_adl_stable_severe_n1n2="R ADL Severe Depend, stable n2 to n1, 1=Yes";
label r_adl_change_i_m_n1n2="R ADL Indep. to Partial Depend n2 to n1, 1=Yes";
label r_adl_change_i_s_n1n2="R ADL Indep. to Severe Depend n2 to n1, 1=Yes";
label r_adl_change_m_s_n1n2="R ADL Partial to Severe Depend n2 to n1, 1=Yes";
label r_adl_improved_n1n2="R ADL Improvement n2 to n1, 1=Yes";
label r_adl_change_n1n2_miss="R ADL n2 to n1 unknown";

r_adl_stable_ind_xn1=0;
if ((r_adl_cat_x=0) & (r_adl_cat_core_n1=0)) then r_adl_stable_ind_xn1=1 ;
* to account from those who improved from moderate to independent (overlap with r_adl_improved_xn1);
if ((r_adl_cat_x=0) & (r_adl_cat_core_n1=1 | r_adl_cat_core_n1=2)) then r_adl_stable_ind_xn1=1 ;

r_adl_stable_partial_xn1=0;
if ((r_adl_cat_x=1) & (r_adl_cat_core_n1=1)) then r_adl_stable_partial_xn1=1 ;;
* to account from those who improved from severe to moderate (overlap with r_adl_improved_xn1);
if ((r_adl_cat_x=1) & (r_adl_cat_core_n1=2)) then r_adl_stable_partial_xn1=1 ;

r_adl_stable_severe_xn1=0;
 if ((r_adl_cat_x=2|r_adl_cat_x=3) & (r_adl_cat_core_n1=2)) then r_adl_stable_severe_xn1=1;

r_adl_change_i_m_xn1=0;
if ((r_adl_cat_x=1) & (r_adl_cat_core_n1=0)) then r_adl_change_i_m_xn1=1 ;

r_adl_change_i_s_xn1=0;
if ((r_adl_cat_x=2|r_adl_cat_x=3) & (r_adl_cat_core_n1=0)) then r_adl_change_i_s_xn1=1 ;

r_adl_change_m_s_xn1=0;
if ((r_adl_cat_x=2|r_adl_cat_x=3)& (r_adl_cat_core_n1=1)) then r_adl_change_m_s_xn1=1 ;

r_adl_improved_xn1=0;
 if ((r_adl_cat_x=1) & (r_adl_cat_core_n1=2)) then r_adl_improved_xn1=1;
if ((r_adl_cat_x=0) & (r_adl_cat_core_n1=1 | r_adl_cat_core_n1=2)) then r_adl_improved_xn1=1 ;

array list2 r_adl_stable_ind_xn1 r_adl_stable_partial_xn1 r_adl_stable_severe_xn1 r_adl_change_i_m_xn1 r_adl_change_i_s_xn1 r_adl_change_m_s_xn1 r_adl_improved_xn1;
do over list2;
if r_adl_cat_x=. or  r_adl_cat_core_n1=.  then list2=.;
end;

label r_adl_stable_ind_xn1="R ADL stable or improving n1 to exit, 1=Yes";
label r_adl_stable_partial_xn1="R ADL Partial Depend, stable n1 to exit, 1=Yes";
label r_adl_stable_severe_xn1="R ADL Severe Depend, stable n1 to exit, 1=Yes";
label r_adl_change_i_m_xn1="R ADL Indep. to Partial Depend n1 to exit, 1=Yes";
label r_adl_change_i_s_xn1="R ADL Indep. to Severe Depend n1 to exit, 1=Yes";
label r_adl_change_m_s_xn1="R ADL Partial to Severe Depend n1 to exit, 1=Yes";
label r_adl_improved_xn1="R ADL Improvement n1 to exit, 1=Yes";

*For spouse n2 to n1;
s_adl_stable_ind_n1n2=0;
if ((s_adl_cat_core_n1=0) & (s_adl_cat_core_n2=0)) then s_adl_stable_ind_n1n2=1 ;
* to account from those who improved from moderate to independent (overlap with s_adl_improved_n1n2);
if ((s_adl_cat_core_n1=0) & (s_adl_cat_core_n2=1 | s_adl_cat_core_n2=2)) then s_adl_stable_ind_n1n2=1 ;

s_adl_stable_partial_n1n2=0;
if ((s_adl_cat_core_n1=1) & (s_adl_cat_core_n2=1)) then s_adl_stable_partial_n1n2=1 ;;
* to account from those who improved from severe to moderate (overlap with s_adl_improved_n1n2);
if ((s_adl_cat_core_n1=1) & (s_adl_cat_core_n2=2)) then s_adl_stable_partial_n1n2=1 ;

s_adl_stable_severe_n1n2=0;
 if ((s_adl_cat_core_n1=2) & (s_adl_cat_core_n2=2)) then s_adl_stable_severe_n1n2=1;

s_adl_change_i_m_n1n2=0;
if ((s_adl_cat_core_n1=1) & (s_adl_cat_core_n2=0)) then s_adl_change_i_m_n1n2=1 ;

s_adl_change_i_s_n1n2=0;
if ((s_adl_cat_core_n1=2) & (s_adl_cat_core_n2=0)) then s_adl_change_i_s_n1n2=1 ;

s_adl_change_m_s_n1n2=0;
if ((s_adl_cat_core_n1=2)& (s_adl_cat_core_n2=1)) then s_adl_change_m_s_n1n2=1 ;

s_adl_improved_n1n2=0;
 if ((s_adl_cat_core_n1=1) & (s_adl_cat_core_n2=2)) then s_adl_improved_n1n2=1;
if ((s_adl_cat_core_n1=0) & (s_adl_cat_core_n2=1 | s_adl_cat_core_n2=2)) then s_adl_improved_n1n2=1 ;

/*if n1 or n2 adl category is missing, then set to missing*/
array slist s_adl_stable_ind_n1n2 s_adl_stable_partial_n1n2 s_adl_stable_severe_n1n2 s_adl_change_i_m_n1n2 s_adl_change_i_s_n1n2 s_adl_change_m_s_n1n2 s_adl_improved_n1n2;
do over slist;
if s_adl_cat_core_n1=. or  s_adl_cat_core_n2=.  then slist=.;
end;

label s_adl_stable_ind_n1n2="S ADL Ind. stable or improving n2 to n1, 1=Yes";
label s_adl_stable_partial_n1n2="S ADL Partial Depend, stable n2 to n1, 1=Yes";
label s_adl_stable_severe_n1n2="S ADL Severe Depend, stable n2 to n1, 1=Yes";
label s_adl_change_i_m_n1n2="S ADL Indep. to Partial Depend n2 to n1, 1=Yes";
label s_adl_change_i_s_n1n2="S ADL Indep. to Severe Depend n2 to n1, 1=Yes";
label s_adl_change_m_s_n1n2="S ADL Partial to Severe Depend n2 to n1, 1=Yes";
label s_adl_improved_n1n2="S ADL Improvement n2 to n1, 1=Yes";

r_age=year(r_death_date_e)-year(r_birth_date_e);
label r_age="R's Age at death";
r_female=r_female_x;
label r_female="R Female";

s_age=year(r_death_date_e)-year(s_birth_date_e);
label s_age="S's Age at R's death";
s_female=s_female_n1;
label s_female="S Female";

if r_educ_n1 in (0,1) then r_hseduc=0;
if r_educ_n1>1 then r_hseduc=1;
if s_educ_n1 in (0,1) then s_hseduc=0;
if s_educ_n1>1 then s_hseduc=1;

r_imprelig_vimp_n1=r_imprelig_n1<=1;
if r_imprelig_n1=. then r_imprelig_vimp_n1=.;
label r_imprelig_vimp_n1="R Religion very important";

s_imprelig_vimp_n1=s_imprelig_n1<=1;
if s_imprelig_n1=. then s_imprelig_vimp_n1=.;
label s_imprelig_vimp_n1="S Religion very important";

/*live alone core n1, n2?
If household size = 0 and not nursing home resident, then yes*/
if r_hhm_n1=0 and r_nhres_n1~=1 then r_livealone_n1=1;
if r_hhm_n1>0 or r_nhres_n1=1 then r_livealone_n1=0;
if r_hhm_n2=0 and r_nhres_n2~=1 then r_livealone_n2=1;
if r_hhm_n2>0 or r_nhres_n2=1 then r_livealone_n2=0;

run;

libname spo_fnl 'E:\data\spouse\final_data';

data spo_fnl.spouse_data;
set adl_change_1;
run;

option fmterr=no;
proc export data=spo_fnl.spouse_data
outfile="E:\data\spouse\final_data\spouse_data_full.dta" replace;
run;



H="Define sample "
/*This switches to Stata using data dataset exported in previous section*/

/*Full decedent sample (2002-2010 exit interviews( is restricted to:
1. Decedents with n1 core interview
2. With medicare xwalk id
3. With FFS medicare last 6 months of life
4. Married at time of death
5. With spouse p1 interview

Additional variables to consider for sensitivity analysis:
1. P1 interview within 90 days of R's death
2. R died suddenly as defined by either no comorbidities 12 m before
death or cause of death = accident, suicide, homicide

*/

capture log close

clear all
set mem 500m
set more off

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

log using "`logpath'\1-HRS_Spouse_sample.txt", text replace

cd `datapath'

use spouse_data_full.dta

//set matrix for sample size determination table
mat deced_core=J(11,4,.)

//all decedents from 2002-2010 exit interviews
sum r_exit_year_x, detail
mat deced_core[1,1]=r(N)
mat deced_core[1,4]=r(N)

//check of married decedents
tab r_married_x, missing

gen n1core_ind=.
replace n1core_ind=0 if  r_core_year_n1==.
replace n1core_ind=1 if  r_core_year_n1!=.
tab n1core_ind, missing

tab n1core_ind r_exit_year_x , missing
tab r_core_year_n1 r_exit_year_x , missing

//decedents with n1 core interview
sum r_exit_year_x if n1core_ind==1, detail
mat deced_core[2,1]=r(N)
mat deced_core[2,4]=r(N)

//decedents with n1 core + xwalk
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1, detail
mat deced_core[3,1]=r(N)
mat deced_core[3,4]=r(N)

//with ffs mc last 6 months of life
//have parst a and b coverage and no hmo
gen byte ins_ind=.
replace ins_ind=1 if r_part_ab_6m==1 & r_hmo_d_6m==0
replace ins_ind=0 if r_part_ab_6m!=1 | r_hmo_d_6m!=0
tab ins_ind, missing
***************************************
gen byte ins_ind_old=.
replace ins_ind_old=1 if r_part_ab_6m_old==1 & r_hmo_d_6m_old==0
replace ins_ind_old=0 if r_part_ab_6m_old!=1 | r_hmo_d_6m_old!=0
tab ins_ind_old, missing
****************************************

//decedents with n1 core + xwalk + ffs mc last 6 months of life
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1, detail
mat deced_core[4,1]=r(N)
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind_old==1, detail
mat deced_core[4,4]=r(N)


//decedents with n1 core + xwalk + married
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1, detail
mat deced_core[5,1]=r(N)
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind_old==1 &  r_married_x==1, detail
mat deced_core[5,4]=r(N)


//have spouse p1 interview
gen byte sp1core_ind=.
replace sp1core_ind=0 if s_core_year_p1==.
replace sp1core_ind=1 if s_core_year_p1!=.
tab sp1core_ind, missing
tab sp1core_ind r_exit_year_x , missing
tab s_core_year_p1 r_exit_year_x , missing

//decedents with n1 core + xwalk + married + spouse p1 interview
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & sp1core_ind==1, detail
mat deced_core[6,1]=r(N)
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind_old==1 &  r_married_x==1 & sp1core_ind==1, detail
mat deced_core[6,4]=r(N)


//have spouse n1 interview
gen byte sn1core_ind=.
replace sn1core_ind=0 if s_core_year_n1==.
replace sn1core_ind=1 if s_core_year_n1!=.
tab sn1core_ind, missing
tab sn1core_ind r_exit_year_x , missing
tab s_core_year_n1 r_exit_year_x , missing

//decedents with n1 core + xwalk + married + spouse p1 and n1 interview
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & sp1core_ind==1 & sn1core_ind==1, detail
mat deced_core[7,1]=r(N)
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind_old==1 &  r_married_x==1 & sp1core_ind==1 & sn1core_ind==1, detail
mat deced_core[7,4]=r(N)


//p1 interview within 30, 90 days of r's death
gen days_p1_core_dead =  s_c_ivw_date_p1 -  r_death_date_e
gen p1_wi_90d = .
replace p1_wi_90d=1 if days_p1_core_dead<=90
replace p1_wi_90d=0 if (days_p1_core_dead>90 & days_p1_core_dead!=.)
la var p1_wi_90d "p1 interview w/i 90 days r death"
tab p1_wi_90d, missing

gen p1_wi_30d = .
replace p1_wi_30d=1 if days_p1_core_dead<=30
replace p1_wi_30d=0 if (days_p1_core_dead>30 & days_p1_core_dead!=.)
la var p1_wi_30d "p1 interview w/i 30 days r death"
tab p1_wi_30d, missing

//decedents with n1 core + xwalk + married + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0, detail
mat deced_core[8,1]=r(N)

sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind_old==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0, detail
mat deced_core[8,4]=r(N)

//no comorbidities
gen byte no_el_comorb_12m = .
replace no_el_comorb_12m =1 if comorb_all_0d_n12m==0
replace no_el_comorb_12m =0 if (comorb_all_0d_n12m>0 & comorb_all_0d_n12m!=.)
la var no_el_comorb_12m "Ind. for no Elix comorb 12m before death"
tab no_el_comorb_12m , missing

//what about no chronic conditions?
gen cc_all_count_12m = cc_1_ami_n12mn0 + cc_2_alzh_n12mn0 + cc_3_alzhdmta_n12mn0 + ///
cc_4_atrialfb_n12mn0 + cc_5_cataract_n12mn0 + cc_6_chrnkidn_n12mn0 + ///
cc_7_copd_n12mn0 + cc_8_chf_n12mn0 + cc_9_diabetes_n12mn0 + cc_10_glaucoma_n12mn0 + ///
cc_11_hipfrac_n12mn0 + cc_12_ischmcht_n12mn0 + cc_13_depressn_n12mn0 + ///
cc_14_osteoprs_n12mn0 + cc_15_ra_oa_n12mn0 + cc_16_strketia_n12mn0 + ///
cc_17_cncrbrst_n12mn0 + cc_18_cncrclrc_n12mn0 + cc_19_cncrprst_n12mn0 + ///
cc_20_cncrlung_n12mn0 + cc_21_cncrendm_n12mn0

tab cc_all_count_12m, missing

//cc's excluding cataract and glaucoma
gen cc_all_count_12m_2 = cc_1_ami_n12mn0 + cc_2_alzh_n12mn0 + cc_3_alzhdmta_n12mn0 + ///
cc_4_atrialfb_n12mn0 + /*cc_5_cataract_n12mn0 +*/ cc_6_chrnkidn_n12mn0 + ///
cc_7_copd_n12mn0 + cc_8_chf_n12mn0 + cc_9_diabetes_n12mn0 + /*cc_10_glaucoma_n12mn0 +*/ ///
cc_11_hipfrac_n12mn0 + cc_12_ischmcht_n12mn0 + cc_13_depressn_n12mn0 + ///
cc_14_osteoprs_n12mn0 + cc_15_ra_oa_n12mn0 + cc_16_strketia_n12mn0 + ///
cc_17_cncrbrst_n12mn0 + cc_18_cncrclrc_n12mn0 + cc_19_cncrprst_n12mn0 + ///
cc_20_cncrlung_n12mn0 + cc_21_cncrendm_n12mn0
la var cc_all_count_12m_2 "Count of cc's, excludes cataract and glaucoma"

tab cc_all_count_12m_2, missing

tab cc_all_count_12m cc_all_count_12m_2, missing

gen byte no_cc_12m = .
replace no_cc_12m =1 if cc_all_count_12m ==0
replace no_cc_12m =0 if (cc_all_count_12m >0 & cc_all_count_12m !=.)
la var no_cc_12m "Ind. for no Chronic conditions 12m before death"
tab no_cc_12m , missing

gen byte no_cc_12m_excl_cataract = .
replace no_cc_12m_excl_cataract =1 if cc_all_count_12m_2==0
replace no_cc_12m_excl_cataract =0 if (cc_all_count_12m_2>0 & cc_all_count_12m_2!=.)
la var no_cc_12m_excl_cataract "Ind. for no Chronic conditions 12m before death"
tab no_cc_12m_excl_cataract , missing


//cell using elixhauser
//decedents with n1 core + xwalk + married + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0 & no_el_comorb_12m==0, detail
mat deced_core[9,1]=r(N)

//cell using chronic conditions
//decedents with n1 core + xwalk + married + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0 & no_cc_12m==0, detail
mat deced_core[9,2]=r(N)

//cell using chronic conditions, v2 excluding cataract and glaucoma
//decedents with n1 core + xwalk + married + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0 & no_cc_12m_excl_cataract==0, detail
mat deced_core[9,3]=r(N)
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind_old==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0 & no_cc_12m_excl_cataract==0, detail
mat deced_core[9,4]=r(N)


//cause of death = Accidents, Suicide, Homicide (var = 12)
tab r_cause_death_12_n_e, missing
replace r_cause_death_12_n_e=. if r_cause_death_12_n_e==14
gen byte sudden_cause_death = .
replace sudden_cause_death =1 if r_cause_death_12_n_e==12
replace sudden_cause_death =0 if (r_cause_death_12_n_e!=12 & r_cause_death_12_n_e!=.)
la var sudden_cause_death "Cause of death = accidents, suicide, homicide"
tab sudden_cause_death, missing

//using elixhauser
//decedents with n1 core + xwalk + married + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0 & no_el_comorb_12m==0 & sudden_cause_death==0, detail
mat deced_core[10,1]=r(N)

//using ccs
//decedents with n1 core + xwalk + married + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0 & no_cc_12m==0 & sudden_cause_death==0, detail
mat deced_core[10,2]=r(N)

//using ccs v2
//decedents with n1 core + xwalk + married + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0 & no_cc_12m_excl_cataract==0 & sudden_cause_death==0, detail
mat deced_core[10,3]=r(N)
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind_old==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0 & no_cc_12m_excl_cataract==0 & sudden_cause_death==0, detail
mat deced_core[10,4]=r(N)


//full n1 p1 cesd interview?
gen byte cesd_miss_n1 = 0
replace cesd_miss_n1 =1 if s_cesd_tot_n1==.
gen byte cesd_miss_p1 = 0
replace cesd_miss_p1 =1 if s_cesd_tot_p1==.
tab cesd_miss_n1 cesd_miss_p1 , missing
gen byte cesd_miss_n1_p1 = 0
replace cesd_miss_n1_p1 =1 if cesd_miss_n1==1 | cesd_miss_p1 ==1
la var cesd_miss_n1_p1 "CESD missing either n1 or p1"
tab cesd_miss_n1_p1 , missing

//using elixhauser
//decedents with n1 core + xwalk + married + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0 & no_el_comorb_12m==0 & sudden_cause_death==0 & cesd_miss_n1_p1==0, detail
mat deced_core[11,1]=r(N)

//using ccs
//decedents with n1 core + xwalk + married + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0 & no_cc_12m==0 & sudden_cause_death==0 & cesd_miss_n1_p1==0, detail
mat deced_core[11,2]=r(N)

//using ccs v2
//decedents with n1 core + xwalk + married + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0 & no_cc_12m_excl_cataract==0 & sudden_cause_death==0 & cesd_miss_n1_p1==0, detail
mat deced_core[11,3]=r(N)
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind_old==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & p1_wi_90d==0 & no_cc_12m_excl_cataract==0 & sudden_cause_death==0 & cesd_miss_n1_p1==0, detail
mat deced_core[11,4]=r(N)


mat list deced_core
	
frmttable using `logpath'\2010_sample_est , statmat(deced_core) ///
	title("2010 sample size estimate - requiring an n1 core interview") ///
	ctitle("","Elix - n","CCs - n", "CC, no cataract, glaucoma", "Old, wrong FFS") ///
	rtitle("All decedents from exit interviews" \ "With n1 core interview" \ ///
	"With mc xwalk id" \ "With FFS mc last 6 months of life" \ "Married at time of death" \ ///
	"Spouse p1 core interview" \"Spouse n1 core interview" \ "p1 ivw 90+ days from r's death" \ ///
	"No comorb 12m before death" \ "Accidents, Suicide, Homicide = cause of death" \ ///
	"Full CESD interview n1 and p1") ///
	sdec(0) replace


tab r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 & r_married_x==1 & sp1core_ind==1 & sn1core_ind==1
**************************************************
//Another version of the sample table, dropping where ivw < 90 days last
mat samp2=J(11,1,.)

forvalues i = 1/7{
mat samp2[`i',1]=deced_core[`i',1]
}

//cell using chronic conditions, v2 excluding cataract and glaucoma
//decedents with n1 core + xwalk + married + spouse p1 interview 
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & no_cc_12m_excl_cataract==0, detail
mat samp2[8,1]=r(N)

//using ccs v2, excluding sudden cause of death
//decedents with n1 core + xwalk + married + spouse p1 interview 
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & no_cc_12m_excl_cataract==0 & sudden_cause_death==0, detail
mat samp2[9,1]=r(N)

//using ccs v2
//decedents with n1 core + xwalk + married + spouse p1 interview 
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & no_cc_12m_excl_cataract==0 & sudden_cause_death==0 & ///
cesd_miss_n1_p1==0, detail
mat samp2[10,1]=r(N)

//decedents with n1 core + xwalk + married + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if n1core_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_x==1 & /// 
sp1core_ind==1 & sn1core_ind==1 & no_cc_12m_excl_cataract==0 ///
& sudden_cause_death==0 & cesd_miss_n1_p1==0 & p1_wi_90d==0, detail
mat samp2[11,1]=r(N)

frmttable using `logpath'\2010_sample_est , statmat(samp2) ///
	title("v2 2010 sample size estimate - requiring an n1 core interview") ///
	ctitle("", "CC, no cataract, glaucoma - n") rtitle("All decedents from exit interviews" \ "With n1 core interview" \ ///
	"With mc xwalk id" \ "With FFS mc last 6 months of life" \ "Married at time of death" \ ///
	"Spouse p1 core interview" \"Spouse n1 core interview"  \ ///
	"No comorb 12m before death" \ "Accidents, Suicide, Homicide = cause of death" \ ///
	"Full CESD interview n1 and p1" \ "p1 ivw 90+ days from r's death") ///
	sdec(0) addtable

**************************************************
/*drop observations not in the sample*/
drop if n1core_ind==0
drop if r_xwalk_yes==0
drop if ins_ind==0 
drop if r_married_x==0 
drop if sp1core_ind==0
drop if sn1core_ind==0

drop r_part_ab_6m_old r_hmo_d_6m_old

tab r_exit_year_x r_core_year_n1

la def r_cause_death_12_n_e 1 "Infectious disease" 2 "HIV/AIDS" ///
3 "Cardiovascular disease" 4 "Chronic lower respiratory disease" ///
5 "Other Respiratory disease" 6 "Diabetes" 7 "Alzheimers Disease" ///
9 "Neoplasms" 10 "Kidney Disease (not infectious)" ///
11 "Liver, Gallbladder, Stomach and/or Intestinal disease" ///
12 "Accidents, Suicide, Homicide" 13 "Other"

la val r_cause_death_12_n_e r_cause_death_12_n_e
tab r_cause_death_12_n_e, missing

***********************************************************
***********************************************************
//second table looking at spouse missing cesd data
***********************************************************
***********************************************************
mat cesd_miss=J(4,4,.)
mat cesd_miss[1,1]=deced_core[10,1] //sample w/ p1>90d, no sudden death restriction added

tab cesd_miss_n1 if (p1_wi_90d==0 & no_el_comorb_12m==0 & ///
 sudden_cause_death==0), missing matcell(cesdtab1)

mat cesd_miss[2,1]=cesdtab1[2,1] //overall missing count n1 cesd

tab cesd_miss_n1 s_proxy_core_n1 if (p1_wi_90d==0 & no_el_comorb_12m==0 & ///
 sudden_cause_death==0), missing matcell(cesdtab2)

mat cesd_miss[2,2]=cesdtab2[2,1] //missing s n1 cesd but no proxy
mat cesd_miss[2,3]=cesdtab2[2,2] //missing s n1 cesd b/c of proxy ivw

tab cesd_miss_p1 if (p1_wi_90d==0 & no_el_comorb_12m==0 & ///
 sudden_cause_death==0), missing matcell(cesdtab3)

mat cesd_miss[3,1]=cesdtab3[2,1] //overall missing count p1 cesd

tab cesd_miss_p1 s_proxy_core_p1 if (p1_wi_90d==0 & no_el_comorb_12m==0 & ///
 sudden_cause_death==0), missing matcell(cesdtab4)

mat cesd_miss[3,2]=cesdtab4[2,1] //missing s p1 cesd but no proxy
mat cesd_miss[3,3]=cesdtab4[2,2] //missing s p1 cesd b/c of proxy ivw

gen byte cesd_miss_n1p1 = 0
replace cesd_miss_n1p1 = 1 if cesd_miss_n1==1 | cesd_miss_p1==1 
tab cesd_miss_n1p1 , missing

gen byte proxy_n1_or_p1 = 0
replace proxy_n1_or_p1 =1 if s_proxy_core_p1==1 | s_proxy_core_n1==1

gen byte proxy_n1_and_p1 = 0
replace proxy_n1_and_p1 =1 if s_proxy_core_p1==1 & s_proxy_core_n1==1

tab cesd_miss_n1p1 if (p1_wi_90d==0 & no_el_comorb_12m==0 & ///
 sudden_cause_death==0), missing matcell(cesdtab5)

mat cesd_miss[4,1]=cesdtab5[2,1] //overall missing count p1 or n1 cesd

tab cesd_miss_n1p1 proxy_n1_or_p1 if (p1_wi_90d==0 & no_el_comorb_12m==0 & ///
 sudden_cause_death==0), missing matcell(cesdtab6)

mat cesd_miss[4,2]=cesdtab6[2,1] //missing both n1 p1 no proxy

tab cesd_miss_n1p1 proxy_n1_and_p1 if (p1_wi_90d==0 & no_el_comorb_12m==0 & ///
 sudden_cause_death==0), missing matcell(cesdtab7)

mat cesd_miss[4,4]=cesdtab7[2,2] //both n1 p1 no proxy

mat cesd_miss[4,3]=(cesd_miss[4,1] - cesd_miss[4,2] - cesd_miss[4,4] ) //either n1 or p1 proxy, but not both

mat list cesd_miss

frmttable using `logpath'\2010_sample_est , statmat(cesd_miss) ///
	title("Spouse CESD N1 and P1 missing-ness") ///
	ctitle("","overall n","missing, no proxy","proxy interview","") ///
	rtitle("Overall sample" \ "Missing n1 CESD score" \ ///
	"Missing p1 CESD score" \ "Missing either n1 or p1 CESD") ///
	sdec(0) addtable

save spouse_data_sample.dta, replace
**************************************************
log close



H="Perform variable cleaning on the sample"
/*perform variable cleaning and generation on the sample as defined as
decedents with
	1. r's n1 core interview
	2. r's mc xwalk id
	3. FFS mc in last 6 months of life
	4. married at time of death
	5. spouse n1 and p1 core interview
*/

capture log close

clear all
set mem 500m
set more off

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

log using "`logpath'\2-HRS_Spouse_var_cleaning.txt", text replace

cd `datapath'

use spouse_data_sample.dta

//fill in missing gender for spouse gender variable
tab s_female, missing
//use spouse p1 interview to fill in missing gender
replace s_female=s_female_p1 if s_female==.
la var s_female "S Female"
la def fem 0 "Male" 1 "Female"
la val s_female r_female fem
tab s_female, missing

//code r-education variable using all interview information where
//there are no conflicts to try and avoid missingness when
//when use n1 and n2 core, still have lots of missing obs for 2010 decedents
//so brought in n3 core education variable to go back to 2004
gen r_educ = r_educ_n1
replace r_educ = r_educ_n2 if (r_educ_n1==.)
replace r_educ = r_educ_n3 if (r_educ_n1==. & r_educ_n2==.)
label variable r_educ "R's Eduction, Highest Level, imputed from all interviews"
label define r_educ 0 "No Formal Education" 1 "Grades 1-11" 2 "High School" 3 "Some College" 4 "College" ///
      5 "Post College", modify
label values r_educ r_educ 
tab r_educ, missing

//create r hs degree variable
gen byte r_hseduc_n1_n3 = .
replace r_hseduc_n1_n3=0 if inlist(r_educ,0,1)
replace r_hseduc_n1_n3=1 if inlist(r_educ,2,3,4,5)
la var r_hseduc_n1_n3 "HS Degree using n1-n3 core, 1=yes"
tab r_hseduc_n1_n3, missing

//code s-education variable using all interview information where
//there are no conflicts to try and avoid missingness when
//when use n1 and n2 core, still have lots of missing obs for 2010 decedents
//so brought in n3 core education variable to go back to 2004
gen s_educ = s_educ_n1
replace s_educ = s_educ_n2 if (s_educ_n1==.)
replace s_educ = s_educ_n3 if (s_educ_n1==. & s_educ_n2==.)
label variable s_educ "S's Eduction, Highest Level, imputed from all interviews"
label define s_educ 0 "No Formal Education" 1 "Grades 1-11" 2 "High School" 3 "Some College" 4 "College" ///
      5 "Post College", modify
label values s_educ s_educ 
tab s_educ, missing

//create s hs degree variable
gen byte s_hseduc_n1_n3 = .
replace s_hseduc_n1_n3=0 if inlist(s_educ,0,1)
replace s_hseduc_n1_n3=1 if inlist(s_educ,2,3,4,5)
la var s_hseduc_n1_n3 "S HS Degree using n1-n3 core, 1=yes"
la def hs 0 "No HS degree" 1 "HS Degree"
la val s_hseduc_n1_n3 r_hseduc_n1_n3 hs
tab s_hseduc_n1_n3, missing

//label spouse shr poor/fair variable
la def srhfp 0 "SRH Good, VG, or Exc" 1 "SRH Fair or Poor"
la val s_srh_pf_p1 srhfp

*******************************************************************
//create spouse CESD change variables to look at changes
//in spouse CESD scores between n1 and p1 interviews
*******************************************************************

//change cesd count n1 to p1?
gen s_cesdchange= s_cesd_tot_p1- s_cesd_tot_n1
tab s_cesdchange, missing
la var s_cesdchange "Change in S's CESD count n1 to p1"
*histogram s_cesdchange

//CESD improvement indicator
gen byte s_cesdbetter=.
replace s_cesdbetter= 1 if s_cesdchange <0
replace s_cesdbetter= 0 if (s_cesdchange >=0 & s_cesdchange !=.)
la var s_cesdbetter "S CESD Improvement n1 to p1"

//CESD decline indicator
gen byte s_cesdworse=.
replace s_cesdworse= 1 if (s_cesdchange >0 & s_cesdchange !=.)
replace s_cesdworse= 0 if s_cesdchange <=0 
la var s_cesdworse"S CESD Decline n1 to p1"

//CESD decline indicator
gen byte s_cesdsame=.
replace s_cesdsame= 1 if s_cesdchange ==0
replace s_cesdsame= 0 if (s_cesdchange !=0 & s_cesdchange !=.)
la var s_cesdsame "S CESD Stable n1 to p1"

tab s_cesdchange s_cesdbetter, missing
tab s_cesdchange s_cesdworse, missing
tab s_cesdchange s_cesdsame , missing

//cesd change categorical variable
gen s_cesdchange_3 =.
replace s_cesdchange_3 =1 if (s_cesdchange <0 & s_cesdchange!=.) // improvement
replace s_cesdchange_3 =-1 if (s_cesdchange >0 & s_cesdchange!=.) //decline
replace s_cesdchange_3 =0 if (s_cesdchange ==0) //no change
la var s_cesdchange_3 "S CESD change categories n1 to p1"
la def s_cesdchange_3 1 "Improvement" 0 "No change" -1 "Decline"
la val s_cesdchange_3 s_cesdchange_3 
tab s_cesdchange_3, missing

//cesd improved from >=3 to 3-  look at CESD 3 clin depression change (three options compared to improved or not*
gen s_cesd_ge3_change= s_cesd_tot_ge3_p1- s_cesd_tot_ge3_n1

//cesd improved: 3 or higher in n1 to less than 3 in p1
gen byte s_cesd_ge3better = .
replace s_cesd_ge3better = 1 if s_cesd_ge3_change < 0
replace s_cesd_ge3better = 0 if (s_cesd_ge3_change >= 0 & s_cesd_ge3_change !=.)
la var s_cesd_ge3better "S CESD change from 3+ n1 to <3 p1"
tab s_cesd_ge3better s_cesd_ge3_change, missing

//cesd same or better: 2 or higher in n1 to less than 3 in p1 or no change
gen byte s_cesd_ge3betterorsame = .
replace s_cesd_ge3betterorsame = 1 if s_cesd_ge3_change<=0
replace s_cesd_ge3betterorsame = 0 if (s_cesd_ge3_change > 0 & s_cesd_ge3_change !=.)
la var s_cesd_ge3betterorsame "S CESD no change or change from 3+ n1 to <3 p1"
tab s_cesd_ge3betterorsame s_cesd_ge3_change, missing

*******************************************************************
//Other spouse depression variables change n1 to p1
*******************************************************************

//spouse change in psych condition variables from hrs core n1 to p1
gen byte s_psych_imp_n1p1 = 0
replace s_psych_imp_n1p1  = 1 if s_psych_hrs_n1==1 & s_psych_hrs_p1==0
replace s_psych_imp_n1p1 = . if s_psych_hrs_n1==. | s_psych_hrs_p1==.
la var s_psych_imp_n1p1 "S Improvement Psych condition n1 to p1"
tab s_psych_imp_n1p1 , missing

gen byte s_psych_worse_n1p1 = 0
replace s_psych_worse_n1p1  = 1 if s_psych_hrs_n1==0 & s_psych_hrs_p1==1
replace s_psych_worse_n1p1 = . if s_psych_hrs_n1==. | s_psych_hrs_p1==.
la var s_psych_worse_n1p1 "S Decline Psych condition n1 to p1"
tab s_psych_worse_n1p1 , missing

gen byte s_psych_same_n1p1 = 0
replace s_psych_same_n1p1  = 1 if (s_psych_hrs_n1==0 & s_psych_hrs_p1==0) | (s_psych_hrs_n1==1 & s_psych_hrs_p1==1)  
replace s_psych_same_n1p1 = . if s_psych_hrs_n1==. | s_psych_hrs_p1==.
la var s_psych_same_n1p1 "S No Change Psych condition n1 to p1"
tab s_psych_same_n1p1 , missing

gen s_psych_cat_n1p1 = .
replace s_psych_cat_n1p1 = 0 if s_psych_imp_n1p1==1
replace s_psych_cat_n1p1 = 1 if s_psych_worse_n1p1==1
replace s_psych_cat_n1p1 = 2 if s_psych_same_n1p1==1
la var s_psych_cat_n1p1 "S Change in Psych Cond n1 to p1"
la def psych_cat 0 "Improved" 1 "Worse" 2 "No Change"
la val s_psych_cat_n1p1 psych_cat
tab s_psych_cat_n1p1 , missing

//spouse change in psych treatment, etc variables from hrs core n1 to p1
gen byte s_psych_treat_imp_n1p1 = 0
replace s_psych_treat_imp_n1p1 = 1 if s_psych_treat_n1==1 & s_psych_treat_p1==0
replace s_psych_treat_imp_n1p1 = . if s_psych_treat_n1==. | s_psych_treat_p1==.
la var s_psych_treat_imp_n1p1 "S Psych treat n1 to no treat p1"
tab s_psych_treat_imp_n1p1 , missing

gen byte s_psych_treat_worse_n1p1 = 0
replace s_psych_treat_worse_n1p1 = 1 if s_psych_treat_n1==0 & s_psych_treat_p1==1
replace s_psych_treat_worse_n1p1 = . if s_psych_treat_n1==. | s_psych_treat_p1==.
la var s_psych_treat_worse_n1p1 "S No psych treat n1 to treat p1"
tab s_psych_treat_worse_n1p1 , missing

gen byte s_psych_treat_same_n1p1 = 0
replace s_psych_treat_same_n1p1 = 1 if (s_psych_treat_n1==0 & s_psych_treat_p1==0) ///
	| (s_psych_treat_n1==1 & s_psych_treat_p1==1)  
replace s_psych_treat_same_n1p1 = . if s_psych_treat_n1==. | s_psych_treat_p1==.
la var s_psych_treat_same_n1p1 "S No Change Psych treat n1 to p1"
tab s_psych_treat_same_n1p1 , missing

gen s_psych_treat_cat_n1p1 = .
replace s_psych_treat_cat_n1p1 = 0 if s_psych_treat_imp_n1p1 ==1
replace s_psych_treat_cat_n1p1 = 1 if s_psych_treat_worse_n1p1 ==1
replace s_psych_treat_cat_n1p1 = 2 if s_psych_treat_same_n1p1 ==1
la var s_psych_treat_cat_n1p1 "S Change in Psych Treat n1 to p1"
la def s_psych_treat 0 "Yes n1 to no n2" 1 "No n1 to yes n2" 2 "No Change"
la val s_psych_treat_cat_n1p1 s_psych_treat
tab s_psych_treat_cat_n1p1 , missing

//spouse change in psych medications variables from hrs core n1 to p1
gen byte s_psych_med_imp_n1p1 = 0
replace s_psych_med_imp_n1p1 = 1 if s_psych_med_n1==1 & s_psych_med_p1==0
replace s_psych_med_imp_n1p1 = . if s_psych_med_n1==. | s_psych_med_p1==.
la var s_psych_med_imp_n1p1 "S Psych meds n1 to no meds p1"
tab s_psych_med_imp_n1p1 , missing

gen byte s_psych_med_worse_n1p1 = 0
replace s_psych_med_worse_n1p1 = 1 if s_psych_med_n1==0 & s_psych_med_p1==1
replace s_psych_med_worse_n1p1 = . if s_psych_med_n1==. | s_psych_med_p1==.
la var s_psych_med_worse_n1p1 "S No psych med n1 to med p1"
tab s_psych_med_worse_n1p1 , missing

gen byte s_psych_med_same_n1p1 = 0
replace s_psych_med_same_n1p1 = 1 if (s_psych_med_n1==0 & s_psych_med_p1==0) ///
	| (s_psych_med_n1==1 & s_psych_med_p1==1)  
replace s_psych_med_same_n1p1 = . if s_psych_med_n1==. | s_psych_med_p1==.
la var s_psych_med_same_n1p1 "S No Change Psych med n1 to p1"
tab s_psych_med_same_n1p1 , missing

gen s_psych_med_cat_n1p1 = .
replace s_psych_med_cat_n1p1 = 0 if s_psych_med_imp_n1p1 ==1
replace s_psych_med_cat_n1p1 = 1 if s_psych_med_worse_n1p1 ==1
replace s_psych_med_cat_n1p1 = 2 if s_psych_med_same_n1p1 ==1
la var s_psych_med_cat_n1p1 "S Change in Psych Medic n1 to p1"
la val s_psych_med_cat_n1p1 s_psych_treat
tab s_psych_med_cat_n1p1 , missing

//spouse overall psych problems variable from hrs core n1 to p1
gen byte s_psych_oa_imp_n1p1 = 0
replace s_psych_oa_imp_n1p1 = 1 if s_psych_overall_hrs_n1==1 & s_psych_overall_hrs_p1==0
replace s_psych_oa_imp_n1p1 = . if s_psych_overall_hrs_n1==. | s_psych_overall_hrs_p1==.
la var s_psych_oa_imp_n1p1 "S Psych Cond Overall n1 to no p1"
tab s_psych_oa_imp_n1p1 , missing

gen byte s_psych_oa_worse_n1p1 = 0
replace s_psych_oa_worse_n1p1 = 1 if s_psych_overall_hrs_n1==0 & s_psych_overall_hrs_p1==1
replace s_psych_oa_worse_n1p1 = . if s_psych_overall_hrs_n1==. | s_psych_overall_hrs_p1==.
la var s_psych_oa_worse_n1p1 "S No psych cond overall n1 to yes p1"
tab s_psych_oa_worse_n1p1 , missing

gen byte s_psych_oa_same_n1p1 = 0
replace s_psych_oa_same_n1p1 = 1 if (s_psych_overall_hrs_n1==0 & s_psych_overall_hrs_p1==0) ///
	| (s_psych_overall_hrs_n1==1 & s_psych_overall_hrs_p1==1)  
replace s_psych_oa_same_n1p1 = . if s_psych_overall_hrs_n1==. | s_psych_overall_hrs_p1==.
la var s_psych_oa_same_n1p1 "S No Change Psych overall n1 to p1"
tab s_psych_oa_same_n1p1 , missing

gen s_psych_oa_cat_n1p1 = .
replace s_psych_oa_cat_n1p1 = 0 if s_psych_oa_imp_n1p1 ==1
replace s_psych_oa_cat_n1p1 = 1 if s_psych_oa_worse_n1p1 ==1
replace s_psych_oa_cat_n1p1 = 2 if s_psych_oa_same_n1p1 ==1
la var s_psych_oa_cat_n1p1 "S Change in Psych OA condition n1 to p1"
la val s_psych_oa_cat_n1p1 s_psych_treat
tab s_psych_oa_cat_n1p1 , missing


//spouse ever drink indicator from hrs core n1 to p1
gen byte s_ever_drink_imp_n1p1 = 0
replace s_ever_drink_imp_n1p1 = 1 if s_ever_drink_n1==1 & s_ever_drink_p1==0
replace s_ever_drink_imp_n1p1 = . if s_ever_drink_n1==. | s_ever_drink_p1==.
la var s_ever_drink_imp_n1p1 "S ever drink = yes n1 to no p1"
tab s_ever_drink_imp_n1p1, missing

gen byte s_ever_drink_worse_n1p1 = 0
replace s_ever_drink_worse_n1p1 = 1 if s_ever_drink_n1==0 & s_ever_drink_p1==1
replace s_ever_drink_worse_n1p1 = . if s_ever_drink_n1==. | s_ever_drink_p1==.
la var s_ever_drink_worse_n1p1 "S ever drink = no n1 to yes p1"
tab s_ever_drink_worse_n1p1 , missing

gen byte s_ever_drink_same_n1p1 = 0
replace s_ever_drink_same_n1p1 = 1 if (s_ever_drink_n1==0 & s_ever_drink_p1==0) ///
	| (s_ever_drink_n1==1 & s_ever_drink_p1==1)  
replace s_ever_drink_same_n1p1 = . if s_ever_drink_n1==. | s_ever_drink_p1==.
la var s_ever_drink_same_n1p1 "S No Change ever drink n1 to p1"
tab s_ever_drink_same_n1p1 , missing

gen s_ever_drink_cat_n1p1 = .
replace s_ever_drink_cat_n1p1 = 0 if s_ever_drink_imp_n1p1 ==1
replace s_ever_drink_cat_n1p1 = 1 if s_ever_drink_worse_n1p1 ==1
replace s_ever_drink_cat_n1p1 = 2 if s_ever_drink_same_n1p1 ==1
la var s_ever_drink_cat_n1p1 "S Change in Ever drink status n1 to p1"
la val s_ever_drink_cat_n1p1 s_psych_treat
tab s_ever_drink_cat_n1p1, missing

gen change_drinks = s_n_drinks_3m_p1 - s_n_drinks_3m_n1 
gen byte s_drink_more_n1p1 = .
replace s_drink_more_n1p1 = 1 if change_drinks > 0 & change_drinks!=.
replace s_drink_more_n1p1 = 0 if change_drinks <= 0

gen byte s_drink_less_n1p1 = .
replace s_drink_less_n1p1 = 1 if change_drinks < 0 
replace s_drink_less_n1p1 = 0 if change_drinks >= 0 & change_drinks!=.

gen byte s_drink_same_n1p1 = .
replace s_drink_same_n1p1 = 1 if change_drinks==0
replace s_drink_same_n1p1 = 0 if change_drinks != 0 & change_drinks!=.

la var s_drink_more_n1p1 "Number alc drinks increased n1 to p1"
la var s_drink_less_n1p1 "Number alc drinks decreased n1 to p1"
la var s_drink_same_n1p1 "Number alc drinks same n1 to p1"
tab s_drink_more_n1p1, missing
tab s_drink_less_n1p1 , missing
tab s_drink_same_n1p1 , missing

drop change_drinks

gen s_drink_cat_n1p1 = .
replace s_drink_cat_n1p1 = 0 if s_drink_more_n1p1 ==1
replace s_drink_cat_n1p1 = 1 if s_drink_less_n1p1 ==1
replace s_drink_cat_n1p1 = 2 if s_drink_same_n1p1 ==1
la var s_ever_drink_cat_n1p1 "S Change in Ever drink status n1 to p1"
la def drinks 0 "Drinks more" 1 "Drinks less" 2 "No change"
la val s_drink_cat_n1p1 drinks 
tab s_drink_cat_n1p1, missing

gen byte s_alcoh_mis_imp_n1p1 = 0
replace s_alcoh_mis_imp_n1p1 = 1 if s_alcohol_mis_n1==1 & s_alcohol_mis_p1==0
replace s_alcoh_mis_imp_n1p1 = . if s_alcohol_mis_n1==. | s_alcohol_mis_p1==.

gen byte s_alcoh_mis_worse_n1p1 = 0
replace s_alcoh_mis_worse_n1p1 = 1 if s_alcohol_mis_n1==0 & s_alcohol_mis_p1==1
replace s_alcoh_mis_worse_n1p1 = . if s_alcohol_mis_n1==. | s_alcohol_mis_p1==.

gen byte s_alcoh_mis_same_n1p1 = 0
replace s_alcoh_mis_same_n1p1 = 1 if (s_alcohol_mis_n1==0 & s_alcohol_mis_p1==0) ///
	| (s_alcohol_mis_n1==1 & s_alcohol_mis_p1==1)  
replace s_alcoh_mis_same_n1p1 = . if s_alcohol_mis_n1==. | s_alcohol_mis_p1==.

la var s_alcoh_mis_imp_n1p1 "Alcohol misuse n1 to no p1"
la var s_alcoh_mis_worse_n1p1 "No alcohol misuse n1 to yes p1"
la var s_alcoh_mis_same_n1p1 "Alcohol misuse same n1 to p1"
tab s_alcoh_mis_imp_n1p1 , missing
tab s_alcoh_mis_worse_n1p1 , missing
tab s_alcoh_mis_same_n1p1 , missing

gen s_alcoh_mis_cat_n1p1 = .
replace s_alcoh_mis_cat_n1p1 = 0 if s_alcoh_mis_imp_n1p1 ==1
replace s_alcoh_mis_cat_n1p1 = 1 if s_alcoh_mis_worse_n1p1 ==1
replace s_alcoh_mis_cat_n1p1 = 2 if s_alcoh_mis_same_n1p1 ==1
la var s_alcoh_mis_cat_n1p1 "S Change in Alcohol misuse n1 to p1"
la val s_alcoh_mis_cat_n1p1 s_psych_treat
tab s_alcoh_mis_cat_n1p1 , missing

gen byte s_vig_act_imp_n1p1 = 0
replace s_vig_act_imp_n1p1 = 1 if s_vig_phy_act_n1==0 & s_vig_phy_act_p1==1
replace s_vig_act_imp_n1p1 = . if s_vig_phy_act_n1==. | s_vig_phy_act_p1==.

gen byte s_vig_act_worse_n1p1 = 0
replace s_vig_act_worse_n1p1 = 1 if s_vig_phy_act_n1==1 & s_vig_phy_act_p1==0
replace s_vig_act_worse_n1p1 = . if s_vig_phy_act_n1==. | s_vig_phy_act_p1==.

gen byte s_vig_act_same_n1p1 = 0
replace s_vig_act_same_n1p1 = 1 if (s_vig_phy_act_n1==0 & s_vig_phy_act_p1==0) ///
	| (s_vig_phy_act_n1==1 & s_vig_phy_act_p1==1)  
replace s_vig_act_same_n1p1 = . if s_vig_phy_act_n1==. | s_vig_phy_act_p1==.

la var s_vig_act_imp_n1p1 "No vigorous phys activity n1 to yes p1"
la var s_vig_act_worse_n1p1 "Vigorous phys activity n1 to no p1"
la var s_vig_act_same_n1p1 "Vig physical activity same n1 to p1"
tab s_vig_act_imp_n1p1 , missing
tab s_vig_act_worse_n1p1 , missing
tab s_vig_act_same_n1p1 , missing

gen s_vig_act_cat_n1p1 = .
replace s_vig_act_cat_n1p1 = 0 if s_vig_act_imp_n1p1 ==1
replace s_vig_act_cat_n1p1 = 1 if s_vig_act_worse_n1p1 ==1
replace s_vig_act_cat_n1p1 = 2 if s_vig_act_same_n1p1 ==1
la var s_vig_act_cat_n1p1 "S Change in vigorous activity n1 to p1"
la def vig_act 0 "no n1 to yes p1" 1 "yes n1 to no p1" 2 "No change"
la val s_vig_act_cat_n1p1 vig_act 
tab s_vig_act_cat_n1p1 , missing

gen byte s_help_friends_imp_n1p1 = 0
replace s_help_friends_imp_n1p1 = 1 if s_help_friends_n1==0 & s_help_friends_p1==1
replace s_help_friends_imp_n1p1 = . if s_help_friends_n1==. | s_help_friends_p1==.

gen byte s_help_friends_worse_n1p1 = 0
replace s_help_friends_worse_n1p1 = 1 if s_help_friends_n1==1 & s_help_friends_p1==0
replace s_help_friends_worse_n1p1 = . if s_help_friends_n1==. | s_help_friends_p1==.

gen byte s_help_friends_same_n1p1 = 0
replace s_help_friends_same_n1p1 = 1 if (s_help_friends_n1==0 & s_help_friends_p1==0) ///
	| (s_help_friends_n1==1 & s_help_friends_p1==1)  
replace s_help_friends_same_n1p1 = . if s_help_friends_n1==. | s_help_friends_p1==.

la var s_help_friends_imp_n1p1 "Does not help friends n1 to does help p1"
la var s_help_friends_worse_n1p1 "Helps friends n1 to no p1"
la var s_help_friends_same_n1p1 "Same help friends n1 to p1"
tab s_help_friends_imp_n1p1 , missing
tab s_help_friends_worse_n1p1 , missing
tab s_help_friends_same_n1p1 , missing

gen s_help_friends_cat_n1p1 = .
replace s_help_friends_cat_n1p1 = 0 if s_help_friends_imp_n1p1 ==1
replace s_help_friends_cat_n1p1 = 1 if s_help_friends_worse_n1p1 ==1
replace s_help_friends_cat_n1p1 = 2 if s_help_friends_same_n1p1 ==1
la var s_help_friends_cat_n1p1 "S Change in help friends ind n1 to p1"
la val s_help_friends_cat_n1p1 vig_act 
tab s_help_friends_cat_n1p1 , missing

gen change_hrs_help_friends = s_help_friends_hours_p1 - s_help_friends_hours_n1
gen byte s_help_friends_hrs_more_n1p1 = .
replace s_help_friends_hrs_more_n1p1 = 1 if change_hrs_help_friends > 0 & change_hrs_help_friends !=.
replace s_help_friends_hrs_more_n1p1 = 0 if change_hrs_help_friends <= 0 & change_hrs_help_friends !=.
gen byte s_help_friends_hrs_less_n1p1 = .
replace s_help_friends_hrs_less_n1p1 = 1 if change_hrs_help_friends < 0 & change_hrs_help_friends !=.
replace s_help_friends_hrs_less_n1p1 = 0 if change_hrs_help_friends >= 0 & change_hrs_help_friends !=.
gen byte s_help_friends_hrs_same_n1p1 = .
replace s_help_friends_hrs_same_n1p1 = 1 if change_hrs_help_friends == 0 
replace s_help_friends_hrs_same_n1p1 = 0 if change_hrs_help_friends != 0 & change_hrs_help_friends !=.

la var s_help_friends_hrs_more_n1p1 "Hours helping friends increased n1 to p1"
la var s_help_friends_hrs_less_n1p1 "Hours helping friends decreased n1 to p1"
la var s_help_friends_hrs_same_n1p1 "Hours helping friends same n1 to p1"
tab s_help_friends_hrs_more_n1p1 change_hrs_help_friends, missing
tab s_help_friends_hrs_less_n1p1 change_hrs_help_friends, missing
tab s_help_friends_hrs_same_n1p1 change_hrs_help_friends, missing

gen s_help_friends_hrs_cat_n1p1 = .
replace s_help_friends_hrs_cat_n1p1 = 0 if s_help_friends_hrs_more_n1p1 ==1
replace s_help_friends_hrs_cat_n1p1 = 1 if s_help_friends_hrs_less_n1p1 ==1
replace s_help_friends_hrs_cat_n1p1 = 2 if s_help_friends_hrs_same_n1p1 ==1
la var s_help_friends_hrs_cat_n1p1 "S Change in help friends hours n1 to p1"
la def help_friends_hrs 0 "Hours increased" 1 "Hours decreased" 2 "No change"
la val s_help_friends_hrs_cat_n1p1 help_friends_hrs 
tab s_help_friends_hrs_cat_n1p1 , missing

drop change_hrs_help_friends

gen s_friend_imp_n1p1 = 0
replace s_friend_imp_n1p1 = 1 if s_friend_n1==0 & s_friend_p1==1
replace s_friend_imp_n1p1 = . if s_friend_n1==. | s_friend_p1==.

gen s_friend_worse_n1p1 = 0
replace s_friend_worse_n1p1 = 1 if s_friend_n1==1 & s_friend_p1==0
replace s_friend_worse_n1p1 = . if s_friend_n1==. | s_friend_p1==.

gen byte s_friend_same_n1p1 = 0
replace s_friend_same_n1p1 = 1 if (s_friend_n1==0 & s_friend_p1==0) ///
	| (s_friend_n1==1 & s_friend_p1==1)  
replace s_friend_same_n1p1 = . if s_friend_n1==. | s_friend_p1==.

la var s_friend_imp_n1p1 "S No friends nearby n1 to yes p1"
la var s_friend_worse_n1p1 "S Friends nearby n1 to no p1"
la var s_friend_same_n1p1 "S Friends nearby same n1 to p1"
tab s_friend_imp_n1p1 , missing
tab s_friend_worse_n1p1 , missing
tab s_friend_same_n1p1 , missing

gen s_friend_cat_n1p1 = .
replace s_friend_cat_n1p1 = 0 if s_friend_imp_n1p1 ==1
replace s_friend_cat_n1p1 = 1 if s_friend_worse_n1p1 ==1
replace s_friend_cat_n1p1 = 2 if s_friend_same_n1p1 ==1
la var s_friend_cat_n1p1 "S Change in friends nearby n1 to p1"
la val s_friend_cat_n1p1 vig_act 
tab s_friend_cat_n1p1 , missing


gen byte s_soc_visit_imp_n1p1 = 0
replace s_soc_visit_imp_n1p1 = 1 if s_soc_visit_n1==0 & s_soc_visit_p1==1
replace s_soc_visit_imp_n1p1 = . if s_soc_visit_n1==. | s_soc_visit_p1==.

gen byte s_soc_visit_worse_n1p1 = 0
replace s_soc_visit_worse_n1p1 = 1 if s_soc_visit_n1==1 & s_soc_visit_p1==0
replace s_soc_visit_worse_n1p1 = . if s_soc_visit_n1==. | s_soc_visit_p1==.

gen byte s_soc_visit_same_n1p1 = 0
replace s_soc_visit_same_n1p1 = 1 if (s_soc_visit_n1==1 & s_soc_visit_p1==1) ///
	| (s_soc_visit_n1==0 & s_soc_visit_p1==0)
replace s_soc_visit_same_n1p1 = . if s_soc_visit_n1==. | s_soc_visit_p1==.

la var s_soc_visit_imp_n1p1 "S No social visits n1 to yes p1"
la var s_soc_visit_worse_n1p1 "S Social visits n1 to no p1"
la var s_soc_visit_same_n1p1 "S Social visits same n1 to p1"
tab s_soc_visit_imp_n1p1 , missing
tab s_soc_visit_worse_n1p1 , missing
tab s_soc_visit_same_n1p1 , missing

gen s_soc_visit_cat_n1p1 = .
replace s_soc_visit_cat_n1p1 = 0 if s_soc_visit_imp_n1p1 ==1
replace s_soc_visit_cat_n1p1 = 1 if s_soc_visit_worse_n1p1 ==1
replace s_soc_visit_cat_n1p1 = 2 if s_soc_visit_same_n1p1 ==1
la var s_soc_visit_cat_n1p1 "S Change in social visits ind n1 to p1"
la val s_soc_visit_cat_n1p1 vig_act 
tab s_soc_visit_cat_n1p1 , missing

gen change_soc_visit = s_soc_visit_cat_p1 - s_soc_visit_cat_n1
gen byte s_soc_visit_cnt_more_n1p1 = .
replace s_soc_visit_cnt_more_n1p1 =1 if change_soc_visit >0 & change_soc_visit !=.
replace s_soc_visit_cnt_more_n1p1 =0 if change_soc_visit <=0 & change_soc_visit !=.
gen byte s_soc_visit_cnt_less_n1p1 = .
replace s_soc_visit_cnt_less_n1p1 =1 if change_soc_visit <0 & change_soc_visit !=.
replace s_soc_visit_cnt_less_n1p1 =0 if change_soc_visit >=0 & change_soc_visit !=.
gen byte s_soc_visit_cnt_same_n1p1 = .
replace s_soc_visit_cnt_same_n1p1 =1 if change_soc_visit ==0
replace s_soc_visit_cnt_same_n1p1 =0 if change_soc_visit !=0 & change_soc_visit !=.
la var s_soc_visit_cnt_more_n1p1 "S More social visits n1 to p1"
la var s_soc_visit_cnt_less_n1p1 "S fewer social visits n1 to p1"
la var s_soc_visit_cnt_same_n1p1 "S same social visits n1 to p1"
tab s_soc_visit_cnt_more_n1p1 change_soc_visit , missing
tab s_soc_visit_cnt_less_n1p1 change_soc_visit , missing
tab s_soc_visit_cnt_same_n1p1 change_soc_visit , missing

gen s_soc_visit_cnt_cat_n1p1 = .
replace s_soc_visit_cnt_cat_n1p1 = 0 if s_soc_visit_imp_n1p1 ==1
replace s_soc_visit_cnt_cat_n1p1 = 1 if s_soc_visit_worse_n1p1 ==1
replace s_soc_visit_cnt_cat_n1p1 = 2 if s_soc_visit_cnt_same_n1p1 ==1
la var s_soc_visit_cnt_cat_n1p1 "S Change in number of social visits n1 to p1"
la def soc_visit_cnt 0 "More soc visits" 1 "Fewer soc visits" 2 "No change"
la val s_soc_visit_cnt_cat_n1p1 soc_visit_cnt 
tab s_soc_visit_cnt_cat_n1p1 , missing

drop change_soc_visit

*******************************************************************
//ADL helper n1 to x interview variables
*******************************************************************
//spouse helper
gen byte adl_help_sp_more_n1x = 0
replace adl_help_sp_more_n1x = 1 if r_adl_sp_helper_n1==0 & r_adl_sp_helper_x==1
replace adl_help_sp_more_n1x = . if r_adl_sp_helper_n1==. | r_adl_sp_helper_x==.

gen byte adl_help_sp_less_n1x = 0
replace adl_help_sp_less_n1x = 1 if r_adl_sp_helper_n1==1 & r_adl_sp_helper_x==0
replace adl_help_sp_less_n1x = . if r_adl_sp_helper_n1==. | r_adl_sp_helper_x==.

gen byte adl_help_sp_same_n1x = 0
replace adl_help_sp_same_n1x = 1 if (r_adl_sp_helper_n1==0 & r_adl_sp_helper_x==0) ///
| (r_adl_sp_helper_n1==1 & r_adl_sp_helper_x==1)
replace adl_help_sp_same_n1x = . if r_adl_sp_helper_n1==. | r_adl_sp_helper_x==.
la var adl_help_sp_more_n1x "S main adl helper =no n1, yes=x" 
la var adl_help_sp_less_n1x "S main adl helper =yes n1, no=x" 
la var adl_help_sp_same_n1x "S main adl helper no change" 
tab adl_help_sp_more_n1x , missing
tab adl_help_sp_less_n1x , missing
tab adl_help_sp_same_n1x , missing

gen adl_help_sp_cat_n1x = .
replace adl_help_sp_cat_n1x = 0 if adl_help_sp_more_n1x ==1
replace adl_help_sp_cat_n1x = 1 if adl_help_sp_less_n1x ==1
replace adl_help_sp_cat_n1x = 2 if adl_help_sp_same_n1x ==1
la var adl_help_sp_cat_n1x "R Change S main ADL helper n1 to p1"
la val adl_help_sp_cat_n1x vig_act 
tab adl_help_sp_cat_n1x , missing


//other, non-spouse helper
gen byte adl_help_oth_more_n1x = 0
replace adl_help_oth_more_n1x = 1 if r_adl_oth_helper_n1==0 & r_adl_oth_helper_x==1
replace adl_help_oth_more_n1x = . if r_adl_oth_helper_n1==. | r_adl_oth_helper_x==.

gen byte adl_help_oth_less_n1x = 0
replace adl_help_oth_less_n1x = 1 if r_adl_oth_helper_n1==1 & r_adl_oth_helper_x==0
replace adl_help_oth_less_n1x = . if r_adl_oth_helper_n1==. | r_adl_oth_helper_x==.

gen byte adl_help_oth_same_n1x = 0
replace adl_help_oth_same_n1x = 1 if (r_adl_oth_helper_n1==0 & r_adl_oth_helper_x==0) ///
| (r_adl_oth_helper_n1==1 & r_adl_oth_helper_x==1)
replace adl_help_oth_same_n1x = . if r_adl_oth_helper_n1==. | r_adl_oth_helper_x==.
la var adl_help_oth_more_n1x "Other main adl helper =no n1, yes=x" 
la var adl_help_oth_less_n1x "Other main adl helper =yes n1, no=x" 
la var adl_help_oth_same_n1x "Other main adl helper no change" 
tab adl_help_oth_more_n1x , missing
tab adl_help_oth_less_n1x , missing
tab adl_help_oth_same_n1x , missing

gen adl_help_oth_cat_n1x = .
replace adl_help_oth_cat_n1x = 0 if adl_help_oth_more_n1x ==1
replace adl_help_oth_cat_n1x = 1 if adl_help_oth_less_n1x ==1
replace adl_help_oth_cat_n1x = 2 if adl_help_oth_same_n1x ==1
la var adl_help_oth_cat_n1x "R Change other main ADL helper n1 to p1"
la val adl_help_oth_cat_n1x vig_act 
tab adl_help_oth_cat_n1x , missing


//number of adl helpers
gen change_adl_help = r_adl_helper_count_x - r_adl_helper_count_n1

gen byte adl_help_count_more_n1x = .
replace adl_help_count_more_n1x =1 if change_adl_help > 0 & change_adl_help !=.
replace adl_help_count_more_n1x =0 if change_adl_help <= 0 & change_adl_help !=.

gen byte adl_help_count_less_n1x = .
replace adl_help_count_less_n1x =1 if change_adl_help < 0 & change_adl_help !=.
replace adl_help_count_less_n1x =0 if change_adl_help >= 0 & change_adl_help !=.

gen byte adl_help_count_same_n1x = .
replace adl_help_count_same_n1x =1 if change_adl_help == 0 
replace adl_help_count_same_n1x =0 if change_adl_help != 0 & change_adl_help !=.

la var adl_help_count_more_n1x "No ADL helpers increased n1 to x" 
la var adl_help_count_less_n1x "No ADL helpers decreased n1 to x" 
la var adl_help_count_same_n1x "No ADL helpers same n1 to x" 
tab adl_help_count_more_n1x , missing
tab adl_help_count_less_n1x , missing
tab adl_help_count_same_n1x , missing

gen adl_help_count_cat_n1x = .
replace adl_help_count_cat_n1x = 0 if adl_help_count_more_n1x ==1
replace adl_help_count_cat_n1x = 1 if adl_help_count_less_n1x ==1
replace adl_help_count_cat_n1x = 2 if adl_help_count_same_n1x ==1
la var adl_help_oth_cat_n1x "R Change other main ADL helper n1 to p1"
la def help_count 0 "More helpers" 1 "Fewer helpers" 2 "No change"
la val adl_help_count_cat_n1x help_count 
tab adl_help_count_cat_n1x , missing


*******************************************************************
//IADL helper n1 to x interview variables
*******************************************************************
//spouse helper
gen byte iadl_help_sp_more_n1x = 0
replace iadl_help_sp_more_n1x = 1 if r_iadl_sp_helper_n1==0 & r_iadl_sp_helper_x==1
replace iadl_help_sp_more_n1x = . if r_iadl_sp_helper_n1==. | r_iadl_sp_helper_x==.

gen byte iadl_help_sp_less_n1x = 0
replace iadl_help_sp_less_n1x = 1 if r_iadl_sp_helper_n1==1 & r_iadl_sp_helper_x==0
replace iadl_help_sp_less_n1x = . if r_iadl_sp_helper_n1==. | r_iadl_sp_helper_x==.

gen byte iadl_help_sp_same_n1x = 0
replace iadl_help_sp_same_n1x = 1 if (r_iadl_sp_helper_n1==0 & r_iadl_sp_helper_x==0) ///
| (r_iadl_sp_helper_n1==1 & r_iadl_sp_helper_x==1)
replace iadl_help_sp_same_n1x = . if r_iadl_sp_helper_n1==. | r_iadl_sp_helper_x==.
la var iadl_help_sp_more_n1x "S main iadl helper =no n1, yes=x" 
la var iadl_help_sp_less_n1x "S main iadl helper =yes n1, no=x" 
la var iadl_help_sp_same_n1x "S main iadl helper no change" 
tab iadl_help_sp_more_n1x , missing
tab iadl_help_sp_less_n1x , missing
tab iadl_help_sp_same_n1x , missing

gen iadl_help_sp_cat_n1x = .
replace iadl_help_sp_cat_n1x = 0 if iadl_help_sp_more_n1x ==1
replace iadl_help_sp_cat_n1x = 1 if iadl_help_sp_less_n1x ==1
replace iadl_help_sp_cat_n1x = 2 if iadl_help_sp_same_n1x ==1
la var iadl_help_sp_cat_n1x "R Change S main IADL helper n1 to p1"
la val iadl_help_sp_cat_n1x vig_act 
tab iadl_help_sp_cat_n1x , missing

//other, non-spouse helper
gen byte iadl_help_oth_more_n1x = 0
replace iadl_help_oth_more_n1x = 1 if r_iadl_oth_helper_n1==0 & r_iadl_oth_helper_x==1
replace iadl_help_oth_more_n1x = . if r_iadl_oth_helper_n1==. | r_iadl_oth_helper_x==.

gen byte iadl_help_oth_less_n1x = 0
replace iadl_help_oth_less_n1x = 1 if r_iadl_oth_helper_n1==1 & r_iadl_oth_helper_x==0
replace iadl_help_oth_less_n1x = . if r_iadl_oth_helper_n1==. | r_iadl_oth_helper_x==.

gen byte iadl_help_oth_same_n1x = 0
replace iadl_help_oth_same_n1x = 1 if (r_iadl_oth_helper_n1==0 & r_iadl_oth_helper_x==0) ///
| (r_iadl_oth_helper_n1==1 & r_iadl_oth_helper_x==1)
replace iadl_help_oth_same_n1x = . if r_iadl_oth_helper_n1==. | r_iadl_oth_helper_x==.
la var iadl_help_oth_more_n1x "Other main iadl helper =no n1, yes=x" 
la var iadl_help_oth_less_n1x "Other main iadl helper =yes n1, no=x" 
la var iadl_help_oth_same_n1x "Other main iadl helper no change" 
tab iadl_help_oth_more_n1x , missing
tab iadl_help_oth_less_n1x , missing
tab iadl_help_oth_same_n1x , missing

gen iadl_help_oth_cat_n1x = .
replace iadl_help_oth_cat_n1x = 0 if iadl_help_oth_more_n1x ==1
replace iadl_help_oth_cat_n1x = 1 if iadl_help_oth_less_n1x ==1
replace iadl_help_oth_cat_n1x = 2 if iadl_help_oth_same_n1x ==1
la var iadl_help_oth_cat_n1x "R Change other main IADL helper n1 to p1"
la val iadl_help_oth_cat_n1x vig_act 
tab iadl_help_oth_cat_n1x , missing

//number of iadl helpers
gen change_iadl_help = r_iadl_helper_count_x - r_iadl_helper_count_n1

gen byte iadl_help_count_more_n1x = .
replace iadl_help_count_more_n1x =1 if change_iadl_help > 0 & change_iadl_help !=.
replace iadl_help_count_more_n1x =0 if change_iadl_help <= 0 & change_iadl_help !=.

gen byte iadl_help_count_less_n1x = .
replace iadl_help_count_less_n1x =1 if change_iadl_help < 0 & change_iadl_help !=.
replace iadl_help_count_less_n1x =0 if change_iadl_help >= 0 & change_iadl_help !=.

gen byte iadl_help_count_same_n1x = .
replace iadl_help_count_same_n1x =1 if change_iadl_help == 0 
replace iadl_help_count_same_n1x =0 if change_iadl_help != 0 & change_iadl_help !=.

la var iadl_help_count_more_n1x "No iadl helpers increased n1 to x" 
la var iadl_help_count_less_n1x "No iadl helpers decreased n1 to x" 
la var iadl_help_count_same_n1x "No iadl helpers same n1 to x" 
tab iadl_help_count_more_n1x , missing
tab iadl_help_count_less_n1x , missing
tab iadl_help_count_same_n1x , missing

gen iadl_help_count_cat_n1x = .
replace iadl_help_count_cat_n1x = 0 if iadl_help_count_more_n1x ==1
replace iadl_help_count_cat_n1x = 1 if iadl_help_count_less_n1x ==1
replace iadl_help_count_cat_n1x = 2 if iadl_help_count_same_n1x ==1
la var iadl_help_oth_cat_n1x "R Change other main IADL helper n1 to p1"
la val iadl_help_count_cat_n1x help_count 
tab iadl_help_count_cat_n1x , missing


*******************************************************************
//Respondant variables
*******************************************************************

//indicator for hospice use 12 months preceeding death
gen byte r_hs_12m = .
replace r_hs_12m = 1 if hs_los_12m != 0 & hs_los_12m != .
replace r_hs_12m = 0 if hs_los_12m == 0 
la var r_hs_12m "Indicator hospice use last 12 months of life"
la def hs 0 "No hospice use" 1 "Hospice use", replace
tab r_hs_12m, missing

//create new hospice variables
//note if hs use 1-2 days, then missing by this definition
gen r_hs_12m_gt3d = .
replace r_hs_12m_gt3d = 1 if hs_los_12m >= 3 & hs_los_12m != .
replace r_hs_12m_gt3d = 0 if hs_los_12m == 0 
la var r_hs_12m_gt3d "Indicator hospice use last 12 months of life"
la def r_hs_12m_gt3d  0 "No hospice use" 1 "3+ days hospice use", replace
la val r_hs_12m_gt3d r_hs_12m_gt3d
tab r_hs_12m_gt3d r_hs_12m, missing
tab hs_los_12m r_hs_12m_gt3d , missing

//create new hospice variables
//note if hs use 1-6 days, then missing by this definition
gen r_hs_12m_gt7d = .
replace r_hs_12m_gt7d = 1 if hs_los_12m >= 7 & hs_los_12m != .
replace r_hs_12m_gt7d = 0 if hs_los_12m == 0 
la var r_hs_12m_gt7d "Indicator hospice use last 12 months of life"
la def r_hs_12m_gt7d  0 "No hospice use" 1 "7+ days hospice use", replace
la val r_hs_12m_gt7d r_hs_12m_gt7d
tab r_hs_12m_gt7d r_hs_12m, missing
tab hs_los_12m r_hs_12m_gt7d , missing

//indicator for hospice use 24 months preceeding death
gen byte r_hs_24m = .
replace r_hs_24m = 1 if hs_los_24m != 0 & hs_los_24m != .
replace r_hs_24m = 0 if hs_los_24m == 0 
la var r_hs_24m "Indicator hospice use last 24 months of life"
tab r_hs_24m, missing

//indicator for SNF use 24 months preceeding death
gen byte r_snf_24m = .
replace r_snf_24m = 1 if snf_los_24m != 0 & snf_los_24m != .
replace r_snf_24m = 0 if snf_los_24m == 0 
la var r_snf_24m "Indicator SNF use last 24 months of life"
tab r_snf_24m, missing

//indicator for hospital admission 24 months preceeding death
gen byte r_ip_24m = .
replace r_ip_24m = 1 if ip_los_24m != 0 & ip_los_24m != .
replace r_ip_24m = 0 if ip_los_24m == 0 
la var r_ip_24m "Indicator SNF use last 24 months of life"
tab r_ip_24m, missing

//create new los variables that are missing if no utilization
gen hs_los_12m_miss = hs_los_12m 
replace hs_los_12m_miss = . if hs_los_12m==0
la var hs_los_12m_miss "Hospice LOS 12 m - missing if LOS = 0"

gen hs_los_24m_miss = hs_los_24m 
replace hs_los_24m_miss = . if hs_los_24m==0
la var hs_los_24m_miss "Hospice LOS 24 m - missing if LOS = 0"

gen snf_los_24m_miss = snf_los_24m 
replace snf_los_24m_miss = . if snf_los_24m==0
la var snf_los_24m_miss "SNF LOS 24 m - missing if LOS = 0"

gen ip_los_24m_miss = ip_los_24m 
replace ip_los_24m_miss = . if ip_los_24m==0
la var ip_los_24m_miss "Hospital LOS 24 m - missing if LOS = 0"

//create dichotomous vars for comorbidity index categories
gen byte s_hrs_comorb_none_n1 = .
replace s_hrs_comorb_none_n1=1 if s_comor_c_hrs_n1==0
replace s_hrs_comorb_none_n1=0 if s_comor_c_hrs_n1!=0 & s_comor_c_hrs_n1!=.
la var s_hrs_comorb_none_n1 "Comorbidity index ind - none"

gen byte s_hrs_comorb_mild_n1 = .
replace s_hrs_comorb_mild_n1 =1 if s_comor_c_hrs_n1==1
replace s_hrs_comorb_mild_n1 =0 if s_comor_c_hrs_n1!=1 & s_comor_c_hrs_n1!=.
la var s_hrs_comorb_mild_n1 "Comorbidity index ind - mild 1-3"

gen byte s_hrs_comorb_mod_n1 = .
replace s_hrs_comorb_mod_n1=1 if s_comor_c_hrs_n1==2
replace s_hrs_comorb_mod_n1=0 if s_comor_c_hrs_n1!=2 & s_comor_c_hrs_n1!=.
la var s_hrs_comorb_mod_n1 "Comorbidity index ind - moderate 4-6"

gen byte s_hrs_comorb_sev_n1 = .
replace s_hrs_comorb_sev_n1=1 if s_comor_c_hrs_n1==3
replace s_hrs_comorb_sev_n1=0 if s_comor_c_hrs_n1!=3 & s_comor_c_hrs_n1!=.
la var s_hrs_comorb_sev_n1 "Comorbidity index ind - severe 7+"

tab s_hrs_comorb_none_n1, missing
tab s_hrs_comorb_mild_n1, missing
tab s_hrs_comorb_mod_n1, missing
tab s_hrs_comorb_sev_n1, missing

la def comor_c 0 "None" 1 "Mild (1-3)" 2 "Moderate (4-6)" 3 "Severe (7+)"
la val s_comor_c_hrs_p1 s_comor_c_hrs_n1 comor_c

//spouse p1 comorbidities from HRS
tab s_cancer_hrs_p1, missing
tab s_lung_hrs_p1, missing 
tab s_heart_hrs_p1, missing 
tab s_chf_hrs_p1, missing 
tab s_stroke_hrs_p1, missing 
tab s_memory_hrs_p1, missing
tab s_htn_hrs_p1, missing 
tab s_dm_hrs_p1, missing 
tab s_psych_hrs_p1, missing

/*************************************************************************/
//interview timeline variables
/*************************************************************************/
gen r_days_n1_core_dead =  r_death_date_e - r_c_ivw_date_n1 
gen s_days_n1_core_dead =  r_death_date_e - s_c_ivw_date_n1 
gen r_days_x_exit_dead =   r_e_ivw_date_x - r_death_date_e
label var days_p1_core_dead "Days from R's death to S p1 interview"
tab days_p1_core_dead, missing

//indicator for p1 ivw within 1 year of r's death
gen s_1yr_p1_core_dead = .
replace s_1yr_p1_core_dead =1 if days_p1_core_dead <366 & days_p1_core_dead !=.
replace s_1yr_p1_core_dead =0 if days_p1_core_dead >=366 & days_p1_core_dead !=.
la var s_1yr_p1_core_dead "S P1 Core within 1 year of R's death"
tab s_1yr_p1_core_dead , missing

//categorical variable for interview timing from r's death
gen days_p1_core_dod_cat = .
replace days_p1_core_dod_cat = 0 if 0<=days_p1_core_dead & days_p1_core_dead<183
replace days_p1_core_dod_cat = 1 if 183<=days_p1_core_dead & days_p1_core_dead<366
replace days_p1_core_dod_cat = 2 if 366<=days_p1_core_dead & days_p1_core_dead<548
replace days_p1_core_dod_cat = 3 if 548<=days_p1_core_dead & days_p1_core_dead<731
replace days_p1_core_dod_cat = 4 if 731<=days_p1_core_dead & days_p1_core_dead !=.
la def days_p1_core_dod_cat 0 "0-6 months" 1 "6-12 months" 2 "12-18 months" ///
3 "18-24 months" 4 "24+ months"
la var days_p1_core_dod_cat "Days from R death to p1 interview, categorical"
la val days_p1_core_dod_cat days_p1_core_dod_cat 
tab days_p1_core_dod_cat , missing

//create associated indicator variables
gen byte days_p1_core_dod_lt6m = 0
replace days_p1_core_dod_lt6m = 1 if days_p1_core_dod_cat == 0
gen byte days_p1_core_dod_6_12m = 0
replace days_p1_core_dod_6_12m = 1 if days_p1_core_dod_cat == 1
gen byte days_p1_core_dod_12_18m = 0
replace days_p1_core_dod_12_18m = 1 if days_p1_core_dod_cat == 2
gen byte days_p1_core_dod_18_24m = 0
replace days_p1_core_dod_18_24m = 1 if days_p1_core_dod_cat == 3
gen byte days_p1_core_dod_gt2yr = 0
replace days_p1_core_dod_gt2yr = 1 if days_p1_core_dod_cat == 4

gen byte days_p1_core_dod_gt18mo = 0
replace days_p1_core_dod_gt18mo = 1 if inlist(days_p1_core_dod_cat,3,4)

la var days_p1_core_dod_lt6m "R death to P1 ivw lt 6m"
la var days_p1_core_dod_6_12m "R death to P1 ivw 6-12m"
la var days_p1_core_dod_12_18m "R death to P1 ivw 12-18m"
la var days_p1_core_dod_18_24m "R death to P1 ivw 18-24m"
la var days_p1_core_dod_gt2yr "R death to P1 ivw gt 2yr"
la var days_p1_core_dod_gt18mo "R death to P1 ivw gt 18m"

foreach v in days_p1_core_dod_lt6m days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
	days_p1_core_dod_18_24m days_p1_core_dod_gt2yr days_p1_core_dod_gt18mo {
	replace `v'=. if days_p1_core_dod_cat==.
	tab `v', missing
	}

//r's death year variable
gen r_death_year = year(r_death_date_e)
tab r_death_year , missing
la def year 2001 "2001" 2002 "2002" 2003 "2003" 2004 "2004" 2005 "2005" ///
2006 "2006" 2007 "2007" 2008 "2008" 2009 "2009" 2010 "2010"
la val r_death_year year 

//additional value labels added for spouse new variables
la def help_hours 0 "None" 1 "lt 100 hours" 2 "101-200 hours" 3 "gt 200 hours", replace
la val s_help_friends_hours_n1 s_help_friends_hours_p1 help_hours

la def soc_visit_cat 0 "None or almost never" 1 "Less than 1xper week" ///
2 "Between 1x per day up to 1x per week" 3 "At least 1x per day"
la val s_soc_visit_cat_n1 s_soc_visit_cat_n2 soc_visit_cat

label def decmaker 0 "N/A No EOL care decision made" 1 "Patient" ///
     2 "Spouse or Partner or Exit Int Proxy" ///
     3 "Child/Child-in-law/Grandchild" 4 "Other Relative" 5 "Friend" ///
     6 "Physician/Health Care Provider" 7 "Minister/Rabbi/Priest" ///
     8 "Other" 9 "Don't Know/Refused", modify
la val  r_decmaker_x decmaker

//additional variable labels for r variables
la var r_srh_pf_n1 "R Self rated health fair or poor"

//create missing category for advanced directive variable
tab r_advdir_x , missing
replace r_advdir_x = 2 if r_advdir_x == .
la def r_advdir_x 0 "No" 1 "Yes" 2 "Unknown"
la val r_advdir_x r_advdir_x 
tab r_advdir_x , missing
gen r_advdir_y = 0
replace r_advdir_y = 1 if r_advdir_x ==1
gen r_advdir_n = 0
replace r_advdir_n = 1 if r_advdir_x ==0
gen r_advdir_miss = 0
replace r_advdir_miss = 1 if r_advdir_x ==2
la var r_advdir_y "R advance directive x interview"
la var r_advdir_n "R no advance directive x interview"
la var r_advdir_miss "R advance directive status unknown x interview"
tab r_advdir_y 
tab r_advdir_n
tab r_advdir_miss

//if don't know, discussion of eol care preferences needs to be coded as missing
replace r_discuss_x=. if r_discuss_x==9
tab r_discuss_x, missing

save spouse_data_sample_v1.dta, replace

//create a copy of the dataset with the restricted variables dropped
//direct from restricted interviews
drop *_e zip*

//from exit ivw dataset
drop r_e_ivw_day_x r_e_ivw_month_x r_e_ivw_year_x r_e_ivw_date_x ///
 s_e_ivw_day_x s_e_ivw_month_x s_e_ivw_year_x s_e_ivw_date_x 

//other interview dates 
drop r_c_ivw_month_n1 r_c_ivw_day_n1 r_c_ivw_year_n1 r_c_ivw_day_imp_n1 r_c_ivw_date_n1 ///
 r_c_ivw_month_n2 r_c_ivw_day_n2 r_c_ivw_year_n2 r_c_ivw_day_imp_n2 r_c_ivw_date_n2  r_c_ivw_date_n3 ///
 s_c_ivw_month_n1 s_c_ivw_day_n1 s_c_ivw_year_n1 s_c_ivw_day_imp_n1 s_c_ivw_date_n1 ///
 s_c_ivw_month_n2 s_c_ivw_day_n2 s_c_ivw_year_n2 s_c_ivw_day_imp_n2 s_c_ivw_date_n2 s_c_ivw_date_n3 ///
 s_c_ivw_month_p1 s_c_ivw_day_p1 s_c_ivw_year_p1 s_c_ivw_day_imp_p1 s_c_ivw_date_p1

save spouse_data_sample_public.dta, replace

log close


H="Check difference in s proxy interviews"
/*Prior to dropping those observations without full CESD interviews
do a check of spouse characteristics of those with
proxy interviews as a robustness check

Find that we have higher rates of memory disease and 
psychiatric conditions for spouses that have interview by proxy */

capture log close

clear all
set mem 500m
set more off

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

log using "`logpath'\3-HRS_Spouse_Proxy_Diff.txt", text replace

cd `datapath'

use spouse_data_sample_v1.dta if (p1_wi_90d==0 & no_el_comorb_12m==0 & sudden_cause_death==0)
//use spouse_data_sample_public.dta if (p1_wi_90d==0 & no_el_comorb_12m==0 & sudden_cause_death==0)
******************************************************************
******************************************************************
//create a table of spouse characteristics
//checking if those with proxy interviews are different from
//those with regular interviews (b/c cesd missing if proxy)
******************************************************************
******************************************************************
tab proxy_n1_or_p1, missing
tab proxy_n1_and_p1, missing
gen no_proxy=1
replace no_proxy=0 if proxy_n1_or_p1
la var proxy_n1_or_p1 "At least 1 proxy interview n1 or p1"
tab no_proxy proxy_n1_or_p1, missing

local sdemovar3 s_female s_white_e s_hseduc_n1_n3 ///
s_medicaid_n1 s_srh_pf_n1 s_smoke_curr_n1 s_alcohol_mis_n1 ///
s_vig_phy_act_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 ///
s_hrs_comorb_mod_n1 s_hrs_comorb_sev_n1 ///
 s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
s_stroke_hrs_n1 s_memory_hrs_n1  s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1 ///
s_cancer_hrs_p1 s_lung_hrs_p1 s_heart_hrs_p1 s_chf_hrs_p1 ///
s_stroke_hrs_p1 s_memory_hrs_p1  s_htn_hrs_p1 s_dm_hrs_p1 s_psych_hrs_p1 s_1yr_p1_core_dead

mat sdemo2=J(34,3,.)

//first row, n of hospice and non-hospice
tab proxy_n1_or_p1, missing matcell(sd1)
mat sdemo2[1,1]=sd1[2,1] //no proxy ivw n
mat sdemo2[1,2]=sd1[1,1] //proxy ivw n

local j=1
foreach h in proxy_n1_or_p1 no_proxy {
sum s_age if `h'==1, detail //age
mat sdemo2[2,`j']=r(mean)
mat sdemo2[3,`j']=r(sd)
local i=4
foreach v in `sdemovar3' {
	sum `v' if `h'==1, detail 
	mat sdemo2[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 4-34
	}
local j=`j'+1
}

//p-values
ttest s_age, by(proxy_n1_or_p1) //age
mat sdemo2[2,3]=r(p)
local i=4
foreach v in `sdemovar3' {
	tab proxy_n1_or_p1 `v', row chi2 
	mat sdemo2[`i',3]=r(p)
	local i=`i'+1 //populates rows 4-34
	}

mat rownames sdemo2 ="Sample size n" "Age at r's death, mean" "SD" "Female" "Non-Hispanic White" ///
"Education, High school grad" "Medicaid" "SRH poor or fair" ///
"Currently smoker" "Alcohol mis-use" "Vigorous physical activity" ///
"Comorbidity index - none" "Mild (1-3)" "Moderate (4-6)" "Severe (7+)" ///
"Cancer n1" "Lung disease n1" "Heart disease n1" "CHF n1" "Stroke / TIA n1" ///
"Memory disease n1" "Hypertension n1" "Diabetes n1" "Psychiatric condition n1" ///
"Cancer p1" "Lung disease p1" "Heart disease p1" "CHF p1" "Stroke / TIA p1" ///
"Memory disease p1" "Hypertension p1" "Diabetes p1" "Psychiatric condition p1" ///
"p1 ivw wi 1 year of R death"

mat list sdemo2

frmttable using `logpath'\spo_proxy_check, statmat(sdemo2) ///
title("Unweighted sample - Spouse characteristics - proxy interviews") ///
ctitle("","Proxy Interview","Self Interview","P-value") ///
sdec(2,2,3) replace

log close

H="Sum stats, unmatched"
/*This Stata code creates clean variables and outputs
tables to the file logs\spo_initial_tables.doc

It also defines the variables that are used to create the propensity score
matched sample in the global "matchvars"
 */


capture log close

clear all
set mem 500m
set more off

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

log using "`logpath'\4-HRS_Spouse_sum_stats_tables.txt", text replace

cd `datapath'

//n=907
use spouse_data_sample_v1.dta if (p1_wi_90d==0 & no_cc_12m_excl_cataract==0 & sudden_cause_death==0 & cesd_miss_n1_p1==0 )

tab r_hs_12m_gt3d, missing

//n=907, keep 1-2 day hospice use for tables (KO email 4/11)
//n=856, excluding those with 1-2 days hospice use
//drop if r_hs_12m_gt3d==.

//rg modified list
//uses net worth quartiles, high is omitted category
//uses count of cc's, excluding glaucoma and cataract for number of chronic conditions
//does not include variabes that are highly correlated ( only uses s_ age, white, hs educ, not r_)
//does not include regional variables, region should not matter!
global matchvars cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y r_advdir_miss r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1	

//drop observations with missing covariates (22 obs)
//n=885
foreach v of varlist $matchvars {
tab `v', missing
drop if `v'==.
}

gen byte non_hosp=.
replace non_hosp=1 if r_hs_12m==0
replace non_hosp=0 if r_hs_12m==1
tab non_hosp r_hs_12m, missing

//save this n=818 dataset, this is the starting point for all final tables
save spouse_data_sample_v2.dta, replace

sum r_age, detail

//just verifies original age variable, its right
gen age2 =  (r_death_date_e - r_birth_date_e)/365
sum age2, detail

sum r_female
sca sample_N=r(N) //defines full sample size N for tables
tab r_female, missing
tab r_hseduc, missing

tab r_hisp_eth_e, missing
tab r_white_e, missing
tab r_black_e, missing
tab r_other_na_api_race_e, missing

sum r_networth_adj2010_n1, detail

tab r_nhres_n1, missing

tab r_imprelig_vimp_n1, missing

tab r_adl_cat_core_n1, missing
tab r_adl_cat_core_n2, missing

tab r_adl_stable_partial_n1n2, missing

//hospital death
tab r_location_x r_loc_hosp_x, missing



******************************************************************
******************************************************************
//create a table of decedent characteristics
******************************************************************
******************************************************************
local t1vars r_medicaid_n1 r_nhres_n1 r_nhres_x r_advdir_y r_advdir_n ///
r_advdir_miss r_adl_stable_ind_n1n2 ///
r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 r_adl_change_i_m_n1n2 ///
r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss cc_3_alzhdmta_n12mn0 ///
cc_6_chrnkidn_n12mn0 cc_12_ischmcht_n12mn0 cc_8_chf_n12mn0 ///
cc_9_diabetes_n12mn0 cc_7_copd_n12mn0 cc_16_strketia_n12mn0 ///
cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 cc_11_hipfrac_n12mn0 ///
cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 cc_15_ra_oa_n12mn0 

sum r_age, detail


mat demo=J(42,3,.)

//first row, n of hospice users and non-users
tab r_hs_12m, missing matcell(d1)
mat demo[1,1]=d1[2,1] //non-hospice n
mat demo[1,2]=d1[1,1] //hospice users n

local j=1
foreach h in r_hs_12m non_hosp {
sum r_age if `h'==1, detail //age
mat demo[2,`j']=r(mean)
mat demo[3,`j']=r(sd)
sum r_female if `h'==1, detail //female
mat demo[4,`j']=r(mean)*100
sum r_white_e if `h'==1, detail //non-hispanic, white
mat demo[5,`j']=r(mean)*100
sum r_hseduc_n1_n3 if `h'==1, detail //hs education+
mat demo[6,`j']=r(mean)*100
sum r_networth_adj2010_n1 if `h'==1, detail //net worth
mat demo[7,`j']=r(mean)
mat demo[8,`j']=r(sd)
local i=9
foreach v in `t1vars' {
	sum `v' if `h'==1, detail 
	mat demo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 9-34
	}
sum cc_all_count_12m_2 if `h'==1, detail //count of chronic conditions
mat demo[35,`j']=r(mean)
mat demo[36,`j']=r(sd)
sum hospital_beds if `h'==1, detail //hospital beds
mat demo[37,`j']=r(mean)
mat demo[38,`j']=r(sd)
sum medical_specialists if `h'==1, detail //medical specialists
mat demo[39,`j']=r(mean)
mat demo[40,`j']=r(sd)
sum hci_index if `h'==1, detail //hci index
mat demo[41,`j']=r(mean)
mat demo[42,`j']=r(sd)
local j=`j'+1
}

//pvalues
logit r_hs_12m r_age
test r_age
mat demo[2,3]=r(p) //p value from t-test
local j=4
foreach v in r_female r_white_e r_hseduc_n1_n3{
	logit r_hs_12m `v' 
	test `v'
	mat demo[`j',3]=r(p) //p value from chisq test
	local j = `j'+1 //rows 4-6
}
logit r_hs_12m r_networth_adj2010_n1
test r_networth_adj2010_n1
mat demo[7,3]=r(p) //p value from t-test
local j=9
foreach v in `t1vars' {
	logit r_hs_12m `v'
	test `v' 
	mat demo[`j',3]=r(p)
	local j=`j'+1 //populates rows 9-34
}
local j=35
foreach v in cc_all_count_12m_2 hospital_beds medical_specialists hci_index{
	logit r_hs_12m `v'
	test `v'
	mat demo[`j',3]=r(p) //p value from t-test
	local j=`j'+2 //rows 35-41
}

mat rownames demo ="Sample n" "Age at death, years, mean" "SD" "Female, %" "Race, Non-Hispanic White, %" ///
"Education, High School Grad" "Net worth, 2010US$, mean" "SD" "Medicaid, %" ///
"Nursing home resident n1, %" "Nursing home resident exit" "Had advance directive" ///
"Did not have advance directive" "Advance directive status unknown" ///
"Stable, Indep in ADLs n2 to n1" ///
"Stable, Moderate 1-3 ADL" "Stable, Severe 4-6 ADL" ///
"Declined, Indep to Moderate" "Declined, Moderate to Severe" ///
"Declined, Independent to Severe" "Unknown" "Alzheimers/Dementia" "Chronic Kidney Disease" ///
"Ischemic Heart Disease" "Congestive Heart Failure" "Diabetes" "COPD" ///
"Stroke or TIA" "Cancer" "Atrial Fibrillation" "Hip Fracture" "Depression" "Osteoporosis" ///
"Arthritis" "Count of chronic conditions" "SD" "Hosp beds per 10,000 res, mean" "SD" ///
"Specialists per 100,000, mean" "SD" "HCI index, mean" "SD"

mat list demo

frmttable using `logpath'\spo_initial_tables, statmat(demo) ///
title("Unweighted Sample - Decedent characteristics") ///
ctitle("","Hospice users","Non-hospice users","P-value") ///
sdec(2,2,3) replace

******************************************************************
******************************************************************
//create a table of spouse characteristics
******************************************************************
******************************************************************

local sdemovar1 s_female s_white_e s_hseduc_n1_n3 ///
s_medicaid_n1 s_srh_pf_n1 s_smoke_curr_n1 s_alcohol_mis_n1 ///
s_vig_phy_act_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 ///
s_hrs_comorb_mod_n1 s_cancer_hrs_n1 ///
s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 s_stroke_hrs_n1 ///
s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1 

local sdemovar2 s_cesd_tot_ge3_n1 ///
s_cesd_tot_ge3_p1 s_cesd_ge3better s_cesdbetter s_cesdsame s_cesdworse 

local sdemovar3 days_p1_core_dod_lt6m days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
	days_p1_core_dod_18_24m days_p1_core_dod_gt2yr 

mat sdemo=J(40,3,.)

//first row, n of hospice and non-hospice
tab r_hs_12m, missing matcell(sd1)
mat sdemo[1,1]=sd1[2,1] //non-hospice n
mat sdemo[1,2]=sd1[1,1] //hospice users n

local j=1
foreach h in r_hs_12m non_hosp {
sum s_age if `h'==1, detail //age
mat sdemo[2,`j']=r(mean)
mat sdemo[3,`j']=r(sd)
local i=4
foreach v in `sdemovar1' {
	sum `v' if `h'==1, detail 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 4-23
	}
sum s_cesd_tot_n1 if `h'==1, detail //cesd score n1
mat sdemo[24,`j']=r(mean)
sum s_cesd_tot_p1 if `h'==1, detail //cesd score p1
mat sdemo[25,`j']=r(mean)
sum s_cesdchange if `h'==1, detail //cesd score change n1 to p1
mat sdemo[26,`j']=r(mean)
local i=27
foreach v in `sdemovar2' {
	sum `v' if `h'==1, detail 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 27-32
	}
sum days_p1_core_dead if `h'==1, detail //days to p1 ivw
mat sdemo[33,`j']=r(mean)
mat sdemo[34,`j']=r(sd)
sum s_1yr_p1_core_dead if `h'==1, detail
mat sdemo[35,`j']=r(mean)*100
local i=36
foreach v in `sdemovar3' {
	sum `v' if `h'==1, detail 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 36-40
	}
local j=`j'+1
}

//p-values
logit r_hs_12m s_age
test s_age
mat sdemo[2,3]=r(p)
local i=4
foreach v in `sdemovar1' {
	logit r_hs_12m `v'
	test `v'
	mat sdemo[`i',3]=r(p)
	local i=`i'+1 //populates rows 4-23
	}
local i=24
foreach v in s_cesd_tot_n1 s_cesd_tot_p1 s_cesdchange{
	logit r_hs_12m `v'
	test `v'
	mat sdemo[`i',3]=r(p)
	local i=`i'+1 //populates rows 24-26
	}
local i=27
foreach v in `sdemovar2' {
	logit r_hs_12m `v'
	test `v'
	mat sdemo[`i',3]=r(p)
	local i=`i'+1 //populates rows 27-32
}
logit r_hs_12m days_p1_core_dead //days to p1 ivw
test days_p1_core_dead 
mat sdemo[33,`j']=r(p)
logit r_hs_12m s_1yr_p1_core_dead //p1 1 yr of death
test s_1yr_p1_core_dead 
mat sdemo[35,3]=r(p)
local i=36
foreach v in `sdemovar3' {
	logit r_hs_12m `v' 
	test `v'
	mat sdemo[`i',3]=r(p)
	local i=`i'+1 //populates rows 36-40
}

//can't do logit to get test for alchool misuse because no obs in hs group have it
tab s_alcohol_mis_n1 r_hs_12m, row chi2
mat sdemo[10,3]=r(p)

mat rownames sdemo ="Sample size n" "Age at r's death, mean" "SD" "Female" "Non-Hispanic White" ///
"Education, High school grad" "Medicaid" "SRH poor or fair" ///
"Currently smoker" "Alcohol mis-use" "Vigorous physical activity" ///
"Comorbidity index - none" "Mild (1-3)" "Moderate (4-6)" ///
"Cancer" "Lung disease" "Heart disease" "CHF" "Stroke" "Memory disease" ///
"Hypertension" "Diabetes" "Psychological problems" ///
"CESD-D raw score n1, mean" "CESD-D raw score p1, mean" "Change in raw CESD n1 to p1" ///
"Clinical depression pre death" "Clinical depression post death" ///
 "Clin depr n1 but no p1" "CESD Improved post death" ///
"Same CESD post death" "CESD Declined post death" "Days R DOD to S P1 ivw" ///
"SD" "P1 ivw wi 1 year of death" "R DOD to P1 ivw 3-6m" "R DOD to P1 ivw 6-12m" ///
 "R DOD to P1 ivw 12-18m"  "R DOD to P1 ivw 18-24m"  "R DOD to P1 ivw 2yr+"

mat list sdemo

frmttable using `logpath'\spo_initial_tables, statmat(sdemo) ///
title("Unweighted sample - Spouse characteristics") ///
ctitle("","Hospice users","Non-hospice users","P-value") ///
sdec(2,2,3) addtable

******************************************************************
******************************************************************
//Additional spouse table of new variables re. 
//depressive symptoms
//note !!last time I manually added in total n for categorical variables!!!
******************************************************************
******************************************************************
local spdepr1 s_psych_hrs_n1 s_psych_hrs_p1 s_psych_imp_n1p1 s_psych_worse_n1p1 ///
s_psych_same_n1p1 s_psych_treat_n1 s_psych_treat_p1 s_psych_treat_imp_n1p1 s_psych_treat_worse_n1p1 ///
s_psych_treat_same_n1p1 s_psych_med_n1 s_psych_med_p1 s_psych_med_imp_n1p1 ///
s_psych_med_worse_n1p1 s_psych_med_same_n1p1 s_psych_overall_hrs_n1 s_psych_overall_hrs_p1 ///
s_psych_oa_imp_n1p1 s_psych_oa_worse_n1p1 s_psych_oa_same_n1p1 s_ever_drink_n1 s_ever_drink_p1 ///
s_ever_drink_imp_n1p1 s_ever_drink_worse_n1p1 s_ever_drink_same_n1p1 

local spdepr1a s_drink_more_n1p1 s_drink_less_n1p1 s_drink_same_n1p1 ///
s_alcohol_mis_n1 s_alcohol_mis_p1 s_alcoh_mis_imp_n1p1 s_alcoh_mis_worse_n1p1 ///
s_alcoh_mis_same_n1p1 s_vig_phy_act_n1 s_vig_phy_act_p1 s_vig_act_imp_n1p1 ///
s_vig_act_worse_n1p1 s_vig_act_same_n1p1 s_help_friends_n1 s_help_friends_p1 ///
s_help_friends_imp_n1p1 s_help_friends_worse_n1p1 s_help_friends_same_n1p1 

local spdepr2 s_help_friends_hrs_more_n1p1 s_help_friends_hrs_less_n1p1 s_help_friends_hrs_same_n1p1 ///
s_friend_n1 s_friend_p1 s_friend_imp_n1p1 s_friend_worse_n1p1 s_friend_same_n1p1 ///
s_soc_visit_n1 s_soc_visit_p1 s_soc_visit_imp_n1p1 s_soc_visit_worse_n1p1 s_soc_visit_same_n1p1

local spdepr3 s_soc_visit_cnt_more_n1p1 s_soc_visit_cnt_less_n1p1 s_soc_visit_cnt_same_n1p1 ///
r_adl_sp_helper_n1 r_adl_sp_helper_x r_adl_oth_helper_n1 r_adl_oth_helper_x /// 

local spdepr4 adl_help_sp_more_n1x adl_help_sp_less_n1x adl_help_sp_same_n1x ///
adl_help_oth_more_n1x adl_help_oth_less_n1x adl_help_oth_same_n1x adl_help_count_more_n1x ///
adl_help_count_less_n1x adl_help_count_same_n1x r_iadl_sp_helper_n1 r_iadl_sp_helper_x ///
r_iadl_oth_helper_n1 r_iadl_oth_helper_x 

local spdepr5 iadl_help_sp_more_n1x iadl_help_sp_less_n1x iadl_help_sp_same_n1x ///
iadl_help_oth_more_n1x iadl_help_oth_less_n1x iadl_help_oth_same_n1x iadl_help_count_more_n1x ///
iadl_help_count_less_n1x iadl_help_count_same_n1x ///
r_hh_worker_n1 r_hh_worker_x r_lwill_x r_lw_all_x r_lw_lim_x r_lw_whld_x ///
r_lw_comf_x r_adapp_x r_adprob_x r_hcp_x r_discuss_x r_eoldec_x ///
r_capacity_x 

local spdepr6 r_dec_all_x r_dec_lim_x r_dec_whld_x r_dec_comf_x 

mat sp_new_vars=J(135,5,.)
//first row, n for hospice and non-hospice
tab r_hs_12m, missing matcell(sd2)
mat sp_new_vars[1,1]=sd2[2,1] //hospice users n
mat sp_new_vars[1,3]=sd2[1,1] //non-hospice n

tab s_alcohol_mis_n1 if r_hs_12m==1, missing
tab s_alcohol_mis_p1 if r_hs_12m==1, missing


local j=1
foreach h in r_hs_12m non_hosp {
local i=2
foreach v in `spdepr1' {
	sum `v' if `h'==1, detail 
	mat sp_new_vars[`i',`j']=r(N)
	mat sp_new_vars[`i',`j'+1]=r(mean)*100
	local i=`i'+1 //populates rows 2-26 (25)
	}
sum s_n_drinks_3m_n1  if `h'==1, detail 	
	mat sp_new_vars[27,`j']=r(N)
	mat sp_new_vars[27,`j'+1]=r(mean)
sum s_n_drinks_3m_p1  if `h'==1, detail 	
	mat sp_new_vars[28,`j']=r(N)
	mat sp_new_vars[28,`j'+1]=r(mean)
local i=29
foreach v in `spdepr1a' {
	sum `v' if `h'==1, detail 
	mat sp_new_vars[`i',`j']=r(N)
	mat sp_new_vars[`i',`j'+1]=r(mean)*100
	local i=`i'+1 //populates rows 29-46 (18)
	}	
tab s_help_friends_hours_n1 if `h'==1, missing matcell(nv1)
local r=1
forvalues k=47/50{
	mat sp_new_vars[`k',`j']=nv1[`r',1] //var=0 n
	mat sp_new_vars[`k',`j'+1]=nv1[`r',1]/r(N) *100 //pct
	local r=`r'+1
}
tab s_help_friends_hours_p1 if `h'==1, missing matcell(nv2)
local r=1
forvalues k=51/54{
	mat sp_new_vars[`k',`j']=nv2[`r',1] //var=0 n
	mat sp_new_vars[`k',`j'+1]=nv2[`r',1]/r(N) *100 //pct
	local r=`r'+1
}
local i=55
foreach v in `spdepr2' {
	sum `v' if `h'==1, detail 
	mat sp_new_vars[`i',`j']=r(N)
	mat sp_new_vars[`i',`j'+1]=r(mean)*100
	local i=`i'+1 //populates rows 55-67 (13)
	}
tab s_soc_visit_cat_n1 if `h'==1, missing matcell(nv3)
local r=1
forvalues k=68/71{
	mat sp_new_vars[`k',`j']=nv3[`r',1] //var=0 n
	mat sp_new_vars[`k',`j'+1]=nv3[`r',1]/r(N) *100 //pct
	local r=`r'+1
}
tab s_soc_visit_cat_p1 if `h'==1, missing matcell(nv4)
local r=1
forvalues k=72/75{
	mat sp_new_vars[`k',`j']=nv4[`r',1] //var=0 n
	mat sp_new_vars[`k',`j'+1]=nv4[`r',1]/r(N) *100 //pct
	local r=`r'+1
}
local i=76
foreach v in `spdepr3' {
	sum `v' if `h'==1, detail 
	mat sp_new_vars[`i',`j']=r(N)
	mat sp_new_vars[`i',`j'+1]=r(mean)*100
	local i=`i'+1 //populates rows 76-82 (7)
	}
sum r_adl_helper_count_n1  if `h'==1, detail 	
	mat sp_new_vars[83,`j']=r(N)
	mat sp_new_vars[83,`j'+1]=r(mean)
sum r_adl_helper_count_x  if `h'==1, detail 	
	mat sp_new_vars[84,`j']=r(N)
	mat sp_new_vars[84,`j'+1]=r(mean)	
local i=85
foreach v in `spdepr4' {
	sum `v' if `h'==1, detail 
	mat sp_new_vars[`i',`j']=r(N)
	mat sp_new_vars[`i',`j'+1]=r(mean)*100
	local i=`i'+1 //populates rows 85-97 (13)
	}
sum r_iadl_helper_count_n1  if `h'==1, detail 	
	mat sp_new_vars[98,`j']=r(N)
	mat sp_new_vars[98,`j'+1]=r(mean)
sum r_iadl_helper_count_x  if `h'==1, detail 	
	mat sp_new_vars[99,`j']=r(N)
	mat sp_new_vars[99,`j'+1]=r(mean)
local i=100
foreach v in `spdepr5' {
	sum `v' if `h'==1, detail 
	mat sp_new_vars[`i',`j']=r(N)
	mat sp_new_vars[`i',`j'+1]=r(mean)*100
	local i=`i'+1 //populates rows 100-121 (22)
	}	
tab r_decmaker_x if `h'==1, missing matcell(nv5)
local r=1
forvalues k=122/131{
	mat sp_new_vars[`k',`j']=nv5[`r',1] //var=0 n
	mat sp_new_vars[`k',`j'+1]=nv5[`r',1]/r(N) *100 //pct
	local r=`r'+1
}
local i=132
foreach v in `spdepr6' {
	sum `v' if `h'==1, detail 
	mat sp_new_vars[`i',`j']=r(N)
	mat sp_new_vars[`i',`j'+1]=r(mean)*100
	local i=`i'+1 //populates rows 132-135 (4)
	}
local j=`j'+2
}

//pvalues
local i=2
tab r_hs_12m s_psych_hrs_n1 , row chi
mat sp_new_vars[2,5]=r(p) //p value from chisq test
tab r_hs_12m s_psych_hrs_p1 , row chi
mat sp_new_vars[3,5]=r(p) //p value from chisq test

tab  s_psych_cat_n1p1 r_hs_12m, chi2
mat sp_new_vars[4,5]=r(p)

tab r_hs_12m s_psych_treat_n1, row chi
mat sp_new_vars[7,5]=r(p) //p value from chisq test
tab r_hs_12m s_psych_treat_p1, row chi
mat sp_new_vars[8,5]=r(p) //p value from chisq test

tab  s_psych_treat_cat_n1p1 r_hs_12m, chi2
mat sp_new_vars[9,5]=r(p)

tab r_hs_12m s_psych_med_n1, row chi
mat sp_new_vars[12,5]=r(p) //p value from chisq test
tab r_hs_12m s_psych_med_p1, row chi
mat sp_new_vars[13,5]=r(p) //p value from chisq test

tab  s_psych_med_cat_n1p1 r_hs_12m, chi2
mat sp_new_vars[14,5]=r(p)

tab r_hs_12m s_psych_overall_hrs_n1, row chi
mat sp_new_vars[17,5]=r(p) //p value from chisq test
tab r_hs_12m s_psych_overall_hrs_p1, row chi
mat sp_new_vars[18,5]=r(p) //p value from chisq test

tab  s_psych_oa_cat_n1p1 r_hs_12m, chi2
mat sp_new_vars[19,5]=r(p)

tab r_hs_12m s_ever_drink_n1, row chi
mat sp_new_vars[22,5]=r(p) //p value from chisq test
tab r_hs_12m s_ever_drink_p1, row chi
mat sp_new_vars[23,5]=r(p) //p value from chisq test

tab  s_ever_drink_cat_n1p1 r_hs_12m, chi2
mat sp_new_vars[24,5]=r(p)

ttest s_n_drinks_3m_n1, by(r_hs_12m)
mat sp_new_vars[27,5]=r(p) //p value from t-test
ttest s_n_drinks_3m_p1, by(r_hs_12m)
mat sp_new_vars[28,5]=r(p) //p value from t-test

tab s_drink_cat_n1p1 r_hs_12m, chi2
mat sp_new_vars[29,5]=r(p)

tab r_hs_12m s_alcohol_mis_n1, row chi
mat sp_new_vars[32,5]=r(p) //p value from chisq test
tab r_hs_12m s_alcohol_mis_p1, row chi
mat sp_new_vars[33,5]=r(p) //p value from chisq test

tab  s_alcoh_mis_cat_n1p1 r_hs_12m, chi2
mat sp_new_vars[34,5]=r(p)

tab r_hs_12m s_vig_phy_act_n1, row chi
mat sp_new_vars[37,5]=r(p) //p value from chisq test
tab r_hs_12m s_vig_phy_act_p1, row chi
mat sp_new_vars[38,5]=r(p) //p value from chisq test

tab  s_vig_act_cat_n1p1 r_hs_12m, chi2
mat sp_new_vars[39,5]=r(p)

tab r_hs_12m s_help_friends_n1, row chi
mat sp_new_vars[42,5]=r(p) //p value from chisq test
tab r_hs_12m s_help_friends_p1, row chi
mat sp_new_vars[43,5]=r(p) //p value from chisq test

tab  s_help_friends_cat_n1p1 r_hs_12m, chi2
mat sp_new_vars[44,5]=r(p)

tab  s_help_friends_hours_n1 r_hs_12m, chi2
mat sp_new_vars[47,5]=r(p)
tab  s_help_friends_hours_p1 r_hs_12m, chi2
mat sp_new_vars[51,5]=r(p)

tab  s_help_friends_hrs_cat_n1p1 r_hs_12m, chi2
mat sp_new_vars[55,5]=r(p)

tab r_hs_12m s_friend_n1 , row chi
mat sp_new_vars[58,5]=r(p) //p value from chisq test
tab r_hs_12m s_friend_p1 , row chi
mat sp_new_vars[59,5]=r(p) //p value from chisq test

tab  s_friend_cat_n1p1  r_hs_12m, chi2
mat sp_new_vars[60,5]=r(p)


tab r_hs_12m s_soc_visit_n1 , row chi
mat sp_new_vars[63,5]=r(p) //p value from chisq test
tab r_hs_12m s_soc_visit_p1 , row chi
mat sp_new_vars[64,5]=r(p) //p value from chisq test

tab  s_soc_visit_cat_n1p1  r_hs_12m, chi2
mat sp_new_vars[65,5]=r(p)

tab s_soc_visit_cat_n1 r_hs_12m, chi2
mat sp_new_vars[68,5]=r(p)
tab s_soc_visit_cat_p1 r_hs_12m, chi2
mat sp_new_vars[72,5]=r(p)

tab  s_soc_visit_cnt_cat_n1p1  r_hs_12m, chi2
mat sp_new_vars[76,5]=r(p)

tab r_hs_12m r_adl_sp_helper_n1 , row chi
mat sp_new_vars[79,5]=r(p) //p value from chisq test
tab r_hs_12m r_adl_sp_helper_x , row chi
mat sp_new_vars[80,5]=r(p) //p value from chisq test
tab r_hs_12m r_adl_oth_helper_n1 , row chi
mat sp_new_vars[81,5]=r(p) //p value from chisq test
tab r_hs_12m r_adl_oth_helper_x , row chi
mat sp_new_vars[82,5]=r(p) //p value from chisq test

ttest r_adl_helper_count_n1, by(r_hs_12m)
mat sp_new_vars[83,5]=r(p) //p value from t-test
ttest r_adl_helper_count_x, by(r_hs_12m)
mat sp_new_vars[84,5]=r(p) //p value from t-test

tab  adl_help_sp_cat_n1x r_hs_12m, chi2
mat sp_new_vars[85,5]=r(p)

tab  adl_help_oth_cat_n1x r_hs_12m, chi2
mat sp_new_vars[88,5]=r(p)

tab  adl_help_count_cat_n1x r_hs_12m, chi2
mat sp_new_vars[91,5]=r(p)

tab r_hs_12m r_adl_sp_helper_n1 , row chi
mat sp_new_vars[94,5]=r(p) //p value from chisq test
tab r_hs_12m r_adl_sp_helper_x , row chi
mat sp_new_vars[95,5]=r(p) //p value from chisq test
tab r_hs_12m r_adl_oth_helper_n1 , row chi
mat sp_new_vars[96,5]=r(p) //p value from chisq test
tab r_hs_12m r_adl_oth_helper_x , row chi
mat sp_new_vars[97,5]=r(p) //p value from chisq test

ttest r_adl_helper_count_n1, by(r_hs_12m)
mat sp_new_vars[98,5]=r(p) //p value from t-test
ttest r_adl_helper_count_x, by(r_hs_12m)
mat sp_new_vars[99,5]=r(p) //p value from t-test

tab  adl_help_sp_cat_n1x r_hs_12m, chi2
mat sp_new_vars[100,5]=r(p)

tab  adl_help_oth_cat_n1x r_hs_12m, chi2
mat sp_new_vars[103,5]=r(p)

tab  adl_help_count_cat_n1x r_hs_12m, chi2
mat sp_new_vars[106,5]=r(p)

local spdeprpval1 r_hh_worker_n1 r_hh_worker_x r_lwill_x r_lw_all_x r_lw_lim_x r_lw_whld_x ///
r_lw_comf_x r_adapp_x r_adprob_x r_hcp_x r_discuss_x r_eoldec_x ///
r_capacity_x 

local i=107
foreach v in `spdeprpval1 ' {
	tab r_hs_12m `v', row chi 
	mat sp_new_vars[`i',5]=r(p)
	local i=`i'+1 //populates rows 107-121
	}
tab r_decmaker_x r_hs_12m, chi2
mat sp_new_vars[122,5]=r(p)
local i=132
foreach v in `spdepr6' {
	tab r_hs_12m `v', row chi 
	mat sp_new_vars[`i',5]=r(p)
	local i=`i'+1 //populates rows 132-135
	}
	
mat rownames sp_new_vars ="Sample size n" "S Psychiatric Condition n1" "S Psychiatric Condition p1" ///
"S Psych Cond in n1 to none in p1" "S no psych cond n1 to yes in p1" "S no change n1 p1" ///  
"S Psychiatric Treatment n1" "S Psychiatric Treatment p1" ///
"S Psych treat in n1, none in p1" "S no psych treat n1, yes in p1" "S no change n1 p1" /// 
"S Psychiatric Medication n1" "S Psychiatric Medication p1" ///
"S Psych med in n1 to none in p1" "S no psych med n1 to yes in p1" "S no change n1 p1" ///
"S Psychiatric Overall Ind n1" "S Psychiatric Overall Ind p1" ///
"S OA Psych cond n1 to no p1" "S no oa psych cond n1 to yes p1" "S no change n1 p1" ///
"S Ever drink n1" "S Ever drink p1" "S drink n1 to doesn't drink p1" "S doesn't drink n1 to drink p1" ///
"S drink status same n1 p1" "S Number drinks n1"  ///
"S Number drinks p1" "S No drinks increased n1 to p1" "S No drinks decreased n1 to p1" ///
"S No drinks same n1 to p1" "S Alcohol misuse n1" "S Alcohol misuse p1" ///
"S Alcohol misuse n1 to none p1" "S no alcohol misuse n1 to yes p1" ///
"S Alcohol misuse same n1 to p1" "S Vig Physical Act n1" ///
"S Vig Physical Act p1" "S no Vig Phys act n1 to yes p1" "S Vig phys act n1 to none p1" ///
"S Vig Phys act same n1 to p1" "S Help Friends n1" "S Help Friends p1" ///
"S No help friends n1 to yes p1" "S Help friends n1 to no p1" "S Help friends same n1 p1" ///
 "S Help friends=none n1" ///
"S Help friends=<100 hours n1" "S Help friends=101-200 hours n1" "S Help friends=gt 200 hours n1"  ///
"S Help friends=none p1" "S Help friends=<100 hours p1" "S Help friends=101-200 hours p1" ///
"S Help friends=gt 200 hours p1" ///
"S Help friends more n1 to p1" "S Help friends less n1 to p1" "S help friends same n1 to p1" ///
"S Friends nearby n1" "S Friends nearby p1" "S no friends nearby n1, yes p1" ///
"S Friends nearby n1, no p1" "S friends nearby same n1 p1" ///
"S Social visits n1" "S Social visits p1" "S No social visits n1 to yes p1" "S Social visits n1 to none p1" ///
"S Social visits same n1 p1" "S Visits=none or almost never n1" "S Visits <1/week n1" "S Visits <1/day n1" ///
"S Visits gt 1/day n1" "S Visits=none or almost never p1" "S Visits <1/week p1" "S Visits <1/day p1" ///
"S Visits gt 1/day p1" "S More social visits n1 to p1" "S Fewer social visits n1 to p1" ///
"S Same social visits n1 to p1" ///
"R ADL Helper = S n1" "R ADL Helper = S x" "R ADL Helper = Other n1" ///
"R ADL Helper = Other x" "R Count ADL Helpers n1 (mean)" "R Count ADL Helpers x (mean)" ///
"R ADL Helper S no n1, yes x" "R ADL Helper yes S n1, no x" "R ADL Helper S no change" ///
"R ADL Helper Oth no n1, yes x" "R ADL Helper Oth yes  n1, no x" "R ADL Helper Oth no change" ///
"R more adl helpers n1 to x" "R fewer adl helpers n1 to x" ///
"R same adl helpers n1 to x" ///
"R IADL Helper = S n1" "R IADL Helper = S x" "R IADL Helper = Other n1" ///
"R IADL Helper = Other x" "R Count IADL Helpers n1 (mean)" "R Count IADL Helpers x (mean)" ///
"R IADL Helper S no n1, yes x" "R IADL Helper yes S n1, no x" "R IADL Helper S no change" ///
"R IADL Helper Oth no n1, yes x" "R IADL Helper Oth yes  n1, no x" "R IADL Helper Oth no change" ///
"R more iadl helpers n1 to x" "R fewer iadl helpers n1 to x" ///
"R same iadl helpers n1 to x" ///
"R HH Worker n1" "R HH Worker x" "R Living Will?" ///
"LW - All care possible" "LW - Limit some care" ///
"LW - Withhold some care" "LW - Focus on Comfort" "Advance directive was applicable" ///
"Trouble following AD" "Durable power of attorney" "Discussion of EOL care pref" ///
"EOL Care decisions made" "R able to participate in dec" "Decision maker = NA" ///
"Patient" "Spouse" "Child/Grandchild" "Other relative" "Friend" "Physician" "Minister/Rabbi/Priest" ///
"Other" "Don't know, Refused" "Decision - All care possible" "D - Limit some care" ///
"D Withhold some care" "D Focus on comfort"

mat list sp_new_vars

frmttable using `logpath'\spo_initial_tables, statmat(sp_new_vars) ///
title("Additional variables") ///
ctitle("","N - hospice", "Mean, %","N - non-hospice", "Mean, %", "P-value") ///
note("P values from chi squared statistics") ///
sdec(0,2,0,2,3) addtable


******************************************************************
******************************************************************
//create a table of interview timelines
******************************************************************
******************************************************************

local timevars r_days_n1_core_dead s_days_n1_core_dead ///
r_days_x_exit_dead days_p1_core_dead
mat ivwtime=J(4,2,.)
local i=1
foreach v in `timevars'{
	sum `v', detail
	mat ivwtime[`i',1]=r(mean)
	mat ivwtime[`i',2]=r(sd)
	local i=`i'+1
}

mat rownames ivwtime = "R's pre-death core interview" "S's pre-death core interview" ///
"R's exit interview" "S's post-death core interview"

frmttable using `logpath'\spo_initial_tables, statmat(ivwtime) ///
title("Interview timeline for decedent and spouse") ///
ctitle("","Mean, days","SD") ///
sdec(2,2) addtable
		

******************************************************************
******************************************************************
// Table of hospice, snf, hospital use last 24 months of life
// also includes regional controls
******************************************************************
******************************************************************
local hosp r_hs_12m hs_los_12m hs_los_12m_miss r_hs_12m_gt3d r_hs_12m_gt7d ///
r_hs_24m hs_los_24m hs_los_24m_miss ///
r_snf_24m snf_los_24m snf_los_24m_miss ///
r_ip_24m ip_los_24m ip_los_24m_miss r_loc_hosp_x ///
r_advdir_x hospital_beds medical_specialists

mat hosp_use=J(18,6,.)
local i=1
foreach v in `hosp'{
	sum `v', detail
	mat hosp_use[`i',1]=r(N) //N
	mat hosp_use[`i',2]=sample_N - r(N) //N missing
	mat hosp_use[`i',3]=r(mean) //mean
	mat hosp_use[`i',4]=r(p50) //median
	mat hosp_use[`i',5]=r(min) //min
	mat hosp_use[`i',6]=r(max) //max
	local i=`i'+1
}
mat rownames hosp_use = "Ind Any Hospice use last 12m" "Hospice LOS last 12m" ///
"Hospice LOS last 12m if LOS gt 0" "3+ Days Hospice use" "7+ Days Hospice use" ///
"Ind Hospice use last 24m" "Hospice LOS last 24m" ///
"Hospice LOS last 24m if LOS gt 0" "Ind SNF use last 24m" "SNF LOS last 24m" ///
"SNF LOS last 24m if LOS gt 0" "Ind IP adm last 24m" ///
"Hospital LOS last 24m" "Hospital LOS last 24m, LOS gt 0" ///
"Hospital death" "Advance directive" ///
"Hospital beds per 1,000 res" "Med specialists per 100,000 res" 

mat list hosp_use

frmttable using `logpath'\spo_initial_tables, statmat(hosp_use) ///
title("Service use last 2 years of life and regional vars") ///
ctitle("","N","N missing","Mean","Median","Min","Max") ///
sdec(0,0,2,0,0,0) addtable


******************************************************************
******************************************************************
// Tables of comorbidity / chronic conditions measures
******************************************************************
******************************************************************
local hcc cc_1_ami_n12mn0 cc_2_alzh_n12mn0 cc_3_alzhdmta_n12mn0 ///
cc_4_atrialfb_n12mn0 cc_5_cataract_n12mn0 cc_6_chrnkidn_n12mn0 ///
cc_7_copd_n12mn0 cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_10_glaucoma_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_12_ischmcht_n12mn0 cc_13_depressn_n12mn0 ///
cc_14_osteoprs_n12mn0 cc_15_ra_oa_n12mn0 cc_16_strketia_n12mn0 ///
cc_17_cncrbrst_n12mn0 cc_18_cncrclrc_n12mn0 cc_19_cncrprst_n12mn0 ///
cc_20_cncrlung_n12mn0 cc_21_cncrendm_n12mn0 cc_ami_isch_n12mn0 ///
cc_alzheim_n12mn0 cc_cncr_chronic_n12mn0

local elix comorb_1_0d_n12m comorb_2_0d_n12m comorb_3_0d_n12m comorb_4_0d_n12m ///
comorb_5_0d_n12m comorb_6_0d_n12m comorb_7_0d_n12m comorb_8_0d_n12m ///
comorb_9_0d_n12m comorb_10_0d_n12m comorb_11_0d_n12m comorb_12_0d_n12m ///
comorb_13_0d_n12m comorb_14_0d_n12m comorb_15_0d_n12m comorb_16_0d_n12m ///
comorb_17_0d_n12m comorb_18_0d_n12m comorb_19_0d_n12m comorb_20_0d_n12m ///
comorb_21_0d_n12m comorb_22_0d_n12m comorb_23_0d_n12m comorb_24_0d_n12m ///
comorb_25_0d_n12m comorb_26_0d_n12m comorb_27_0d_n12m comorb_28_0d_n12m ///
comorb_29_0d_n12m comorb_30_0d_n12m comorb_31_0d_n12m comorb_all_0d_n12m

mat hcc_mean=J(24,2,.)
local i=1
foreach v in `hcc'{
	sum `v'
	mat hcc_mean[`i',1]=r(mean)
	mat hcc_mean[`i',2]=r(N)
	local i=`i'+1
}

mat rownames hcc_mean ="AMI" "Alzheimer's" "Alzheimer's or Dementia" "Atrial Fibrillation" ///
"Cataract" "Chronic Kidney Disease" ///
"COPD" "CHF" "Diabetes" "Glaucoma" "Hip fracture" "Ischemic Heart Disease" "Depression" ///
"Osteoporosis" "Rheumatoid Arthritis" "Stroke" "Cancer - Breast" "Cancer - Colorectal" "Cancer - Prostate" ///
"Cancer - Lung" "Cancer - Endometrial" "AMI+ISCH" "Alzh + Dementia" "Cancer - any"


mat el_mean=J(32,2,.)
local i=1
foreach v in `elix'{
	sum `v'
	mat el_mean[`i',1]=r(mean)
	mat el_mean[`i',2]=r(N)
	local i=`i'+1
}

mat rownames el_mean = "Congestive Heart Failure" "Cardiac Arrhythmias" "Valvular Disease" ///
"Pulmonary Circulation Disorders" "Peripheral Vascular Disorders" "Hypertension" ///
 "Paralysis" "Other Neurological Disorders" "Chronic Pulmonary Disease" "Diabetes, uncomplicated" ///
 "Diabetes, complicated" "Hypothyroidism" "Renal Failure" "Liver Disease" ///
 "Peptic Ulcer Disease" "AIDS" "Lymphoma" "Metastatic Cancer" ///
 "Solid Tumor without Metastasis" "Rheumatoid Arthritis" ///
 "Coagulopathy" "Obesity" "Weight Loss" "Fluid and Electrolyte Disorders" ///
 "Blood Loss Anemia" "Deficiency Anemias" "Alcohol Abuse" "Drug Abuse" "Psychoses" "Depression" ///
 "Dementia" "Total Elix comorb"

mat list hcc_mean
mat list el_mean

	
frmttable using `logpath'\spo_initial_tables, statmat(hcc_mean) ///
title("R's Chronic conditions") ctitle("","Mean","N") ///
sdec(2,0) addtable
 
frmttable using `logpath'\spo_initial_tables, statmat(el_mean) ///
title("R's Elixhauser comorbidities") ctitle("","Mean","N") ///
sdec(2,0) addtable 
 
log close


H="Analysis - S CESD Score Improves post R's death"
/*Outcome variable is: CESD improvement indicator, ie any improvement 
in CESD score from n1 to p1

This Stata code runs following analyses:
1. Unmatched logit regression on spouse depressive symptoms
2. Determines propensity scores
3. Runs summary tables for r and s characteristics using px weighting
4. Px matched logit regression on reduced spouse depressive symptoms 
5. Creates means tables of matched, frequency weighted sample


Note caliper set for use with dataset that excludes the regional variables when matching!*/

capture log close

clear all
set mem 500m
set more off
set scheme s1color

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\5-HRS_Spouse_analysis.txt", text replace

cd `datapath'

use spouse_data_sample_v2.dta
//use spouse_data_sample_public.dta if (p1_wi_90d==0 & no_cc_12m_excl_cataract==0 & sudden_cause_death==0 & cesd_miss_n1_p1==0)

tab s_comor_c_hrs_n1 s_cesdbetter, chi2
tab s_comor_c_hrs_n1 r_hs_12m, chi2

*****************************************************************************
*****************************************************************************
//Unmatched logit regression hospice use on reduced spousal depression
*****************************************************************************
*****************************************************************************
local xvars c.s_age i.s_female i.s_white_e i.s_hseduc_n1_n3 i.s_srh_pf_p1 ///
i.s_hrs_comorb_mild_n1 i.s_hrs_comorb_mod_n1 i.s_psych_overall_hrs_n1 

local yearvars ib2000.r_death_year 

logit s_cesdbetter i.r_hs_12m `xvars' `yearvars', or

outreg using `logpath'\spouse_analysis, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment - Unmatched" \ ///
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) replace
 	
*****************************************************************************
*****************************************************************************
//Run on larger sample without exclusions for p1 ivw 90+days from death ,etc
//Note this sample is not right, if going to use this table in the final results
//reported, need to update it! 
//Uses dataset prior to dropping variables that are missing
*****************************************************************************
*****************************************************************************
clear

use spouse_data_sample_v1.dta
//use spouse_data_sample_public.dta

logit s_cesdbetter i.r_hs_12m `xvars' `yearvars', or

outreg using `logpath'\spouse_analysis, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment - Unmatched" \ ///
	"Sample without exclusions for p1 ivw time, comorbidities, sudden death" \ ///
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable
  
*****************************************************************************
*****************************************************************************
//Px score matching
*****************************************************************************
*****************************************************************************
clear 

//go back to sample restricted on p1 ivw time from death, etc.
use spouse_data_sample_v2.dta 
//use spouse_data_sample_public.dta if (p1_wi_90d==0 & no_cc_12m_excl_cataract==0 & sudden_cause_death==0 & cesd_miss_n1_p1==0)

//check correlation, do not use both r, s age, race, educ
pwcorr r_age s_age, sig
pwcorr r_white_e s_white_e, sig
pwcorr r_hseduc_n1_n3 s_hseduc_n1_n3, sig
pwcorr r_medicaid_n1 s_medicaid_n1, sig

//original list from ling's code
local matchvars_orig comorb_all_0d_n12m cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 r_age r_female r_white_e  r_hseduc_n1_n3 r_networth_n1 ///
r_nhres_n1 r_imprelig_vimp_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_medicaid_n1 ///
r_champus_n1 r_medigap_n1 r_advdir_x r_discuss_x r_srh_pf_n1 ///
hci_index hospital_beds specialists	

//rg modified list
//See tab Sum stats, unmatched for variable list 

tab r_hs_12m, missing

//first sort data randomly
set seed 2000
gen x=uniform()
sort x


*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores
*****************************************************************************
*****************************************************************************

//generate pscore variable hs_pscore
pscore r_hs_12m $matchvars, pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m) pscore(hs_pscore)
graph save `logpath'/psgraph_1 ,replace

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

//rule of thumb 0.2*sd
//psmatch2  r_hs_12m,outcome(s_cesdbetter) pscore(hs_pscore) caliper(.1713619) logit
//try 0.02* sd
psmatch2  r_hs_12m,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.01713619) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(r_hs_12m) pscore(hs_pscore)
graph save `logpath'/psgraph_2 ,replace

histogram hs_pscore if _support==1, by(r_hs_12m) 

//look at balance of matched vs unmatched samples
pstest $matchvars ,treated(r_hs_12m) both hist
graph save `logpath'/psmatch_1 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age{
gen `v'_treated = `v' if r_hs_12m==1 & _support==1
gen `v'_comparison = `v' if r_hs_12m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v', replace
}

mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if r_hs_12m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1"

mat list vr

//look at standardized differences to assess balance - section removed
//standardized difference same as bias reported when run pstest command above


//using this matching, 2 obs from the treatment group are dropped b/c they are off support
//18 are dropped b/c not matched (weight=.)
//_support ==1 if matched
tab _support, missing
tab _support if r_hs_12m==1, missing
tab _support if r_hs_12m==0, missing
tab _weight if r_hs_12m==1, missing
sum _weight if r_hs_12m==0

//rename ps variables and save dataset so can call them up later
rename _support support_1
rename _weight weight_1

save spouse_data_sample_v1_ps1.dta, replace

//drop observations that aren't matched using caliper match
drop if weight_1==.

*************************************************************************************
//now run doubly robust estimation using weighting , outcome = improved CESD score p1
//need to include the variables used in the propensity score

logit s_cesdbetter i.r_hs_12m `yearvars' $matchvars [iw=weight_1] , or 

est save logit_matched_1, replace

outreg using `logpath'\spouse_analysis, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

tab s_cesdbetter s_cesd_ge3better, missing

//Run logit with outcome=depressed n1, not depressed p1
logit s_cesd_ge3better i.r_hs_12m `yearvars' $matchvars [iw=weight_1] , or 

outreg using `logpath'\spouse_analysis, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

*************************************************************************************
log close



H="Creates Table 1 & 2 - Decedent/Spouse Descr Char"
/*This section creates the publication tables and overall
sample summary stats used in the paper!!
*/

capture log close

clear all
set mem 500m
set more off
set scheme s1color

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\5b-HRS_Spouse_analysis.txt", text replace

cd `datapath'

use spouse_data_sample_v2.dta

/*create quick table of overall sample characteristics*/
local varlist1 r_female r_white_e r_hseduc_n1_n3 

local varlist2 s_female s_white_e ///
s_hseduc_n1_n3 s_adl_independent_core_n1

mat quicktab=J(13,5,.)

sum r_age 
mat quicktab[1,1]=r(mean)

local j=2
foreach v in `varlist1'{
sum `v'
mat quicktab[`j',1]=r(mean)*100
local j=`j'+1 //rows 2-4
}

sum s_age 
mat quicktab[5,1]=r(mean)


local j=6
foreach v in `varlist2'{
sum `v'
mat quicktab[`j',1]=r(mean)*100
local j=`j'+1 //rows 6-9
}


local i=10
sum hs_los_12m if r_hs_12m==1, detail
mat quicktab[`i',1]=r(mean)
mat quicktab[`i',2]=r(sd)
mat quicktab[`i',3]=r(p50)
mat quicktab[`i',4]=r(min)
mat quicktab[`i',5]=r(max)

gen mo_p1_core_dead =days_p1_core_dead/30.5
gen mo_s_n1_core_dead = s_days_n1_core_dead/30.5

sum mo_p1_core_dead
mat quicktab[`i'+1,1]=r(mean)

sum mo_s_n1_core_dead 
mat quicktab[`i'+2,1]=r(mean)

gen mo_s_p1_n1 = (days_p1_core_dead+ s_days_n1_core_dead)/30.5
sum mo_s_p1_n1 , detail
mat quicktab[`i'+3,1]=r(mean)
mat quicktab[`i'+3,2]=r(sd)
mat quicktab[`i'+3,3]=r(p50)
mat quicktab[`i'+3,4]=r(min)
mat quicktab[`i'+3,5]=r(max)

mat list quicktab

mat rownames quicktab="R Age" "R Female" "R White" "R HS Degree" ///
"S Age" "S Female" "S White" "S HS Degree" "S ADL independent n1" ///
"Days hospice use" "S n1 ivw months before death" "S p1 ivw months after death" ///
"S n1 to p1 interview, months"

frmttable using `logpath'\spo_overall_sample_char, statmat(quicktab) ///
title("Overall sample descriptive characteristics, n=867") ///
ctitle("","Mean or Percent" "SD" "Median" "Min" "Max") ///
sdec(3,2,0,0,0) replace


*************************************************************************************
*************************************************************************************
//Create Table 1, Decedent Descriptive Statistics
//Col 1-3: Unweighted, unmatched sample
//Col 4-6: Weighted and matched sample
*************************************************************************************
*************************************************************************************
local t1vars r_medicaid_n1 r_nhres_n1 r_nhres_x r_advdir_y r_advdir_n ///
r_advdir_miss r_adl_stable_ind_n1n2 ///
r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 r_adl_change_i_m_n1n2 ///
r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss cc_3_alzhdmta_n12mn0 ///
cc_6_chrnkidn_n12mn0 cc_12_ischmcht_n12mn0 cc_8_chf_n12mn0 ///
cc_9_diabetes_n12mn0 cc_7_copd_n12mn0 cc_16_strketia_n12mn0 ///
cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 cc_11_hipfrac_n12mn0 ///
cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 cc_15_ra_oa_n12mn0 

sum r_age, detail

mat demo=J(36,6,.)

//first row, n of hospice users and non-users
tab r_hs_12m, missing matcell(d1)
mat demo[1,1]=d1[2,1] //non-hospice n
mat demo[1,2]=d1[1,1] //hospice users n

local j=1
foreach h in r_hs_12m non_hosp {
sum r_age if `h'==1, detail //age
mat demo[2,`j']=r(mean)
mat demo[3,`j']=r(sd)
sum r_female if `h'==1, detail //female
mat demo[4,`j']=r(mean)*100
sum r_white_e if `h'==1, detail //non-hispanic, white
mat demo[5,`j']=r(mean)*100
sum r_hseduc_n1_n3 if `h'==1, detail //hs education+
mat demo[6,`j']=r(mean)*100
sum r_networth_adj2010_n1 if `h'==1, detail //net worth
mat demo[7,`j']=r(mean)
mat demo[8,`j']=r(sd)
local i=9
foreach v in `t1vars' {
	sum `v' if `h'==1, detail 
	mat demo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 9-34
	}
sum cc_all_count_12m_2 if `h'==1, detail //count of chronic conditions
mat demo[35,`j']=r(mean)
mat demo[36,`j']=r(sd)
local j=`j'+1
}

//standardized difference for unmatched sample
//creates new matrix with means then puts the standardized difference into
//the main demo matrix

mat std_diff_b=J(36,4,.)

local r=2
sum r_age if r_hs_12m==1 //get mean,variance treated before matching
mat std_diff_b[`r',1]=r(mean)
mat std_diff_b[`r',2]=r(sd)

sum r_age if r_hs_12m==0 //get mean,variance contl before matching
mat std_diff_b[`r',3]=r(mean)
mat std_diff_b[`r',4]=r(sd)

mat demo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',2]^2+std_diff_b[`r',4]^2)/2) 
	
local r = 4
foreach v in r_female r_white_e r_hseduc_n1_n3 {
	sum `v' if r_hs_12m==1 //get mean,variance treated before matching
	mat std_diff_b[`r',1]=r(mean)

	sum `v' if r_hs_12m==0 //get mean,variance contl before matching
	mat std_diff_b[`r',3]=r(mean)

	mat demo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',1]*(1-std_diff_b[`r',1])+std_diff_b[`r',3]*(1-std_diff_b[`r',3]))/2)

	local r = `r'+1
}

sum r_networth_adj2010_n1 if r_hs_12m==1 //get mean,variance treated before matching
mat std_diff_b[`r',1]=r(mean)
mat std_diff_b[`r',2]=r(sd)

sum r_networth_adj2010_n1 if r_hs_12m==0 //get mean,variance contl before matching
mat std_diff_b[`r',3]=r(mean)
mat std_diff_b[`r',4]=r(sd)

mat demo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',2]^2+std_diff_b[`r',4]^2)/2) 

local r = 9
foreach v in `t1vars' {
	sum `v' if r_hs_12m==1 //get mean,variance treated before matching
	mat std_diff_b[`r',1]=r(mean)

	sum `v' if r_hs_12m==0 //get mean,variance contl before matching
	mat std_diff_b[`r',3]=r(mean)

	mat demo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',1]*(1-std_diff_b[`r',1])+std_diff_b[`r',3]*(1-std_diff_b[`r',3]))/2)

	local r = `r'+1
}

local r = 35
sum cc_all_count_12m_2 if r_hs_12m==1 //get mean,variance treated before matching
mat std_diff_b[`r',1]=r(mean)
mat std_diff_b[`r',2]=r(sd)

sum cc_all_count_12m_2 if r_hs_12m==0 //get mean,variance contl before matching
mat std_diff_b[`r',3]=r(mean)
mat std_diff_b[`r',4]=r(sd)

mat demo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',2]^2+std_diff_b[`r',4]^2)/2) 


//just look at it to check means against the pstest output to make sure they are right
mat rownames std_diff_b= "R age" "" "Female" "White" "HS Degree" "Net worth" "" ///
"Medicaid" "Nursing home res before death" "Nursing home res at death" ///
"Advance directive Y" "Advance directive N" "Advance directive missing" ///
"ADL stable independent" "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" ///
"Alzheimers/Dementia" "Chronic kidney disease" "AMI / ISCH" ///
"CHF" "Diabetes" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis" "Count of comorbidities" ""

mat list std_diff_b

*************************************************************************************
//Table 1 - cols 4-6: Respondent characteristics, matched and weighted
*************************************************************************************
clear

use spouse_data_sample_v1_ps1.dta

//first row, n of hospice users and non-users
tab r_hs_12m if weight_1!=. , missing matcell(dm)
mat demo[1,5]=dm[1,1] //non-hospice n
mat demo[1,4]=dm[2,1] //hospice users n

local j=4
foreach h in r_hs_12m non_hosp {
sum r_age if `h'==1 [iweight=weight_1] //age
mat demo[2,`j']=r(mean)
mat demo[3,`j']=r(sd)
sum r_female if `h'==1 [iweight=weight_1] //female
mat demo[4,`j']=r(mean)*100
sum r_white_e if `h'==1 [iweight=weight_1] //non-hispanic, white
mat demo[5,`j']=r(mean)*100
sum r_hseduc_n1_n3 if `h'==1 [iweight=weight_1] //hs education+
mat demo[6,`j']=r(mean)*100
sum r_networth_adj2010_n1 if `h'==1 [iweight=weight_1] //net worth
mat demo[7,`j']=r(mean)
mat demo[8,`j']=r(sd)
local i=9
foreach v in `t1vars' {
	sum `v' if `h'==1 [iweight=weight_1] 
	mat demo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 9-34
	}
sum cc_all_count_12m_2 if `h'==1 [iweight=weight_1] //count of chronic conditions
mat demo[35,`j']=r(mean)
mat demo[36,`j']=r(sd)
local j=`j'+1
}

//standardized difference for matched sample
//creates new matrix with means then puts the standardized difference into
//the main demo matrix

mat std_diff_a=J(36,4,.)

local r=2
sum r_age if r_hs_12m==1 [iweight=weight_1] //get mean,variance treated after matching
mat std_diff_a[`r',1]=r(mean)
mat std_diff_a[`r',2]=r(sd)

sum r_age if r_hs_12m==0 [iweight=weight_1] //get mean,variance contl after matching
mat std_diff_a[`r',3]=r(mean)
mat std_diff_a[`r',4]=r(sd)

mat demo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',2]^2+std_diff_a[`r',4]^2)/2) 
	
local r = 4
foreach v in r_female r_white_e r_hseduc_n1_n3 {
	sum `v' if r_hs_12m==1 [iweight=weight_1] //get mean,variance treated after matching
	mat std_diff_a[`r',1]=r(mean)

	sum `v' if r_hs_12m==0 [iweight=weight_1] //get mean,variance contl after matching
	mat std_diff_a[`r',3]=r(mean)

	mat demo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',1]*(1-std_diff_a[`r',1])+std_diff_a[`r',3]*(1-std_diff_a[`r',3]))/2)

	local r = `r'+1
}

sum r_networth_adj2010_n1 if r_hs_12m==1 [iweight=weight_1] //get mean,variance treated after matching
mat std_diff_a[`r',1]=r(mean)
mat std_diff_a[`r',2]=r(sd)

sum r_networth_adj2010_n1 if r_hs_12m==0 [iweight=weight_1] //get mean,variance contl after matching
mat std_diff_a[`r',3]=r(mean)
mat std_diff_a[`r',4]=r(sd)

mat demo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',2]^2+std_diff_a[`r',4]^2)/2) 

local r = 9
foreach v in `t1vars' {
	sum `v' if r_hs_12m==1 [iweight=weight_1] //get mean,variance treated after matching
	mat std_diff_a[`r',1]=r(mean)

	sum `v' if r_hs_12m==0 [iweight=weight_1] //get mean,variance contl after matching
	mat std_diff_a[`r',3]=r(mean)

	mat demo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',1]*(1-std_diff_a[`r',1])+std_diff_a[`r',3]*(1-std_diff_a[`r',3]))/2)

	local r = `r'+1
}

local r = 35
sum cc_all_count_12m_2 if r_hs_12m==1 [iweight=weight_1] //get mean,variance treated after matching
mat std_diff_a[`r',1]=r(mean)
mat std_diff_a[`r',2]=r(sd)

sum cc_all_count_12m_2 if r_hs_12m==0 [iweight=weight_1] //get mean,variance contl after matching
mat std_diff_a[`r',3]=r(mean)
mat std_diff_a[`r',4]=r(sd)

mat demo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',2]^2+std_diff_a[`r',4]^2)/2) 


//just look at it to check means against the pstest output to make sure they are right
mat rownames std_diff_a= "R age" "" "Female" "White" "HS Degree" "Net worth" "" ///
"Medicaid" "Nursing home res before death" "Nursing home res at death" ///
"Advance directive Y" "Advance directive N" "Advance directive missing" ///
"ADL stable independent" "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" ///
"Alzheimers/Dementia" "Chronic kidney disease" "AMI / ISCH" ///
"CHF" "Diabetes" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis" "Count of comorbidities" ""

mat list std_diff_a


mat rownames demo ="Sample n" "Age at death, years, mean" "SD" "Female, %" "Race, Non-Hispanic White, %" ///
"Education, High School Grad" "Net worth, 2010US$, mean" "SD" "Medicaid, %" ///
"Nursing home resident n1, %" "Nursing home resident exit" "Had advance directive" ///
"Did not have advance directive" "Advance directive status unknown" ///
"Stable, Indep in ADLs n2 to n1" ///
"Stable, Moderate 1-3 ADL" "Stable, Severe 4-6 ADL" ///
"Declined, Indep to Moderate" "Declined, Moderate to Severe" ///
"Declined, Independent to Severe" "Unknown" "Alzheimers/Dementia" "Chronic Kidney Disease" ///
"Ischemic Heart Disease" "Congestive Heart Failure" "Diabetes" "COPD" ///
"Stroke or TIA" "Cancer" "Atrial Fibrillation" "Hip Fracture" "Depression" "Osteoporosis" ///
"Arthritis" "Count of chronic conditions" "SD"

mat list demo

frmttable using `logpath'\spo_Table1_deced_char, statmat(demo) ///
title("Decedent descriptive characteristics, by any hospice use status") ///
ctitle("","Unmatched Sample","","","Matched Sample","","" \ "", "Hospice users","Non-hospice users","Std. Diff.", ///
  "Hospice users" ,"Non-hospice users" ,"Std. Diff.") ///
sdec(2,2,3,2,2,3) replace

******************************************************************
******************************************************************
//Table 2 spouse characteristics
//Col 1-3: unmatched, unweighted
//Col 4-6: matched and weighted
******************************************************************
******************************************************************
clear

use spouse_data_sample_v2.dta

local sdemovar1 s_female s_white_e s_hseduc_n1_n3 ///
s_medicaid_n1 s_srh_pf_n1 s_imprelig_vimp_n1 s_smoke_curr_n1 ///
s_vig_phy_act_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 ///
s_hrs_comorb_mod_n1 s_cancer_hrs_n1 ///
s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 s_stroke_hrs_n1 ///
s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1 ///
days_p1_core_dod_lt6m days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_gt18mo

local sdemovar2 s_cesd_tot_ge3_n1 ///
s_cesd_tot_ge3_p1 s_cesdbetter s_cesdsame s_cesdworse 

mat sdemo=J(35,6,.)

//first row, n of hospice and non-hospice
tab r_hs_12m, missing matcell(sd1)
mat sdemo[1,1]=sd1[2,1] //non-hospice n
mat sdemo[1,2]=sd1[1,1] //hospice users n

local j=1
foreach h in r_hs_12m non_hosp {
sum s_age if `h'==1, detail //age
mat sdemo[2,`j']=r(mean)
mat sdemo[3,`j']=r(sd)
local i=4
foreach v in `sdemovar1' {
	sum `v' if `h'==1, detail 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 4-27
	}

sum s_cesd_tot_n1 if `h'==1, detail //cesd score n1
mat sdemo[28,`j']=r(mean)
sum s_cesd_tot_p1 if `h'==1, detail //cesd score p1
mat sdemo[29,`j']=r(mean)
sum s_cesdchange if `h'==1, detail //cesd score change n1 to p1
mat sdemo[30,`j']=r(mean)

local i=31
foreach v in `sdemovar2' {
	sum `v' if `h'==1, detail 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 31-35
	}
local j=`j'+1
}

//standardized difference for unmatched sample
//creates new matrix with means then puts the standardized difference into
//the main demo matrix

mat std_diff_b=J(35,4,.)

local r=2
sum s_age if r_hs_12m==1 //get mean,variance treated before matching
mat std_diff_b[`r',1]=r(mean)
mat std_diff_b[`r',2]=r(sd)

sum s_age if r_hs_12m==0 //get mean,variance contl before matching
mat std_diff_b[`r',3]=r(mean)
mat std_diff_b[`r',4]=r(sd)

mat sdemo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',2]^2+std_diff_b[`r',4]^2)/2)

local r = 4
foreach v in `sdemovar1'  {
	sum `v' if r_hs_12m==1 //get mean,variance treated before matching
	mat std_diff_b[`r',1]=r(mean)

	sum `v' if r_hs_12m==0 //get mean,variance contl before matching
	mat std_diff_b[`r',3]=r(mean)

	mat sdemo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',1]*(1-std_diff_b[`r',1])+std_diff_b[`r',3]*(1-std_diff_b[`r',3]))/2)

	local r = `r'+1
}

local r = 28
foreach v in s_cesd_tot_n1  s_cesd_tot_p1  s_cesdchange {
        sum `v' if r_hs_12m==1 //get mean,variance treated before matching
    mat std_diff_b[`r',1]=r(mean)
    mat std_diff_b[`r',2]=r(sd)

    sum `v' if r_hs_12m==0 //get mean,variance contl before matching
    mat std_diff_b[`r',3]=r(mean)
    mat std_diff_b[`r',4]=r(sd)

    mat sdemo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',2]^2+std_diff_b[`r',4]^2)/2)

    local r = `r'+1
}

local r = 31
foreach v in `sdemovar2' {
	sum `v' if r_hs_12m==1 //get mean,variance treated before matching
	mat std_diff_b[`r',1]=r(mean)

	sum `v' if r_hs_12m==0 //get mean,variance contl before matching
	mat std_diff_b[`r',3]=r(mean)

	mat sdemo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',1]*(1-std_diff_b[`r',1])+std_diff_b[`r',3]*(1-std_diff_b[`r',3]))/2)

	local r = `r'+1
}

//just look at it to check means against the pstest output to make sure they are right
mat rownames std_diff_b= "S age" "" "Female" "White" "HS Degree" ///
"Medicaid" "SRH poor/fair" "Religion very imp" "Smoker" "Vigorous phys act" ///
"Comorb - none" "Mild" "Moderate" "Cancer" "Lung disease" "Heart disease" "CHF" "Stroke" ///
"Memory disease" "Hypertension" "Diabetes" "Psych problems" "p1 ivw 0-6m" ///
"p1 ivw 6-12m" "p1 ivw 12-18m" "p1 > 18m" "CESD raw n1" "CESD raw p1" "CESD change" ///
"Clin depr n1" "Clin depr p1" "CESD improved" "CESD same" "CESD declined"

mat list std_diff_b


**********************************************************************
//Matched weighted columns 4-6
**********************************************************************
clear

use spouse_data_sample_v1_ps1.dta

//first row, n of hospice and non-hospice
tab r_hs_12m if weight_1!=., missing matcell(sd1)
mat sdemo[1,4]=sd1[2,1] //hospice n
mat sdemo[1,5]=sd1[1,1] //non-hospice users n

local j=4
foreach h in r_hs_12m non_hosp {
sum s_age if `h'==1 [iweight=weight_1] //age
mat sdemo[2,`j']=r(mean)
mat sdemo[3,`j']=r(sd)
local i=4
foreach v in `sdemovar1' {
	sum `v' if `h'==1 [iweight=weight_1] 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 4-27
	}
sum s_cesd_tot_n1 if `h'==1 [iweight=weight_1] //cesd score n1
mat sdemo[28,`j']=r(mean)
sum s_cesd_tot_p1 if `h'==1 [iweight=weight_1] //cesd score p1
mat sdemo[29,`j']=r(mean)
sum s_cesdchange if `h'==1 [iweight=weight_1] //cesd score change n1 to p1
mat sdemo[30,`j']=r(mean)
local i=31
foreach v in `sdemovar2' {
	sum `v' if `h'==1 [iweight=weight_1] 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 31-35
	}
local j=`j'+1
}

//standardized difference for matched sample
//creates new matrix with means then puts the standardized difference into
//the main demo matrix

mat std_diff_a=J(35,4,.)

local r=2
sum s_age if r_hs_12m==1 [iweight=weight_1] //get mean,variance treated after matching
mat std_diff_a[`r',1]=r(mean)
mat std_diff_a[`r',2]=r(sd)

sum s_age if r_hs_12m==0 [iweight=weight_1] //get mean,variance contl after matching
mat std_diff_a[`r',3]=r(mean)
mat std_diff_a[`r',4]=r(sd)

mat sdemo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',2]^2+std_diff_a[`r',4]^2)/2)

local r = 4
foreach v in `sdemovar1' {
	sum `v' if r_hs_12m==1 [iweight=weight_1] //get mean,variance treated after matching
	mat std_diff_a[`r',1]=r(mean)

	sum `v' if r_hs_12m==0 [iweight=weight_1] //get mean,variance contl after matching
	mat std_diff_a[`r',3]=r(mean)

	mat sdemo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',1]*(1-std_diff_a[`r',1])+std_diff_a[`r',3]*(1-std_diff_a[`r',3]))/2)

	local r = `r'+1
}

local r = 28
foreach v in s_cesd_tot_n1 s_cesd_tot_p1 s_cesdchange  {
        sum `v' if r_hs_12m==1 [iweight=weight_1] //get mean,variance treated after matching
        mat std_diff_a[`r',1]=r(mean)
        mat std_diff_a[`r',2]=r(sd)

        sum `v' if r_hs_12m==0 [iweight=weight_1] //get mean,variance contl after matching
        mat std_diff_a[`r',3]=r(mean)
        mat std_diff_a[`r',4]=r(sd)

        mat sdemo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',2]^2+std_diff_a[`r',4]^2)/2)
   	local r = `r'+1
}

local r = 31
foreach v in `sdemovar2' {
	sum `v' if r_hs_12m==1 [iweight=weight_1] //get mean,variance treated after matching
	mat std_diff_a[`r',1]=r(mean)

	sum `v' if r_hs_12m==0 [iweight=weight_1] //get mean,variance contl after matching
	mat std_diff_a[`r',3]=r(mean)

	mat sdemo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',1]*(1-std_diff_a[`r',1])+std_diff_a[`r',3]*(1-std_diff_a[`r',3]))/2)

	local r = `r'+1
}

//just look at it to check means against the pstest output to make sure they are right
mat rownames std_diff_a= "S age" "" "Female" "White" "HS Degree" ///
"Medicaid" "SRH poor/fair" "Religion very imp" "Smoker" "Vigorous phys act" ///
"Comorb - none" "Mild" "Moderate" "Cancer" "Lung disease" "Heart disease" "CHF" "Stroke" ///
"Memory disease" "Hypertension" "Diabetes" "Psych problems" "p1 ivw 0-6m" ///
"p1 ivw 6-12m" "p1 ivw 12-18m" "p1 > 18m" "CESD raw n1" "CESD raw p1" "CESD change" ///
"Clin depr n1" "Clin depr p1" "CESD improved" "CESD same" "CESD declined"

mat list std_diff_a

mat rownames sdemo ="Sample size n" "Age at r's death, mean" "SD" "Female %" "Non-Hispanic White %" ///
"Education, High school grad %" "Medicaid %" "SRH poor or fair %" ///
"Religion very important %" "Currently smoker %" "Vigorous physical activity %" ///
"Comorbidity index - none" "Mild (1-3)" "Moderate (4-6)" ///
"Cancer %" "Lung disease %" "Heart disease %" "CHF %" "Stroke %" "Memory disease %" ///
"Hypertension %" "Diabetes %" "Psychological problems %" ///
"P1 interview 0-6m from death" "P1 interview 6-12m" "P1 interview 12-18m" "P1 interview 18m+" ///
"CES-D raw score pre-death, mean" "CES-D raw score post-death, mean" "Change in raw CES-D" ///
"Clinical depression pre-death %" "Clinical depression post-death %" ///
 "CES-D Improved post death %" "Same CES-D post death %" "CES-D Declined post death %"

mat list sdemo

frmttable using `logpath'\spo_Table2_spouse_char, statmat(sdemo) ///
title("Spouse descriptive characteristics, by any hospice use status") ///
ctitle("","Unmatched Sample","","","Matched Sample","","" \ "", "Hospice users","Non-hospice users","Std. Diff.", ///
  "Hospice users" ,"Non-hospice users" ,"Std. Diff.") ///
  sdec(2,2,4,2,2,4) replace

log close


H="xxxxxxAnaylsis, part 2 - different match variables"
/*created this code to compare the samples bewtween
using the correlated variables in the propensity score generation which
is coded in the previous tab and excluding them (coded here*/

capture log close

clear all
set mem 500m
set more off
set scheme s1color

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\5a-HRS_Spouse_analysis_excl_corr_vars.txt", text replace

cd `datapath'

use spouse_data_sample_v2.dta

global matchvars2 cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 r_age r_female r_white_e  r_hseduc_n1_n3 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_imprelig_vimp_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y r_advdir_miss r_discuss_x r_srh_pf_n1 ///
hci_index hospital_beds specialists /*s_age s_white_e s_hseduc_n1_n3*/ s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

tab r_hs_12m, missing

//first sort data randomly
set seed 2000
gen x=uniform()
sort x


*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores
*****************************************************************************
*****************************************************************************

//generate pscore variable hs_pscore
pscore r_hs_12m $matchvars2, pscore(hs_pscore) blockid(hs_block) logit detail
//one of the net worth categories is not balanced in one block, that is fine

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m) pscore(hs_pscore)
//graph save `logpath'/psgraph_1 ,replace

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

//rule of thumb 0.2*sd
//psmatch2  r_hs_12m,outcome(s_cesdbetter) pscore(hs_pscore) caliper(.1809855) logit
//try 0.02* sd
psmatch2  r_hs_12m,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.01809855) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(r_hs_12m) pscore(hs_pscore)
//graph save `logpath'/psgraph_2 ,replace

histogram hs_pscore if _support==1, by(r_hs_12m) 

//look at balance of matched vs unmatched samples
pstest $matchvars2 ,treated(r_hs_12m) both hist
//graph save `logpath'/psmatch_1 ,replace

//pstest $matchvars2 `xvars',treated(r_hs_12m) both graph
//graph save `logpath'/psmatch_2 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 r_age s_age hci_index hospital_beds specialists{
gen `v'_treated = `v' if r_hs_12m==1 & _support==1
gen `v'_comparison = `v' if r_hs_12m==0 & _support==1
qqplot `v'_treated `v'_comparison
//graph save `logpath'/qqplot_`v', replace
}


mat vr=J(46,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars2  {
sum `v' if r_hs_12m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m==0 & _support==1 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}


mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis" "R Age" "R Female" "R White" "R HS Deg" ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
"Religion very important" "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" "Advance directive Y" ///
"Advance directive missing" ///
"R Discuss EOL plans" "SRH Fair/Poor" "HCI Index" "Hospital beds" "Specialists" ///
/*"S age" "S White" "S HS Degree"*/ "S SRH Fair/Poor" "S HRS Comorb Mild 1-3" ///
"S HRS Comorb Mod 4-6" "S Psych Problem HRS n1"

mat list vr

//using this matching, 7 obs from the treatment group are dropped b/c they are off support
//20 are dropped b/c not matched (weight=.)
//_support ==1 if matched
tab _support, missing
tab _support if r_hs_12m==1, missing
tab _support if r_hs_12m==0, missing
tab _weight if r_hs_12m==1, missing
sum _weight if r_hs_12m==0

//rename ps variables and save dataset so can call them up later
//rename _support support_1
rename _weight weight_1

//save spouse_data_sample_v1_ps1.dta, replace

//drop observations that aren't matched using caliper match
drop if weight_1==.

//now run using weighting , outcome = improved CESD score p1
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in

//define xvars for the doubly robust estimation regression
global xvars_dr cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 r_age r_female r_white_e  r_hseduc_n1_n3 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_imprelig_vimp_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_x r_discuss_x r_srh_pf_n1 ///
hci_index hospital_beds specialists s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

logit s_cesdbetter i.r_hs_12m `yearvars' $xvars_dr [iw=weight_1] , or 

//est save logit_matched_1, replace

outreg using `logpath'\spouse_analysis_excl_corr_vars, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1" \ ///
	"R+S correlated variables are excluded in p-score generation") ///
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) replace

tab s_cesdbetter s_cesd_ge3better, missing

//Run logit with outcome=depressed n1, not depressed p1
logit s_cesd_ge3better i.r_hs_12m `yearvars' $xvars_dr [iw=weight_1] , or 

outreg using `logpath'\spouse_analysis_excl_corr_vars, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" \ ///	
	"R+S correlated variables are excluded in p-score generation") ///
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

log close


H="Sub-sample of spouse caregivers"
/*This Stata code runs following analyses:
1. Unmatched logit regression on spouse depressive symptoms
2. Determines propensity scores
3. Runs summary tables for r and s characteristics using px weighting
4. Px matched logit regression on reduced spouse depressive symptoms 
5. Creates means tables of matched, frequency weighted sample
*/

capture log close

clear all
set mem 500m
set more off

//Amy's PC
local logpath E:\data\spouse\logs\helpers
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\6-HRS_Spouse_analysis_helpers_only.txt", text replace

cd `datapath'

use spouse_data_sample_v2.dta if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) 

tab r_hs_12m, missing

*****************************************************************************
*****************************************************************************
//Px score matching
*****************************************************************************
*****************************************************************************
//rg modified list
//uses net worth quartiles, high is omitted category

tab r_hs_12m, missing

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores
*****************************************************************************
*****************************************************************************

//generate pscore variable hs_pscore
pscore r_hs_12m $matchvars , pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m) pscore(hs_pscore)
graph save `logpath'/helper_psgraph_1 ,replace

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

//psmatch2  r_hs_12m,outcome(s_cesdbetter) pscore(hs_pscore) caliper(.1802932) logit
//try 0.2* sd
psmatch2  r_hs_12m,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.01802932) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(r_hs_12m) pscore(hs_pscore)
graph save `logpath'/helper_psgraph_2 ,replace

histogram hs_pscore if _support==1, by(r_hs_12m) 

//look at balance of matched vs unmatched samples
pstest $matchvars,treated(r_hs_12m) both hist
graph save `logpath'/helper_psmatch_1 ,replace

pstest $matchvars,treated(r_hs_12m) both graph
graph save `logpath'/helper_psmatch_2 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated = `v' if r_hs_12m==1 & _support==1
gen `v'_comparison = `v' if r_hs_12m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/helper_qqplot_`v', replace
}


mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if r_hs_12m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}


mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list vr

//using this matching, 10 obs from the treatment group are dropped b/c they are off common support
//4 dropped because not matched

//_support ==1 if matched
tab _support, missing
tab _support if r_hs_12m==1, missing
tab _support if r_hs_12m==0, missing
tab _weight if r_hs_12m==1, missing
sum _weight if r_hs_12m==0

//drop observations that aren't matched using caliper match
drop if _support!=1
drop if _weight==.

***********************************************************************
//now run logit model using weighting 
***********************************************************************
//need to include the variables used in the propensity score

local yearvars ib2000.r_death_year 

logit s_cesdbetter i.r_hs_12m `yearvars' $matchvars [iw=_weight] , or 

outreg using `logpath'\helpers_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to spouses providing primary caregivers for ADL/IADL's" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) replace

//Run logit with outcome=depressed n1, not depressed p1
//Have to use an alternate variable list because missing category for
//advanced directive perfectly predicts failure
local new_varlist cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 	

logit s_cesd_ge3better i.r_hs_12m `yearvars' `new_varlist' [iw=_weight] , or 

outreg using `logpath'\helpers_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to spouses providing primary caregivers for ADL/IADL's" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" ) ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

log close


H="xxxxxSubsamples based on p1 interview time"
/*This Stata code runs following analyses:
Runs the propensity score matching, doubly robust logit regression on 
subgroups based on interview time windows

Note, does not run, some windows are too small!!
*/

capture log close

clear all
set mem 500m
set more off

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\6b-HRS_Spouse_analysis_group_by_p1_ivw.txt", text replace

cd `datapath'

use spouse_data_sample_v2.dta

tab r_hs_12m_gt3d, missing
drop if r_hs_12m_gt3d==.

tab r_hs_12m_gt3d s_1yr_p1_core_dead, missing

tab days_p1_core_dod_cat , missing

*****************************************************************************
*****************************************************************************
//Px score matching
*****************************************************************************
*****************************************************************************
//rg modified list
//uses net worth quartiles, high is omitted category

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

preserve

*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores, sample with interview 3-6m
*****************************************************************************
*****************************************************************************
//keep subsample of interviews where interview 3-6 months after death
keep if days_p1_core_dod_lt6m==1

//generate pscore variable hs_pscore
pscore r_hs_12m_gt3d $matchvars , pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m_gt3d ) pscore(hs_pscore)
//graph save `logpath'/helper_psgraph_1 ,replace

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

psmatch2  r_hs_12m_gt3d ,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.03511321) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore)

histogram hs_pscore if _support==1, by(r_hs_12m_gt3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars,treated(r_hs_12m_gt3d) both hist

pstest $matchvars,treated(r_hs_12m_gt3d) both graph

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated = `v' if r_hs_12m_gt3d==1 & _support==1
gen `v'_comparison = `v' if r_hs_12m_gt3d==0 & _support==1
qqplot `v'_treated `v'_comparison
}

mat vr=J(43,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if r_hs_12m_gt3d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m_gt3d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m_gt3d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m_gt3d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}


mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list vr


//_support ==1 if matched
tab _support, missing
tab _support if r_hs_12m_gt3d==1, missing
tab _support if r_hs_12m_gt3d==0, missing
tab _weight if r_hs_12m_gt3d==1, missing
sum _weight if r_hs_12m_gt3d==0


//drop observations that aren't matched using caliper match
drop if _support!=1
drop if _weight==.

***********************************************************************
//now run logit model using weighting 
***********************************************************************

local yearvars ib2000.r_death_year 

logit s_cesdbetter r_hs_12m_gt3d `yearvars' $matchvars [iw=_weight] , or 

outreg using `logpath'\ivw_time_groups_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat keep(r_hs_12m_gt3d) ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview within 3-6m of R's death" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) replace

*****************************************************************************

*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores, sample with interview 6-12m
*****************************************************************************
*****************************************************************************

*****************************************************************************

restore

//keep subsample of interviews where interview 6-12 months after death
keep if days_p1_core_dod_6_12m==1

//generate pscore variable hs_pscore
pscore r_hs_12m_gt3d $matchvars , pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore)

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

psmatch2  r_hs_12m_gt3d,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.02223214) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore)

histogram hs_pscore if _support==1, by(r_hs_12m_gt3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars,treated(r_hs_12m_gt3d) both hist

pstest $matchvars,treated(r_hs_12m_gt3d) both graph

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated = `v' if r_hs_12m_gt3d==1 & _support==1
gen `v'_comparison = `v' if r_hs_12m_gt3d==0 & _support==1
qqplot `v'_treated `v'_comparison
}


mat vr=J(43,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if r_hs_12m_gt3d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m_gt3d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m_gt3d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m_gt3d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}


mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" "HCI Index" ///
"Hospital beds" "Specialists"

mat list vr


//_support ==1 if matched
tab _support, missing
tab _support if r_hs_12m_gt3d==1, missing
tab _support if r_hs_12m_gt3d==0, missing
tab _weight if r_hs_12m_gt3d==1, missing
sum _weight if r_hs_12m_gt3d==0

//drop observations that aren't matched using caliper match
drop if _support!=1
drop if _weight==.

***********************************************************************
//now run logit model using weighting 
***********************************************************************
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in


local yearvars ib2000.r_death_year 

logit s_cesdbetter r_hs_12m_gt3d `yearvars' $matchvars [iw=_weight] , or 

outreg using `logpath'\ivw_time_groups_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat keep(r_hs_12m_gt3d ) ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview 6-12m of R's death" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable


*****************************************************************************

*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores, sample with interview 6-12m
*****************************************************************************
*****************************************************************************

*****************************************************************************

restore

//keep subsample of interviews where interview 12-18 months after death
keep if days_p1_core_dod_12_18m==1

//generate pscore variable hs_pscore
pscore r_hs_12m_gt3d $matchvars , pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore)

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

psmatch2  r_hs_12m_gt3d,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.02223214) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore)

histogram hs_pscore if _support==1, by(r_hs_12m_gt3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars,treated(r_hs_12m_gt3d) both hist

pstest $matchvars,treated(r_hs_12m_gt3d) both graph

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated = `v' if r_hs_12m_gt3d==1 & _support==1
gen `v'_comparison = `v' if r_hs_12m_gt3d==0 & _support==1
qqplot `v'_treated `v'_comparison
}


mat vr=J(43,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if r_hs_12m_gt3d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m_gt3d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m_gt3d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m_gt3d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}


mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" "HCI Index" ///
"Hospital beds" "Specialists"

mat list vr


//_support ==1 if matched
tab _support, missing
tab _support if r_hs_12m_gt3d==1, missing
tab _support if r_hs_12m_gt3d==0, missing
tab _weight if r_hs_12m_gt3d==1, missing
sum _weight if r_hs_12m_gt3d==0

//drop observations that aren't matched using caliper match
drop if _support!=1
drop if _weight==.

***********************************************************************
//now run logit model using weighting 
***********************************************************************
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in


local yearvars ib2000.r_death_year 

logit s_cesdbetter r_hs_12m_gt3d `yearvars' $matchvars [iw=_weight] , or 

outreg using `logpath'\ivw_time_groups_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat keep(r_hs_12m_gt3d) ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview 12-18m of R's death" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

*****************************************************************************

*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores, sample with interview 6-12m
*****************************************************************************
*****************************************************************************

*****************************************************************************

restore

//keep subsample of interviews where interview 18+ months after death
keep if days_p1_core_dod_gt18mo==1

//generate pscore variable hs_pscore
pscore r_hs_12m_gt3d $matchvars , pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore)

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

psmatch2  r_hs_12m_gt3d,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.02223214) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore)

histogram hs_pscore if _support==1, by(r_hs_12m_gt3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars,treated(r_hs_12m_gt3d) both hist

pstest $matchvars,treated(r_hs_12m_gt3d) both graph

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated = `v' if r_hs_12m_gt3d==1 & _support==1
gen `v'_comparison = `v' if r_hs_12m_gt3d==0 & _support==1
qqplot `v'_treated `v'_comparison
}


mat vr=J(43,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if r_hs_12m_gt3d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m_gt3d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m_gt3d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m_gt3d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}


mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" "HCI Index" ///
"Hospital beds" "Specialists"

mat list vr


//_support ==1 if matched
tab _support, missing
tab _support if r_hs_12m_gt3d==1, missing
tab _support if r_hs_12m_gt3d==0, missing
tab _weight if r_hs_12m_gt3d==1, missing
sum _weight if r_hs_12m_gt3d==0

//drop observations that aren't matched using caliper match
drop if _support!=1
drop if _weight==.

***********************************************************************
//now run logit model using weighting 
***********************************************************************
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in


local yearvars ib2000.r_death_year 

logit s_cesdbetter r_hs_12m_gt3d `yearvars' $matchvars [iw=_weight] , or 

outreg using `logpath'\ivw_time_groups_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat keep(r_hs_12m_gt3d) ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview after 18m of R's death" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable


log close


H="Run with subsample interview > 1 year"
capture log close

clear all
set mem 500m
set more off

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\6c-HRS_Spouse_analysis_ivw_after_1yr.txt", text replace

cd `datapath'

use spouse_data_sample_v2.dta if (s_1yr_p1_core_dead==0)

tab r_hs_12m_gt3d, missing
drop if r_hs_12m_gt3d==.

tab r_hs_12m_gt3d s_1yr_p1_core_dead, missing
tab r_hs_12m_gt3d r_advdir_miss

tab days_p1_core_dod_cat , missing

//Have to use an alternate variable list because missing category for
//advanced directive is all 0 for this subsample
global matchvars2 cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore r_hs_12m_gt3d $matchvars2 , pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore)

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

psmatch2  r_hs_12m_gt3d,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.02279913) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore)

histogram hs_pscore if _support==1, by(r_hs_12m_gt3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars2,treated(r_hs_12m_gt3d) both hist

pstest $matchvars2,treated(r_hs_12m_gt3d) both graph

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated = `v' if r_hs_12m_gt3d==1 & _support==1
gen `v'_comparison = `v' if r_hs_12m_gt3d==0 & _support==1
qqplot `v'_treated `v'_comparison
}


mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if r_hs_12m_gt3d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m_gt3d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m_gt3d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m_gt3d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}


mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list vr


//_support ==1 if matched
tab _support, missing
tab _support if r_hs_12m_gt3d==1, missing
tab _support if r_hs_12m_gt3d==0, missing
tab _weight if r_hs_12m_gt3d==1, missing
sum _weight if r_hs_12m_gt3d==0

rename _weight weight_after1yr
save spouse_data_sample_v1_ps3_after.dta, replace

//drop observations that aren't matched using caliper match
drop if _support!=1
drop if weight_after1yr==.

***********************************************************************
//now run logit model using weighting 
***********************************************************************
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in
 
local yearvars ib2000.r_death_year 

logit s_cesdbetter i.r_hs_12m_gt3d `yearvars' $matchvars2 [iw=weight_after1yr] , or 

outreg using `logpath'\ivw_time_groups_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat  ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview after 1 year of R's death" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) replace

//Run logit with outcome=depressed n1, not depressed p1
	

logit s_cesd_ge3better i.r_hs_12m_gt3d `yearvars' $matchvars2 [iw=weight_after1yr] , or 

outreg using `logpath'\ivw_time_groups_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat  ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview after 1 year of R's death" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" ) ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable


log close


H="Helpers, run with subsample interview > 1 year"
capture log close

clear all
set mem 500m
set more off

//Amy's PC
local logpath E:\data\spouse\logs\helpers
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs\helpers
//local datapath C:\data\Spouse

log using "`logpath'\6c-HRS_Spouse_analysis_ivw_after_1yr.txt", text replace

cd `datapath'

use spouse_data_sample_v2.dta if (s_1yr_p1_core_dead==0 & (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1))

tab r_hs_12m_gt3d, missing
drop if r_hs_12m_gt3d==.

tab r_hs_12m_gt3d s_1yr_p1_core_dead, missing

tab days_p1_core_dod_cat , missing

tab r_advdir_miss r_hs_12m_gt3d, missing

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//since advanced directive missing category obs all have no hospice, drop from
//list of match variables
global matchvars2 cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 	


//generate pscore variable hs_pscore
pscore r_hs_12m_gt3d $matchvars2 , pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore)

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

**************************************************************************************
psmatch2  r_hs_12m_gt3d,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.02237482) logit
//note this creates varaible _weight
**************************************************************************************

//graph including off common support information
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore)

histogram hs_pscore if _support==1, by(r_hs_12m_gt3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars2,treated(r_hs_12m_gt3d) both hist

pstest $matchvars2,treated(r_hs_12m_gt3d) both graph

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated = `v' if r_hs_12m_gt3d==1 & _support==1
gen `v'_comparison = `v' if r_hs_12m_gt3d==0 & _support==1
qqplot `v'_treated `v'_comparison
}


mat vr=J(43,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars2  {
sum `v' if r_hs_12m_gt3d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m_gt3d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m_gt3d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m_gt3d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}


mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" /*"Advance directive missing"*/ "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" "HCI Index" ///
"Hospital beds" "Specialists"

mat list vr


//_support ==1 if matched
tab _support, missing
tab _support if r_hs_12m_gt3d==1, missing
tab _support if r_hs_12m_gt3d==0, missing
tab _weight if r_hs_12m_gt3d==1, missing
sum _weight if r_hs_12m_gt3d==0

rename _weight weight_helpafter1yr
save spouse_data_sample_v1_ps3_after_helpers.dta, replace

//drop observations that aren't matched using caliper match
drop if _support!=1
drop if weight_helpafter1yr==.

***********************************************************************
//now run logit model using weighting 
***********************************************************************

local yearvars ib2000.r_death_year 

logit s_cesdbetter i.r_hs_12m_gt3d `yearvars' $matchvars2 [iw=weight_helpafter1yr] , or 

outreg using `logpath'\helper_ivw_time_groups_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat  ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S Primary Caregivers, S p1 interview after 1 year of R's death" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) replace


//Run logit with outcome=depressed n1, not depressed p1
//need alternate match variables since perfect prediction with r_adl_stable_partial_n1n2 variable
global matchvars3 cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 /*r_adl_stable_partial_n1n2*/ r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 	

logit s_cesd_ge3better i.r_hs_12m_gt3d `yearvars' $matchvars3 [iw=weight_helpafter1yr] , or 

outreg using `logpath'\helper_ivw_time_groups_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Limited to S Primary Caregivers, S p1 interview after 1 year of R's death" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" \ ///	
	"R Hospice enrollment 3 or more days") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable


log close


H="Analysis - Hospice use >=3d alternate definitions"
/*Outcome variable is: CESD improvement indicator, ie any improvement 
in CESD score from n1 to p1

Defines hospice use as 3 or more days in hospice in last year of life
(rather than any hospice use as done in earlier analyses)

This Stata code runs following analyses:
1. Unmatched logit regression on spouse depressive symptoms
2. Determines propensity scores
3. Runs summary tables for r and s characteristics using px weighting
4. Px matched logit regression on reduced spouse depressive symptoms 
5. Creates means tables of matched, frequency weighted sample
*/

capture log close

clear all
set mem 500m
set more off

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\7-HRS_Spouse_analysis_alt_hs_use_def.txt", text replace

cd `datapath'

//use dataset that has already dropped observation if missing any of the 
//analysis variables and has px weighting saved from the 1+ days hospice use definition
use spouse_data_sample_v2.dta

tab r_hs_12m_gt3d, missing
tab r_hs_12m_gt7d, missing

*****************************************************************************
*****************************************************************************
//Unmatched logit regression hospice use on reduced spousal depression
*****************************************************************************
*****************************************************************************
local xvars c.s_age i.s_female i.s_white_e i.s_hseduc_n1_n3 i.s_srh_pf_p1 ///
i.s_hrs_comorb_mild_n1 i.s_hrs_comorb_mod_n1 i.s_psych_overall_hrs_n1 

local yearvars ib2000.r_death_year 

logit s_cesdbetter i.r_hs_12m_gt3d `xvars' `yearvars', or

outreg using `logpath'\spouse_analysis_alt_hs_use_def, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment - Unmatched" \ ///
	"Outcome = CESD Score Decreased (by any amount) n1 to p1" \ ///
	"R Hospice use 3 days or more last year of life") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) replace

logit s_cesdbetter i.r_hs_12m_gt7d `xvars' `yearvars', or

outreg using `logpath'\spouse_analysis_alt_hs_use_def, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment - Unmatched" \ ///
	"Outcome = CESD Score Decreased (by any amount) n1 to p1" \ ///
	"R Hospice use 7 days or more last year of life") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable 	
	
*****************************************************************************
*****************************************************************************
//Px score matching - 3 or more days of hospice use = treatment variable
*****************************************************************************
*****************************************************************************
tab r_hs_12m_gt3d, missing

*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores
*****************************************************************************
*****************************************************************************
//first sort data randomly
set seed 2000
gen x=uniform()
sort x


drop if r_hs_12m_gt3d==.

//generate pscore variable hs_pscore
pscore r_hs_12m_gt3d $matchvars, pscore(hs_pscore3) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore3)
graph save `logpath'/psgraph_1_gt3d ,replace

//implement radius matching
gen logitpscore3=ln(hs_pscore3/(1-hs_pscore3))
sum logitpscore3

sca cal_ps3=r(sd)*0.02
sca list cal_ps3

//rule of thumb 0.2*sd
//psmatch2  r_hs_12m,outcome(s_cesdbetter) pscore(hs_pscore) caliper(.1805351) logit
//try 0.02* sd
psmatch2  r_hs_12m_gt3d,outcome(s_cesdbetter) pscore(hs_pscore3) radius caliper(.01805351) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore3)
graph save `logpath'/psgraph_2_gt3d ,replace

histogram hs_pscore3 if _support==1, by(r_hs_12m_gt3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars `xvars2',treated(r_hs_12m_gt3d) both hist
graph save `logpath'/psmatch_1_gt3d ,replace

//pstest $matchvars `xvars',treated(r_hs_12m) both graph
//graph save `logpath'/psmatch_2 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age{
gen `v'_treated_3 = `v' if r_hs_12m_gt3d==1 & _weight!=.
gen `v'_comparison_3 = `v' if r_hs_12m_gt3d==0 & _weight!=.
qqplot `v'_treated_3 `v'_comparison_3
graph save `logpath'/qqplot_`v'_gt3d, replace
}


mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if r_hs_12m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}



mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list vr

//using this matching, 5 obs from the treatment group are dropped b/c they don't match
//_support ==1 if matched
//x not matched, weight=.
tab _support, missing
tab _support if r_hs_12m_gt3d==1, missing
tab _support if r_hs_12m_gt3d==0, missing
tab _weight if r_hs_12m_gt3d==1, missing
sum _weight if r_hs_12m_gt3d==0

//rename ps variables and save dataset so can call them up later
rename _support support_3
rename _weight weight_3
save spouse_data_sample_v1_ps3.dta, replace

//drop observations that aren't matched using caliper match
drop if weight_3==.

//now run using weighting , outcome = improved CESD score p1
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in
logit s_cesdbetter i.r_hs_12m_gt3d  `yearvars' $matchvars [iw=weight_3] , or 

est save logit_matched_3, replace

outreg using `logpath'\spouse_analysis_alt_hs_use_def, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1" \ ///
	"R Hospice enrollment 3 or more days") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

tab s_cesdbetter s_cesd_ge3better, missing

//Run logit with outcome=depressed n1, not depressed p1
logit s_cesd_ge3better i.r_hs_12m_gt3d  `yearvars' $matchvars [iw=weight_3] , or 

outreg using `logpath'\spouse_analysis_alt_hs_use_def, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" \ ///	
	"R Hospice enrollment 3 or more days") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

/*
*************************************************************************************
*************************************************************************************
//Create tables of matched / frequency weighted means
*************************************************************************************
*************************************************************************************

*************************************************************************************
//Table 1 - Respondent characteristics, matched and weighted
*************************************************************************************
local t1vars r_medicaid_n1 r_nhres_n1 r_nhres_x r_advdir_y r_advdir_n r_advdir_miss ///
r_adl_stable_ind_n1n2 ///
r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 r_adl_change_i_m_n1n2 ///
r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss cc_3_alzhdmta_n12mn0 ///
cc_6_chrnkidn_n12mn0 cc_12_ischmcht_n12mn0 cc_8_chf_n12mn0 ///
cc_9_diabetes_n12mn0 cc_7_copd_n12mn0 cc_16_strketia_n12mn0 ///
cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 cc_11_hipfrac_n12mn0 ///
cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 cc_15_ra_oa_n12mn0 

gen byte non_hosp_3d=.
replace non_hosp_3d=1 if r_hs_12m_gt3d==0
replace non_hosp_3d=0 if r_hs_12m_gt3d==1
tab non_hosp_3d r_hs_12m_gt3d, missing

mat demo=J(42,3,.)

//first row, n of hospice users and non-users
tab r_hs_12m_gt3d if weight_1!=. , missing matcell(d1)
mat demo[1,1]=d1[2,1] //non-hospice n
mat demo[1,2]=d1[1,1] //hospice users n

local j=1
foreach h in r_hs_12m_gt3d non_hosp_3d{
sum r_age if `h'==1 [iweight=weight_3] //age
mat demo[2,`j']=r(mean)
mat demo[3,`j']=r(sd)
sum r_female if `h'==1 [iweight=weight_3] //female
mat demo[4,`j']=r(mean)*100
sum r_white_e if `h'==1 [iweight=weight_3] //non-hispanic, white
mat demo[5,`j']=r(mean)*100
sum r_hseduc_n1_n3 if `h'==1 [iweight=weight_3] //hs education+
mat demo[6,`j']=r(mean)*100
sum r_networth_adj2010_n1 if `h'==1 [iweight=weight_3] //net worth
mat demo[7,`j']=r(mean)
mat demo[8,`j']=r(sd)
local i=9
foreach v in `t1vars' {
	sum `v' if `h'==1 [iweight=weight_3] 
	mat demo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 9-34
	}
sum cc_all_count_12m_2 if `h'==1 [iweight=weight_3] //count of chronic conditions
mat demo[35,`j']=r(mean)
mat demo[36,`j']=r(sd)
sum hospital_beds if `h'==1 [iweight=weight_3] //hospital beds
mat demo[37,`j']=r(mean)
mat demo[38,`j']=r(sd)
sum medical_specialists if `h'==1 [iweight=weight_3] //medical specialists
mat demo[39,`j']=r(mean)
mat demo[40,`j']=r(sd)
sum hci_index if `h'==1 [iweight=weight_3] //hci index
mat demo[41,`j']=r(mean)
mat demo[42,`j']=r(sd)
local j=`j'+1
}

//pvalues
logit r_hs_12m_gt3d r_age [iweight=weight_3]
test r_age
mat demo[2,3]=r(p) //p value from t-test
local j=4
foreach v in r_female r_white_e r_hseduc_n1_n3{
logit r_hs_12m_gt3d `v' [iweight=weight_3]
test `v'
mat demo[`j',3]=r(p) //p value from chisq test
local j = `j'+1 //rows 4-6 
}
logit r_hs_12m_gt3d r_networth_adj2010_n1 [iweight=weight_3]
test r_networth_adj2010_n1 
mat demo[7,3]=r(p) //p value from t-test
local j=9
foreach v in `t1vars' {
	logit r_hs_12m_gt3d `v' [iweight=weight_3]
	test `v'
	mat demo[`j',3]=r(p)
	local j=`j'+1 //populates rows 9-34
	}
local j=35
foreach v in cc_all_count_12m_2 hospital_beds medical_specialists hci_index{
logit r_hs_12m_gt3d `v' [iweight=weight_3]
	test `v'
	mat demo[`j',3]=r(p)
	local j=`j'+2 //populates rows 32-36 (even only)
}

mat rownames demo ="Sample n" "Age at death, years, mean" "SD" "Female, %" "Race, Non-Hispanic White, %" ///
"Education, High School Grad" "Net worth, 2010US$, mean" "SD" "Medicaid, %" ///
"Nursing home resident n1, %" "Nursing home resident exit" "Had advance directive" ///
"Did not have advance directive" "Advance directive status unknown" ///
"Stable, Indep in ADLs n2 to n1" ///
"Stable, Moderate 1-3 ADL" "Stable, Severe 4-6 ADL" ///
"Declined, Indep to Moderate" "Declined, Moderate to Severe" ///
"Declined, Independent to Severe" "Unknown" "Alzheimers/Dementia" "Chronic Kidney Disease" ///
"Ischemic Heart Disease" "Congestive Heart Failure" "Diabetes" "COPD" ///
"Stroke or TIA" "Cancer" "Atrial Fibrillation" "Hip Fracture" "Depression" "Osteoporosis" ///
"Arthritis" "Count of chronic conditions" "SD" "Hosp beds per 10,000 res, mean" "SD" ///
"Specialists per 100,000, mean" "SD" "HCI index, mean" "SD"

mat list demo

frmttable using `logpath'\spo_weighted_means_tables, statmat(demo) ///
title("Matched, Weighted Sample - Decedent characteristics") ///
ctitle("","Hospice users","Non-hospice users","P-value") ///
sdec(2,2,3) replace

******************************************************************
//create a table of spouse characteristics - matched and weighted
******************************************************************

local sdemovar1 s_female s_white_e s_hseduc_n1_n3 ///
s_medicaid_n1 s_srh_pf_n1 s_smoke_curr_n1 s_alcohol_mis_n1 ///
s_vig_phy_act_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 ///
s_hrs_comorb_mod_n1 s_cancer_hrs_n1 ///
s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 s_stroke_hrs_n1 ///
s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1 

local sdemovar2 s_cesd_tot_ge3_n1 ///
s_cesd_tot_ge3_p1 s_cesd_ge3better s_cesdbetter s_cesdsame s_cesdworse 

local sdemovar3 days_p1_core_dod_lt6m days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
	days_p1_core_dod_18_24m days_p1_core_dod_gt2yr 

mat sdemo=J(40,3,.)

//first row, n of hospice and non-hospice
tab r_hs_12m if weight_1!=., missing matcell(sd1)
mat sdemo[1,1]=sd1[2,1] //non-hospice n
mat sdemo[1,2]=sd1[1,1] //hospice users n

local j=1
foreach h in r_hs_12m non_hosp {
sum s_age if `h'==1 [iweight=weight_1] //age
mat sdemo[2,`j']=r(mean)
mat sdemo[3,`j']=r(sd)
local i=4
foreach v in `sdemovar1' {
	sum `v' if `h'==1 [iweight=weight_1] 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 4-23
	}
sum s_cesd_tot_n1 if `h'==1 [iweight=weight_1] //cesd score n1
mat sdemo[24,`j']=r(mean)
sum s_cesd_tot_p1 if `h'==1 [iweight=weight_1] //cesd score p1
mat sdemo[25,`j']=r(mean)
sum s_cesdchange if `h'==1 [iweight=weight_1] //cesd score change n1 to p1
mat sdemo[26,`j']=r(mean)
local i=27
foreach v in `sdemovar2' {
	sum `v' if `h'==1 [iweight=weight_1] 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 27-32
	}
sum days_p1_core_dead if `h'==1 [iweight=weight_1] //days to p1 ivw
mat sdemo[33,`j']=r(mean)
mat sdemo[34,`j']=r(sd)
sum s_1yr_p1_core_dead if `h'==1 [iweight=weight_1]
mat sdemo[35,`j']=r(mean)*100
local i=36
foreach v in `sdemovar3' {
	sum `v' if `h'==1, detail 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 36-40
	}
local j=`j'+1
}

//p-values
logit r_hs_12m s_age [iweight=weight_1]
test s_age
mat sdemo[2,3]=r(p)
local i=4
foreach v in `sdemovar1' {
	logit r_hs_12m `v'  [iweight=weight_1]
	test `v'
	mat sdemo[`i',3]=r(p)
	local i=`i'+1 //populates rows 4-23
	}
logit r_hs_12m s_cesd_tot_n1  [iweight=weight_1] //cesd score n1
test s_cesd_tot_n1  
mat sdemo[24,3]=r(p)
logit r_hs_12m s_cesd_tot_p1 [iweight=weight_1] //cesd score p1
test s_cesd_tot_p1 
mat sdemo[25,3]=r(p)
logit r_hs_12m s_cesdchange [iweight=weight_1] //cesd score change n1 to p1
test s_cesdchange 
mat sdemo[26,3]=r(p)
local i=27
foreach v in `sdemovar2' {
	logit r_hs_12m `v' [iweight=weight_1]
	test `v'
	mat sdemo[`i',3]=r(p)
	local i=`i'+1 //populates rows 27-32
}
logit r_hs_12m days_p1_core_dead [iweight=weight_1] //days to p1 ivw
test days_p1_core_dead 
mat sdemo[33,3]=r(p)
logit r_hs_12m s_1yr_p1_core_dead [iweight=weight_1] //p1 1 yr of death
	test s_1yr_p1_core_dead 
	mat sdemo[35,3]=r(p)
local i=36
foreach v in `sdemovar3' {
	logit r_hs_12m `v' [iweight=weight_1]
	test `v'
	mat sdemo[`i',3]=r(p)
	local i=`i'+1 //populates rows 36-40
}

//can't do logit to get test for alchool misuse because no obs in hs group have it
//tab s_alcohol_mis_n1 r_hs_12m [iweight=weight_1], exact
//mat sdemo[10,3]=r(p)

mat rownames sdemo ="Sample size n" "Age at r's death, mean" "SD" "Female" "Non-Hispanic White" ///
"Education, High school grad" "Medicaid" "SRH poor or fair" ///
"Currently smoker" "Alcohol mis-use" "Vigorous physical activity" ///
"Comorbidity index - none" "Mild (1-3)" "Moderate (4-6)" ///
"Cancer" "Lung disease" "Heart disease" "CHF" "Stroke" "Memory disease" ///
"Hypertension" "Diabetes" "Psychological problems" ///
"CESD-D raw score n1, mean" "CESD-D raw score p1, mean" "Change in raw CESD n1 to p1" ///
"Clinical depression pre death" "Clinical depression post death" ///
 "Clin depr n1 but no p1" "CESD Improved post death" ///
"Same CESD post death" "CESD Declined post death" "Days R DOD to S P1 ivw" ///
"SD" "P1 ivw wi 1 year of death" "R DOD to P1 ivw 3-6m" "R DOD to P1 ivw 6-12m" ///
 "R DOD to P1 ivw 12-18m"  "R DOD to P1 ivw 18-24m"  "R DOD to P1 ivw 2yr+"

mat list sdemo

frmttable using `logpath'\spo_weighted_means_tables, statmat(sdemo) ///
title("Matched, Weighted sample - Spouse characteristics") ///
ctitle("","Hospice users","Non-hospice users","P-value") ///
sdec(2,2,3) addtable
*/
*****************************************************************************
*****************************************************************************
*****************************************************************************
*****************************************************************************
//Px score matching - 7 or more days of hospice use = treatment variable
*****************************************************************************
*****************************************************************************
*****************************************************************************
*****************************************************************************
clear all

use spouse_data_sample_v2.dta

tab r_hs_12m_gt7d, missing

drop if r_hs_12m_gt7d==.

*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores
*****************************************************************************
*****************************************************************************

//generate pscore variable hs_pscore
pscore r_hs_12m_gt7d $matchvars, pscore(hs_pscore7) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m_gt7d) pscore(hs_pscore7)
graph save `logpath'/psgraph_1_gt7d ,replace

//implement radius matching
gen logitpscore7=ln(hs_pscore7/(1-hs_pscore7))
sum logitpscore7

sca cal_ps1_7=r(sd)*0.02
sca list cal_ps1_7

//rule of thumb 0.2*sd, use 0.02*sd
psmatch2  r_hs_12m_gt7d,outcome(s_cesdbetter) pscore(hs_pscore7) radius caliper(.01928389) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(r_hs_12m_gt7d) pscore(hs_pscore7)
graph save `logpath'/psgraph_2_gt7d ,replace

histogram hs_pscore7 if _support==1, by(r_hs_12m_gt7d) 

//look at balance of matched vs unmatched samples
pstest $matchvars ,treated(r_hs_12m_gt7d) both hist
graph save `logpath'/psmatch_1_gt7d ,replace

//pstest $matchvars `xvars',treated(r_hs_12m) both graph
//graph save `logpath'/psmatch_2 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated_7 = `v' if r_hs_12m_gt7d==1 & _support==1
gen `v'_comparison_7 = `v' if r_hs_12m_gt7d==0 & _support==1
qqplot `v'_treated_7 `v'_comparison_7
graph save `logpath'/qqplot_`v'_gt7d, replace
}


mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if r_hs_12m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}



mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1"

mat list vr

//using this matching, 6 obs from the treatment group are dropped off common support
//1 obs dropped because not matched
//_support ==1 if matched
tab _support, missing
tab _support if r_hs_12m_gt7d==1, missing
tab _support if r_hs_12m_gt7d==0, missing
tab _weight if r_hs_12m_gt7d==1, missing
sum _weight if r_hs_12m_gt7d==0, detail

//rename ps variables and save dataset so can call them up later
rename _support support_7
rename _weight weight_7
save spouse_data_sample_v1_ps7.dta, replace

//drop observations that aren't matched using caliper match
drop if weight_7==.

//now run using weighting , outcome = improved CESD score p1
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in
logit s_cesdbetter i.r_hs_12m_gt7d `yearvars' $matchvars [iw=weight_7] , or 

est save logit_matched_7, replace

outreg using `logpath'\spouse_analysis_alt_hs_use_def, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1" \ ///
	"R Hospice enrollment 7 or more days") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

tab s_cesdbetter s_cesd_ge3better, missing

//Run logit with outcome=depressed n1, not depressed p1
logit s_cesd_ge3better i.r_hs_12m_gt7d `yearvars' $matchvars [iw=weight_7] , or 

outreg using `logpath'\spouse_analysis_alt_hs_use_def, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" \ ///	
	"R Hospice enrollment 7 or more days") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

/*add matched tables here for 7+ day defintion*/

log close


H="Analysis - Hospice use 3,7 days, Helpers"
/*Outcome variable is: CESD improvement indicator, ie any improvement 
in CESD score from n1 to p1

Defines hospice use as 3 or more days in hospice in last year of life
(rather than any hospice use as done in earlier analyses)

This Stata code runs following analyses:
1. Unmatched logit regression on spouse depressive symptoms
2. Determines propensity scores
3. Runs summary tables for r and s characteristics using px weighting
4. Px matched logit regression on reduced spouse depressive symptoms 
5. Creates means tables of matched, frequency weighted sample
*/

capture log close

clear all
set mem 500m
set more off

//Amy's PC
//note that I created a separate logpath for the helper sub-sample analysis!
local logpath E:\data\spouse\logs\helpers
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\7-HRS_Spouse_analysis_alt_hs_use_def.txt", text replace

cd `datapath'

//use dataset that has already dropped observation if missing any of the 
//analysis variables 
use spouse_data_sample_v2.dta if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1)

tab r_hs_12m_gt3d, missing
tab r_hs_12m_gt7d, missing
	
*****************************************************************************
*****************************************************************************
//Px score matching - 3 or more days of hospice use = treatment variable
*****************************************************************************
*****************************************************************************
tab r_hs_12m_gt3d, missing

*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores
*****************************************************************************
*****************************************************************************
drop if r_hs_12m_gt3d==.

//generate pscore variable hs_pscore
pscore r_hs_12m_gt3d $matchvars, pscore(hs_pscore3) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore3)
graph save `logpath'/psgraph_1_gt3d ,replace

//implement radius matching
gen logitpscore3=ln(hs_pscore3/(1-hs_pscore3))
sum logitpscore3

sca cal_ps3=r(sd)*0.02
sca list cal_ps3

psmatch2  r_hs_12m_gt3d,outcome(s_cesdbetter) pscore(hs_pscore3) radius caliper(.01871471) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(r_hs_12m_gt3d) pscore(hs_pscore3)
graph save `logpath'/psgraph_2_gt3d ,replace

histogram hs_pscore3 if _support==1, by(r_hs_12m_gt3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars `xvars2',treated(r_hs_12m_gt3d) both hist
graph save `logpath'/psmatch_1_gt3d ,replace

//pstest $matchvars `xvars',treated(r_hs_12m) both graph
//graph save `logpath'/psmatch_2 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age{
gen `v'_treated_3 = `v' if r_hs_12m_gt3d==1 & _weight!=.
gen `v'_comparison_3 = `v' if r_hs_12m_gt3d==0 & _weight!=.
qqplot `v'_treated_3 `v'_comparison_3
graph save `logpath'/qqplot_`v'_gt3d, replace
}


mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if r_hs_12m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}



mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list vr

//using this matching, 11 obs from the treatment group are dropped b/c they don't match
//_support ==1 if matched
//10 not matched, weight=.
tab _support, missing
tab _support if r_hs_12m_gt3d==1, missing
tab _support if r_hs_12m_gt3d==0, missing
tab _weight if r_hs_12m_gt3d==1, missing
sum _weight if r_hs_12m_gt3d==0

//rename ps variables and save dataset so can call them up later
rename _support support_3helper
rename _weight weight_3helper
save spouse_data_sample_v1_ps3_helpers.dta, replace

//drop observations that aren't matched using caliper match
drop if weight_3helper==.

//now run using weighting , outcome = improved CESD score p1
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in
logit s_cesdbetter i.r_hs_12m_gt3d  `yearvars' $matchvars [iw=weight_3helper] , or 

est save logit_matched_3, replace

outreg using `logpath'\spouse_analysis_alt_hs_use_def, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1" \ ///
	"R Hospice enrollment 3 or more days") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) replace

tab s_cesdbetter s_cesd_ge3better, missing

//Run logit with outcome=depressed n1, not depressed p1
//Have to use an alternate variable list because missing category for
//advanced directive perfectly predicts failure
local new_varlist cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 	

logit s_cesd_ge3better i.r_hs_12m_gt3d  `yearvars' `new_varlist' [iw=weight_3helper] , or 

outreg using `logpath'\spouse_analysis_alt_hs_use_def, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" \ ///	
	"R Hospice enrollment 3 or more days") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

*****************************************************************************
*****************************************************************************
*****************************************************************************
*****************************************************************************
//Px score matching - 7 or more days of hospice use = treatment variable
*****************************************************************************
*****************************************************************************
*****************************************************************************
*****************************************************************************
clear all

use spouse_data_sample_v2.dta if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1)

tab r_hs_12m_gt7d, missing

drop if r_hs_12m_gt7d==.

*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores
*****************************************************************************
*****************************************************************************

//generate pscore variable hs_pscore
pscore r_hs_12m_gt7d $matchvars, pscore(hs_pscore7) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(r_hs_12m_gt7d) pscore(hs_pscore7)
graph save `logpath'/psgraph_1_gt7d ,replace

//implement radius matching
gen logitpscore7=ln(hs_pscore7/(1-hs_pscore7))
sum logitpscore7

sca cal_ps1_7=r(sd)*0.02
sca list cal_ps1_7

//rule of thumb 0.2*sd
//psmatch2  r_hs_12m,outcome(s_cesdbetter) pscore(hs_pscore) caliper(.2009195) logit
//try 0.02* sd
psmatch2  r_hs_12m_gt7d,outcome(s_cesdbetter) pscore(hs_pscore7) radius caliper(.02009195) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(r_hs_12m_gt7d) pscore(hs_pscore7)
graph save `logpath'/psgraph_2_gt7d ,replace

histogram hs_pscore7 if _support==1, by(r_hs_12m_gt7d) 

//look at balance of matched vs unmatched samples
pstest $matchvars ,treated(r_hs_12m_gt7d) both hist
graph save `logpath'/psmatch_1_gt7d ,replace

//pstest $matchvars `xvars',treated(r_hs_12m) both graph
//graph save `logpath'/psmatch_2 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated_7 = `v' if r_hs_12m_gt7d==1 & _support==1
gen `v'_comparison_7 = `v' if r_hs_12m_gt7d==0 & _support==1
qqplot `v'_treated_7 `v'_comparison_7
graph save `logpath'/qqplot_`v'_gt7d, replace
}


mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if r_hs_12m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if r_hs_12m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if r_hs_12m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if r_hs_12m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}



mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list vr

//using this matching, 12 obs from the treatment group are dropped off common support
//5 obs dropped because not matched
//_support ==1 if matched
tab _support, missing
tab _support if r_hs_12m_gt7d==1, missing
tab _support if r_hs_12m_gt7d==0, missing
tab _weight if r_hs_12m_gt7d==1, missing
sum _weight if r_hs_12m_gt7d==0, detail

//rename ps variables and save dataset so can call them up later
rename _support support_7
rename _weight weight_7
save spouse_data_sample_v1_ps7.dta, replace

//drop observations that aren't matched using caliper match
drop if weight_7==.

//now run using weighting , outcome = improved CESD score p1
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in
logit s_cesdbetter i.r_hs_12m_gt7d `yearvars' $matchvars [iw=weight_7] , or 

est save logit_matched_7, replace

outreg using `logpath'\spouse_analysis_alt_hs_use_def, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1" \ ///
	"R Hospice enrollment 7 or more days") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

tab s_cesdbetter s_cesd_ge3better, missing

//Run logit with outcome=depressed n1, not depressed p1
//var list with missing advanced directive status omitted
logit s_cesd_ge3better i.r_hs_12m_gt7d `yearvars' `new_varlist' [iw=weight_7] , or 

outreg using `logpath'\spouse_analysis_alt_hs_use_def, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" \ ///	
	"R Hospice enrollment 7 or more days") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

/*add matched tables here for 7+ day defintion*/

log close


H="Create bar graph"
/*Outcome variable is: CESD improvement indicator, ie any improvement 
in CESD score from n1 to p1

Defines hospice use as 1 +day in hospice in last year of life

Bar graph of mean change in CESD score hospice and non-hospice group*/

capture log close

clear all
set mem 500m
set more off
set scheme s1color

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\9-HRS_Spouse_means_bar_graph.txt", text replace

cd `datapath'

//use dataset that has px weighting saved from the 1 hospice use definitions
use spouse_data_sample_v1_ps1.dta if s_1yr_p1_core_dead==0

gen byte non_hosp=.
replace non_hosp=1 if r_hs_12m==0
replace non_hosp=0 if r_hs_12m==1
tab non_hosp r_hs_12m, missing
label def non_hosp 0 "Hospice users" 1 "Non-hospice users"
label val non_hosp non_hosp

tab s_cesd_ge3_change 

gen byte s_cesd_ge3same = .
replace s_cesd_ge3same=1 if s_cesd_ge3_change ==0
replace s_cesd_ge3same=0 if inlist(s_cesd_ge3_change,1,-1)

gen byte s_cesd_ge3worse = .
replace s_cesd_ge3worse=1 if s_cesd_ge3_change ==1
replace s_cesd_ge3worse=0 if inlist(s_cesd_ge3_change,-1,0)

tab s_cesd_ge3worse s_cesd_ge3better

label var  s_cesdbetter "Any improvement"
label var  s_cesd_ge3better "Clinical improvement"

local outcomes  s_cesdbetter  s_cesd_ge3better //s_cesdsame  s_cesd_ge3same s_cesdworse  s_cesd_ge3worse
foreach var in `outcomes'{ 
tab `var' 
}

collapse (mean) `outcomes' [iw=weight_1] , by(non_hosp) 

foreach var in `outcomes' {
rename `var' y`var'

}
reshape long y, i(non_hosp) string

tab non_hosp

graph bar y, by(non_hosp/*, label(nolabel)*/, title("Comparison of spouse CESD score change, Interview after 1yr") ) ///
asyvar over(_j, label(labsize(small)))  ///
ytitle("Percent with improvement") ///
ylabel(0 "0" .1 "10" .2 "20" .3 "30" .4 "40")  ///


//legend(label(1 "Clinical improvement") (2 "Any improvement"))

graph save `logpath'/mean_CESD_change_bar_p1_iv_after_1yr,replace
graph export `logpath'/mean_CESD_change_bar_p1_iv_after_1yr.tif,replace

***************************************************************************
//Run for full sample
***************************************************************************

clear all

use spouse_data_sample_v1_ps1.dta

gen byte non_hosp=.
replace non_hosp=1 if r_hs_12m==0
replace non_hosp=0 if r_hs_12m==1
tab non_hosp r_hs_12m, missing
label def non_hosp 0 "Hospice users" 1 "Non-hospice users"
label val non_hosp non_hosp

tab s_cesd_ge3_change 

gen byte s_cesd_ge3same = .
replace s_cesd_ge3same=1 if s_cesd_ge3_change ==0
replace s_cesd_ge3same=0 if inlist(s_cesd_ge3_change,1,-1)

gen byte s_cesd_ge3worse = .
replace s_cesd_ge3worse=1 if s_cesd_ge3_change ==1
replace s_cesd_ge3worse=0 if inlist(s_cesd_ge3_change,-1,0)

tab s_cesd_ge3worse s_cesd_ge3better

label var  s_cesdbetter "Any improvement"
label var  s_cesd_ge3better "Clinical improvement"

local outcomes  s_cesdbetter  s_cesd_ge3better //s_cesdsame  s_cesd_ge3same s_cesdworse  s_cesd_ge3worse
foreach var in `outcomes'{ 
tab `var' 
}

collapse (mean) `outcomes' [iw=weight_1] , by(non_hosp) 

foreach var in `outcomes' {
rename `var' y`var'

}
reshape long y, i(non_hosp) string

tab non_hosp

graph bar y, by(non_hosp/*, label(nolabel)*/, title("Comparison of spouse CESD score change, Full, matched sample") ) ///
asyvar over(_j, label(labsize(small)))  ///
ytitle("Percent with improvement") ///
ylabel(0 "0" .1 "10" .2 "20" .3 "30" .4 "40")  ///


//legend(label(1 "Clinical improvement") (2 "Any improvement"))

graph save `logpath'/mean_CESD_change_bar_p1_full,replace
graph export `logpath'/mean_CESD_change_bar_p1_full.tif,replace

log close


H="xxxxxCreate results figure"
/*Outcome variable is: CESD improvement indicator, ie any improvement 
in CESD score from n1 to p1

Defines hospice use as 1 / 3 / 7 or more days in hospice in last year of life


Need to fix the dataset that this references, it is not right as of 4/7/14!
*/

capture log close

clear all
set mem 500m
set more off
set scheme s1color

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\8-HRS_Spouse_analysis_create_figure.txt", text replace

cd `datapath'

//use dataset that has px weighting saved from the 3 hospice use definitions
use spouse_data_sample_v1_ps1.dta

//merge in weights from 3+ day hospice model
merge 1:1 r_id using spouse_data_sample_v1_ps3.dta, keepusing(weight_3 support_3) 
drop _merge

merge 1:1 r_id using spouse_data_sample_v1_ps7.dta, keepusing(weight_7 support_7) 


//comparison of hospice use definitions
tab r_hs_12m , missing
tab r_hs_12m_gt3d , missing
tab r_hs_12m_gt7d , missing

local yearvars ib2000.r_death_year 


//rename hs use indicator 1+ day to match format of others
rename r_hs_12m r_hs_12m_gt1d
**************************************************************************
//Run the 3 models, use estimates from regression run before, 0 iterations
//1+, 3+, 7+ days hospice use, outcome=any cesd change

foreach i in 1 3 7{

	logit s_cesdbetter r_hs_12m_gt`i'd `yearvars' $matchvars [iw=weight_`i'] , or 
	
	local n`i' = e(N)
	mat  b`i'=e(b)
	mat V`i'=vecdiag(e(V))

	mat b`i'_1 = b`i'[1,"s_cesdbetter:r_hs_12m_gt`i'd"]
	mat v`i'_1 = V`i'[1,"s_cesdbetter:r_hs_12m_gt`i'd"]
}

//merge the matrices for individual models into a single matrix
//note these are the coefficients, not the exponentiated coefficients - odds ratios
foreach x in b v{
	mat `x'_all_1=J(3,1,.)
	mat `x'_all_1[1,1] = `x'1_1[1,1]
	mat `x'_all_1[2,1] = `x'3_1[1,1]
	mat `x'_all_1[3,1] = `x'7_1[1,1]

	svmat `x'_all_1
}

gen int sitenum = 1 in 1/3
replace sitenum = 3 in 2
replace sitenum = 7 in 3

l sitenum b_all_1 v_all_1 in 1/3

gen se_all = sqrt(v_all_1)

gen ll_all=b_all_1 - 1.96*se_all
gen ul_all=b_all_1 + 1.96*se_all

//convert to odds ratios
gen b_e=exp(b_all_1)
gen ll_e=exp(ll_all)
gen ul_e=exp(ul_all)

l b_e ll_e ul_e in 1/3

twoway rcap ll_e ul_e sitenum, color(gs9) ///
	|| scatter b_e sitenum, color(midblue) ///
	yline(1) yscale(range(0 2)) ///
	xscale(range(0 8)) xlabel(1 "1+ days, N=`n1'" 3 "3+days, N=`n3'" 7 "7+days, N=`n7'") xtitle("Days hospice use") ///
	legend(order(2 1) symxsize(*.5) cols(2) ///
	label(1 95% confidence interval) label(2 OR) ) ///
	title("Odds ratios from logit regression") ///
	subtitle("Outcome=Any improvement in CESD score n1 to p1")
graph save `logpath'/hs_1_3_7_days_compar,replace
graph export `logpath'/hs_1_3_7_days_compar.eps,replace

log close


H="OR Plot, Clinical improv and any improv for helpers, timing"
/*weights saved

overall model: spouse_data_sample_v1_ps3.dta
helper: spouse_data_sample_v1_ps3_helpers.dta
interview after 1 year: spouse_data_sample_v1_ps3_after

*/

capture log close

clear all
set mem 500m
set more off
set scheme s1color

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\10-HRS_Spouse_OR_plot.txt", text replace

cd `datapath'

use spouse_data_sample_v1_ps3.dta

global matchvars cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y r_advdir_miss r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 //hci_index hospital_beds specialists	


tab r_core_year_n1

merge 1:1 r_id using spouse_data_sample_v1_ps3_helpers.dta, keepusing(weight_3helper) 
drop _merge

merge 1:1 r_id using spouse_data_sample_v1_ps3_after.dta, keepusing(weight_after1yr) 
drop _merge

local yearvars ib2000.r_death_year 

**********************************************************************
//clinical improvement, full sample
logit s_cesd_ge3better r_hs_12m_gt3d `yearvars' $matchvars [iw=weight_3] , or 
	
	local n_oa_cl = e(N)
	mat  b_oa_cl=e(b)
	mat V_oa_cl=vecdiag(e(V))

	mat b_oa_cl_1 = b_oa_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]
	mat v_oa_cl_1 = V_oa_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]

**********************************************************************
//any improvement, full sample
logit s_cesdbetter r_hs_12m_gt3d `yearvars' $matchvars [iw=weight_3] , or 

	local n_oa_any = e(N)
	mat  b_oa_any=e(b)
	mat V_oa_any=vecdiag(e(V))

	mat b_oa_any_1 = b_oa_any[1,"s_cesdbetter:r_hs_12m_gt3d"]
	mat v_oa_any_1 = V_oa_any[1,"s_cesdbetter:r_hs_12m_gt3d"]

**********************************************************************
//clinical improvement, helpers

//need alternate matchvariables definition b/c missing advanced directive
//is perfectly correlated with outcome
local matchvars2 cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 //hci_index hospital_beds specialists	

logit s_cesd_ge3better r_hs_12m_gt3d `yearvars' `matchvars2' [iw=weight_3helper] , or 
	
	local n_h_cl = e(N)
	mat  b_h_cl=e(b)
	mat V_h_cl=vecdiag(e(V))

	mat b_h_cl_1 = b_h_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]
	mat v_h_cl_1 = V_h_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]

**********************************************************************
//any improvement, helpers
logit s_cesdbetter r_hs_12m_gt3d `yearvars' $matchvars [iw=weight_3helper] , or 

	local n_h_any = e(N)
	mat  b_h_any=e(b)
	mat V_h_any=vecdiag(e(V))

	mat b_h_any_1 = b_h_any[1,"s_cesdbetter:r_hs_12m_gt3d"]
	mat v_h_any_1 = V_h_any[1,"s_cesdbetter:r_hs_12m_gt3d"]

/**********************************************************************
//clinical improvement, interview after 1 year
logit s_cesd_ge3better r_hs_12m_gt3d `yearvars' `matchvars2' [iw=weight_after1yr] , or 
	
	local n_a1_cl = e(N)
	mat  b_a1_cl=e(b)
	mat V_a1_cl=vecdiag(e(V))

	mat b_a1_cl_1 = b_a1_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]
	mat v_a1_cl_1 = V_a1_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]

**********************************************************************/
//any improvement, interview after 1 year
logit s_cesdbetter r_hs_12m_gt3d `yearvars' `matchvars2' [iw=weight_after1yr] , or 

	local n_a1_any = e(N)
	mat  b_a1_any=e(b)
	mat V_a1_any=vecdiag(e(V))

	mat b_a1_any_1 = b_a1_any[1,"s_cesdbetter:r_hs_12m_gt3d"]
	mat v_a1_any_1 = V_a1_any[1,"s_cesdbetter:r_hs_12m_gt3d"]

**********************************************************************
//merge the matrices together - clininical improvement stats
foreach x in b v{
	mat `x'_cl_all=J(6,1,.)
	mat `x'_cl_all[1,1]=`x'_oa_cl_1[1,1]
	mat `x'_cl_all[2,1]=`x'_h_cl_1[1,1]
	//mat `x'_cl_all[3,1]=`x'_a1_cl_1[1,1]
	
	svmat `x'_cl_all
	}

foreach x in b v{
	mat `x'_any_all=J(3,1,.)
	mat `x'_any_all[1,1]=`x'_oa_any_1[1,1]
	mat `x'_any_all[2,1]=`x'_h_any_1[1,1]
	mat `x'_any_all[3,1]=`x'_a1_any_1[1,1]
	
	svmat `x'_any_all
	}


gen int sitenum = 1 in 1/3
replace sitenum=2 in 2
replace sitenum=3 in 3

gen sitenum2 = .8 in 1/3
replace sitenum2 = 1.8 in 2
replace sitenum2 = 2.8 in 3

list sitenum sitenum2 b_cl_all b_any_all v_cl_all v_any_all in 1/3

foreach x in cl any{
gen se_`x'_all = sqrt(v_`x'_all)

gen ll_`x'_all=b_`x'_all - 1.96*se_`x'_all
gen ul_`x'_all=b_`x'_all + 1.96*se_`x'_all

//convert to odds ratios
gen b_`x'_e=exp(b_`x'_all)
gen ll_`x'_e=exp(ll_`x'_all)
gen ul_`x'_e=exp(ul_`x'_all)

}

list sitenum b_cl_e b_any_e in 1/3

twoway rcap ll_cl_e ul_cl_e sitenum2, color(gs9) ///
	|| scatter b_cl_e sitenum2, color(midblue) ///
	|| rcap ll_any_e ul_any_e sitenum, color(gs5) ///
	|| scatter b_any_e sitenum, color(orange) ///
	yline(1) yscale(range(0 2)) ///
	xscale(range(0 3.5)) xlabel(1 "Overall sample N=`n_oa_cl'" ///
	2 "Helpers, N=`n_h_cl'" 3 "Ivw gt 1yr, N=`n_a1_any'") xtitle("Sample") ///
	legend(order(4 3 2 1) symxsize(*.5) cols(2) ///
	label(1 95% confidence interval) label(2 OR Clinical improvement) ///
		label(3 95% confidence interval) label(4 OR Any improvement) )  ///
	title("Odds ratios from logit regression") ///
	subtitle("OR for overall sample, helpers, and interview after 1 year of R's death")
graph save `logpath'/or_compar,replace
graph export `logpath'/or_compar.eps,replace

log close


H="OR Plot, Rev 2 adding Helper > 1 year"
/*weights saved

overall model: spouse_data_sample_v1_ps3.dta
helper: spouse_data_sample_v1_ps3_helpers.dta
interview after 1 year: spouse_data_sample_v1_ps3_after

*/

capture log close

clear all
set mem 500m
set more off
set scheme s1color

//Amy's PC
local logpath E:\data\spouse\logs
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\10-HRS_Spouse_OR_plot_v2.txt", text replace

cd `datapath'

use spouse_data_sample_v1_ps3.dta

tab r_core_year_n1

merge 1:1 r_id using spouse_data_sample_v1_ps3_helpers.dta, keepusing(weight_3helper) 
drop _merge

merge 1:1 r_id using spouse_data_sample_v1_ps3_after.dta, keepusing(weight_after1yr) 
drop _merge


merge 1:1 r_id using spouse_data_sample_v1_ps3_after_helpers.dta, keepusing(weight_helpafter1yr)
drop _merge

local yearvars ib2000.r_death_year 

**********************************************************************
//clinical improvement, full sample
logit s_cesd_ge3better r_hs_12m_gt3d `yearvars' $matchvars [iw=weight_3] , or 
	
	local n_oa_cl = e(N)
	mat  b_oa_cl=e(b)
	mat V_oa_cl=vecdiag(e(V))

	mat b_oa_cl_1 = b_oa_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]
	mat v_oa_cl_1 = V_oa_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]

**********************************************************************
//any improvement, full sample
logit s_cesdbetter r_hs_12m_gt3d `yearvars' $matchvars [iw=weight_3] , or 

	local n_oa_any = e(N)
	mat  b_oa_any=e(b)
	mat V_oa_any=vecdiag(e(V))

	mat b_oa_any_1 = b_oa_any[1,"s_cesdbetter:r_hs_12m_gt3d"]
	mat v_oa_any_1 = V_oa_any[1,"s_cesdbetter:r_hs_12m_gt3d"]

**********************************************************************
//clinical improvement, helpers

//need alternate matchvariables definition b/c missing advanced directive
//is perfectly correlated with outcome
local matchvars2 cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 //hci_index hospital_beds specialists	

logit s_cesd_ge3better r_hs_12m_gt3d `yearvars' `matchvars2' [iw=weight_3helper] , or 
	
	local n_h_cl = e(N)
	mat  b_h_cl=e(b)
	mat V_h_cl=vecdiag(e(V))

	mat b_h_cl_1 = b_h_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]
	mat v_h_cl_1 = V_h_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]

**********************************************************************
//any improvement, helpers
logit s_cesdbetter r_hs_12m_gt3d `yearvars' $matchvars [iw=weight_3helper] , or 

	local n_h_any = e(N)
	mat  b_h_any=e(b)
	mat V_h_any=vecdiag(e(V))

	mat b_h_any_1 = b_h_any[1,"s_cesdbetter:r_hs_12m_gt3d"]
	mat v_h_any_1 = V_h_any[1,"s_cesdbetter:r_hs_12m_gt3d"]

/**********************************************************************
//clinical improvement, interview after 1 year
logit s_cesd_ge3better r_hs_12m_gt3d `yearvars' `matchvars2' [iw=weight_after1yr] , or 
	
	local n_a1_cl = e(N)
	mat  b_a1_cl=e(b)
	mat V_a1_cl=vecdiag(e(V))

	mat b_a1_cl_1 = b_a1_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]
	mat v_a1_cl_1 = V_a1_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]

**********************************************************************/
//any improvement, interview after 1 year
logit s_cesdbetter r_hs_12m_gt3d `yearvars' `matchvars2' [iw=weight_after1yr] , or 

	local n_a1_any = e(N)
	mat  b_a1_any=e(b)
	mat V_a1_any=vecdiag(e(V))

	mat b_a1_any_1 = b_a1_any[1,"s_cesdbetter:r_hs_12m_gt3d"]
	mat v_a1_any_1 = V_a1_any[1,"s_cesdbetter:r_hs_12m_gt3d"]

/**********************************************************************
//clinical improvement, helpers interview after 1 year
logit s_cesd_ge3better r_hs_12m_gt3d `yearvars' `matchvars2' [iw=weight_after1yr] , or 
	
	local n_ha1_cl = e(N)
	mat  b_ha1_cl=e(b)
	mat V_ha1_cl=vecdiag(e(V))

	mat b_ha1_cl_1 = b_ha1_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]
	mat v_ha1_cl_1 = V_ha1_cl[1,"s_cesd_ge3better:r_hs_12m_gt3d"]

**********************************************************************/
//any improvement, helpers interview after 1 year
logit s_cesdbetter r_hs_12m_gt3d `yearvars' `matchvars2' [iw=weight_helpafter1yr] , or 

	local n_ha1_any = e(N)
	mat  b_ha1_any=e(b)
	mat V_ha1_any=vecdiag(e(V))

	mat b_ha1_any_1 = b_ha1_any[1,"s_cesdbetter:r_hs_12m_gt3d"]
	mat v_ha1_any_1 = V_ha1_any[1,"s_cesdbetter:r_hs_12m_gt3d"]




**********************************************************************
//merge the matrices together - clininical improvement stats
foreach x in b v{
	mat `x'_cl_all=J(6,1,.)
	mat `x'_cl_all[1,1]=`x'_oa_cl_1[1,1]
	mat `x'_cl_all[2,1]=`x'_h_cl_1[1,1]
	//mat `x'_cl_all[3,1]=`x'_a1_cl_1[1,1]
	
	svmat `x'_cl_all
	}

foreach x in b v{
	mat `x'_any_all=J(4,1,.)
	mat `x'_any_all[1,1]=`x'_oa_any_1[1,1]
	mat `x'_any_all[2,1]=`x'_h_any_1[1,1]
	mat `x'_any_all[3,1]=`x'_a1_any_1[1,1]
	mat `x'_any_all[4,1]=`x'_ha1_any_1[1,1]

	svmat `x'_any_all
	}


gen int sitenum = 1 in 1/4
replace sitenum=2 in 2
replace sitenum=3 in 3
replace sitenum=4 in 4

gen sitenum2 = .8 in 1/4
replace sitenum2 = 1.8 in 2
replace sitenum2 = 2.8 in 3
replace sitenum2 = 3.8 in 4

list sitenum sitenum2 b_cl_all b_any_all v_cl_all v_any_all in 1/4

foreach x in cl any{
gen se_`x'_all = sqrt(v_`x'_all)

gen ll_`x'_all=b_`x'_all - 1.96*se_`x'_all
gen ul_`x'_all=b_`x'_all + 1.96*se_`x'_all

//convert to odds ratios
gen b_`x'_e=exp(b_`x'_all)
gen ll_`x'_e=exp(ll_`x'_all)
gen ul_`x'_e=exp(ul_`x'_all)

}

list sitenum b_cl_e b_any_e in 1/4

twoway rcap ll_cl_e ul_cl_e sitenum2, color(gs9) ///
	|| scatter b_cl_e sitenum2, color(midblue) ///
	|| rcap ll_any_e ul_any_e sitenum, color(gs5) ///
	|| scatter b_any_e sitenum, color(orange) ///
	yline(1) yscale(range(0 2)) ///
	xscale(range(0 4.5)) xlabel(1 `" "Overall" "N=`n_oa_cl'" "' ///
	2 `""Helpers" "N=`n_h_cl'" "' 3 `" "Ivw>1yr" "N=`n_a1_any'" "' 4 `" "Helpers Ivw>1yr" "N=`n_ha1_any'" "') xtitle("Sample") ///
	legend(order(4 3 2 1) symxsize(*.5) cols(2) ///
	label(1 95% confidence interval) label(2 OR Clinical improvement) ///
		label(3 95% confidence interval) label(4 OR Any improvement) )  ///
	title("Odds ratios from logit regression") ///
	subtitle("OR for overall sample, helpers, and interview after 1 year of R's death")
graph save `logpath'/or_compar_v2,replace
graph export `logpath'/or_compar_v2.eps,replace

log close


H="xxxxxka stata"
/*This is copied from spouse_data_mar11_2013 and then
modified so it runs to try and figure out how Ling had it working
*/
capture log close 
clear all
//log using E:\data\spouse\logs\Ling_ps_match_code.txt, text replace
log using C:\data\spouse\logs\Ling_ps_match_code.txt, text replace

set more off

*choose dates 7-365. etc*/
global hs_days_low 1
global hs_days_high 365
//use "C:\projects\spouse_ip_admit_impact\final_data\spouse_data.dta",clear

use C:\data\spouse\spouse_data_sample_public.dta if (p1_wi_90d==0 & no_el_comorb_12m==0 & sudden_cause_death==0 & cesd_miss_n1_p1==0)


/*determine which surviving spouses have p1 and n1 interview*/
/*gen sp_miss_p1=0
replace sp_miss_p1=1 if s_c_ivw_date_p1==.


gen sp_miss_n1=0

replace sp_miss_n1=1 if s_c_ivw_date_n1==.
tab sp_miss_n1

keep if sp_miss_p1==0
keep if sp_miss_n1==0


/*remove those with no comorbidities year 1*/
keep if comorb_all_0d_n12m>0

/*remove those who died unexpectedly*/
*tab r_cause_death_12_e 
drop if ltrim(r_cause_death_12_e) =="Accidents, Suicide, Homicide"

/*diff in days betwen respondent death and last spouse interview-  create variable to see those more than 2 years*/
gen days_n1_core_dead=r_death_date_e-s_c_ivw_date_n1
*tab days_n1_core_dead

gen days_n1_core_dead2=0
replace days_n1_core_dead2=1 if days_n1_core_dead>730
*tab days_n1_core_dead2

/*diff in days betwen respondent death and  first spouse interview*/
gen days_p1_core_dead=s_c_ivw_date_p1-r_death_date_e

/*diff in days betwen spouse p1 and spouse n1*/
gen s_days_n1_p1=s_c_ivw_date_p1-s_c_ivw_date_n1
*tab s_days_n1_p1
*sum s_days_n1_p1

*remove people with core interview within 90 days of R's death date*
keep if days_p1_core_dead>90

* removes people with Core interview too close to R's death date (within study window)
*keep if days_n1_core_dead>$hs_days_high

* removes those enrolled in hospice prior to start of desired range
*drop if hs_los_12m>$hs_days_high


*remove missing spouse CESD scores*

gen sp_CESD_p1=0
replace sp_CESD_p1=1 if s_cesd_tot_p1==.

gen sp_CESD_n1=0
replace sp_CESD_n1=1 if s_cesd_tot_n1==.

*tab sp_CESD_p1 sp_CESD_n1

keep if sp_CESD_p1==0
keep if sp_CESD_n1==0
*/

gen hs_days_range_$hs_days_low$hs_days_high=0
replace hs_days_range_$hs_days_low$hs_days_high=1 if (hs_los_12m<=$hs_days_high  & hs_los_12m>=$hs_days_low & hs_los_12m<. & hs_los_12m!=0)

tab   hs_days_range_$hs_days_low$hs_days_high
*tab s_cesd_tot_ge3_p1
*tab s_cesd_tot_ge3_n1

*look at raw differences between 2 groups relative to outcomes
*tab s_cesd_tot_ge3_p1
*tab s_cesd_tot_ge3_p1 hs_days_range_$hs_days_low$hs_days_high, col chi

/*create other cesd outcome variable*/
/*gen s_cesdchange= s_cesd_tot_p1- s_cesd_tot_n1
*tab s_cesdchange

*histogram s_cesdchange


gen s_cesdbetter=0
replace s_cesdbetter= 1 if s_cesdchange <0
gen s_cesdworse=0
replace s_cesdworse= 1 if s_cesdchange >0
replace s_cesdworse= . if s_cesdchange ==.
replace s_cesdbetter= . if s_cesdchange ==.
*tab s_cesdbetter s_cesdworse
*tab s_cesdchange


gen s_cesdchange_3 =0
replace s_cesdchange_3 =1 if s_cesdchange >0
replace s_cesdchange_3 =-1 if s_cesdchange <0
replace s_cesdchange_3= . if s_cesdchange ==.
*tab s_cesdchange_3

*cesd improved from <3 to 3-  look at CESD 3 clin depression change (three options compared to improved or not*
gen s_cesd_ge3_change= s_cesd_tot_ge3_p1- s_cesd_tot_ge3_n1
gen  s_cesd_ge3better=0
replace s_cesd_ge3better= 1 if s_cesd_ge3_change<0
replace s_cesd_ge3better= . if s_cesd_tot_ge3_p1 ==.
replace s_cesd_ge3better= . if s_cesd_tot_ge3_n1 ==.

*tab s_cesd_ge3better s_cesd_ge3_change

gen  s_cesd_ge3betterorsame=0
replace s_cesd_ge3betterorsame= 1 if s_cesd_ge3_change<=0
replace s_cesd_ge3betterorsame= . if s_cesd_tot_ge3_p1 ==.
replace s_cesd_ge3betterorsame= . if s_cesd_tot_ge3_n1 ==.
*tab s_cesd_ge3betterorsame s_cesd_ge3better 
*tab s_cesd_ge3betterorsame hs_days_range_$hs_days_low$hs_days_high, col chi
*tab s_cesd_ge3better hs_days_range_$hs_days_low$hs_days_high, col chi
*/


*logit s_cesd_tot_ge3_p1  hs_days_range_$hs_days_low$hs_days_high,or

*tab  s_cesdbetter  hs_days_range_$hs_days_low$hs_days_high,col
*tab  s_cesdbetter  hs_days_range_$hs_days_low$hs_days_high,ch

*check missingness in explanatory variables
tab s_cesdbetter, missing
tab hs_days_range_$hs_days_low$hs_days_high , missing
tab comorb_all_0d_n12m, missing
sum r_age
tab r_female, missing
//tab r_white_e, missing
tab r_hseduc_n1_n3, missing
sum r_networth_n1
tab s_hseduc_n1_n3, missing
tab r_nhres_n1, missing
tab r_srh_pf_n1, missing
sum hci_index
sum hospital_beds 
sum specialists	

*controlling for other variables (unmatched logit model)
logit s_cesdbetter  hs_days_range_$hs_days_low$hs_days_high comorb_all_0d_n12m r_age r_female ///
	/*r_white_e*/ r_hseduc_n1_n3	r_networth_n1 s_hseduc_n1_n3 r_nhres_n1 r_srh_pf_n1 hci_index ///
	hospital_beds specialists	, or


*tab  s_cesdworse hs_days_range_$hs_days_low$hs_days_high,col
*tab  s_cesdworse  hs_days_range_$hs_days_low$hs_days_high,ch


/*prop score -revised from amy's variables prop score- remove catarcats, glaucoma, lives with,relatives*/
global indv  comorb_all_0d_n12m  cc_3_alzhdmta_n12mn0  cc_ami_isch_n12mn0 cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 ///
cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 cc_15_ra_oa_n12mn0 ///
r_age	r_female 	/*r_white_e*/ r_hseduc_n1_n3	 r_networth_n1 	r_nhres_n1 r_imprelig_vimp_n1	///
r_adl_stable_partial_n1n2  	r_adl_stable_severe_n1n2 r_adl_change_i_m_n1n2 	r_adl_change_m_s_n1n2 ///
r_adl_change_i_s_n1n2 r_medicaid_n1 	r_champus_n1 	r_medigap_n1 	r_advdir_x 	r_discuss_x ///
r_srh_pf_n1 hci_index hospital_beds specialists	
 


/*finding std for PS*/
gen x=uniform()
sort x
set seed 2000

set matsize 800


logit hs_days_range_$hs_days_low$hs_days_high  $indv
predict yhat
sum yhat if hs_days_range_$hs_days_low$hs_days_high==1

*.1619774 , = , the new std is  so the new radius ,
*0.01 *(0.162)=0.00162,.05*(0.168)

//plug in std for caliper PS matching
psmatch2 hs_days_range_$hs_days_low$hs_days_high  $indv, radius caliper(0.01698) logit

//how many does this drop???
*gen variable those dropped
gen ps_drop=0
replace ps_drop=1 if _weight==.

*compare those drop from ps and those not

*tab alzhdmta_n12mn0 ps_drop, chi


tab hs_days_range_$hs_days_low$hs_days_high ps_drop
drop if _weight==.



***compare variables included in PS to see how well they match up-- 
*tab alzhdmta_n12mn0 hs_days_range_$hs_days_low$hs_days_high [iweight=_weight]

*logit hs_days_range_$hs_days_low$hs_days_high  alzhdmta_n12mn0[iweight=_weight]

*logit hs_days_range_$hs_days_low$hs_days_high  chrnkidn_n12mn0 [iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  ami_isch_n12mn0[iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  chf_n12mn0[iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  diabetes_n12mn0[iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  copd_n12mn0[iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  strketia_n12mn0[iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  cncr_chronic_n12mn0 [iweight=_weight]

*logit hs_days_range_$hs_days_low$hs_days_high  atrialfb_n12mn0[iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  hipfrac_n12mn0 [iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  depressn_n12mn0 [iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  osteoprs_n12mn0 [iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  ra_oa_n12mn0[iweight=_weight]


*logit hs_days_range_$hs_days_low$hs_days_high  r_age[iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  r_female[iweight=_weight]

*logit hs_days_range_$hs_days_low$hs_days_high  r_white_e[iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  r_hseduc	[iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  r_networth_n1[iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  r_nhres_n1[iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  r_imprelig_vimp_n1[iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  r_adl_stable_partial_n1n2 [iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  r_medicaid_n1 [iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  hospital_beds [iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  specialists	 [iweight=_weight]
*logit hs_days_range_$hs_days_low$hs_days_high  r_advdir_x [iweight=_weight]


*analysis with PS matching

//rg added to see what the _weight variable is, created by psmatch2 code above
sum _weight if hs_days_range_$hs_days_low$hs_days_high==1
sum _weight if hs_days_range_$hs_days_low$hs_days_high==0

logit s_cesdbetter hs_days_range_$hs_days_low$hs_days_high [iweight=_weight], or
logit s_cesdbetter hs_days_range_$hs_days_low$hs_days_high s_age s_female /*s_white_e*/ ///
	s_hseduc_n1_n3 s_srh_pf_p1[iweight=_weight], or


*comapre sample include in PS matching for Table 1*

tab cc_3_alzhdmta_n12mn0 hs_days_range_$hs_days_low$hs_days_high [iweight=_weight]

tab hs_days_range_$hs_days_low$hs_days_high  cc_3_alzhdmta_n12mn0, row chi

tab hs_days_range_$hs_days_low$hs_days_high  cc_6_chrnkidn_n12mn0, row chi
tab hs_days_range_$hs_days_low$hs_days_high  cc_ami_isch_n12mn0, row chi
tab hs_days_range_$hs_days_low$hs_days_high  cc_8_chf_n12mn0, row chi
tab hs_days_range_$hs_days_low$hs_days_high  cc_9_diabetes_n12mn0, row chi
tab  hs_days_range_$hs_days_low$hs_days_high  cc_7_copd_n12mn0 , row chi
tab hs_days_range_$hs_days_low$hs_days_high  cc_16_strketia_n12mn0, row chi
tab hs_days_range_$hs_days_low$hs_days_high  cc_cncr_chronic_n12mn0, row chi

tab hs_days_range_$hs_days_low$hs_days_high  cc_4_atrialfb_n12mn0, row chi
tab hs_days_range_$hs_days_low$hs_days_high  cc_11_hipfrac_n12mn0 , row chi
tab hs_days_range_$hs_days_low$hs_days_high  cc_13_depressn_n12mn0 , row chi
tab hs_days_range_$hs_days_low$hs_days_high  cc_14_osteoprs_n12mn0 , row chi
tab hs_days_range_$hs_days_low$hs_days_high  cc_15_ra_oa_n12mn0, row chi


tab hs_days_range_$hs_days_low$hs_days_high  r_female, row chi
//tab hs_days_range_$hs_days_low$hs_days_high  r_white_e, row chi
tab hs_days_range_$hs_days_low$hs_days_high  r_hseduc_n1_n3 , row chi
tab hs_days_range_$hs_days_low$hs_days_high  r_nhres_n1 , row chi
tab hs_days_range_$hs_days_low$hs_days_high  r_medicaid_n1 , row chi


tab hs_days_range_$hs_days_low$hs_days_high  r_advdir_ , row chi

tab hs_days_range_$hs_days_low$hs_days_high  r_adl_stable_partial_n1n2 , row chi
tab hs_days_range_$hs_days_low$hs_days_high  r_adl_stable_severe_n1n2, row chi
tab hs_days_range_$hs_days_low$hs_days_high  r_adl_change_i_m_n1n2, row chi
tab hs_days_range_$hs_days_low$hs_days_high  r_adl_change_m_s_n1n2 , row chi
tab hs_days_range_$hs_days_low$hs_days_high  r_adl_change_i_s_n1n2, row chi

tab hs_days_range_$hs_days_low$hs_days_high   r_adl_stable_ind_n1n2, row chi




****FINISH HERE--  now compare SPOUSE VARIABLES***  and regional variables  *hospital_beds
* specialists

/*

tab hs_days_range_$hs_days_low$hs_days_high  s_cesd_tot_p1, row chi


*death expected variable
*tab r_dexp_x hs_days_range_$hs_days_low$hs_days_high, row



//looking at helper
*keep if r_adl_sp_helper_x==1|r_iadl_sp_helper_x==1

tab hs_days_range_$hs_days_low$hs_days_high




*limiting sample to feamle respondents only*
keep if s_female==1

logit s_cesdbetter  hs_days_range_$hs_days_low$hs_days_high, or 


tab  s_cesd_ge3_change hs_days_range_$hs_days_low$hs_days_high,col
tab  s_cesd_ge3_change  hs_days_range_$hs_days_low$hs_days_high,ch

tab  s_cesd_ge3better hs_days_range_$hs_days_low$hs_days_high,col
tab  s_cesd_ge3better  hs_days_range_$hs_days_low$hs_days_high,ch

ologit s_cesd_ge3_change  hs_days_range_$hs_days_low$hs_days_high, or

regress s_cesdchange hs_days_range_$hs_days_low$hs_days_high



//look at hospice use
keep if hs_days_range_$hs_days_low$hs_days_high ==1
su hs_los_12
tab hs_los_12

*may 2013*
*examine location of death and cesd.  loc_hops = death in hopsital.  
*no difference in raw clinical depression (CESD and hopsital death)*
tab  r_location_x r_loc_hosp_x
tab s_cesd_tot_ge3_p1 r_loc_hosp_x, col chi
tab s_srh_p1 r_loc_hosp_x, col chi

tab s_cesdbetter r_loc_hosp_x, col chi

//tab s_srhbetter r_loc_hosp_x, col chi ****RG commented out

logit s_cesdbetter  r_loc_hosp_x, or
*multivariate-  spousal factors
logit s_cesdbetter  r_loc_hosp_x s_age s_female s_white_e s_hseduc  s_srh_pf_p1 , or


*multivariate-  all factors
logit s_cesdbetter  r_loc_hosp_x comorb_all_0d_n12m alzhdmta_n12mn0 depressn_n12mn0 r_age	r_female 	r_white_e r_hseduc	 r_networth_n1 	r_nhres_x r_imprelig_vimp_n1	r_adl_stable_partial_n1n2  	r_adl_stable_severe_n1n2 r_adl_change_i_m_n1n2 	r_adl_change_m_s_n1n2 	r_adl_change_i_s_n1n2 r_medicaid_n1 	r_champus_n1 	r_medigap_n1 	r_advdir_x 	r_discuss_x	r_srh_pf_n1 hci_index hospital_beds specialists s_age s_srh_pf_p1 , or	

tab   r_nhres_x 

drop  if r_nhres_x ==1
logit s_cesdbetter  r_loc_hosp_x comorb_all_0d_n12m alzhdmta_n12mn0 depressn_n12mn0 r_age	r_female 	r_white_e r_hseduc	 r_networth_n1 	r_imprelig_vimp_n1	r_adl_stable_partial_n1n2  	r_adl_stable_severe_n1n2 r_adl_change_i_m_n1n2 	r_adl_change_m_s_n1n2 	r_adl_change_i_s_n1n2 r_medicaid_n1 	r_champus_n1 	r_medigap_n1 	r_advdir_x 	r_discuss_x	r_srh_pf_n1 hci_index hospital_beds specialists s_age s_srh_pf_p1 , or	


tab r_nhres_n1 r_location_x , row chi

*prop score*
*revised prop score- remove catarcats, glaucoma, lives with,relatives*
global indv  comorb_all_0d_n12m alzhdmta_n12mn0 ami_isch_n12mn0 chf_n12mn0 diabetes_n12mn0 chrnkidn_n12mn0 copd_n12mn0 strketia_n12mn0 cncr_chronic_n12mn0 atrialfb_n12mn0 hipfrac_n12mn0 depressn_n12mn0 osteoprs_n12mn0 ra_oa_n12mn0 r_age	r_female 	r_white_e r_hseduc	 r_networth_n1 	r_nhres_n1 r_imprelig_vimp_n1	r_adl_stable_partial_n1n2  	r_adl_stable_severe_n1n2 r_adl_change_i_m_n1n2 	r_adl_change_m_s_n1n2 	r_adl_change_i_s_n1n2 r_medicaid_n1 	r_champus_n1 	r_medigap_n1 	r_advdir_x 	r_discuss_x	r_srh_pf_n1 hci_index hospital_beds specialists	
 *gen hs_days_range_$hs_days_low$hs_days_high=0
*replace hs_days_range_$hs_days_low$hs_days_high=1 if (hs_los_12m<=$hs_days_high  & hs_los_12m>=$hs_days_low & hs_los_12m<. & hs_los_12m!=0)

 //finding std for PS
  drop x yhat ps_drop// RG added
g x=uniform()
sort x
set seed 2000

set matsize 800


logit  r_loc_hosp_x $indv
predict yhat
sum yhat if r_loc_hosp_x==1

*.1721895 , = , the new std is  so the new radius ,
*0.01 *(0.172)=0.00172,.05*(0.172)=.0086

/*plug in std for caliper PS matching*/
psmatch2 r_loc_hosp_x   $indv, radius caliper(0.0172) logit

gen ps_drop=0
replace ps_drop=1 if _weight==.

tab r_white ps_drop, chi

drop if _weight==.
tab r_loc_hosp_x ps_drop


*drop  if r_nhres_x ==1
logit s_cesdbetter  r_loc_hosp_x [iweight=_weight],or
logit s_cesdbetter  r_loc_hosp_x s_age s_female s_white_e s_hseduc  s_srh_pf_p1 [iweight=_weight],or

 

logit s_srh_pf_p1 r_loc_hosp_x [iweight=_weight],or

*look at home vs other

 gen loc_home_x=0
replace loc_home_x = 1 if (r_location_x==3)
replace loc_home_x = 0 if ((r_location_x==1) | (r_location_x==2)| (r_location_x==4)|(r_location_x==5) | (r_location_x==6))

 *tab loc_home_x 
 
 drop x //RG added
 g x=uniform()
sort x
set seed 2000

set matsize 800


logit  loc_home_x $indv
predict yhat2
sum yhat2 if loc_home_x==1

*.15219  , = , the new std is  so the new radius ,
*0.01 *(0.172)=0.00152,.05*(0.172)=.0086

//plug in std for caliper PS matching
psmatch2 loc_home_x   $indv, radius caliper(0.0152) logit

gen ps_drop=0
replace ps_drop=1 if _weight==.
 
 logit s_cesdbetter loc_home_x [iweight=_weight],or
 tab s_cesdbetter loc_home_x, col chi

 
 *comparison hopsice and lcoation of death*
 tab r_loc_hosp_x hs_days_range_$hs_days_low$hs_days_high, col
 
 /*looking at helper*/
*keep if r_adl_sp_helper_x==1|r_iadl_sp_helper_x==1



*SRH*
*gen s_srhchange= s_srh_p1- s_srh_n1
*tab s_srhchange
*tab s_srhchange hs_days_range_$hs_days_low$hs_days_high, col
*gen s_srhchange_3 =0
*replace s_srhchange_3 =1 if s_srhchange >0
*replace s_srhchange_3 =-1 if s_srhchange <0
*replace s_srhchange_3= . if s_srhchange ==.
*tab s_srhchange_3


*gen s_srhbetter=0
*replace s_srhbetter= 1 if s_srhchange <0
*replace s_srhbetter= . if s_srhchange ==.
*tab s_srhbetter


*gen s_srhworse=0
*replace s_srhworse= 1 if s_srhchange >0
*replace s_srhworse= . if s_srhchange ==.
*tab s_srhworse

*gen s_srh5verypoor =0
*replace s_srh5verypoor= 1 if s_srh_p1 >4
*replace s_srh5verypoor= . if s_srh_p1==.
*tab s_srh5verypoor


*gen s_srh4verypoor =0
*replace s_srh4verypoor= 1 if s_srh_p1 >3
*replace s_srh4verypoor= . if s_srh_p1==.
*tab s_srh4verypoor

ologit s_srh_p1 s_srh_n1 hs_days_range_$hs_days_low$hs_days_high s_age s_female s_white_e s_hseduc [iweight=_weight], or
ologit s_srh_p1  hs_days_range_$hs_days_low$hs_days_high



logit  s_srh4verypoor hs_days_range_$hs_days_low$hs_days_high s_age s_female s_white_e s_hseduc [iweight=_weight], or


tab s_srh_p1

logit s_psych_treat_p1  hs_days_range_$hs_days_low$hs_days_high [iweight=_weight]
logit s_psych_med_p1  hs_days_range_$hs_days_low$hs_days_high [iweight=_weight]

reg s_n_drinks_3m_p1 hs_days_range_$hs_days_low$hs_days_high [iweight=_weight]

*logit s_alcohol_mis_p1  hs_days_range_$hs_days_low$hs_days_high [iweight=_weight]



tab1 s_psych_treat_p1 s_psych_med_p1 s_n_drinks_3m_p1 s_alcohol_mis_p1 
*ask ling why are these n's so low?
*/

log close


H="Overall, comp hospice use defs, w/o excluding 1-2, 1-6 day users"
/*Outcome variables are: CESD improvement indicator, ie any improvement 
in CESD score from n1 to p1
And CESD clinical improvement 3+ to <3 n1 to p1

This Stata code runs following analyses:
1. Determines propensity scores
2. Runs summary tables for r and s characteristics using px weighting
3. Px matched logit regression on reduced spouse depressive symptoms 

Runs 3 versions
1. Hospice users: 1+ days / non users: 0 days
2. Hospice users: 3+ days / non users: 0-2 days
3. Hospice users: 7+ days / non users: 0-6 days*/

capture log close

clear all
set mem 500m
set more off
set scheme s1color

//Amy's PC
local logpath E:\data\spouse\logs\july2014
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\5-HRS_Spouse_analysis_july2014.txt", text replace

cd `datapath'

use spouse_data_sample_v2.dta
//use spouse_data_sample_public.dta if (p1_wi_90d==0 & no_cc_12m_excl_cataract==0 & sudden_cause_death==0 & cesd_miss_n1_p1==0)

tab s_comor_c_hrs_n1 s_cesdbetter, chi2
tab s_comor_c_hrs_n1 r_hs_12m, chi2
  
*****************************************************************************
*****************************************************************************
//Set up variables and dataset
*****************************************************************************
*****************************************************************************
//See tab Sum stats, unmatched for variable list used in matching

tab r_hs_12m, missing
rename r_hs_12m rhs12m
la var rhs12m "1+ day hospice use"

gen rhs3d = .
replace rhs3d=1 if hs_los_12m >= 3 & hs_los_12m != .
replace rhs3d=0 if hs_los_12m <3 & hs_los_12m != .
la var rhs3d "3+ day hospice use"
tab hs_los_12m rhs3d , missing
tab  rhs3d , missing

gen rhs7d = .
replace rhs7d=1 if hs_los_12m >= 7 & hs_los_12m != .
replace rhs7d=0 if hs_los_12m <7 & hs_los_12m != .
la var rhs7d "7+ day hospice use"
tab hs_los_12m rhs7d , missing
tab  rhs7d , missing

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores - 1 day definition
*****************************************************************************
*****************************************************************************

//generate pscore variable hs_pscore
pscore rhs12m $matchvars, pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(rhs12m) pscore(hs_pscore)
graph save `logpath'/psgraph_1 ,replace

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

//rule of thumb 0.2*sd
//psmatch2  rhs12m,outcome(s_cesdbetter) pscore(hs_pscore) caliper(.1713619) logit
//try 0.02* sd
psmatch2  rhs12m,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.01713619) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(rhs12m) pscore(hs_pscore)
graph save `logpath'/psgraph_2 ,replace

histogram hs_pscore if _support==1, by(rhs12m) 

//look at balance of matched vs unmatched samples
pstest $matchvars ,treated(rhs12m) both hist
graph save `logpath'/psmatch_1 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age{
gen `v'_treated = `v' if rhs12m==1 & _support==1
gen `v'_comparison = `v' if rhs12m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v', replace
}

mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if rhs12m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if rhs12m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if rhs12m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if rhs12m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1"

mat list vr

//look at standardized differences to assess balance
//continuous variables
mat std_diff=J(40,5,.)
local i=1
foreach v in cc_all_count_12m_2 s_age {
sum `v' if rhs12m==1 & _support==1 //get mean,variance treated after matching
mat std_diff[`i',1]=r(mean)
mat std_diff[`i',2]=r(sd)

sum `v' if rhs12m==0 [iweight=_weight] //get mean,variance contl after matching
mat std_diff[`i',3]=r(mean)
mat std_diff[`i',4]=r(sd)

mat std_diff[`i',5]=(std_diff[`i',1]-std_diff[`i',3])/sqrt((std_diff[`i',2]^2+std_diff[`i',4]^2)/2) 
	
local i = `i'+1	
}
//indicator variables
local indvars cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y r_advdir_miss r_discuss_x r_srh_pf_n1 ///
 s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

foreach v in `indvars' {
sum `v' if rhs12m==1 & _support==1 //get mean treated after matching
mat std_diff[`i',1]=r(mean)

sum `v' if rhs12m==0 [iweight=_weight] //get mean contl after matching
mat std_diff[`i',3]=r(mean)

mat std_diff[`i',5]=(std_diff[`i',1]-std_diff[`i',3])/sqrt((std_diff[`i',1]*(1-std_diff[`i',1])+std_diff[`i',3]*(1-std_diff[`i',3]))/2)
	
local i = `i'+1	
}

mat rownames std_diff="Count of comorbidities" "S age" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
 "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list std_diff
//standardized difference should be less than 10-25%

//using this matching, 2 obs from the treatment group are dropped b/c they are off support
//18 are dropped b/c not matched (weight=.)
//_support ==1 if matched
tab _support, missing
tab _support if rhs12m==1, missing
tab _support if rhs12m==0, missing
tab _weight if rhs12m==1, missing
sum _weight if rhs12m==0

//rename ps variables and save dataset so can call them up later
rename _support support_1
rename _weight weight_1

*************************************************************************************
//now run using weighting , outcome = improved CESD score p1
//need to include the variables used in the propensity score

local yearvars ib2000.r_death_year 
 
logit s_cesdbetter rhs12m `yearvars' $matchvars [iw=weight_1] , or 

outreg using `logpath'\spouse_analysis_july2014, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) replace

tab s_cesdbetter s_cesd_ge3better, missing

//Run logit with outcome=depressed n1, not depressed p1
logit s_cesd_ge3better rhs12m `yearvars' $matchvars [iw=weight_1] , or 

outreg using `logpath'\spouse_analysis_july2014, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

*****************************************************************************

*****************************************************************************

//End of 1 day definition , start 3 day definition section

*****************************************************************************

*****************************************************************************
	
	
*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores - 3 day definition
*****************************************************************************
*****************************************************************************
//first sort data randomly
set seed 2000
gen x3=uniform()
sort x3
//generate pscore variable hs_pscore
pscore rhs3d $matchvars, pscore(hs_pscore3) blockid(hs_block3) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(rhs3d) pscore(hs_pscore3)
graph save `logpath'/psgraph_1_3 ,replace

//implement radius matching
gen logitpscore3=ln(hs_pscore3/(1-hs_pscore3))
sum logitpscore3

sca cal_ps3=r(sd)*0.02
sca list cal_ps3

//try 0.02* sd
psmatch2  rhs3d,outcome(s_cesdbetter) pscore(hs_pscore3) radius caliper(.01723085) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(rhs3d) pscore(hs_pscore3)
graph save `logpath'/psgraph_2_3 ,replace

histogram hs_pscore3 if _support==1, by(rhs3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars ,treated(rhs3d) both hist
graph save `logpath'/psmatch_1_3 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age{
gen `v'_treated3 = `v' if rhs3d==1 & _support==1
gen `v'_comparison3 = `v' if rhs3d==0 & _support==1
qqplot `v'_treated3 `v'_comparison3
graph save `logpath'/qqplot_`v'_3, replace
}

mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if rhs3d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if rhs3d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if rhs3d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if rhs3d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list vr

//look at standardized differences to assess balance
//continuous variables
mat std_diff=J(40,5,.)
local i=1
foreach v in cc_all_count_12m_2 s_age {
sum `v' if rhs3d==1 & _support==1 //get mean,variance treated after matching
mat std_diff[`i',1]=r(mean)
mat std_diff[`i',2]=r(sd)

sum `v' if rhs3d==0 [iweight=_weight] //get mean,variance contl after matching
mat std_diff[`i',3]=r(mean)
mat std_diff[`i',4]=r(sd)

mat std_diff[`i',5]=(std_diff[`i',1]-std_diff[`i',3])/sqrt((std_diff[`i',2]^2+std_diff[`i',4]^2)/2) 
	
local i = `i'+1	
}
//indicator variables
local indvars cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y r_advdir_miss r_discuss_x r_srh_pf_n1 ///
 s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

foreach v in `indvars' {
sum `v' if rhs3d==1 & _support==1 //get mean treated after matching
mat std_diff[`i',1]=r(mean)

sum `v' if rhs3d==0 [iweight=_weight] //get mean contl after matching
mat std_diff[`i',3]=r(mean)

mat std_diff[`i',5]=(std_diff[`i',1]-std_diff[`i',3])/sqrt((std_diff[`i',1]*(1-std_diff[`i',1])+std_diff[`i',3]*(1-std_diff[`i',3]))/2)
	
local i = `i'+1	
}

mat rownames std_diff="Count of comorbidities" "S age" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
 "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list std_diff
//standardized difference should be less than 10-25%


//using this matching, 3 obs from the treatment group are dropped b/c they are off support
//1 dropped b/c not matched (weight=.)
//_support ==1 if matched
tab _support, missing
tab _support if rhs3d==1, missing
tab _support if rhs3d==0, missing
tab _weight if rhs3d==1, missing
sum _weight if rhs3d==0

//rename ps variables and save dataset so can call them up later
rename _support support_3
rename _weight weight_3

//now run using weighting , outcome = improved CESD score p1
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in
 
logit s_cesdbetter rhs3d `yearvars' $matchvars [iw=weight_3] , or 

outreg using `logpath'\spouse_analysis_july2014, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1" \ ///
	"3+ days of hospice use = treatment, 0-2 days = control") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable


tab s_cesdbetter s_cesd_ge3better, missing

//Run logit with outcome=depressed n1, not depressed p1
logit s_cesd_ge3better rhs3d `yearvars' $matchvars [iw=weight_3] , or 

outreg using `logpath'\spouse_analysis_july2014, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" \ ///
	"3+ days of hospice use = treatment, 0-2 days = control")  ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

*****************************************************************************

*****************************************************************************

//End of 3 day definition , start 7 day definition section

*****************************************************************************

*****************************************************************************
	
	
*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores - 7 day definition
*****************************************************************************
*****************************************************************************
//first sort data randomly
set seed 2000
gen x7=uniform()
sort x7
//generate pscore variable hs_pscore
pscore rhs7d $matchvars, pscore(hs_pscore7) blockid(hs_block7) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(rhs7d) pscore(hs_pscore7)
graph save `logpath'/psgraph_1_7 ,replace

//implement radius matching
gen logitpscore7=ln(hs_pscore7/(1-hs_pscore7))
sum logitpscore7

sca cal_ps7=r(sd)*0.02
sca list cal_ps7

//try 0.02* sd
psmatch2  rhs7d,outcome(s_cesdbetter) pscore(hs_pscore7) radius caliper(.01773729) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(rhs7d) pscore(hs_pscore7)
graph save `logpath'/psgraph_2_7 ,replace

histogram hs_pscore7 if _support==1, by(rhs7d) 

//look at balance of matched vs unmatched samples
pstest $matchvars ,treated(rhs7d) both hist
graph save `logpath'/psmatch_1_7 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age{
gen `v'_treated7 = `v' if rhs7d==1 & _support==1
gen `v'_comparison7 = `v' if rhs7d==0 & _support==1
qqplot `v'_treated7 `v'_comparison7
graph save `logpath'/qqplot_`v'_7, replace
}

mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if rhs7d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if rhs7d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if rhs7d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if rhs7d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1"

mat list vr

//look at standardized differences to assess balance
//continuous variables
mat std_diff=J(40,5,.)
local i=1
foreach v in cc_all_count_12m_2 s_age {
sum `v' if rhs7d==1 & _support==1 //get mean,variance treated after matching
mat std_diff[`i',1]=r(mean)
mat std_diff[`i',2]=r(sd)

sum `v' if rhs7d==0 [iweight=_weight] //get mean,variance contl after matching
mat std_diff[`i',3]=r(mean)
mat std_diff[`i',4]=r(sd)

mat std_diff[`i',5]=(std_diff[`i',1]-std_diff[`i',3])/sqrt((std_diff[`i',2]^2+std_diff[`i',4]^2)/2) 
	
local i = `i'+1	
}
//indicator variables
local indvars cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y r_advdir_miss r_discuss_x r_srh_pf_n1 ///
 s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

foreach v in `indvars' {
sum `v' if rhs7d==1 & _support==1 //get mean treated after matching
mat std_diff[`i',1]=r(mean)

sum `v' if rhs7d==0 [iweight=_weight] //get mean contl after matching
mat std_diff[`i',3]=r(mean)

mat std_diff[`i',5]=(std_diff[`i',1]-std_diff[`i',3])/sqrt((std_diff[`i',1]*(1-std_diff[`i',1])+std_diff[`i',3]*(1-std_diff[`i',3]))/2)
	
local i = `i'+1	
}

mat rownames std_diff="Count of comorbidities" "S age" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
 "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list std_diff
//standardized difference should be less than 10-25%


//using this matching, 9 obs from the treatment group are dropped b/c they are off support
//1 is dropped b/c not matched (weight=.)
//_support ==1 if matched
tab _support, missing
tab _support if rhs7d==1, missing
tab _support if rhs7d==0, missing
tab _weight if rhs7d==1, missing
sum _weight if rhs7d==0

//rename ps variables and save dataset so can call them up later
rename _support support_7
rename _weight weight_7

//save this dataset for making the tables in the next section
//this retains the weight variables
save `datapath'\spouse_data_sample_v2_july2014.dta, replace

//now run using weighting , outcome = improved CESD score p1
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in
 
logit s_cesdbetter rhs7d `yearvars' $matchvars [iw=weight_7] , or 

outreg using `logpath'\spouse_analysis_july2014, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1" \ ///
	"7+ days of hospice use = treatment, 0-6 days = control") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable


tab s_cesdbetter s_cesd_ge3better, missing

//Run logit with outcome=depressed n1, not depressed p1
logit s_cesd_ge3better rhs7d `yearvars' $matchvars [iw=weight_7] , or 

outreg using `logpath'\spouse_analysis_july2014, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" \ ///
	"7+ days of hospice use = treatment, 0-6 days = control")  ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable
****************************************************************
	
****************************************************************
//run each dr regression in a row to get a single table with all of the results
****************************************************************

****************************************************************

//1+day definition, any cesd improvement
qui logit s_cesdbetter rhs12m `yearvars' $matchvars [iw=weight_1] , or 
outreg , store(tableall) ///
	stats(e_b e_ci p) nosubstat keep(rhs12m) ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = S Depressive symptom improvement n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	rtitles("Any improvement 1+day" ) ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat(N)

//1+day definition, clinical cesd improvement
qui logit s_cesd_ge3better rhs12m `yearvars' $matchvars [iw=weight_1] , or 
outreg , append(tableall) ///
	stats(e_b e_ci p) nosubstat keep(rhs12m) ///
	rtitles("Clinical improvement 1+day") ///
	varlabels starlevels(10 5 1)  summstat(N) 
	
//3+day definition, any cesd improvement
qui logit s_cesdbetter rhs3d `yearvars' $matchvars [iw=weight_3] , or 
outreg , append(tableall) ///
	stats(e_b e_ci p) nosubstat keep(rhs3d) ///
	rtitles("Any improvement 3+days" ) ///
	varlabels starlevels(10 5 1)  summstat(N) 
	
//3+day definition, clinical cesd improvement
qui logit s_cesd_ge3better rhs3d `yearvars' $matchvars [iw=weight_3] , or 
outreg , append(tableall) ///
	stats(e_b e_ci p) nosubstat keep(rhs3d) ///
	rtitles("Clinical improvement 3+days" ) ///
	varlabels starlevels(10 5 1)  summstat(N) 

//7+day definition, any cesd improvement
qui logit s_cesdbetter rhs7d `yearvars' $matchvars [iw=weight_7] , or 
outreg , append(tableall) ///
	stats(e_b e_ci p) nosubstat keep(rhs7d) ///
	rtitles("Any improvement 7+days" ) ///
	varlabels starlevels(10 5 1)  summstat(N) 
	
//7+day definition, clinical cesd improvement
qui logit s_cesd_ge3better rhs7d `yearvars' $matchvars [iw=weight_7] , or 
outreg using `logpath'\spouse_analysis_july2014, append(tableall) ///
	stats(e_b e_ci p) nosubstat keep(rhs7d) ///
	rtitles("Clinical improvement 7+days" ) ///
	varlabels starlevels(10 5 1)  summstat(N) addtable	

****************************************************************
log close



H="Tables 1&2 - 3 day hospice use treatment"
/*Creates decedent and spouse characteristic tables

Hospice users definition: 3+ days / non users: 0-2 days

Runs in 2 sections, first are unmatched samples, then matched samples
*/

capture log close

clear all
set mem 500m
set more off
set scheme s1color

//Amy's PC
local logpath E:\data\spouse\logs\july2014
local datapath E:\data\spouse\final_data

log using "`logpath'\5a-HRS_Spouse_char_tables_july2014.txt", text replace

cd `datapath'

use spouse_data_sample_v2_july2014.dta

*******************************************************
tab rhs3d , missing

gen non_hosp3=1 if rhs3d==0
replace non_hosp3=0 if rhs3d==1
tab non_hosp3 rhs3d, missing
 
*************************************************************************************
*************************************************************************************
//Create Table 1, Decedent Descriptive Statistics
//Col 1-3: Unweighted, unmatched sample
//Col 4-6: Weighted and matched sample
*************************************************************************************
*************************************************************************************
local t1vars r_medicaid_n1 r_nhres_n1 r_nhres_x r_advdir_y r_advdir_n ///
r_advdir_miss r_adl_stable_ind_n1n2 ///
r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 r_adl_improved_n1n2 r_adl_change_i_m_n1n2 ///
r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss cc_3_alzhdmta_n12mn0 ///
cc_6_chrnkidn_n12mn0 cc_12_ischmcht_n12mn0 cc_8_chf_n12mn0 ///
cc_9_diabetes_n12mn0 cc_7_copd_n12mn0 cc_16_strketia_n12mn0 ///
cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 cc_11_hipfrac_n12mn0 ///
cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 cc_15_ra_oa_n12mn0 

sum r_age, detail

mat demo=J(37,6,.)

//first row, n of hospice users and non-users
tab rhs3d , missing matcell(d1)
mat demo[1,1]=d1[2,1] //non-hospice n
mat demo[1,2]=d1[1,1] //hospice users n

local j=1
foreach h in rhs3d non_hosp3 {
sum r_age if `h'==1, detail //age
mat demo[2,`j']=r(mean)
mat demo[3,`j']=r(sd)
sum r_female if `h'==1, detail //female
mat demo[4,`j']=r(mean)*100
sum r_white_e if `h'==1, detail //non-hispanic, white
mat demo[5,`j']=r(mean)*100
sum r_hseduc_n1_n3 if `h'==1, detail //hs education+
mat demo[6,`j']=r(mean)*100
sum r_networth_adj2010_n1 if `h'==1, detail //net worth
mat demo[7,`j']=r(mean)
mat demo[8,`j']=r(sd)
local i=9
foreach v in `t1vars' {
	sum `v' if `h'==1, detail 
	mat demo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 9-34
	}
sum cc_all_count_12m_2 if `h'==1, detail //count of chronic conditions
mat demo[36,`j']=r(mean)
mat demo[37,`j']=r(sd)
local j=`j'+1
}

//standardized difference for unmatched sample
//creates new matrix with means then puts the standardized difference into
//the main demo matrix

mat std_diff_b=J(36,4,.)

local r=2
sum r_age if rhs3d==1 //get mean,variance treated before matching
mat std_diff_b[`r',1]=r(mean)
mat std_diff_b[`r',2]=r(sd)

sum r_age if rhs3d==0 //get mean,variance contl before matching
mat std_diff_b[`r',3]=r(mean)
mat std_diff_b[`r',4]=r(sd)

mat demo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',2]^2+std_diff_b[`r',4]^2)/2) 
	
local r = 4
foreach v in r_female r_white_e r_hseduc_n1_n3 {
	sum `v' if rhs3d==1 //get mean,variance treated before matching
	mat std_diff_b[`r',1]=r(mean)

	sum `v' if rhs3d==0 //get mean,variance contl before matching
	mat std_diff_b[`r',3]=r(mean)

	mat demo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',1]*(1-std_diff_b[`r',1])+std_diff_b[`r',3]*(1-std_diff_b[`r',3]))/2)

	local r = `r'+1
}

sum r_networth_adj2010_n1 if rhs3d==1 //get mean,variance treated before matching
mat std_diff_b[`r',1]=r(mean)
mat std_diff_b[`r',2]=r(sd)

sum r_networth_adj2010_n1 if rhs3d==0 //get mean,variance contl before matching
mat std_diff_b[`r',3]=r(mean)
mat std_diff_b[`r',4]=r(sd)

mat demo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',2]^2+std_diff_b[`r',4]^2)/2) 

local r = 9
foreach v in `t1vars' {
	sum `v' if rhs3d==1 //get mean,variance treated before matching
	mat std_diff_b[`r',1]=r(mean)

	sum `v' if rhs3d==0 //get mean,variance contl before matching
	mat std_diff_b[`r',3]=r(mean)

	mat demo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',1]*(1-std_diff_b[`r',1])+std_diff_b[`r',3]*(1-std_diff_b[`r',3]))/2)

	local r = `r'+1
}

local r = 36
sum cc_all_count_12m_2 if rhs3d==1 //get mean,variance treated before matching
mat std_diff_b[`r',1]=r(mean)
mat std_diff_b[`r',2]=r(sd)

sum cc_all_count_12m_2 if rhs3d==0 //get mean,variance contl before matching
mat std_diff_b[`r',3]=r(mean)
mat std_diff_b[`r',4]=r(sd)

mat demo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',2]^2+std_diff_b[`r',4]^2)/2) 


//just look at it to check means against the pstest output to make sure they are right
mat rownames std_diff_b= "R age" "" "Female" "White" "HS Degree" "Net worth" "" ///
"Medicaid" "Nursing home res before death" "Nursing home res at death" ///
"Advance directive Y" "Advance directive N" "Advance directive missing" ///
"ADL stable independent" "ADL stable partial" "ADL stable severe" "ADL improved" ///
"ADL Ind to mod" "ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" ///
"Alzheimers/Dementia" "Chronic kidney disease" "AMI / ISCH" ///
"CHF" "Diabetes" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis" "Count of comorbidities" ""

mat list std_diff_b

*************************************************************************************
//Table 1 - cols 4-6: Respondent characteristics, matched and weighted
*************************************************************************************

//first row, n of hospice users and non-users
tab rhs3d if weight_3!=. , missing matcell(dm)
mat demo[1,5]=dm[1,1] //non-hospice n
mat demo[1,4]=dm[2,1] //hospice users n

local j=4
foreach h in rhs3d non_hosp3 {
sum r_age if `h'==1 [iweight=weight_3] //age
mat demo[2,`j']=r(mean)
mat demo[3,`j']=r(sd)
sum r_female if `h'==1 [iweight=weight_3] //female
mat demo[4,`j']=r(mean)*100
sum r_white_e if `h'==1 [iweight=weight_3] //non-hispanic, white
mat demo[5,`j']=r(mean)*100
sum r_hseduc_n1_n3 if `h'==1 [iweight=weight_3] //hs education+
mat demo[6,`j']=r(mean)*100
sum r_networth_adj2010_n1 if `h'==1 [iweight=weight_3] //net worth
mat demo[7,`j']=r(mean)
mat demo[8,`j']=r(sd)
local i=9
foreach v in `t1vars' {
	sum `v' if `h'==1 [iweight=weight_3] 
	mat demo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 9-34
	}
sum cc_all_count_12m_2 if `h'==1 [iweight=weight_3] //count of chronic conditions
mat demo[36,`j']=r(mean)
mat demo[37,`j']=r(sd)
local j=`j'+1
}

//standardized difference for matched sample
//creates new matrix with means then puts the standardized difference into
//the main demo matrix

mat std_diff_a=J(36,4,.)

local r=2
sum r_age if rhs3d==1 [iweight=weight_3] //get mean,variance treated after matching
mat std_diff_a[`r',1]=r(mean)
mat std_diff_a[`r',2]=r(sd)

sum r_age if rhs3d==0 [iweight=weight_3] //get mean,variance contl after matching
mat std_diff_a[`r',3]=r(mean)
mat std_diff_a[`r',4]=r(sd)

mat demo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',2]^2+std_diff_a[`r',4]^2)/2) 
	
local r = 4
foreach v in r_female r_white_e r_hseduc_n1_n3 {
	sum `v' if rhs3d==1 [iweight=weight_3] //get mean,variance treated after matching
	mat std_diff_a[`r',1]=r(mean)

	sum `v' if rhs3d==0 [iweight=weight_3] //get mean,variance contl after matching
	mat std_diff_a[`r',3]=r(mean)

	mat demo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',1]*(1-std_diff_a[`r',1])+std_diff_a[`r',3]*(1-std_diff_a[`r',3]))/2)

	local r = `r'+1
}

sum r_networth_adj2010_n1 if rhs3d==1 [iweight=weight_3] //get mean,variance treated after matching
mat std_diff_a[`r',1]=r(mean)
mat std_diff_a[`r',2]=r(sd)

sum r_networth_adj2010_n1 if rhs3d==0 [iweight=weight_3] //get mean,variance contl after matching
mat std_diff_a[`r',3]=r(mean)
mat std_diff_a[`r',4]=r(sd)

mat demo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',2]^2+std_diff_a[`r',4]^2)/2) 

local r = 9
foreach v in `t1vars' {
	sum `v' if rhs3d==1 [iweight=weight_3] //get mean,variance treated after matching
	mat std_diff_a[`r',1]=r(mean)

	sum `v' if rhs3d==0 [iweight=weight_3] //get mean,variance contl after matching
	mat std_diff_a[`r',3]=r(mean)

	mat demo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',1]*(1-std_diff_a[`r',1])+std_diff_a[`r',3]*(1-std_diff_a[`r',3]))/2)

	local r = `r'+1
}

local r = 36
sum cc_all_count_12m_2 if rhs3d==1 [iweight=weight_3] //get mean,variance treated after matching
mat std_diff_a[`r',1]=r(mean)
mat std_diff_a[`r',2]=r(sd)

sum cc_all_count_12m_2 if rhs3d==0 [iweight=weight_3] //get mean,variance contl after matching
mat std_diff_a[`r',3]=r(mean)
mat std_diff_a[`r',4]=r(sd)

mat demo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',2]^2+std_diff_a[`r',4]^2)/2) 


//just look at it to check means against the pstest output to make sure they are right
mat rownames std_diff_a= "R age" "" "Female" "White" "HS Degree" "Net worth" "" ///
"Medicaid" "Nursing home res before death" "Nursing home res at death" ///
"Advance directive Y" "Advance directive N" "Advance directive missing" ///
"ADL stable independent" "ADL stable partial" "ADL stable severe" "ADL Improved" ///
"ADL Ind to mod" "ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" ///
"Alzheimers/Dementia" "Chronic kidney disease" "AMI / ISCH" ///
"CHF" "Diabetes" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis" "Count of comorbidities" ""

mat list std_diff_a


mat rownames demo ="Sample n" "Age at death, years, mean" "SD" "Female, %" "Race, Non-Hispanic White, %" ///
"Education, High School Grad" "Net worth, 2010US$, mean" "SD" "Medicaid, %" ///
"Nursing home resident n1, %" "Nursing home resident exit" "Had advance directive" ///
"Did not have advance directive" "Advance directive status unknown" ///
"Stable, Indep in ADLs n2 to n1" ///
"Stable, Moderate 1-3 ADL" "Stable, Severe 4-6 ADL" "ADL Improved" ///
"Declined, Indep to Moderate" "Declined, Moderate to Severe" ///
"Declined, Independent to Severe" "Unknown" "Alzheimers/Dementia" "Chronic Kidney Disease" ///
"Ischemic Heart Disease" "Congestive Heart Failure" "Diabetes" "COPD" ///
"Stroke or TIA" "Cancer" "Atrial Fibrillation" "Hip Fracture" "Depression" "Osteoporosis" ///
"Arthritis" "Count of chronic conditions" "SD"

mat list demo

frmttable using `logpath'\spo_Table1_deced_char, statmat(demo) ///
title("Decedent descriptive characteristics, 3+ hospice days") ///
ctitle("","Unmatched Sample","","","Matched Sample","","" \ "", "Hospice users","Non-hospice users","Std. Diff.", ///
  "Hospice users" ,"Non-hospice users" ,"Std. Diff.") ///
sdec(2,2,3,2,2,3) replace

******************************************************************
******************************************************************
//Table 2 spouse characteristics
//Col 1-3: unmatched, unweighted
//Col 4-6: matched and weighted
******************************************************************
******************************************************************
local sdemovar1 s_female s_white_e s_hseduc_n1_n3 ///
s_medicaid_n1 s_srh_pf_n1 s_imprelig_vimp_n1 s_smoke_curr_n1 ///
s_vig_phy_act_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 ///
s_hrs_comorb_mod_n1 s_cancer_hrs_n1 ///
s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 s_stroke_hrs_n1 ///
s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1 ///
days_p1_core_dod_lt6m days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_gt18mo

local sdemovar2 s_cesd_tot_ge3_n1 ///
s_cesd_tot_ge3_p1 s_cesdbetter s_cesdsame s_cesdworse 

mat sdemo=J(35,6,.)

//first row, n of hospice and non-hospice
tab rhs3d, missing matcell(sd1)
mat sdemo[1,1]=sd1[2,1] //non-hospice n
mat sdemo[1,2]=sd1[1,1] //hospice users n

local j=1
foreach h in rhs3d non_hosp3 {
sum s_age if `h'==1, detail //age
mat sdemo[2,`j']=r(mean)
mat sdemo[3,`j']=r(sd)
local i=4
foreach v in `sdemovar1' {
	sum `v' if `h'==1, detail 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 4-27
	}

sum s_cesd_tot_n1 if `h'==1, detail //cesd score n1
mat sdemo[28,`j']=r(mean)
sum s_cesd_tot_p1 if `h'==1, detail //cesd score p1
mat sdemo[29,`j']=r(mean)
sum s_cesdchange if `h'==1, detail //cesd score change n1 to p1
mat sdemo[30,`j']=r(mean)

local i=31
foreach v in `sdemovar2' {
	sum `v' if `h'==1, detail 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 31-35
	}
local j=`j'+1
}

//standardized difference for unmatched sample
//creates new matrix with means then puts the standardized difference into
//the main demo matrix

mat std_diff_b=J(35,4,.)

local r=2
sum s_age if rhs3d==1 //get mean,variance treated before matching
mat std_diff_b[`r',1]=r(mean)
mat std_diff_b[`r',2]=r(sd)

sum s_age if rhs3d==0 //get mean,variance contl before matching
mat std_diff_b[`r',3]=r(mean)
mat std_diff_b[`r',4]=r(sd)

mat sdemo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',2]^2+std_diff_b[`r',4]^2)/2)

local r = 4
foreach v in `sdemovar1'  {
	sum `v' if rhs3d==1 //get mean,variance treated before matching
	mat std_diff_b[`r',1]=r(mean)

	sum `v' if rhs3d==0 //get mean,variance contl before matching
	mat std_diff_b[`r',3]=r(mean)

	mat sdemo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',1]*(1-std_diff_b[`r',1])+std_diff_b[`r',3]*(1-std_diff_b[`r',3]))/2)

	local r = `r'+1
}

local r = 28
foreach v in s_cesd_tot_n1  s_cesd_tot_p1  s_cesdchange {
        sum `v' if rhs3d==1 //get mean,variance treated before matching
    mat std_diff_b[`r',1]=r(mean)
    mat std_diff_b[`r',2]=r(sd)

    sum `v' if rhs3d==0 //get mean,variance contl before matching
    mat std_diff_b[`r',3]=r(mean)
    mat std_diff_b[`r',4]=r(sd)

    mat sdemo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',2]^2+std_diff_b[`r',4]^2)/2)

    local r = `r'+1
}

local r = 31
foreach v in `sdemovar2' {
	sum `v' if rhs3d==1 //get mean,variance treated before matching
	mat std_diff_b[`r',1]=r(mean)

	sum `v' if rhs3d==0 //get mean,variance contl before matching
	mat std_diff_b[`r',3]=r(mean)

	mat sdemo[`r',3]=(std_diff_b[`r',1]-std_diff_b[`r',3])/sqrt((std_diff_b[`r',1]*(1-std_diff_b[`r',1])+std_diff_b[`r',3]*(1-std_diff_b[`r',3]))/2)

	local r = `r'+1
}

//just look at it to check means against the pstest output to make sure they are right
mat rownames std_diff_b= "S age" "" "Female" "White" "HS Degree" ///
"Medicaid" "SRH poor/fair" "Religion very imp" "Smoker" "Vigorous phys act" ///
"Comorb - none" "Mild" "Moderate" "Cancer" "Lung disease" "Heart disease" "CHF" "Stroke" ///
"Memory disease" "Hypertension" "Diabetes" "Psych problems" "p1 ivw 0-6m" ///
"p1 ivw 6-12m" "p1 ivw 12-18m" "p1 > 18m" "CESD raw n1" "CESD raw p1" "CESD change" ///
"Clin depr n1" "Clin depr p1" "CESD improved" "CESD same" "CESD declined"

mat list std_diff_b


**********************************************************************
//Matched weighted columns 4-6
**********************************************************************

//first row, n of hospice and non-hospice
tab rhs3d if weight_3!=., missing matcell(sd1)
mat sdemo[1,4]=sd1[2,1] //hospice n
mat sdemo[1,5]=sd1[1,1] //non-hospice users n

local j=4
foreach h in rhs3d non_hosp3 {
sum s_age if `h'==1 [iweight=weight_3] //age
mat sdemo[2,`j']=r(mean)
mat sdemo[3,`j']=r(sd)
local i=4
foreach v in `sdemovar1' {
	sum `v' if `h'==1 [iweight=weight_3] 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 4-27
	}
sum s_cesd_tot_n1 if `h'==1 [iweight=weight_3] //cesd score n1
mat sdemo[28,`j']=r(mean)
sum s_cesd_tot_p1 if `h'==1 [iweight=weight_3] //cesd score p1
mat sdemo[29,`j']=r(mean)
sum s_cesdchange if `h'==1 [iweight=weight_3] //cesd score change n1 to p1
mat sdemo[30,`j']=r(mean)
local i=31
foreach v in `sdemovar2' {
	sum `v' if `h'==1 [iweight=weight_3] 
	mat sdemo[`i',`j']=r(mean)*100
	local i=`i'+1 //populates rows 31-35
	}
local j=`j'+1
}

//standardized difference for matched sample
//creates new matrix with means then puts the standardized difference into
//the main demo matrix

mat std_diff_a=J(35,4,.)

local r=2
sum s_age if rhs3d==1 [iweight=weight_3] //get mean,variance treated after matching
mat std_diff_a[`r',1]=r(mean)
mat std_diff_a[`r',2]=r(sd)

sum s_age if rhs3d==0 [iweight=weight_3] //get mean,variance contl after matching
mat std_diff_a[`r',3]=r(mean)
mat std_diff_a[`r',4]=r(sd)

mat sdemo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',2]^2+std_diff_a[`r',4]^2)/2)

local r = 4
foreach v in `sdemovar1' {
	sum `v' if rhs3d==1 [iweight=weight_3] //get mean,variance treated after matching
	mat std_diff_a[`r',1]=r(mean)

	sum `v' if rhs3d==0 [iweight=weight_3] //get mean,variance contl after matching
	mat std_diff_a[`r',3]=r(mean)

	mat sdemo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',1]*(1-std_diff_a[`r',1])+std_diff_a[`r',3]*(1-std_diff_a[`r',3]))/2)

	local r = `r'+1
}

local r = 28
foreach v in s_cesd_tot_n1 s_cesd_tot_p1 s_cesdchange  {
        sum `v' if rhs3d==1 [iweight=weight_3] //get mean,variance treated after matching
        mat std_diff_a[`r',1]=r(mean)
        mat std_diff_a[`r',2]=r(sd)

        sum `v' if rhs3d==0 [iweight=weight_3] //get mean,variance contl after matching
        mat std_diff_a[`r',3]=r(mean)
        mat std_diff_a[`r',4]=r(sd)

        mat sdemo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',2]^2+std_diff_a[`r',4]^2)/2)
   	local r = `r'+1
}

local r = 31
foreach v in `sdemovar2' {
	sum `v' if rhs3d==1 [iweight=weight_3] //get mean,variance treated after matching
	mat std_diff_a[`r',1]=r(mean)

	sum `v' if rhs3d==0 [iweight=weight_3] //get mean,variance contl after matching
	mat std_diff_a[`r',3]=r(mean)

	mat sdemo[`r',6]=(std_diff_a[`r',1]-std_diff_a[`r',3])/sqrt((std_diff_a[`r',1]*(1-std_diff_a[`r',1])+std_diff_a[`r',3]*(1-std_diff_a[`r',3]))/2)

	local r = `r'+1
}

//just look at it to check means against the pstest output to make sure they are right
mat rownames std_diff_a= "S age" "" "Female" "White" "HS Degree" ///
"Medicaid" "SRH poor/fair" "Religion very imp" "Smoker" "Vigorous phys act" ///
"Comorb - none" "Mild" "Moderate" "Cancer" "Lung disease" "Heart disease" "CHF" "Stroke" ///
"Memory disease" "Hypertension" "Diabetes" "Psych problems" "p1 ivw 0-6m" ///
"p1 ivw 6-12m" "p1 ivw 12-18m" "p1 > 18m" "CESD raw n1" "CESD raw p1" "CESD change" ///
"Clin depr n1" "Clin depr p1" "CESD improved" "CESD same" "CESD declined"

mat list std_diff_a

mat rownames sdemo ="Sample size n" "Age at r's death, mean" "SD" "Female %" "Non-Hispanic White %" ///
"Education, High school grad %" "Medicaid %" "SRH poor or fair %" ///
"Religion very important %" "Currently smoker %" "Vigorous physical activity %" ///
"Comorbidity index - none" "Mild (1-3)" "Moderate (4-6)" ///
"Cancer %" "Lung disease %" "Heart disease %" "CHF %" "Stroke %" "Memory disease %" ///
"Hypertension %" "Diabetes %" "Psychological problems %" ///
"P1 interview 0-6m from death" "P1 interview 6-12m" "P1 interview 12-18m" "P1 interview 18m+" ///
"CES-D raw score pre-death, mean" "CES-D raw score post-death, mean" "Change in raw CES-D" ///
"Clinical depression pre-death %" "Clinical depression post-death %" ///
 "CES-D Improved post death %" "Same CES-D post death %" "CES-D Declined post death %"

mat list sdemo

frmttable using `logpath'\spo_Table2_spouse_char, statmat(sdemo) ///
title("Spouse descriptive characteristics,  3+ hospice days") ///
ctitle("","Unmatched Sample","","","Matched Sample","","" \ "", "Hospice users","Non-hospice users","Std. Diff.", ///
  "Hospice users" ,"Non-hospice users" ,"Std. Diff.") ///
  sdec(2,2,4,2,2,4) replace

***********************************************************************
//Table of overall sample characteristics
***********************************************************************
local varlist1 r_female r_white_e r_hseduc_n1_n3 

local varlist2 s_female s_white_e s_hseduc_n1_n3 s_adl_independent_core_n1

mat quicktab=J(13,5,.)

sum r_age //mean R age
mat quicktab[1,1]=r(mean)
local sample = r(N)

local j=2
foreach v in `varlist1'{
sum `v'
mat quicktab[`j',1]=r(mean)*100
local j=`j'+1 //rows 2-4
}

sum s_age //mean S age
mat quicktab[5,1]=r(mean)

local j=6
foreach v in `varlist2'{
sum `v'
mat quicktab[`j',1]=r(mean)*100
local j=`j'+1 //rows 6-9
}

local i=10
sum hs_los_12m if rhs3d==1, detail
mat quicktab[`i',1]=r(mean)
mat quicktab[`i',2]=r(sd)
mat quicktab[`i',3]=r(p50)
mat quicktab[`i',4]=r(min)
mat quicktab[`i',5]=r(max)

gen mo_p1_core_dead =days_p1_core_dead/30.5
gen mo_s_n1_core_dead = s_days_n1_core_dead/30.5

sum mo_p1_core_dead
mat quicktab[`i'+1,1]=r(mean)

sum mo_s_n1_core_dead 
mat quicktab[`i'+2,1]=r(mean)

gen mo_s_p1_n1 = (days_p1_core_dead+ s_days_n1_core_dead)/30.5
sum mo_s_p1_n1 , detail
mat quicktab[`i'+3,1]=r(mean)
mat quicktab[`i'+3,2]=r(sd)
mat quicktab[`i'+3,3]=r(p50)
mat quicktab[`i'+3,4]=r(min)
mat quicktab[`i'+3,5]=r(max)

mat list quicktab

mat rownames quicktab="R Age" "R Female" "R White" "R HS Degree" ///
"S Age" "S Female" "S White" "S HS Degree" "S ADL independent n1" ///
"Days hospice use" "S n1 ivw months before death" ///
"S p1 ivw months after death" ///
"S n1 to p1 interview, months"

frmttable using `logpath'\spo_overall_sample_char, statmat(quicktab) ///
title("Overall sample descriptive characteristics, n=`sample'") ///
ctitle("","Mean or Percent" "SD" "Median" "Min" "Max") ///
sdec(3,2,0,0,0) replace


***********************************************************************
log close


H="Now do for spouses that are caregivers"
/*
Runs the models for the helper subsample only

Outcome variables are: CESD improvement indicator, ie any improvement 
in CESD score from n1 to p1
And CESD clinical improvement 3+ to <3 n1 to p1

This Stata code runs following analyses:
1. Determines propensity scores
2. Runs summary tables for r and s characteristics using px weighting
3. Px matched logit regression on reduced spouse depressive symptoms 

Runs 3 versions
1. Hospice users: 1+ days / non users: 0 days
2. Hospice users: 3+ days / non users: 0-2 days
3. Hospice users: 7+ days / non users: 0-6 days*/

capture log close

clear all
set mem 500m
set more off
set scheme s1color

//Amy's PC
local logpath E:\data\spouse\logs\july2014\helper
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs
//local datapath C:\data\Spouse

log using "`logpath'\6-HRS_Spouse_analysis_helper_july2014.txt", text replace

cd `datapath'

use spouse_data_sample_v2.dta if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) 
  
*****************************************************************************
*****************************************************************************
//Set up variables and dataset
*****************************************************************************
*****************************************************************************
//See tab Sum stats, unmatched for variable list used in matching

tab r_hs_12m, missing
rename r_hs_12m rhs12m
la var rhs12m "1+ day hospice use"

gen rhs3d = .
replace rhs3d=1 if hs_los_12m >= 3 & hs_los_12m != .
replace rhs3d=0 if hs_los_12m <3 & hs_los_12m != .
la var rhs3d "3+ days hospice use"
tab hs_los_12m rhs3d , missing
tab  rhs3d , missing

gen rhs7d = .
replace rhs7d=1 if hs_los_12m >= 7 & hs_los_12m != .
replace rhs7d=0 if hs_los_12m <7 & hs_los_12m != .
la var rhs7d "7+ days hospice use"
tab hs_los_12m rhs7d , missing
tab  rhs7d , missing

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores - 1 day definition
*****************************************************************************
*****************************************************************************

//generate pscore variable hs_pscore
pscore rhs12m $matchvars, pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(rhs12m) pscore(hs_pscore)
graph save `logpath'/psgraph_1 ,replace

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

//try 0.02* sd
psmatch2  rhs12m,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.01802932) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(rhs12m) pscore(hs_pscore)
graph save `logpath'/psgraph_2 ,replace

histogram hs_pscore if _support==1, by(rhs12m) 

//look at balance of matched vs unmatched samples
pstest $matchvars ,treated(rhs12m) both hist
graph save `logpath'/psmatch_1 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age{
gen `v'_treated = `v' if rhs12m==1 & _support==1
gen `v'_comparison = `v' if rhs12m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v', replace
}

mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if rhs12m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if rhs12m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if rhs12m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if rhs12m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1"

mat list vr

//look at standardized differences to assess balance
//continuous variables
mat std_diff=J(40,5,.)
local i=1
foreach v in cc_all_count_12m_2 s_age {
sum `v' if rhs12m==1 & _support==1 //get mean,variance treated after matching
mat std_diff[`i',1]=r(mean)
mat std_diff[`i',2]=r(sd)

sum `v' if rhs12m==0 [iweight=_weight] //get mean,variance contl after matching
mat std_diff[`i',3]=r(mean)
mat std_diff[`i',4]=r(sd)

mat std_diff[`i',5]=(std_diff[`i',1]-std_diff[`i',3])/sqrt((std_diff[`i',2]^2+std_diff[`i',4]^2)/2) 
	
local i = `i'+1	
}
//indicator variables
local indvars cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y r_advdir_miss r_discuss_x r_srh_pf_n1 ///
 s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

foreach v in `indvars' {
sum `v' if rhs12m==1 & _support==1 //get mean treated after matching
mat std_diff[`i',1]=r(mean)

sum `v' if rhs12m==0 [iweight=_weight] //get mean contl after matching
mat std_diff[`i',3]=r(mean)

mat std_diff[`i',5]=(std_diff[`i',1]-std_diff[`i',3])/sqrt((std_diff[`i',1]*(1-std_diff[`i',1])+std_diff[`i',3]*(1-std_diff[`i',3]))/2)
	
local i = `i'+1	
}

mat rownames std_diff="Count of comorbidities" "S age" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
 "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list std_diff
//standardized difference should be less than 10-25%

//using this matching, 10 obs from the treatment group are dropped b/c they are off support
//5 are dropped b/c not matched (weight=.)
//_support ==1 if matched
tab _support, missing
tab _support if rhs12m==1, missing
tab _support if rhs12m==0, missing
tab _weight if rhs12m==1, missing
sum _weight if rhs12m==0

//rename ps variables and save dataset so can call them up later
rename _support support_1
rename _weight weight_1

//now run using weighting , outcome = improved CESD score p1
//need to include the variables used in the propensity score

local yearvars ib2000.r_death_year 
 
logit s_cesdbetter rhs12m `yearvars' $matchvars [iw=weight_1] , or 

outreg using `logpath'\spouse_analysis_july2014, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) replace


tab s_cesdbetter s_cesd_ge3better, missing

//Run logit with outcome=depressed n1, not depressed p1
//Need alternative variable list excluding advanced directive missing status b/c
//it predicts the outcome (failure)
local new_varlist cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

logit s_cesd_ge3better rhs12m `yearvars' `new_varlist' [iw=weight_1] , or 

outreg using `logpath'\spouse_analysis_july2014, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

*****************************************************************************

*****************************************************************************

//End of 1 day definition , start 3 day definition section

*****************************************************************************

*****************************************************************************
	
	
*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores - 3 day definition
*****************************************************************************
*****************************************************************************

//generate pscore variable hs_pscore
pscore rhs3d $matchvars, pscore(hs_pscore3) blockid(hs_block3) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(rhs3d) pscore(hs_pscore3)
graph save `logpath'/psgraph_1_3 ,replace

//implement radius matching
gen logitpscore3=ln(hs_pscore3/(1-hs_pscore3))
sum logitpscore3

sca cal_ps3=r(sd)*0.02
sca list cal_ps3

//try 0.02* sd
psmatch2  rhs3d,outcome(s_cesdbetter) pscore(hs_pscore3) radius caliper(.01751388) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(rhs3d) pscore(hs_pscore3)
graph save `logpath'/psgraph_2_3 ,replace

histogram hs_pscore3 if _support==1, by(rhs3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars ,treated(rhs3d) both hist
graph save `logpath'/psmatch_1_3 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age{
gen `v'_treated3 = `v' if rhs3d==1 & _support==1
gen `v'_comparison3 = `v' if rhs3d==0 & _support==1
qqplot `v'_treated3 `v'_comparison3
graph save `logpath'/qqplot_`v'_3, replace
}

mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if rhs3d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if rhs3d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if rhs3d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if rhs3d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1"

mat list vr

//look at standardized differences to assess balance
//continuous variables
mat std_diff=J(40,5,.)
local i=1
foreach v in cc_all_count_12m_2 s_age {
sum `v' if rhs3d==1 & _support==1 //get mean,variance treated after matching
mat std_diff[`i',1]=r(mean)
mat std_diff[`i',2]=r(sd)

sum `v' if rhs3d==0 [iweight=_weight] //get mean,variance contl after matching
mat std_diff[`i',3]=r(mean)
mat std_diff[`i',4]=r(sd)

mat std_diff[`i',5]=(std_diff[`i',1]-std_diff[`i',3])/sqrt((std_diff[`i',2]^2+std_diff[`i',4]^2)/2) 
	
local i = `i'+1	
}
//indicator variables
local indvars cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y r_advdir_miss r_discuss_x r_srh_pf_n1 ///
 s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

foreach v in `indvars' {
sum `v' if rhs3d==1 & _support==1 //get mean treated after matching
mat std_diff[`i',1]=r(mean)

sum `v' if rhs3d==0 [iweight=_weight] //get mean contl after matching
mat std_diff[`i',3]=r(mean)

mat std_diff[`i',5]=(std_diff[`i',1]-std_diff[`i',3])/sqrt((std_diff[`i',1]*(1-std_diff[`i',1])+std_diff[`i',3]*(1-std_diff[`i',3]))/2)
	
local i = `i'+1	
}

mat rownames std_diff="Count of comorbidities" "S age" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
 "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list std_diff
//standardized difference should be less than 10-25%


//using this matching, 6 obs from the treatment group are dropped b/c they are off support
//5 are dropped b/c not matched (weight=.)
//_support ==1 if matched
tab _support, missing
tab _support if rhs3d==1, missing
tab _support if rhs3d==0, missing
tab _weight if rhs3d==1, missing
sum _weight if rhs3d==0

//rename ps variables and save dataset so can call them up later
rename _support support_3
rename _weight weight_3

//now run using weighting , outcome = improved CESD score p1
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in
 
logit s_cesdbetter rhs3d `yearvars' $matchvars [iw=weight_3] , or 

outreg using `logpath'\spouse_analysis_july2014, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1" \ ///
	"3+ days of hospice use = treatment, 0-2 days = control") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable


tab s_cesdbetter s_cesd_ge3better, missing

//Run logit with outcome=depressed n1, not depressed p1
logit s_cesd_ge3better rhs3d `yearvars' `new_varlist' [iw=weight_3] , or 

outreg using `logpath'\spouse_analysis_july2014, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" \ ///
	"3+ days of hospice use = treatment, 0-2 days = control")  ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

*****************************************************************************

*****************************************************************************

//End of 3 day definition , start 7 day definition section

*****************************************************************************

*****************************************************************************
	
	
*****************************************************************************
*****************************************************************************
//Using Stata's pscore to generate px scores - 7 day definition
*****************************************************************************
*****************************************************************************

//generate pscore variable hs_pscore
pscore rhs7d $matchvars, pscore(hs_pscore7) blockid(hs_block7) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(rhs7d) pscore(hs_pscore7)
graph save `logpath'/psgraph_1_7 ,replace

//implement radius matching
gen logitpscore7=ln(hs_pscore7/(1-hs_pscore7))
sum logitpscore7

sca cal_ps7=r(sd)*0.02
sca list cal_ps7

//try 0.02* sd
psmatch2  rhs7d,outcome(s_cesdbetter) pscore(hs_pscore7) radius caliper(.01824431) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(rhs7d) pscore(hs_pscore7)
graph save `logpath'/psgraph_2_7 ,replace

histogram hs_pscore7 if _support==1, by(rhs7d) 

//look at balance of matched vs unmatched samples
pstest $matchvars ,treated(rhs7d) both hist
graph save `logpath'/psmatch_1_7 ,replace

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age{
gen `v'_treated7 = `v' if rhs7d==1 & _support==1
gen `v'_comparison7 = `v' if rhs7d==0 & _support==1
qqplot `v'_treated7 `v'_comparison7
graph save `logpath'/qqplot_`v'_7, replace
}

mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if rhs7d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if rhs7d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if rhs7d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if rhs7d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1"

mat list vr

//look at standardized differences to assess balance
//continuous variables
mat std_diff=J(40,5,.)
local i=1
foreach v in cc_all_count_12m_2 s_age {
sum `v' if rhs7d==1 & _support==1 //get mean,variance treated after matching
mat std_diff[`i',1]=r(mean)
mat std_diff[`i',2]=r(sd)

sum `v' if rhs7d==0 [iweight=_weight] //get mean,variance contl after matching
mat std_diff[`i',3]=r(mean)
mat std_diff[`i',4]=r(sd)

mat std_diff[`i',5]=(std_diff[`i',1]-std_diff[`i',3])/sqrt((std_diff[`i',2]^2+std_diff[`i',4]^2)/2) 
	
local i = `i'+1	
}
//indicator variables
local indvars cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y r_advdir_miss r_discuss_x r_srh_pf_n1 ///
 s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

foreach v in `indvars' {
sum `v' if rhs7d==1 & _support==1 //get mean treated after matching
mat std_diff[`i',1]=r(mean)

sum `v' if rhs7d==0 [iweight=_weight] //get mean contl after matching
mat std_diff[`i',3]=r(mean)

mat std_diff[`i',5]=(std_diff[`i',1]-std_diff[`i',3])/sqrt((std_diff[`i',1]*(1-std_diff[`i',1])+std_diff[`i',3]*(1-std_diff[`i',3]))/2)
	
local i = `i'+1	
}

mat rownames std_diff="Count of comorbidities" "S age" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
 "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list std_diff
//standardized difference should be less than 10-25%


//using this matching, 14 obs from the treatment group are dropped b/c they are off support
//18 are dropped b/c not matched (weight=.)
//_support ==1 if matched
tab _support, missing
tab _support if rhs7d==1, missing
tab _support if rhs7d==0, missing
tab _weight if rhs7d==1, missing
sum _weight if rhs7d==0

//rename ps variables and save dataset so can call them up later
rename _support support_7
rename _weight weight_7

//now run using weighting , outcome = improved CESD score p1
//need to include the variables used in the propensity score
 
logit s_cesdbetter rhs7d `yearvars' $matchvars [iw=weight_7] , or 

outreg using `logpath'\spouse_analysis_july2014, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1" \ ///
	"7+ days of hospice use = treatment, 0-6 days = control") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable


tab s_cesdbetter s_cesd_ge3better, missing

//Run logit with outcome=depressed n1, not depressed p1
logit s_cesd_ge3better rhs7d `yearvars' `new_varlist' [iw=weight_7] , or 

outreg using `logpath'\spouse_analysis_july2014, ///
	stats(e_b e_ci p) nosubstat ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" \ ///
	"7+ days of hospice use = treatment, 0-6 days = control")  ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable
****************************************************************
	
****************************************************************
//run each dr regression in a row to get a single table with all of the results
****************************************************************

****************************************************************

//1+day definition, any cesd improvement
qui logit s_cesdbetter rhs12m `yearvars' $matchvars [iw=weight_1] , or 
outreg , store(tableall) ///
	stats(e_b e_ci p) nosubstat keep(rhs12m) ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///	
	"Outcome = S Depressive symptom improvement n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	rtitles("Any improvement 1+day" ) ///
	note("Base categories are year=2000 and spouse has" \ ///
	"no comorbidities per HRS survey questions.") ///
	varlabels starlevels(10 5 1)  summstat(N)

//1+day definition, clinical cesd improvement
qui logit s_cesd_ge3better rhs12m `yearvars' `new_varlist' [iw=weight_1] , or 
outreg , append(tableall) ///
	stats(e_b e_ci p) nosubstat keep(rhs12m) ///
	rtitles("Clinical improvement 1+day") ///
	varlabels starlevels(10 5 1)  summstat(N) 
	
//3+day definition, any cesd improvement
qui logit s_cesdbetter rhs3d `yearvars' $matchvars [iw=weight_3] , or 
outreg , append(tableall) ///
	stats(e_b e_ci p) nosubstat keep(rhs3d) ///
	rtitles("Any improvement 3+days" ) ///
	varlabels starlevels(10 5 1)  summstat(N) 
	
//3+day definition, clinical cesd improvement
qui logit s_cesd_ge3better rhs3d `yearvars' `new_varlist' [iw=weight_3] , or 
outreg , append(tableall) ///
	stats(e_b e_ci p) nosubstat keep(rhs3d) ///
	rtitles("Clinical improvement 3+days" ) ///
	varlabels starlevels(10 5 1)  summstat(N) 

//7+day definition, any cesd improvement
qui logit s_cesdbetter rhs7d `yearvars' $matchvars [iw=weight_7] , or 
outreg , append(tableall) ///
	stats(e_b e_ci p) nosubstat keep(rhs7d) ///
	rtitles("Any improvement 7+days" ) ///
	varlabels starlevels(10 5 1)  summstat(N) 
	
//7+day definition, clinical cesd improvement
qui logit s_cesd_ge3better rhs7d `yearvars' `new_varlist' [iw=weight_7] , or 
outreg using `logpath'\spouse_analysis_july2014, append(tableall) ///
	stats(e_b e_ci p) nosubstat keep(rhs7d) ///
	rtitles("Clinical improvement 7+days" ) ///
	varlabels starlevels(10 5 1)  summstat(N) addtable	

****************************************************************
log close



H="Now for interviews 12m after death, all and caregivers"
capture log close

clear all
set mem 500m
set more off

//Amy's PC
local logpath E:\data\spouse\logs\july2014
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs\july2014
//local datapath C:\data\Spouse

log using "`logpath'\6c-HRS_Spouse_analysis_ivw_after_1yr.txt", text replace

cd `datapath'

use spouse_data_sample_v2.dta if (s_1yr_p1_core_dead==0)

gen rhs3d = .
replace rhs3d=1 if hs_los_12m >= 3 & hs_los_12m != .
replace rhs3d=0 if hs_los_12m <3 & hs_los_12m != .
la var rhs3d "3+ days hospice use"
tab hs_los_12m rhs3d , missing
tab  rhs3d , missing

tab rhs3d s_1yr_p1_core_dead, missing
tab rhs3d r_advdir_miss

tab days_p1_core_dod_cat , missing

//Have to use an alternate variable list because missing category for
//advanced directive is all 0 for the treated group for this subsample
global matchvars2 cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore rhs3d $matchvars2 , pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(rhs3d) pscore(hs_pscore)

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

psmatch2  rhs3d,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.02194096) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(rhs3d) pscore(hs_pscore)

histogram hs_pscore if _support==1, by(rhs3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars2,treated(rhs3d) both hist

pstest $matchvars2,treated(rhs3d) both graph

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated = `v' if rhs3d==1 & _support==1
gen `v'_comparison = `v' if rhs3d==0 & _support==1
qqplot `v'_treated `v'_comparison
}


mat vr=J(39,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars2  {
sum `v' if rhs3d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if rhs3d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if rhs3d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if rhs3d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}


mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y"  "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list vr

//6 from treated group are off common support, 4 control are not matched (weight==.)
//_support ==1 if matched
tab _support, missing
tab _support if rhs3d==1, missing
tab _support if rhs3d==0, missing
tab _weight if rhs3d==1, missing
sum _weight if rhs3d==0

rename _weight weight_after1yr

***********************************************************************
//now run logit model using weighting 
***********************************************************************
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in

tab r_death_year, missing
//one obs in 2010 so switch to 2009 for year fixed effects purposes

replace r_death_year=2009 if r_death_year==2010 
local yearvars ib2000.r_death_year 

logit s_cesdbetter i.rhs3d `yearvars' $matchvars2 [iw=weight_after1yr] , or 

outreg using `logpath'\ivw_time_groups_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat  ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview after 1 year of R's death" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) replace

//Run logit with outcome=depressed n1, not depressed p1
	

logit s_cesd_ge3better i.rhs3d `yearvars' $matchvars2 [iw=weight_after1yr] , or 

outreg using `logpath'\ivw_time_groups_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat  ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview after 1 year of R's death" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" ) ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable
	
*****************************************************************************
//check xtabs of outcomes vs control variables to look for small categories
drop if (weight_after1yr==.)

//this has continuous variables commented out
global matchvars2 /*cc_all_count_12m_2*/ cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
/*s_age*/ s_female s_white_e s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

mat all_n=J( 38,4,.)
tab s_cesdbetter , missing matcell(r1)
mat all_n[1,1]=r1[1,1] //those without improvement
mat all_n[1,2]=r1[2,1] //those with improvement

tab s_cesd_ge3better , missing matcell(r1)
mat all_n[1,3]=r1[1,1] //those without improvement
mat all_n[1,4]=r1[2,1] //those with improvement

local r = 2
foreach v in $matchvars2{
tab `v' s_cesdbetter , missing matcell(v1)
mat all_n[`r',1]=v1[2,1] //those without improvement
mat all_n[`r',2]=v1[2,2] //those with improvement
tab `v' s_cesd_ge3better, missing matcell(v2)
mat all_n[`r',3]=v2[2,1] //those without improvement
mat all_n[`r',4]=v2[2,2] //those with improvement

local r = `r'+1
}
mat rownames all_n="N" "Alz,Dement" "AMI" "CHF" "Diabetes" "Kidney dis" "COPD" ///
"Stroke" "Cancer" "Atrial fibr" "Hip fracture" "Depression" "Osteoporosis" ///
"Arthritis" "Networth Lowest Q" "Networth Mid-low" "Networth Mid-high" ///
"NH Resident" "ADL Stable, part" "ADL Stable, severe" "ADL Ind to partial" ///
"ADL Mod to Severe" "ADL Ind to Severe" "ADL missing" "Medicaid" "Champus" ///
"Medigap" "Adv Directive" "Discuss EOL care" "Fair,Poor SRH" ///
"S Female" "S White" "S HS deg" "S Relig very imp" "S Fair,Poor SRH" ///
"S Mild comorb" "S Mod comorbidities" "S psych condition"

frmttable using `logpath'\check_covariate_n, statmat(all_n) ///
title("Frequencies - Ivw > 12m after R's death") ///
ctitle("","Any CESD Improv", "","Clinical Improvement","" \ ///
"" , "No", "Yes","No", "Yes") ///
sdec(0) replace

//table of n's for the adl change categories

local adl r_adl_stable_ind_n1n2 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 ///
r_adl_improved_n1n2 r_adl_change_n1n2_miss

mat adl_n=J(8,2,.)
local r=1
foreach v in `adl'{
tab `v' if s_cesdbetter==1, matcell(v1)
mat adl_n[`r',1]=v1[2,1]

tab `v' if s_cesd_ge3better==1, matcell(v2)
mat adl_n[`r',2]=v2[2,1]

local r = `r'+1
}
mat rownames adl_n="Stable Independ" "Stable Partial" "Stable Severe" ///
"Declined Ind to Partial" "Declined Partial to Severe" "Decl Ind to Severe" ///
"ADL improved" "Change missing"
mat colnames adl_n="Any improvement" "Clinical improvement"

mat list adl_n

frmttable using `logpath'\check_covariate_n, statmat(adl_n) ///
title("ADL frequencies - Ivw > 12m after R's death") ///
sdec(0) addtable

clear all
*****************************************************************************

//End of overall sample  , start caregivers only section

*****************************************************************************

*****************************************************************************

***********************************************************************
use spouse_data_sample_v2.dta if (s_1yr_p1_core_dead==0 & (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1))

gen rhs3d = .
replace rhs3d=1 if hs_los_12m >= 3 & hs_los_12m != .
replace rhs3d=0 if hs_los_12m <3 & hs_los_12m != .
la var rhs3d "3+ days hospice use"
tab hs_los_12m rhs3d , missing
tab  rhs3d , missing

global matchvars2 cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore rhs3d $matchvars2 , pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(rhs3d) pscore(hs_pscore)

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

psmatch2  rhs3d,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.02326545) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(rhs3d) pscore(hs_pscore)

histogram hs_pscore if _support==1, by(rhs3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars2,treated(rhs3d) both hist

pstest $matchvars2,treated(rhs3d) both graph

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated = `v' if rhs3d==1 & _support==1
gen `v'_comparison = `v' if rhs3d==0 & _support==1
qqplot `v'_treated `v'_comparison
}


mat vr=J(39,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars2  {
sum `v' if rhs3d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if rhs3d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if rhs3d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if rhs3d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}


mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list vr

//12 from treated group are off common support, 8 control are not matched (weight==.)
//_support ==1 if matched
tab _support, missing
tab _support if rhs3d==1, missing
tab _support if rhs3d==0, missing
tab _weight if rhs3d==1, missing
sum _weight if rhs3d==0

rename _weight weight_after1yr

***********************************************************************
//now run logit model using weighting 
***********************************************************************
//need to include the variables used in the propensity score
//we probably can't keep both spouse and r gender variables in

tab r_death_year, missing
//one obs in 2010 so switch to 2009 for year fixed effects purposes

replace r_death_year=2009 if r_death_year==2010 
local yearvars ib2000.r_death_year 

logit s_cesdbetter i.rhs3d `yearvars' $matchvars2 [iw=weight_after1yr] , or 

outreg using `logpath'\ivw_time_groups_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat  ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview after 1 year of R's death" \ ///	
	"Limited to Primary Caregiver spouses" \ ///
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

//Run logit with outcome=depressed n1, not depressed p1
//need alternate match variables since perfect prediction with r_adl_stable_partial_n1n2 variable
global matchvars3 cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 /*r_adl_stable_partial_n1n2*/ r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 	

logit s_cesd_ge3better i.rhs3d `yearvars' $matchvars3 [iw=weight_after1yr] , or 

outreg using `logpath'\ivw_time_groups_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat  ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview after 1 year of R's death" \ ///	
	"Limited to Primary Caregiver spouses" \ ///
	"Outcome = CESD Score 3+ n1 to less than 3 p1" ) ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable
	
	


***************************************
//check xtabs of outcomes vs control variables to look for small categories
drop if (weight_after1yr==.)

//this has continuous variables commented out
global matchvars2 /*cc_all_count_12m_2*/ cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
/*s_age*/ s_female s_white_e s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 

mat all_n=J( 38,4,.)
tab s_cesdbetter , missing matcell(r1)
mat all_n[1,1]=r1[1,1] //those without improvement
mat all_n[1,2]=r1[2,1] //those with improvement

tab s_cesd_ge3better , missing matcell(r1)
mat all_n[1,3]=r1[1,1] //those without improvement
mat all_n[1,4]=r1[2,1] //those with improvement

local r = 2
foreach v in $matchvars2{
tab `v' s_cesdbetter , missing matcell(v1)
mat all_n[`r',1]=v1[2,1] //those without improvement
mat all_n[`r',2]=v1[2,2] //those with improvement
tab `v' s_cesd_ge3better, missing matcell(v2)
mat all_n[`r',3]=v2[2,1] //those without improvement
mat all_n[`r',4]=v2[2,2] //those with improvement

local r = `r'+1
}
mat rownames all_n="N" "Alz,Dement" "AMI" "CHF" "Diabetes" "Kidney dis" "COPD" ///
"Stroke" "Cancer" "Atrial fibr" "Hip fracture" "Depression" "Osteoporosis" ///
"Arthritis" "Networth Lowest Q" "Networth Mid-low" "Networth Mid-high" ///
"NH Resident" "ADL Stable, part" "ADL Stable, severe" "ADL Ind to partial" ///
"ADL Mod to Severe" "ADL Ind to Severe" "ADL missing" "Medicaid" "Champus" ///
"Medigap" "Adv Directive" "Discuss EOL care" "Fair,Poor SRH" ///
"S Female" "S White" "S HS deg" "S Relig very imp" "S Fair,Poor SRH" ///
"S Mild comorb" "S Mod comorbidities" "S psych condition"

frmttable using `logpath'\check_covariate_n, statmat(all_n) ///
title("Frequencies - limited to Primary Caregivers") ///
ctitle("","Any CESD Improv", "","Clinical Improvement","" \ ///
"" , "No", "Yes","No", "Yes") ///
sdec(0) addtable

//table of n's for the adl change categories

local adl r_adl_stable_ind_n1n2 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 ///
r_adl_improved_n1n2 r_adl_change_n1n2_miss

mat adl_n=J(8,2,.)
local r=1
foreach v in `adl'{
tab `v' if s_cesdbetter==1, matcell(v1)
mat adl_n[`r',1]=v1[2,1]

tab `v' if s_cesd_ge3better==1, matcell(v2)
mat adl_n[`r',2]=v2[2,1]

local r = `r'+1
}
mat rownames adl_n="Stable Independ" "Stable Partial" "Stable Severe" ///
"Declined Ind to Partial" "Declined Partial to Severe" "Decl Ind to Severe" ///
"ADL improved" "Change missing"
mat colnames adl_n="Any improvement" "Clinical improvement"

mat list adl_n

frmttable using `logpath'\check_covariate_n, statmat(adl_n) ///
title("ADL frequencies - limited to Primary Caregivers") ///
sdec(0) addtable
	
*********************************************
log close


H="Ivws between 3-12m after death, all and caregivers"
capture log close

clear all
set mem 500m
set more off

//Amy's PC
local logpath E:\data\spouse\logs\july2014
local datapath E:\data\spouse\final_data

//RG PC
//local logpath C:\data\Spouse\logs\july2014
//local datapath C:\data\Spouse

log using "`logpath'\6d-HRS_Spouse_analysis_ivw_before_1yr.txt", text replace

cd `datapath'

use spouse_data_sample_v2.dta if (s_1yr_p1_core_dead==1)

sum days_p1_core_dead , detail //should be between 90 and 365 

gen rhs3d = .
replace rhs3d=1 if hs_los_12m >= 3 & hs_los_12m != .
replace rhs3d=0 if hs_los_12m <3 & hs_los_12m != .
la var rhs3d "3+ days hospice use"
tab hs_los_12m rhs3d , missing
tab  rhs3d , missing

tab rhs3d s_1yr_p1_core_dead, missing
tab rhs3d r_advdir_miss

tab days_p1_core_dod_cat , missing

***************************************************
//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore rhs3d $matchvars , pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(rhs3d) pscore(hs_pscore)

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

psmatch2  rhs3d,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.01855018) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(rhs3d) pscore(hs_pscore)

histogram hs_pscore if _support==1, by(rhs3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars,treated(rhs3d) both hist

pstest $matchvars,treated(rhs3d) both graph

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated = `v' if rhs3d==1 & _support==1
gen `v'_comparison = `v' if rhs3d==0 & _support==1
qqplot `v'_treated `v'_comparison
}


mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars {
sum `v' if rhs3d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if rhs3d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if rhs3d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if rhs3d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}


mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Advance directive missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list vr

//7 from treated group are off common support, all control are matched (weight==.)
//_support ==1 if matched
tab _support, missing
tab _support if rhs3d==1, missing
tab _support if rhs3d==0, missing
tab _weight if rhs3d==1, missing
sum _weight if rhs3d==0

rename _weight weight_before1yr

***********************************************************************
//now run logit model using weighting 
***********************************************************************

tab r_death_year, missing
//no observations in 2000 are in this sample so start with 2001 as base year

local yearvars ib2001.r_death_year 

logit s_cesdbetter i.rhs3d `yearvars' $matchvars [iw=weight_before1yr] , or 

outreg using `logpath'\ivw_before_1yr_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat  ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview within 3-12m of R's death" \ ///	
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) replace

//Run logit with outcome=depressed n1, not depressed p1
logit s_cesd_ge3better i.rhs3d `yearvars' $matchvars [iw=weight_before1yr] , or 

outreg using `logpath'\ivw_before_1yr_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat  ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview within 3-12m of R's death" \ ///	
	"Outcome = CESD Score 3+ n1 to less than 3 p1" ) ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

*****************************************************************************

*****************************************************************************

//End of overall sample  , start caregivers only section

*****************************************************************************

*****************************************************************************

***********************************************************************
clear all
use spouse_data_sample_v2.dta if (s_1yr_p1_core_dead==1 & (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1))

gen rhs3d = .
replace rhs3d=1 if hs_los_12m >= 3 & hs_los_12m != .
replace rhs3d=0 if hs_los_12m <3 & hs_los_12m != .
la var rhs3d "3+ days hospice use"
tab hs_los_12m rhs3d , missing
tab  rhs3d , missing

tab r_advdir_miss rhs3d, missing

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore rhs3d $matchvars , pscore(hs_pscore) blockid(hs_block) logit detail

//graph without dropping any observations in the matching process
psgraph, treated(rhs3d) pscore(hs_pscore)

//implement radius matching
gen logitpscore=ln(hs_pscore/(1-hs_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

psmatch2  rhs3d,outcome(s_cesdbetter) pscore(hs_pscore) radius caliper(.0214597) logit
//note this creates varaible _weight

//graph including off common support information
psgraph, treated(rhs3d) pscore(hs_pscore)

histogram hs_pscore if _support==1, by(rhs3d) 

//look at balance of matched vs unmatched samples
pstest $matchvars,treated(rhs3d) both hist

pstest $matchvars,treated(rhs3d) both graph

//look at quantile-quantile plots for continuous variables
foreach v in cc_all_count_12m_2 s_age {
gen `v'_treated = `v' if rhs3d==1 & _support==1
gen `v'_comparison = `v' if rhs3d==0 & _support==1
qqplot `v'_treated `v'_comparison
}


mat vr=J(40,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in $matchvars  {
sum `v' if rhs3d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if rhs3d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if rhs3d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if rhs3d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}


mat rownames vr="Count of comorbidities" "Alzheimers/Dementia" "AMI / ISCH" ///
"CHF" "Diabetes" "Chronic kidney disease" "COPD" "Stroke/TIA" "Cancer" "Atrial fibrilation" ///
"Hip fracture" "Depression" "Osteoporosis" "Arthritis"  ///
"R Net worth - lowest quart" "NW - med-low quart" "NW - med-high quart" "Nursing home res" ///
 "ADL stable partial" "ADL stable severe" "ADL Ind to mod" ///
"ADL mod to severe" "ADL ind to severe" "ADL n2 to n1 missing" "Medicaid" "Champus" "Medigap" ///
"Advance directive Y" "Adv dir missing" "R Discuss EOL plans" "R SRH Fair/Poor"  ///
"S age" "S Female" "S White" "S HS Degree" "S Religion very important" "S SRH Fair/Poor" ///
"S HRS Comorb Mild 1-3" "S HRS Comorb Mod 4-6" "S Psych Problem HRS n1" 

mat list vr

//6 from treated group are off common support, 3 control are not matched (weight==.)
//_support ==1 if matched
tab _support, missing
tab _support if rhs3d==1, missing
tab _support if rhs3d==0, missing
tab _weight if rhs3d==1, missing
sum _weight if rhs3d==0

rename _weight weight_before1yr

***********************************************************************
//now run logit model using weighting 
***********************************************************************

tab r_death_year, missing
//again no obs in 2000 so base=2001

local yearvars ib2001.r_death_year 

global matchvars2 cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 	
 
logit s_cesdbetter i.rhs3d `yearvars' $matchvars2 [iw=weight_before1yr] , or 

outreg using `logpath'\ivw_before_1yr_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat  ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview within 3-12m of R's death" \ ///	
	"Limited to Primary Caregiver spouses" \ ///
	"Outcome = CESD Score Decreased (by any amount) n1 to p1") ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable

//Run logit with outcome=depressed n1, not depressed p1
//need alternate match variables since perfect prediction with s_hrs_comorb_mod_n1 variable
global matchvars3 cc_all_count_12m_2 cc_3_alzhdmta_n12mn0 cc_ami_isch_n12mn0 ///
cc_8_chf_n12mn0 cc_9_diabetes_n12mn0 cc_6_chrnkidn_n12mn0 cc_7_copd_n12mn0 ///
cc_16_strketia_n12mn0 cc_cncr_chronic_n12mn0 cc_4_atrialfb_n12mn0 ///
cc_11_hipfrac_n12mn0 cc_13_depressn_n12mn0 cc_14_osteoprs_n12mn0 ///
cc_15_ra_oa_n12mn0 ///
 r_nw_lowest_n1 r_nw_midlow_n1 r_nw_midhigh_n1 ///
r_nhres_n1 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 ///
r_adl_change_i_m_n1n2 r_adl_change_m_s_n1n2 r_adl_change_i_s_n1n2 r_adl_change_n1n2_miss ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 r_advdir_y /*r_advdir_miss*/ r_discuss_x r_srh_pf_n1 ///
s_age s_female s_white_e  s_hseduc_n1_n3 ///
s_imprelig_vimp_n1 s_srh_pf_p1 ///
 s_hrs_comorb_mild_n1 /*s_hrs_comorb_mod_n1*/ s_psych_overall_hrs_n1 	

logit s_cesd_ge3better i.rhs3d `yearvars' $matchvars3 [iw=weight_before1yr] , or 
//note these estimation results are strange, huge confidence intervals
//if decide to use them, then need to revisit this model!

outreg using `logpath'\ivw_before_1yr_spouse_analysis, ///
	stats(e_b e_ci p) nosubstat  ///
	title("Reduced spousal depressive symptoms and hospice enrollment" \ ///
	"Propensity Score Matched, Frequency Weighted Sample" \ ///
	"Limited to S p1 interview within 3-12m of R's death" \ ///	
	"Limited to Primary Caregiver spouses" \ ///
	"Outcome = CESD Score 3+ n1 to less than 3 p1" ) ///	
	ctitles("" "OR" "95% CI" "P-value") ///
	note("Base categories are year=2000 and spouse no comorbidities.") ///
	varlabels starlevels(10 5 1)  summstat( N) addtable
	
	
*********************************************
log close
