= V4 Outline MultiLine NoSorting TabWidth=30

H="spouse claims looking at R hc intensity pre death"


H="merge datasets and define new vars"
capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\2-Spouse_intensive_variablesetup.txt", text replace

cd `datapath'

use spouse_intens_data_sample.dta
*************************************************
tab r_exit_year_x, missing

*************************************************
label define location 1  "Hospital" 2 "Nursing Home" 3 "Home" 4 "Hospice" ///
      5 "Assisted Living/Retirement Home" 6 "Other/Don't Know "
label values *location* location


//demographic variables
sum r_age, detail
sum s_age, detail

//gender
la var s_female "S Female"
la def fem 0 "Male" 1 "Female"
la val s_female r_female fem
tab r_female, missing
tab s_female, missing
tab r_female s_female

//race & ethnicity
tab r_race_e r_hisp_eth_e, missing
//gen race_categorical variable including hispanic
foreach g in r s {
gen `g'_race_cat = 0 if `g'_white_e==1 & `g'_hisp_eth_e==0
replace `g'_race_cat = 1 if `g'_black_e==1 & `g'_hisp_eth_e==0
replace `g'_race_cat = 2 if `g'_hisp_eth_e==1
replace `g'_race_cat = 3 if `g'_other_na_api_race_e==1 & `g'_hisp_eth_e==0
tab `g'_race_cat, missing
tab `g'_race_cat `g'_white_e, missing
tab `g'_race_cat `g'_black_e, missing
tab `g'_race_cat `g'_hisp_eth_e, missing
tab `g'_race_cat `g'_other_na_api_race_e, missing
la var `g'_race_cat "`g' race, categorical"
}

la def race_cat 0 "White, non-Hispanic" 1 "Black, non-Hispanic" ///
2 "Hispanic" 3 "Other race, non-Hispanic"
la val r_race_cat s_race_cat race_cat
tab r_race_cat, missing
tab s_race_cat, missing

tab s_white_e r_white_e, missing

foreach g in r s {
tab `g'_race_cat, gen(`g'_race_cat)
}

//education, from tracker file, degree variable
tab r_degree_e r_educ_n1, missing
label variable r_degree_e "R's Eduction, Highest Level, from Tracker file"
label define r_degree_e 0 "No degree" 1 "GED" 2 "High School" 3 "2yr college degree" ///
  4 "4yr College degree" ///
      5 "Master degree" 6"Professional degree" 9 "degree unknown/some college", modify
label values r_degree_e r_degree_e 
tab r_degree_e, missing

//create r hs degree variable
tab r_degree_e r_hseduc , missing
la var r_hseduc "R HS Degree, from tracker, 1=yes"

//code s-education variable from tracker file
label variable s_degree_e "S's Eduction, Highest Level, from Tracker file"
label values s_degree_e r_degree_e 
tab s_degree_e, missing

//create s hs degree variable
tab s_degree_e s_hseduc , missing
la var s_hseduc "S HS Degree, from tracker, 1=yes"

//marital status
tab r_married_x, missing

*************************************************
//additional respondant variables
tab r_nw_lowest_n1, missing
tab r_nw_midlow_n1, missing
tab r_nw_midhigh_n1, missing 
tab r_nw_highest_n1, missing

tab r_imprelig_vimp_n1, missing
tab s_imprelig_vimp_n1, missing

//adl indicator for needing assistance
gen s_adl_impair_n1 = 0 if  s_adl_independent_core_n1 == 1
replace s_adl_impair_n1 = 1 if s_adl_independent_core_n1 == 0
la var s_adl_impair_n1 "S ADL impairment n1"
tab s_adl_impair_n1 s_adl_independent_core_n1, missing

gen r_adl_impair_n1 = 0 if  r_adl_independent_core_n1 == 1
replace r_adl_impair_n1 = 1 if r_adl_independent_core_n1 == 0
la var r_adl_impair_n1 "R ADL impairment n1"
tab r_adl_impair_n1 r_adl_independent_core_n1, missing

gen r_adl_impair_n2 = 0 if  r_adl_independent_core_n2 == 1
replace r_adl_impair_n2 = 1 if r_adl_independent_core_n2 == 0
la var r_adl_impair_n2 "R ADL impairment n2"
tab r_adl_impair_n2 r_adl_independent_core_n2, missing

//insurance status
tab r_medicaid_n1 s_medicaid_n1, missing
tab r_medigap_n1 s_medigap_n1, missing
tab r_champus_n1 s_champus_n1, missing

//eol planning
tab r_advdir_x, missing
tab r_discuss_x, missing
tab r_eoldec_x, missing
tab r_eoldec_x int_any_of5_6m , missing 

//chronic conditions count, excluding glaucoma and cataract
gen cc_all_count_6m12m_2 = cc_1_ami_n12mn6m + cc_2_alzh_n12mn6m + cc_3_alzhdmta_n12mn6m + ///
cc_4_atrialfb_n12mn6m + /*cc_5_cataract_n12mn6m +*/ cc_6_chrnkidn_n12mn6m + ///
cc_7_copd_n12mn6m + cc_8_chf_n12mn6m + cc_9_diabetes_n12mn6m + /*cc_10m_glaucoma_n12mn6m +*/ ///
cc_11_hipfrac_n12mn6m + cc_12_ischmcht_n12mn6m + cc_13_depressn_n12mn6m + ///
cc_14_osteoprs_n12mn6m + cc_15_ra_oa_n12mn6m + cc_16_strketia_n12mn6m + ///
cc_17_cncrbrst_n12mn6m + cc_18_cncrclrc_n12mn6m + cc_19_cncrprst_n12mn6m + ///
cc_20_cncrlung_n12mn6m + cc_21_cncrendm_n12mn6m
la var cc_all_count_6m12m_2 "Count of cc's, 6-12m pre-death, excludes cataract and glaucoma"
tab cc_all_count_6m12m_2 , missing

//categorical spouse primary helper, duration'
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing
gen r_s_help_dur_cat = 0 if r_adl_sp_helper_x==0 & r_iadl_sp_helper_x==0
replace r_s_help_dur_cat = 1 if r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1
replace r_s_help_dur_cat = 2 if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) ///
 & ( r_adl_sp_helper_n1==1 | r_iadl_sp_helper_n1==1)
la def help 0 "S not primary helper x" 1 "S primary helper x only" 2 "S primary helper x+n1"
la val r_s_help_dur_cat help
tab r_s_help_dur_cat, missing

tab r_s_help_dur_cat, gen(r_s_help_dur_ind)

la var r_s_help_dur_ind1 "S not prim helper exit"
la var r_s_help_dur_ind2 "S prim helper exit only"
la var r_s_help_dur_ind3 "S prim helper exit and n1"

*************************************************
//hospice , intensive procedures timing variables
gen proc_to_hs_enrol = hs_enrol_dt - first_proc_date_excl_hd_6m 
tab proc_to_hs_enrol, missing

gen hs_enrol_to_death = r_death_date - hs_enrol_dt
tab hs_enrol_to_death , missing
tab hs_los_6m if hs_enrol_to_death>180 & hs_enrol_to_death~=.

*************************************************
//interview timeline variables
//note these use the dod from HRS if present and claims if HRS is missing
sum r_days_n1_core_dead, detail
sum s_days_n1_core_dead, detail

gen r_days_n2_core_dead = r_death_date-r_c_ivw_date_n2
gen s_days_n2_core_dead = r_death_date-s_c_ivw_date_n2
label var r_days_n2_core_dead "Days from R's n2 ivw to death"
label var s_days_n2_core_dead "Days from S's n2 ivw to R's death"

gen r_days_x_exit_dead = r_e_ivw_date_x - r_death_date
label var days_p1_core_dead "Days from R's death to S p1 interview"
sum r_days_x_exit_dead, detail
sum days_p1_core_dead, detail

//create categorical variable for 6m intervals for death to p1 ivw
//categorical variable for interview timing from r's death
gen days_p1_core_dod_cat = .
replace days_p1_core_dod_cat = 0 if 0<=days_p1_core_dead & days_p1_core_dead<183
replace days_p1_core_dod_cat = 1 if 183<=days_p1_core_dead & days_p1_core_dead<366
replace days_p1_core_dod_cat = 2 if 366<=days_p1_core_dead & days_p1_core_dead<548
replace days_p1_core_dod_cat = 3 if 548<=days_p1_core_dead & days_p1_core_dead<731
replace days_p1_core_dod_cat = 4 if 731<=days_p1_core_dead & days_p1_core_dead !=.
la def days_p1_core_dod_cat 0 "0-6 months" 1 "6-12 months" 2 "12-18 months" ///
3 "18-24 months" 4 "24+ months"
la var days_p1_core_dod_cat "Days from R death to p1 interview, categorical"
la val days_p1_core_dod_cat days_p1_core_dod_cat 
tab days_p1_core_dod_cat , missing

tab days_p1_core_dod_cat , gen(p1_ind)
rename p1_ind1 days_p1_core_dod_lt6m 
rename p1_ind2 days_p1_core_dod_6_12m 
rename p1_ind3 days_p1_core_dod_12_18m 
rename p1_ind4 days_p1_core_dod_18_24m 
rename p1_ind5 days_p1_core_dod_gt2yr 

la var days_p1_core_dod_lt6m "R death to P1 ivw lt 6m"
la var days_p1_core_dod_6_12m "R death to P1 ivw 6-12m"
la var days_p1_core_dod_12_18m "R death to P1 ivw 12-18m"
la var days_p1_core_dod_18_24m "R death to P1 ivw 18-24m"
la var days_p1_core_dod_gt2yr "R death to P1 ivw gt 2yr"

foreach v in days_p1_core_dod_lt6m days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr{
	sum days_p1_core_dead if `v'==1, detail
}

tab r_ind_n1_wi_6m_dead, missing
tab s_ind_n1_wi_6m_dead, missing

*************************************************
//variables that use n2 core if r n1 within 6m of death
local rvarn1n2 r_nhres r_rel_nb r_adl_impair r_srh_pf 
local svarn1n2 s_psych_overall_hrs s_cesd_tot_ge3 s_srh_pf s_adl_independent_core
//note s_cesd_tot_n1n2 created in previous section

foreach i in r s{
	foreach v in ``i'varn1n2'{
		tab `v'_n1 `i'_ind_n1_wi_6m_dead, missing
		gen `v'_n1n2 = `v'_n1 if `i'_ind_n1_wi_6m_dead==0
		replace `v'_n1n2 = `v'_n2 if `i'_ind_n1_wi_6m_dead==1
		tab `v'_n1n2, missing
	}
}

la var r_nhres_n1n2 "R NH Res at n1 or n2 core"
la var r_rel_nb_n1n2 "R Relatives nearby at n1 or n2 core"
la var r_adl_impair_n1n2 "R ADL Impaired at n1 or n2 core"
la var r_srh_pf_n1n2 "R SRH Fair/Poor n1 or n2 core"

la var s_psych_overall_hrs_n1n2 "S Psych condition n1 or n2 core"
la var s_cesd_tot_n1n2 "S CES-D score, n1 or n2 core"
la var s_cesd_tot_ge3_n1n2 "S Depressed CESD 3+, n1 or n2 core"
la var s_srh_pf_n1n2 "S SRH Poor/Fair, n1 or n2 core"
la var s_adl_independent_core_n1n2 "S ADL Independent, n1 or n2 core"

//timing pre to post interview
//first variable n1 to p1 for all 
gen s_days_n1_to_p1 = s_days_n1_core_dead + days_p1_core_dead
sum s_days_n1_to_p1, detail

//second is n1 or n2 if n1 within 6m of death to p1
gen s_days_n1n2_to_p1 = s_days_n1_to_p1 if s_ind_n1_wi_6m_dead==0
replace s_days_n1n2_to_p1 = s_days_n2_core_dead + days_p1_core_dead if s_ind_n1_wi_6m_dead==1
sum s_days_n1n2_to_p1, detail

label var s_days_n1_to_p1 "Days S n1 interview to p1 core"
label var s_days_n1n2_to_p1 "Days S n1 or n2 to p1 core (use n2 if n1 within 6m of death)"

*************************************************
//s comorb category indicators
tab s_comor_c_hrs_n1, missing
tab s_comor_c_hrs_n1, gen(scom)
rename scom1 s_hrs_comorb_none_n1
rename scom2 s_hrs_comorb_mild_n1
rename scom3 s_hrs_comorb_mod_n1
rename scom4 s_hrs_comorb_sev_n1

tab s_hrs_comorb_none_n1, missing
tab s_hrs_comorb_mild_n1, missing
tab s_hrs_comorb_mod_n1, missing
tab s_hrs_comorb_sev_n1, missing

//since only 1 obs has severe, categorize as mod
replace s_hrs_comorb_mod_n1=1 if s_hrs_comorb_sev_n1==1

*************************************************
//s cesd change variables from interview before 6m before R's death to p1 interview

//change cesd count n1 to p1?
gen s_cesdchange= s_cesd_tot_p1- s_cesd_tot_n1n2
tab s_cesdchange, missing
la var s_cesdchange "Change in S's CESD count n1 to p1"
*histogram s_cesdchange

//CESD improvement indicator
gen byte s_cesdbetter=.
replace s_cesdbetter= 1 if s_cesdchange <0
replace s_cesdbetter= 0 if (s_cesdchange >=0 & s_cesdchange !=.)
la var s_cesdbetter "S CESD Improvement n1 to p1"

//CESD decline indicator
gen byte s_cesdworse=.
replace s_cesdworse= 1 if (s_cesdchange >0 & s_cesdchange !=.)
replace s_cesdworse= 0 if s_cesdchange <=0 
la var s_cesdworse"S CESD Decline n1 to p1"

//CESD decline indicator
gen byte s_cesdsame=.
replace s_cesdsame= 1 if s_cesdchange ==0
replace s_cesdsame= 0 if (s_cesdchange !=0 & s_cesdchange !=.)
la var s_cesdsame "S CESD Stable n1 to p1"

tab s_cesdchange s_cesdbetter, missing
tab s_cesdchange s_cesdworse, missing
tab s_cesdchange s_cesdsame , missing

//cesd change categorical variable
gen s_cesdchange_3 =.
replace s_cesdchange_3 =1 if (s_cesdchange <0 & s_cesdchange!=.) // improvement
replace s_cesdchange_3 =-1 if (s_cesdchange >0 & s_cesdchange!=.) //decline
replace s_cesdchange_3 =0 if (s_cesdchange ==0) //no change
la var s_cesdchange_3 "S CESD change categories n1 to p1"
la def s_cesdchange_3 1 "Improvement" 0 "No change" -1 "Decline"
la val s_cesdchange_3 s_cesdchange_3 
tab s_cesdchange_3, missing

//cesd improved from >=3 to 3-  look at CESD 3 clin depression change 
//(three options compared to improved or not*
gen s_cesd_ge3_change= s_cesd_tot_ge3_p1- s_cesd_tot_ge3_n1n2

//cesd improved: 3 or higher in n1 to less than 3 in p1
gen byte s_cesd_ge3better = .
replace s_cesd_ge3better = 1 if s_cesd_ge3_change < 0
replace s_cesd_ge3better = 0 if (s_cesd_ge3_change >= 0 & s_cesd_ge3_change !=.)
la var s_cesd_ge3better "S CESD change from 3+ n1 to <3 p1"
tab s_cesd_ge3better s_cesd_ge3_change, missing

//cesd same or better: 2 or higher in n1 to less than 3 in p1 or no change
gen byte s_cesd_ge3betterorsame = .
replace s_cesd_ge3betterorsame = 1 if s_cesd_ge3_change<=0
replace s_cesd_ge3betterorsame = 0 if (s_cesd_ge3_change > 0 & s_cesd_ge3_change !=.)
la var s_cesd_ge3betterorsame "S CESD no change or change from 3+ n1 to <3 p1"
tab s_cesd_ge3betterorsame s_cesd_ge3_change, missing
*************************************************
//spouse primary caregiver per exit helper details?
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing

*************************************************
//regional variables
sum hci_index, detail
sum hospital_beds, detail
sum specialists, detail

*************************************************
save spouse_intens_data_cleaned.dta, replace

*************************************************
log close


H="propensity score match"
/*Limited to decedents with FFS MC 6m prior to death, married at time of death,
with spouse mc id*/
clear all
mata: mata clear
set more off
capture log close
import excel "E:\data\Dartmouth_misc\EOL_mc_2yrs_HRR\DAP_HRR_03_07_to_merge.xls", sheet("Sheet1") firstrow case(lower) clear
keep hrr totalmedic
rename hrr hrrnum
xtile eol_spending_quintile=tot, nq(5)
xtile eol_spending_quartile=tot, nq(4)
gen eol_spending_3_cat=eol_spending_quartile
replace eol_spending_3_cat=eol_spending_3_cat-1 if inlist(eol_spending_3_cat,3,4)
label define eol_spending_3_cat 1 "Bottome Quartile" 2 "Middle 50%" 3 "Top quartile"
label values eol_spending_3_cat eol_spending_3_cat
gen eol_spending_low=eol_spending_3_cat==1
gen eol_spending_mid=eol_spending_3_cat==2
gen eol_spending_high=eol_spending_3_cat==3
label var eol_spending_low "Bottom Quartile EOL spending by Dartmouth HRR"
label var eol_spending_mid "Middle 50% EOL spending by Dartmouth HRR"
label var eol_spending_high "Top Quartile EOL spending by Dartmouth HRR"
label var eol_spending_3_cat "EOL Spending Group by Dartmouth HRR, Adjusted"
label var eol_spending_quintile "EOL Spending Quintile by Dartmouth HRR, Adjusted"
tempfile temp1
save "`temp1'"



use "E:\data\hrs_public_2012\dementia\pdem_withvarnames_ebl.dta", clear
destring id, gen(r_id)
rename core_year r_core_year_n1
tempfile temp2
save `temp2'

//Server file paths
global logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_v1 if (s_part_ab_6m==1 & s_hmo_d_6m==0) 
*merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_intens_data_ps_set.dta" , gen(spmerge) ///
 *keep(match)
merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_data_full.dta" , gen(spmerge) keep(match)
merge 1:1 r_id r_core_year_n1 using `temp2', gen(demmerge) keep(match master)
merge m:1 hrrnum using `temp1', gen(hrrmerge) keep(match master)
*********************************************************
*********************************************************
//indicators of intensity-hospice 3+days, top quartile spending last 6m, and death in hosp (already there)
gen r_hs_3d_6m=r_hs_los_6m>=3
keep if s_cont_ffs_n_mos>=18
sum r_tot_paid_by_mc_wi_6m, d
gen r_spending_6m_high=r_tot_paid_by_mc_wi_6m>=r(p75)

label var r_hs_3d "R Hospice use 3+ days last 6m"
label var r_spending_6m_high "R Medicare spending top quartile last 6m"


gen r_spend_or_hosp_death=r_spending_6m_high==1 | r_loc_==1
foreach s in r s {
foreach n in n1 n2 {
gen `s'_hrs_comorb_mild_`n'=`s'_comor_c_hrs_`n'==0
gen `s'_hrs_comorb_mod_`n'=`s'_comor_c_hrs_`n'==1
}
}
//where r&s highly correlated, use s
local rvarsa r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x  r_adl_impair_n1 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

tab eol_spending_quartile, gen(eol_spend_quart)
label var eol_spend_quart1 "Quartile EOL spending by HRR: Low"
label var eol_spend_quart2 "Quartile EOL spending by HRR: Mid-low"
label var eol_spend_quart3 "Quartile EOL spending by HRR: Mid-high"
label var eol_spend_quart4 "Quartile EOL spending by HRR: High"
local region eol_spend_quart2 eol_spend_quart3 eol_spend_quart4
//categorical spouse primary helper, duration'
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing
gen r_s_help_dur_cat = 0 if r_adl_sp_helper_x==0 & r_iadl_sp_helper_x==0
replace r_s_help_dur_cat = 1 if r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1
replace r_s_help_dur_cat = 2 if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) ///
 & ( r_adl_sp_helper_n1==1 | r_iadl_sp_helper_n1==1)
la def help 0 "S not primary helper x" 1 "S primary helper x only" 2 "S primary helper x+n1"
la val r_s_help_dur_cat help
tab r_s_help_dur_cat, gen(r_s_help_dur_ind)
label var r_s_help_dur_ind2 "S primary helper x only" 
label var r_s_help_dur_ind3 "S primary helper x+n1"
local svarsa s_age s_female s_race_cat1  ///
s_hseduc s_srh_pf_n1 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr

local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_independent_core_n1 ///
 likely_dem r_hrs_comorb_mod_n1 r_hrs_comorb_mild_n1 r_death_year

local svars s_age s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1 s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_adl_independent_core_n1 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 

local n1s srh_pf hrs_comorb_mild hrs_comorb_mod ///
nw_midlow nw_midhigh nw_highest  hrs_comorb_mod hrs_comorb_mild ///
adl_independent_core nhres 

foreach x of local n1s {
foreach s in r s {
replace `s'_`x'_n1=`s'_`x'_n2 if r_death_date_e-`s'_c_ivw_date_n1<=183
}
}
local treatvars r_hs_3d_6m r_loc_hosp_x r_spending_6m_high r_spend_or_hosp_death 
tokenize `treatvars'
local max : word count `treatvars'

forvalues i=1/`max' {
di "`i'"
log using $logpath\spouse_claims_match_``i''`time'.txt, text replace

*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
cap drop ip_* logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  ``i'' ,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(``i'') pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' ,treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time''  {
sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

rename _weight w_``i''`time'
 
log close
}

save spouse_claims_intensmatched, replace



H="match split by gender"
/*Limited to decedents with FFS MC 6m prior to death, married at time of death,
with spouse mc id*/
clear all
mata: mata clear
set more off
capture log close
import excel "E:\data\Dartmouth_misc\EOL_mc_2yrs_HRR\DAP_HRR_03_07_to_merge.xls", sheet("Sheet1") firstrow case(lower) clear
keep hrr totalmedic
rename hrr hrrnum
xtile eol_spending_quintile=tot, nq(5)
xtile eol_spending_quartile=tot, nq(4)
gen eol_spending_3_cat=eol_spending_quartile
replace eol_spending_3_cat=eol_spending_3_cat-1 if inlist(eol_spending_3_cat,3,4)
label define eol_spending_3_cat 1 "Bottome Quartile" 2 "Middle 50%" 3 "Top quartile"
label values eol_spending_3_cat eol_spending_3_cat
gen eol_spending_low=eol_spending_3_cat==1
gen eol_spending_mid=eol_spending_3_cat==2
gen eol_spending_high=eol_spending_3_cat==3
label var eol_spending_low "Bottom Quartile EOL spending by Dartmouth HRR"
label var eol_spending_mid "Middle 50% EOL spending by Dartmouth HRR"
label var eol_spending_high "Top Quartile EOL spending by Dartmouth HRR"
label var eol_spending_3_cat "EOL Spending Group by Dartmouth HRR, Adjusted"
label var eol_spending_quintile "EOL Spending Quintile by Dartmouth HRR, Adjusted"
tempfile temp1
save "`temp1'"



use "E:\data\hrs_public_2012\dementia\pdem_withvarnames_ebl.dta", clear
destring id, gen(r_id)
rename core_year r_core_year_n1
tempfile temp2
save `temp2'

//Server file paths
global logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_v1 if (s_part_ab_6m==1 & s_hmo_d_6m==0) & (r_part_ab_6m==1 & r_hmo_d_6m==0)
*merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_intens_data_ps_set.dta" , gen(spmerge) ///
 *keep(match)
merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_data_full.dta" , gen(spmerge) keep(match)
merge 1:1 r_id r_core_year_n1 using `temp2', gen(demmerge) keep(match master)
merge m:1 hrrnum using `temp1', gen(hrrmerge) keep(match master)
*********************************************************
*********************************************************
//indicators of intensity-hospice 3+days, top quartile spending last 6m, and death in hosp (already there)
gen r_hs_3d_6m=r_hs_los_6m>=3

sum r_tot_paid_by_mc_wi_6m, d
gen r_spending_6m_high=r_tot_paid_by_mc_wi_6m>=r(p75)

label var r_hs_3d "R Hospice use 3+ days last 6m"
label var r_spending_6m_high "R Medicare spending top quartile last 6m"


gen r_spend_or_hosp_death=r_spending_6m_high==1 | r_loc_==1
foreach s in r s {
foreach n in n1 n2 {
gen `s'_hrs_comorb_mild_`n'=`s'_comor_c_hrs_`n'==0
gen `s'_hrs_comorb_mod_`n'=`s'_comor_c_hrs_`n'==1
}
}
//where r&s highly correlated, use s
local rvarsa r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x  r_adl_impair_n1 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local region eol_spending_quintile
//categorical spouse primary helper, duration'
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing
gen r_s_help_dur_cat = 0 if r_adl_sp_helper_x==0 & r_iadl_sp_helper_x==0
replace r_s_help_dur_cat = 1 if r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1
replace r_s_help_dur_cat = 2 if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) ///
 & ( r_adl_sp_helper_n1==1 | r_iadl_sp_helper_n1==1)
la def help 0 "S not primary helper x" 1 "S primary helper x only" 2 "S primary helper x+n1"
la val r_s_help_dur_cat help
tab r_s_help_dur_cat, gen(r_s_help_dur_ind)

local svarsa s_age s_female s_race_cat1  ///
s_hseduc s_srh_pf_n1 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr

local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_independent_core_n1 ///
 likely_dem r_hrs_comorb_mod_n1 r_hrs_comorb_mild_n1 r_death_year

local svars s_age s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1 s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_adl_independent_core_n1 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 

local n1s srh_pf hrs_comorb_mild hrs_comorb_mod ///
nw_midlow nw_midhigh nw_highest  hrs_comorb_mod hrs_comorb_mild ///
adl_independent_core nhres 

foreach x of local n1s {
foreach s in r s {
replace `s'_`x'_n1=`s'_`x'_n2 if r_death_date_e-`s'_c_ivw_date_n1<=183
}
}
local treatvars r_hs_3d_6m r_loc_hosp_x r_spending_6m_high r_spend_or_hosp_death 
tokenize `treatvars'
local max : word count `treatvars'
foreach gend in 0 1 {
preserve
keep if s_female==`gend'
forvalues i=1/`max' {
di "`i'"
log using $logpath\spouse_claims_match_``i''`time'female`gend'.txt, text replace

*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
cap drop ip_* logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  ``i'' ,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(``i'') pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' ,treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time''  {
sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

rename _weight w_f`gend'_``i''`time'
 
log close
}

save spouse_claims_female`gend'_intensmatched, replace
restore
}


H="table 1 and 2"
/*creates 3 tables:
Table 1: Overall sample characteristics, not matched
Table 2: Not matched / matched char by intensive procedure use, shows std differences
to demonstrate propensity score matched sample is well matched on all included covariates
Table 3: CES-D score before/after by intensive procedure use, matched and not matched
Table 4: Tabulation of rates of the 5 procedures
Table 5: Decedent age, race by intensive procedure use
*/

capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\10-Spouse_intensive_tables12.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_intens_data_ps_matched_30d.dta
***************************************************************
tab int_any_30d, missing


*************************************************************************************
*************************************************************************************
//create Table 1, overall sample characteristics, prior to matching
*************************************************************************************
*************************************************************************************
//Part 1 - Decedent char
local rvars r_female r_married_x r_race_cat1 r_hseduc r_nw_lowest_n1 ///
r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
r_nhres_n1n2 r_advdir_x r_dexp_x  r_discuss_x ///
r_adl_impair_n1n2 r_srh_pf_n1n2 int_any_30d r_hs_3d_6m r_loc_hosp_x ///
cc_3_alzhdmta_n12mn6m ///
cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m cc_8_chf_n12mn6m ///
cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m cc_16_strketia_n12mn6m ///
cc_cncr_chronic_n12mn6m cc_4_atrialfb_n12mn6m cc_11_hipfrac_n12mn6m ///
cc_13_depressn_n12mn6m cc_14_osteoprs_n12mn6m cc_15_ra_oa_n12mn6m

//r cont vars
//r_age cc_all_count_6m12m_2 
 
la var r_age "Age at death, years, mean (SD)"
la var r_loc_ "Died in Hospital, %"
la var r_married_x "Married at death, %"
la var r_female "Female, %"
la var r_race_cat1 "Race, White, Non-Hispanic, %"
la var r_hseduc "Education, High School Deg, %"
la var r_nw_lowest_n1 "Net Worth, 1 (low) Quartile, %"
la var r_nw_midlow_n1  "Net Worth, 2 Quartile, %"
la var r_nw_midhigh_n1  "Net Worth, 3 Quartile, %"
la var r_nw_highest_n1  "Net Worth, 4 (high) Quartile, %"
la var r_medicaid_n1  "Medicaid, %"
la var r_champus_n1  "VA Insurance, %"
la var r_medigap_n1 "Medigap, %"
la var r_nhres_n1n2 "Nursing home resident pre-death, %**"
la var r_advdir_x "Had advanced directive, %"
la var r_dexp_x  "Death expected by family, %"
la var r_discuss_x "Discussion of EOL care, %"
la var r_adl_impair_n1n2 "ADL Impairment, %**"
la var r_srh_pf_n1n2 "SRH poor or fair, %**"
la var cc_all_count_6m12m_2 "Number of chronic conditions, mean (SD)"
la var int_any_30d "Intensive Procedure last 30d"
la var r_hs_3d_6m "3+ days hospice use, %"

mat rchar_1=J(1,2,.)

sum r_age, detail //age
mat rchar_1[1,1]=r(mean)
mat rchar_1[1,2]=r(sd)

sum s_age, detail //get overall sample n
local samplen=r(N)

mat rownames rchar_1=r_age

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(1,1,1)

frmttable, statmat(rchar_1) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_1) 	

mat rchar_2=J(33,1,.)
local r = 1
foreach v in `rvars'{
	sum `v'
	mat rchar_2[`r',1]=r(mean)*100 //percent
	local r = `r'+1
	}

mat rownames rchar_2 = `rvars'

frmttable, statmat(rchar_2) varlabels ///
	sdec(2) store(tab1_2) 	  

mat rchar_3=J(1,2,.)

sum cc_all_count_6m12m_2, detail //cc's count
mat rchar_3[1,1]=r(mean)
mat rchar_3[1,2]=r(sd)

mat rownames rchar_3=cc_all_count_12m_2

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(1,1,1)

frmttable, statmat(rchar_3) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_3) 	  

outreg, replay(tab1_1) append(tab1_2) store(tab1_a)

*** add the headings, notes, using file name etc. to this one
outreg using "`logpath'\10_spo_ip_tab1and2_30d", ///
replay(tab1_a) append(tab1_3) ///
title("Table 1: Characteristics of Study sample (n=`samplen')") ///
ctitles("Decedent","") ///
note("Decedent chronic conditions from Medicare claims. 6-12m before death." \ ///
"Spouse chronic conditions from self report in HRS interviews." \ ///
"** From the pre-death interview at least 6m prior to death.") ///
landscape replace

**************************************************
//Part 2 - Spouse char

//just check no severe category
tab s_hrs_comorb_mod_n1 s_comor_c_hrs_n1, missing

local svars s_female s_race_cat1  s_hseduc ///
s_medicaid_n1 s_adl_independent_core_n1n2 s_srh_pf_n1n2 s_imprelig_vimp_n1 ///
s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 ///
s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 ///
s_psych_overall_hrs_n1n2 s_smoke_curr_n1 s_vig_phy_act_n1 ///
r_s_help_dur_ind1 r_s_help_dur_ind2 r_s_help_dur_ind3 ///
s_cesd_tot_ge4_n1n2 s_cesd_tot_ge4_p1 s_cesdbetter s_cesd_ge4better 

la var s_age "Age at spouse's death, years, mean (SD)"
la var s_female "Female, %"
la var s_race_cat1 "Race, White, Non-Hispanic, %"
la var s_hseduc "Education, High School Degree, %"
la var s_medicaid_n1  "Medicaid, %"
la var s_adl_independent_core_n1n2 "ADL Independent pre-death, %**"
la var s_srh_pf_n1n2 "SRH poor or fair, %**"
la var s_imprelig_vimp_n1 "Religion very important, %"
la var s_cancer_hrs_n1 "Cancer, %"
la var s_lung_hrs_n1 "Lung disease, %"
la var s_heart_hrs_n1 "Heart disease, %"
la var s_chf_hrs_n1 "CHF, %"
la var s_stroke_hrs_n1 "Stroke, %"
la var s_memory_hrs_n1 "Memory disease, %"
la var s_htn_hrs_n1 "Hypertension, %"
la var s_dm_hrs_n1 "Diabetes, %"
la var s_hrs_comorb_none_n1 "Comorbidities, none, %"
la var s_hrs_comorb_mild_n1 "Comorbidities, Mild (1-3), %"
la var s_hrs_comorb_mod_n1 "Comorbidities, Moderate (4-6), %"
la var s_psych_overall_hrs_n1n2 "Psychological problems, %**"
la var s_smoke_curr_n1 "Currently smoker, %"
la var s_vig_phy_act_n1 "Vigorous physical activity, %"
la var r_s_help_dur_ind1 "Spouse not primary caregiver exit, %"
la var r_s_help_dur_ind2 "Spouse primary caregiver exit only, %"
la var r_s_help_dur_ind3 "Spouse primary caregiver exit + core, %"
la var s_cesd_tot_ge4_n1n2 "S Depressed CESD 4+, pre-death, %**"
la var s_cesd_tot_ge4_p1 "S Depressed CESD 4+, post-death, %"
la var s_cesdbetter "S CES-D Improved n1 to p1,%"
la var s_cesd_ge4better "Clinical improvement n1 to p1,%"

la var s_cesd_tot_n1n2 "CESD score pre-death, mean(SD)**"
la var s_cesd_tot_p1 "CESD score post-death, mean(SD)"
la var s_cesdchange "Change CES-D Score n1 to p1, mean(SD)"
la var days_p1_core_dead "Days R death to p1 s interview, mean(SD)"

//convert days to months to report months in the table
gen s_months_n1_to_p1=s_days_n1_to_p1/30.5
gen s_months_n1n2_to_p1=s_days_n1n2_to_p1/30.5
la var s_months_n1_to_p1  "Months n1 to p1 s interview, mean(SD)"
la var s_months_n1n2_to_p1  "Months n1 or n2 to p1 s interview, mean(SD)"

mat schar_1=J(1,2,.)

sum s_age, detail //age
mat schar_1[1,1]=r(mean)
mat schar_1[1,2]=r(sd)

mat rownames schar_1=s_age

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(1,1,1)

frmttable, statmat(schar_1) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_1) 	

mat schar_2=J(28,1,.)
local r = 1
foreach v in `svars'{
	sum `v'
	mat schar_2[`r',1]=r(mean)*100 //percent
	local r = `r'+1
	}

mat rownames schar_2 = `svars'

frmttable, statmat(schar_2) varlabels ///
	sdec(2) store(tab1_2) 	  

mat schar_3=J(6,2,.)

local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange days_p1_core_dead ///
 s_months_n1_to_p1 s_months_n1n2_to_p1 {
	sum `v', detail //ces-d scores
	mat schar_3[`r',1]=r(mean)
	mat schar_3[`r',2]=r(sd)
	local r = `r'+1
	}

mat rownames schar_3=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange ///
 days_p1_core_dead s_months_n1_to_p1 s_months_n1n2_to_p1 

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(3,1,1)

frmttable, statmat(schar_3) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_3) 	  

outreg, replay(tab1_1) append(tab1_2) store(tab1_a)

*** add the headings, notes, using file name etc. to this one
outreg using "`logpath'\10_spo_ip_tab1and2_30d", ///
replay(tab1_a) append(tab1_3) ///
title("Table 1: Characteristics of Study sample (n=`samplen')") ///
ctitles("Spouse","") ///
note("Decedent chronic conditions from Medicare claims. 6-12m before death." \ ///
"Spouse chronic conditions from self report in HRS interviews." \ ///
"** From the pre-death interview at least 6m prior to death.") ///
landscape addtable


*************************************************************************************
*************************************************************************************
//Create Table 2, Decedent and Spouse PS Score Matching Variables
//Col 1-3: Unweighted, unmatched sample
//Col 4-6: Weighted and matched sample
*************************************************************************************
*************************************************************************************

local t2vars1 r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 // r_loc_

local t2vars2 cc_all_count_6m12m_2 s_age 

local t2vars3 s_female s_race_cat1 ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr  

la var r_nhres_n1n2 "Nursing home resident pre-death"
la var r_srh_pf_n1n2 "SRH poor or fair"
la var r_adl_impair_n1n2 "ADL Impairment"
la var s_srh_pf_n1n2 "SRH poor or fair"
la var s_psych_overall_hrs_n1n2 "Psychological problems"
	
//part 1, n unmatched
mat t2_1=J(1,3,.)
tab int_any_30d , missing matcell(d1)
mat t2_1[1,2]=d1[1,1] //no procedures n
mat t2_1[1,1]=d1[2,1] //procedure n
mat rownames t2_1="Sample n"

frmttable, statmat(t2_1) varlabels ///
	sdec(0) store(tab2_1) 	

//part 2, decedent char, % and std difference
mat t2_2=J(18,5,.)

local r = 1
foreach v in `t2vars1'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d', detail
		mat t2_2[`r',`c']=r(mean)*r(N) //n
		mat t2_2[`r',`c'+1]=r(mean)*100 //percent
		local c = `c'+2		
	}
	mat t2_2[`r',5]=(t2_2[`r',2]/100-t2_2[`r',4]/100)/sqrt((t2_2[`r',2]/100* ///
		(1-t2_2[`r',2]/100)+t2_2[`r',4]/100*(1-t2_2[`r',4]/100))/2)
	local r = `r'+1
}
mat rownames t2_2=`t2vars1'

mat dmat=(0,1,0,1,0)
mat ann=J(17,2,1)

frmttable, statmat(t2_2) varlabels ///
	sdec(1,1,2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_2) 	

//part 3, cont vars r & s, mean and std diff
mat t2_3=J(2,5,.)

local r = 1
foreach v in `t2vars2'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d', detail
		mat t2_3[`r',`c']=r(mean)
		mat t2_3[`r',`c'+1]=r(sd)
		local c = `c'+2		
	}
	mat t2_3[`r',5]=(t2_3[`r',1]-t2_3[`r',3])/sqrt((t2_3[`r',2]^2+t2_3[`r',4]^2)/2) 
	local r = `r'+1
}

mat rownames t2_3=`t2vars2'

mat dmat=(0,1,0,1,0)
mat ann=(1,1,0\1,1,0)
mat list dmat
mat list ann

mat list t2_3

frmttable, statmat(t2_3) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3) 

//part 4, spouse char, %
mat t2_4=J(15,5,.)

local r = 1
foreach v in `t2vars3'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d', detail
		mat t2_4[`r',`c']=r(mean)*r(N)
		mat t2_4[`r',`c'+1]=r(mean)*100
		local c = `c'+2		
	}
	mat t2_4[`r',5]=(t2_4[`r',2]/100-t2_4[`r',4]/100)/sqrt((t2_4[`r',2]/100* ///
		(1-t2_4[`r',2]/100)+t2_4[`r',4]/100*(1-t2_4[`r',4]/100))/2)

	local r = `r'+1
}
foreach v in s_cesd_tot_n1n2 {
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d', detail
		mat t2_4[`r',`c']=r(mean)
		mat t2_4[`r',`c'+1]=r(sd)
		local c = `c'+2		
	}
	mat t2_4[`r',5]=(t2_4[`r',1]-t2_4[`r',3])/sqrt((t2_4[`r',2]^2+t2_4[`r',4]^2)/2) 
	local r = `r'+1
}

mat rownames t2_4=`t2vars3' s_cesd_tot_n1n2

mat dmat=(0,1,0,1,0)
mat ann=J(12,2,1)

frmttable, statmat(t2_4) varlabels ///
	sdec(1,1,2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_4) 	

outreg, replay(tab2_1) append(tab2_2) store(tab2_a)
outreg, replay(tab2_a) append(tab2_3) store(tab2_b)
outreg, replay(tab2_b) append(tab2_4) store(tab2_c) //complete unmatched table w/ std diff

***************************************************************
//end of unmatched sample, start matched sample
***************************************************************
//part 1, n matched
mat t2_1m=J(1,3,.)
tab int_any_30d if ip_weight!=., missing matcell(d1)
mat t2_1m[1,2]=d1[1,1] //no procedures n
mat t2_1m[1,1]=d1[2,1] //procedure n
mat rownames t2_1m="Sample n"

frmttable, statmat(t2_1m) varlabels ///
	sdec(0) store(tab2_1m) 	

//part 2, decedent char, % and std difference
mat t2_2m=J(18,3,.)

local r = 1
foreach v in `t2vars1'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d' [iweight=ip_weight]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
	local r = `r'+1
}
mat rownames t2_2m=`t2vars1'
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 	

//part 3, cont vars r & s, mean and std diff
mat t2_3m=J(2,5,.)

local r = 1
foreach v in `t2vars2'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d' [iweight=ip_weight]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2		
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	local r = `r'+1
}

mat rownames t2_3m=`t2vars2'

mat dmat=(0,1,0,1,0)
mat ann=(1,1,0\1,1,0)
mat list dmat
mat list ann

mat list t2_3

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

//part 4, spouse char, %
mat t2_4m=J(15,3,.)

local r = 1
foreach v in `t2vars3'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d' [iweight=ip_weight]
		mat t2_4m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_4m[`r',3]=(t2_4m[`r',1]/100-t2_4m[`r',2]/100)/sqrt((t2_4m[`r',1]/100* ///
		(1-t2_4m[`r',1]/100)+t2_4m[`r',2]/100*(1-t2_4m[`r',2]/100))/2)

	local r = `r'+1
}

foreach v in s_cesd_tot_n1n2 {
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d' [iweight=ip_weight]
		mat t2_4m[`r',`c']=r(mean)
		*mat t2_4m[`r',`c'+1]=r(sd)
		local mean`d' = r(mean)
		local sd`d'=r(sd)
		local c = `c'+1		
	}
	mat t2_4m[`r',3]=(`mean1'-`mean0')/sqrt((`sd1'^2+`sd0')/2) 
	local r = `r'+1
}
mat rownames t2_4m=`t2vars3' s_cesd_tot_n1n2
frmttable, statmat(t2_4m) varlabels ///
	sdec(2) store(tab2_4m) 	

outreg, replay(tab2_1m) append(tab2_2m) store(tab2_am)
outreg, replay(tab2_am) append(tab2_3m) store(tab2_bm)
outreg, replay(tab2_bm) append(tab2_4m) store(tab2_cm) //complete matched table w/ std diff

//combine unmatched and match tables
outreg using "`logpath'\10_spo_ip_tab1and2_30d", ///
 replay(tab2_c) merge(tab2_cm) ///
 title("Table 2: Decedent and spouse characteristics used in propensity score matching, by intensive procedure use status") ///
 ctitles("","Unmatched sample","","","Matched sample","","" \ ///
    "","Intensive procedure n (%)","No procedure n (%)","Standardized Difference", ///
    "Intensive procedure %","No procedure %","Standardized Difference") ///
 landscape addtable

*******************************************************************
*******************************************************************
//Table 3 - CES-D score pre/post death by intense procedures use
*******************************************************************
**************************************************************
la var s_cesd_tot_ge4_n1n2 "S Depressed CESD 4+, pre-death,%"
la var s_cesd_tot_ge4_p1 "S Depressed CESD 4+, post-death,%"
la var s_cesdbetter "S CES-D Improved n1 to p1,%"
la var s_cesdsame "S CES-D No Change n1 to p1,%"
la var s_cesdworse "S CES-D Worsened n1 to p1,%"
la var s_cesd_ge4better "Clinical improvement n1 to p1,%"
la var s_cesd_tot_n1n2 "S CES-D Score, pre-death, mean(sd)"
la var s_cesd_tot_p1 "S CES-D Score, post-death, mean(sd)"
la var s_cesdchange "Change CES-D Score n1 to p1, mean(sd)"

la var days_p1_core_dead "Days death to p1, mean(sd)"

local ivars s_cesd_tot_ge4_n1n2 s_cesd_tot_ge4_p1 s_cesdbetter s_cesdsame s_cesdworse  s_cesd_ge4better 
local cvars s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange days_p1_core_dead

//part 1 - prior to matching
mat t2_2m=J(6,4,.)

local r = 1
foreach v in `ivars' { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d'
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_30d `v'
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m= `ivars' 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(4,6,.)
local r = 1
foreach v in `cvars'  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d', detail 
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_30d `v'
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=`cvars' 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\10_spo_ip_tab1and2_30d, ///
replay(tab2_2m) append(tab2_3m) addtable ///
title("Table 3a: Spouse CES-D score details, sample before matching") ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value")

//Part 2 - after matching
mat t2_2m=J(6,4,.)

local r = 1
foreach v in `ivars' { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d' [iweight=ip_weight]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_30d `v' [iw=ip_weight]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=`ivars'
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(4,6,.)
local r = 1
foreach v in `cvars'  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d' [iweight=ip_weight]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_30d `v' [iw=ip_weight]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=`cvars' 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\10_spo_ip_tab1and2_30d, ///
replay(tab2_2m) append(tab2_3m) addtable ///
title("Table 3b: Spouse CES-D score details, matched sample") ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value")

//test pre-post cesd score difference, not matched, full sample
ttest s_cesd_tot_p1=s_cesd_tot_n1n2   //overall sample
ttest s_cesd_tot_p1=s_cesd_tot_n1n2 if ///
 (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) //caregiver sample
ttest s_cesdchange if  (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1), ///
 by(int_any_30d)  //caregiver sample

tab r_female s_female, missing 
***************************************************************
//details re which procedures were done
/*mat t4=J(5,2,.)

local r=1
foreach v in int_intubation_6m int_trach_6m int_gastro_tude_6m ///
int_enteral_nut_6m int_cpr_6m {
		tab `v' , missing
		sum `v' , detail
		mat t4[`r',1]=r(mean)*100 //percent
		mat t4[`r',2]=r(mean)*r(N)
		local r = `r'+1
		}
		
mat list t4

frmttable using `logpath'\10_spo_ip_tab1and2_30d, ///
addtable statmat(t4)  ///
sdec(2)  ///
title("Table 4: Procedure rates") ///
ctitles("" "percent of full sample" "n") ///
rtitles("Intubation, mech ventilation"\ "Trachostomy" \"Gastrostomy tube"\ ///
"Enteral/parenteral nutrition"\ "CPR")*/
***************************************************************
//r age, mean and sd

mat tab5=J(2,5,.)

	local c = 1
	foreach d in 1 0 {

	sum r_age if int_any_30d==`d', detail //age
	mat tab5[1,`c']=r(mean)
	mat tab5[1,`c'+1]=r(sd)
	
	sum r_race_cat1 if int_any_30d==`d', detail //race
	mat tab5[2,`c']=r(mean)*100 //percent
	
	local c = `c'+2
}

ttest r_age, by(int_any_30d)
	mat tab5[1,5]=r(p)
	
tab int_any_30d r_race_cat1, chi2
	mat tab5[2,5]=r(p)



mat rownames tab5="Age, mean, sd" "Race, white, percent"

frmttable using `logpath'\10_spo_ip_tab1and2_30d, ///
addtable statmat(tab5)  ///
sdec(2)  ///
title("Table 5: Misc decedent characteristics, by procedure use") ///
ctitles("" "With procedure" "" "No procedure" "" "P-value") ///
varlabels

***************************************************************
log close


H="regressions"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta
capture log close
cap gen difference12=s_tot_paid_by_mc_wi_p12m-s_tot_paid_by_mc_wi_12m
cap gen difference24=s_tot_paid_by_mc_wi_p24m-s_tot_paid_by_mc_wi_24m
local rvarsa2 r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_independent_core_n1 ///
 likely_dem r_hrs_comorb_mod_n1 r_hrs_comorb_mild_n1 r_death_year

local svarsa2 s_age s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1 s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 r_s_help_dur_ind2 r_s_help_dur_ind3 ///
/*s_tot_paid_by_mc_wi_12m*/s_adl_independent_core_n1
local region eol_spend_quart2 eol_spend_quart3 eol_spend_quart4
local year "" "if r_death_year<=2010"
local j
foreach b in bonnet {
log using "E:\data\spouse_claims\logs\regressions_utilization.txt",text replace
foreach num in 12 24 {
outreg, clear

foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' `j' [pw=w_`x'],link(log) fam(gamma) eform 
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge 
}
di "GLM `num'm spending"
outreg, replay
local j "if r_death_year<=2010"
}

local j
foreach num in 12 24 {
outreg, clear
di "OLS difference `num'm spending"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui reg difference`num' `x' `rvarsa2' `svarsa2' `region' `j' [pw=w_`x'] 
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
local j "if r_death_year<=2010"

outreg, replay
}
local j
foreach num in 12 24 {
outreg, clear
di "# hospital admits `num'm"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui nbreg s_n_ip_admit_p`num'm `x' `rvarsa2' `svarsa2' `region' `j' [pw=w_`x']  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<=2010"

}


local j
foreach num in 12 24 {
outreg, clear
di "# ED visits `num'm"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui nbreg s_n_ed_p`num'm `x' `rvarsa2' `svarsa2' `region' [pw=w_`x']  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<=2010"

}

/*
outreg, clear
di "OLS"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui reg s_tot_paid_by_mc_wi_p12m `x' `rvarsa2' `svarsa2' `region' [pw=w_`x']  
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

qui sum s_tot_paid_by_mc_wi_p12m, d
//qui gen s_spending_p12m_high=s_tot_paid_by_mc_wi_p12m>r(p75)

/*
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
glm difference `x' `rvarsa2' `svarsa2' `region' [pw=w_`x'],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}
di "GLM"
outreg, replay
*/
outreg, clear
di "OLS difference"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui reg difference `x' `rvarsa2' `svarsa2' `region' [pw=w_`x'] 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui logit s_spending_p12m_high `x' `rvarsa2' `svarsa2' `region' [pw=w_`x'] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui logit s_admit_ind_p12m `x' `rvarsa2' `svarsa2' `region' [pw=w_`x'] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

*/

local j
foreach num in 12 24 {
qui outreg, clear

foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' `j' [pw=w_`x'],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) merge or
}
di "GLM `num'm spending"
outreg, replay
local j "if r_death_year<=2010"
}

local j
foreach num in 12 24 {
qui outreg, clear
di "OLS difference `num'm spending"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
reg difference`num' `x' `rvarsa2' `svarsa2' `region' `j' [pw=w_`x'] 
qui outreg, stats(b p) merge
}
local j "if r_death_year<=2010"

outreg, replay
}
local j
foreach num in 12 24 {
qui outreg, clear
di "# hospital admits `num'm"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
nbreg s_n_ip_admit_p`num'm `x' `rvarsa2' `svarsa2' `region' `j' [pw=w_`x']  , irr
qui outreg, stats(e_b p) merge
}
outreg, replay
local j "if r_death_year<=2010"

}


local j
foreach num in 12 24 {
qui outreg, clear
di "# ED visits `num'm"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
nbreg s_n_ed_p`num'm `x' `rvarsa2' `svarsa2' `region' [pw=w_`x']  ,irr
qui outreg, stats(e_b p) merge
}
outreg, replay
local j "if r_death_year<=2010"

}
}
log close


H="regressions split by gender"
foreach gend in 0 1 {
use spouse_claims_female`gend'_intensmatched, clear
capture log close
cap gen difference12=s_tot_paid_by_mc_wi_p12m-s_tot_paid_by_mc_wi_12m
cap gen difference24=s_tot_paid_by_mc_wi_p24m-s_tot_paid_by_mc_wi_24m
local rvarsa2 r_age r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x r_adl_impair_n1n2 ///
 likely_dem r_hrs_comorb_mod_n1 r_hrs_comorb_mild_n1 r_death_year

local svarsa2 s_age s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1 s_race_cat1 ///
s_hseduc s_srh_pf_n1n2 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 r_s_help_dur_ind2 r_s_help_dur_ind3 ///
/*s_tot_paid_by_mc_wi_12m*/
local region eol_spending_quintile
local year "" "if r_death_year<=2010"
local j

log using "E:\data\spouse_claims\logs\regressions_utilization_female`gend'.txt",text replace
foreach num in 12 24 {
outreg, clear

foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' `j' [pw=w_f`gend'_`x'],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}
di "GLM `num'm spending"
outreg, replay
local j "if r_death_year<=2010"
}

local j
foreach num in 12 24 {
outreg, clear
di "OLS difference `num'm spending"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui reg difference`num' `x' `rvarsa2' `svarsa2' `region' `j' [pw=w_f`gend'_`x'] 
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
local j "if r_death_year<=2010"

outreg, replay
}
local j
foreach num in 12 24 {
outreg, clear
di "# hospital admits `num'm"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui nbreg s_n_ip_admit_p`num'm `x' `rvarsa2' `svarsa2' `region' `j' [pw=w_f`gend'_`x']  
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<=2010"

}


local j
foreach num in 12 24 {
outreg, clear
di "# ED visits `num'm"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui nbreg s_n_ed_p`num'm `x' `rvarsa2' `svarsa2' `region' [pw=w_f`gend'_`x']  
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<=2010"

}

/*
outreg, clear
di "OLS"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui reg s_tot_paid_by_mc_wi_p12m `x' `rvarsa2' `svarsa2' `region' [pw=w_f`gend'_`x']  
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

qui sum s_tot_paid_by_mc_wi_p12m, d
//qui gen s_spending_p12m_high=s_tot_paid_by_mc_wi_p12m>r(p75)

/*
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
glm difference `x' `rvarsa2' `svarsa2' `region' [pw=w_f`gend'_`x'],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}
di "GLM"
outreg, replay
*/
outreg, clear
di "OLS difference"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui reg difference `x' `rvarsa2' `svarsa2' `region' [pw=w_f`gend'_`x'] 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui logit s_spending_p12m_high `x' `rvarsa2' `svarsa2' `region' [pw=w_f`gend'_`x'] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
qui logit s_admit_ind_p12m `x' `rvarsa2' `svarsa2' `region' [pw=w_f`gend'_`x'] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

*/

local j
foreach num in 12 24 {
qui outreg, clear

foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' `j' [pw=w_f`gend'_`x'],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) merge or
}
di "GLM `num'm spending"
outreg, replay
local j "if r_death_year<=2010"
}

local j
foreach num in 12 24 {
qui outreg, clear
di "OLS difference `num'm spending"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
reg difference`num' `x' `rvarsa2' `svarsa2' `region' `j' [pw=w_f`gend'_`x'] 
qui outreg, stats(b p) merge
}
local j "if r_death_year<=2010"

outreg, replay
}
local j
foreach num in 12 24 {
qui outreg, clear
di "# hospital admits `num'm"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
nbreg s_n_ip_admit_p`num'm `x' `rvarsa2' `svarsa2' `region' `j' [pw=w_f`gend'_`x']  
qui outreg, stats(e_b p) merge
}
outreg, replay
local j "if r_death_year<=2010"

}


local j
foreach num in 12 24 {
qui outreg, clear
di "# ED visits `num'm"
foreach x in r_spending r_loc_hos r_hs_3d r_spend_or {
nbreg s_n_ed_p`num'm `x' `rvarsa2' `svarsa2' `region' [pw=w_f`gend'_`x']  
qui outreg, stats(e_b p) merge
}
outreg, replay
local j "if r_death_year<=2010"

}

log close
}


H="poster outcomes"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data


cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta
by r_loc_, sort: gen n=_N if !missing(w_r_loc)

gen s_tot_paid_by_mc_6m18m=s_tot_paid_by_mc_18m-s_tot_paid_by_mc_6m

preserve
replace s_tot_paid_by_mc_12m=s_tot_paid_by_mc_6m18m
replace s_tot_paid_by_mc_24m=s_tot_paid_by_mc_6m18m

foreach m in 12 24 {
mat tab=J(2,10,.)
mat stars=J(2,10,0)
local r=1
local c=1




foreach x in n s_tot_paid_by_mc_`m'm s_tot_paid_by_mc_p`m'm s_n_hospd_p`m'm s_icu_days_p`m'm {
	foreach i in 1 0  {
		sum `x' if r_loc_==`i' [aw=w_r_loc]
		mat tab[`r',`c']==r(mean)
		if "`x'"!="n" & `i'==1 {
			nbreg `x' r_loc_ [pw=w_r_loc] if `x'>=0
			mat tab[`r',`c'+1]=e(p)
			mat stars[`r',`c'+1]=(e(p)<.05)+(e(p)<.01)
}
		local r=`r'+1
}
	local c=`c'+2
	local r=1
}
glm s_tot_paid_by_mc_`m'm r_loc_ [pw=w_r_loc], link(log) fam(gamma)
mat tab[1,4]=e(p)
mat stars[1,4]=(e(p)<.05)+(e(p)<.01)

glm s_tot_paid_by_mc_p`m'm r_loc_ [pw=w_r_loc], link(log) fam(gamma)
mat tab[1,6]=e(p)
mat stars[1,6]=(e(p)<.05)+(e(p)<.01)

if `m'==12 local table "replace"
if `m'==24 local table "addtable"

frmttable using "E:\data\spouse_claims\logs\postertable_outcomes.rtf", statmat(tab) ///
title(Spending and utilization by treatment intensity, `m'm after R death) ///
ctitles("" "N" "MC Spending 6-18m prior" "MC Spending" "Hospital days" "ICU days") ///
rtitles("R in-hospital death" \"" \"R no in-hospital death"\"") ///
annotate(stars) asymbol(*,**) substat(1) sdec(0,2) `table' ///
note("Weighted means") 
}


H="characteristics (table 1)"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta
***************************************************************
tab r_loc_hosp_x, missing

rename r_cc_*n12mn0 r_cc_*n12m


***************************************************************


*************************************************************************************
*************************************************************************************
//create Table 1, overall sample characteristics
*************************************************************************************
*************************************************************************************
//Part 1 - Decedent char
gen n=1
local rcvars r_age r_networth_adj2012_n1

local rivars r_female r_white_e r_hseduc  ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
 r_adl_independent_core_n1 r_srh_pf_n1 ///
 r_nhres_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_mod_n1 r_cc_3_alzhdmta_n12mn6m ///
r_cc_6_chrnkidn_n12mn6m r_cc_ami_isch_n12mn6m r_cc_8_chf_n12mn6m ///
r_cc_9_diabetes_n12mn6m r_cc_7_copd_n12mn6m r_cc_16_strketia_n12mn6m ///
r_cc_cncr_chronic_n12mn6m r_cc_4_atrialfb_n12mn6m r_cc_11_hipfrac_n12mn6m ///
r_cc_13_depressn_n12mn6m r_cc_14_osteoprs_n12mn6m r_cc_15_ra_oa_n12mn6m r_loc_hosp_x ///
r_advdir_x r_dexp_x r_discuss_x  


local scvars s_age s_networth_adj2012_n1

local sivars s_female s_white_e s_hseduc  ///
 s_medicaid_n1 s_champus_n1 s_medigap_n1 ///
 s_adl_independent_core_n1 s_srh_pf_n1 ///
 s_nhres_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_cc_3_alzhdmta_n12m ///
s_cc_6_chrnkidn_n12m s_cc_ami_isch_n12m s_cc_8_chf_n12m ///
s_cc_9_diabetes_n12m s_cc_7_copd_n12m s_cc_16_strketia_n12m ///
s_cc_cncr_chronic_n12m s_cc_4_atrialfb_n12m s_cc_11_hipfrac_n12m ///
s_cc_13_depressn_n12m s_cc_14_osteoprs_n12m s_cc_15_ra_oa_n12m ///


la var r_age "Age at death, years"
la var r_loc_ "Died in Hospital"
la var r_married_x "Married at death"
la var r_female "Female"
la var r_white_e "Race, White, Non-Hispanic"
la var r_hseduc "Education, High School Deg"
la var r_medicaid_n1  "Medicaid"
la var r_champus_n1  "VA Insurance"
la var r_medigap_n1 "Medigap"
la var r_adl_independent_core_n1 "ADL Independent"
la var r_srh_pf_n1 "SRH poor or fair**"
la var r_advdir_x "Had advanced directive"
la var r_dexp_x  "Death expected by family"
la var r_discuss_x "Discussion of EOL care"
la var s_age "Age at death, years"
la var s_loc_hosp_x "Died in Hospital"
la var s_married_x "Married at death"
la var s_female "Female"
la var s_white "Race, White, Non-Hispanic"
la var s_hseduc "Education, High School Deg"
la var s_medicaid_n1  "Medicaid"
la var s_champus_n1  "VA Insurance"
la var s_medigap_n1 "Medigap"
la var s_adl_independent_core_n1 "ADL Independent"
la var s_srh_pf_n1 "SRH poor or fair"
la var r_s_death_24m "S death within 2 years"


local rn: word count `rcvars' `rivars' n 
mat tab=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

svyset [pw=w_r_loc]


foreach s in r s {
	foreach loc in 0 1 {
		foreach v in ``s'cvars' {
			sum `v' if r_loc_==`loc' [aw=w_r_loc]
			mat tab[`r',`c']=r(mean)
			mat tab[`r',`c'+1]=r(sd)
			if `loc'==1 {
				svy: mean `v', over(r_loc_)
				test [`v']0=[`v']1
				mat stars[`r',`c']=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach v in ``s'ivars' {
			sum `v' if r_loc_==`loc' [aw=w_r_loc]
			mat tab[`r',`c']=r(mean)*100
			if `loc'==1 & "`v'"!="r_loc_hosp_x" {
				svy: tab `v' r_loc_
				mat stars[`r',`c']=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
		local r=`r'+1
}	
	sum n if r_loc_==`loc' [aw=w_r_loc]
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+2
}
}
mat rownames tab=`rcvars' `rivars' N

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, statmat(tab) title(Table 1) ///
ctitles("" "Decedent variables" "" "Surviving Spouse" \"" "Control" "R Death in Hospital" ///
"Control" "R Death in Hospital") sdec(2) replace subst(1) annotate(stars) ///
asymbol(*,**) varlabels note("*p<.05,**p<.01")



H="3 month spending graphs"
/*General data setup for the dataset
Limited to decedents with FFS MC 6m prior to Index Date, partner at time of Index Date,
with mc id*/

capture log close

clear all
set more off

//Server file paths
local logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_intensmatched.dta
cd `logpath'
svyset [pw=w_r_loc]
//note-you can use these next lines to drop the top 3% of pre-Index Date_spenders
/*
gen perstime=s_cont_ffs_n_mos
replace perstime=24 if perstime>24
gen npt=s_s_tot_paid_by_mc_24m/perstime
gen pperstime=s_cont_ffs_p_mos
replace pperstime=24 if ppers>24
gen ppt=s_s_tot_paid_by_mc_p24m/pperstime
gen pt=npt+ppt
gsort -npt
drop if _n<50
*/

forvalues n=1(3)24 {
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' [aw=w_r_loc_]
	gen ffs_tot`n'=. 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' [aw=w_r_loc_]
	gen ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==0 [aw=w_r_loc_]
	gen m_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==0 [aw=w_r_loc_]
	gen m_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==1 [aw=w_r_loc_]
	gen f_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==1 [aw=w_r_loc_]
	gen f_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' [aw=w_r_loc_]
	gen s_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' [aw=w_r_loc_]
	gen s_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==0 [aw=w_r_loc_]
	gen m_s_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==0 [aw=w_r_loc_]
	gen m_s_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==1 [aw=w_r_loc_]
	gen f_s_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==1 [aw=w_r_loc_]
	gen f_s_ffs_tot`=`n'+25'=.
}

foreach x of varlist *ffs_tot* {
gen sd`x'=.
}
sort r_loc_
foreach ind in 0 1 {
forvalues n=1(3)24 {
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_n_mos>=`n' [aw=w_r_loc_]
	replace ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_n_mos>=`n' 
	replace sdffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_n_mos>=`n'
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=`n' [aw=w_r_loc_]
	replace ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=`n'
	replace sdffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=`n'
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==0 [aw=w_r_loc_]
	replace m_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==0 
	replace sdm_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==0 [aw=w_r_loc_]
	replace m_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==0 
	replace sdm_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==1 [aw=w_r_loc_]
	replace f_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==1 
	replace sdf_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==1 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==1 [aw=w_r_loc_]
	replace f_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==1 
	replace sdf_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==1 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_p_mos>=24 [aw=w_r_loc_]
	replace s_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24
	replace sds_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=24 [aw=w_r_loc_]
	replace s_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 
	replace sds_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 [aw=w_r_loc_]
	replace m_s_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	replace sdm_s_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 [aw=w_r_loc_]
	replace m_s_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	replace sdm_s_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 [aw=w_r_loc_]
	replace f_s_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
	replace sdf_s_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 [aw=w_r_loc_]
	replace f_s_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
	replace sdf_s_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
}
}


/*
forvalues n=1(3)24 {
	by r_loc_, sort: gen tot_ffs_n`n'=s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' 
	by r_loc_, sort: gen tot_ffs_p`n'=s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n'
	by r_loc_, sort: egen ffs_tot`n'=mean(tot_ffs_n`n')
	by r_loc_, sort: egen ffs_tot`=`n'+25'=mean(tot_ffs_p`n')
	by r_loc_, sort: egen m_ffs_tot`n'=mean(tot_ffs_n`n') if s_female==0
	by r_loc_, sort: egen m_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if s_female==0
	by r_loc_, sort: egen f_ffs_tot`n'=mean(tot_ffs_n`n') if s_female==1
	by r_loc_, sort: egen f_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if s_female==1
	by r_loc_, sort: egen s_ffs_tot`n'=mean(tot_ffs_n`n') if inscope_p_mos>=24
	by r_loc_, sort: egen s_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if inscope_p_mos>=24 
	by r_loc_, sort: egen f_s_ffs_tot`n'=mean(tot_ffs_n`n') if inscope_p_mos>=24 & s_female==1  
	by r_loc_, sort: egen f_s_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if inscope_p_mos>=24 & s_female==1 
	by r_loc_, sort: egen m_s_ffs_tot`n'=mean(tot_ffs_n`n') if inscope_p_mos>=24 & s_female==0 
	by r_loc_, sort: egen m_s_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if inscope_p_mos>=24 & s_female==0 

}
*/
keep s_id *ffs_tot* s_female r_death_date_e r_loc_

foreach x of varlist ffs* m_* f_* s_ffs* {
	gen n`x'=.
	foreach i in 0 1 {
	sum `x' if r_loc_==`i'
	replace n`x'=r(N) if r_loc_==`i' & !missing(`x')
}
}
reshape long ffs_tot tot_ffs f_ffs_tot m_ffs_tot s_ffs_tot m_s_ffs_tot ///
 f_s_ffs_tot  sdffs_tot  sdf_ffs_tot sdm_ffs_tot sds_ffs_tot sdm_s_ffs_tot ///
 sdf_s_ffs_tot nffs_tot  nf_ffs_tot nm_ffs_tot ns_ffs_tot nm_s_ffs_tot ///
 nf_s_ffs_tot , i(s_id r_death_date_e) j(t)
gen source="comparison" if !r_loc_
replace source="spouse" if r_loc_
gen time=-(t+2)/3 if t<=24
replace time=(t-23)/3 if t>=24

label define time -8 "21-24m" -7 "19-21" -6 "16-18" -5 "13-15" -4 "9-12" ///
 -3 "7-9" -2 "4-6" -1 "0-3" 8 "21-24m" 7 "19-21" 6 "16-18" 5 "13-15" 4 "9-12" ///
 3 "7-9" 2 "4-6" 1 "0-3" 
label values time time
preserve
collapse m_s_ffs_tot f_s_ffs_tot ffs_tot f_ffs_tot m_ffs_tot s_ffs_tot  ///
 sdm_s_ffs_tot sdf_s_ffs_tot sdffs_tot sdf_ffs_tot sdm_ffs_tot sds_ffs_tot ///
 nm_s_ffs_tot nf_s_ffs_tot nffs_tot nf_ffs_tot nm_ffs_tot ns_ffs_tot, by(time source)

foreach x in ffs_tot f_ffs_tot m_ffs_tot s_ffs_tot m_s_ffs_tot f_s_ffs_tot {
by time source, sort: gen ulci`x'=`x'+invttail(n`x'-1,0.025)*(sd`x'/sqrt(n`x'))
by time source, sort: gen llci`x'=`x'-invttail(n`x'-1,0.025)*(sd`x'/sqrt(n`x'))
}
label var ffs_tot "Total MC Spending, all in scope"
label var f_ffs_tot "Total MC Spending, females"
label var m_ffs_tot "Total MC Spending, males"
label var s_ffs_tot "Total MC Spending, 24m Survivors only"
gen before=time if time<0
gen after=time if time>0


/*
foreach x in ffs_tot  {
twoway (connected m_`x' time if source=="spouse") (connected f_`x' time if source=="spouse") ///
(connected m_`x' time if source=="comparison") (connected f_`x' time if source=="comparison") , ///
 xline(0) xtitle("Months from index date")title("Mean Medicare Costs By Time from Index Date, 3month intervals") ///
 xlab(-8 -4 -1 1 4 8, valuelabel) ///
 note("WI Adjusted to 2012 $") subtitle("by gender ") legend(label(1 "Male Spouses") ///
label(2 "Female Spouses") label(3 "Male Comparison") label(4 "Female Comparison")) ///
  
graph save mc_costs_spouse_death_hosp_gender`x'.gph, replace
graph export mc_costs_spouse_death_hosp_gender_tot3months.pdf, replace

}

foreach x in ffs_tot  {
twoway (connected m_`x' time) (connected f_`x' time) (lfit m_`x' before) (lfit m_`x' after) ///
(lfit f_`x' before) (lfit f_`x' after), ///
 xline(0) xtitle("Months from index date")title("Mean Medicare Costs By Time from Index Date, 3month intervals") ///
 xlab(-8 -4 -1 1 4 8, valuelabel) ///
 note("WI Adjusted to 2012 $") subtitle("by gender ") legend(label(1 "Males") ///
label(2 "Females"))   
graph save mc_costs_spouse_death_hosp_gender`x'.gph, replace
graph export mc_costs_spouse_death_hosp_gender_tot3months_prepost.pdf, replace

}
*/
/*
foreach x in s_ffs_tot {
twoway (connected m_`x' time if source=="spouse") (connected f_`x' time if source=="spouse") ///
(connected m_`x' time if source=="comparison") (connected f_`x' time if source=="comparison") , ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel) ///
note("WI Adjusted to 2012 $" "24m survivors only") subtitle("by gender ") ///
legend(label(1 "Male Spouses") ///
label(2 "Female Spouses") label(3 "Male Comparison") label(4 "Female Comparison")) ///
  
graph save mc_costs_spouse_death_hosp_gender`x'.gph, replace
graph export mc_costs_spouse_death_hosp_gender_survivors3months.pdf, replace
}

foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012 $") subtitle("All `gend' Respondents")  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///
 ytitle()
graph save mc_costs_spouse_death_hosp_all, replace
graph export "Non-CI graphs/mc_costs_spouse_death_hosp_`g'all3months.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison"), ///
 xline(0) xtitle("Months from index date") ytitle()  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)     ///
note("WI Adjusted to 2012 $" )  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///
 subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors, replace
graph export "Non-CI graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months.pdf", replace
}



foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison") ///
(rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="spouse") (rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012 $") subtitle("All `gend' Respondents")  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///
 ytitle()
graph save mc_costs_spouse_death_hosp_all_ci, replace
graph export "CI graphs/mc_costs_spouse_death_hosp_`g'all3months_ci.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison") ///
(rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="spouse") (rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="comparison"),  ///
 xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)  ytitle()    ///
note("WI Adjusted to 2012 $")  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///
 label(3 "") label(4 "") ) subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors_ci, replace
graph export "CI graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months_ci.pdf", replace
}
/*General data setup for the dataset
Limited to decedents with FFS MC 6m prior to Index Date, partner at time of Index Date,
with mc id*/
*/
foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012 $") subtitle("All `gend' Respondents")  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///

graph save mc_costs_spouse_death_hosp_all, replace
graph export "graphs/mc_costs_spouse_death_hosp_`g'all3months.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison"), ///
 xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)     ///
note("WI Adjusted to 2012 $" )  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///
 subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors, replace
graph export "graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months.pdf", replace
}

foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison") ///
(rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="spouse") (rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012 $") subtitle("All `gend' Respondents")  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///

graph save mc_costs_spouse_death_hosp_all_ci, replace
graph export "graphs/mc_costs_spouse_death_hosp_`g'all3months_ci.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison") ///
(rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="spouse") (rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="comparison"),  ///
 xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)     ///
note("WI Adjusted to 2012 $")  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///
 subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors_ci, replace
graph export "graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months_ci.pdf", replace
}


H="match by quartile of pre-spending"
/*Limited to decedents with FFS MC 6m prior to death, married at time of death,
with spouse mc id*/
clear all
mata: mata clear
set more off
capture log close
import excel "E:\data\Dartmouth_misc\EOL_mc_2yrs_HRR\DAP_HRR_03_07_to_merge.xls", sheet("Sheet1") firstrow case(lower) clear
keep hrr totalmedic
rename hrr hrrnum
xtile eol_spending_quintile=tot, nq(5)
xtile eol_spending_quartile=tot, nq(4)
gen eol_spending_3_cat=eol_spending_quartile
replace eol_spending_3_cat=eol_spending_3_cat-1 if inlist(eol_spending_3_cat,3,4)
label define eol_spending_3_cat 1 "Bottome Quartile" 2 "Middle 50%" 3 "Top quartile"
label values eol_spending_3_cat eol_spending_3_cat
gen eol_spending_low=eol_spending_3_cat==1
gen eol_spending_mid=eol_spending_3_cat==2
gen eol_spending_high=eol_spending_3_cat==3
label var eol_spending_low "Bottom Quartile EOL spending by Dartmouth HRR"
label var eol_spending_mid "Middle 50% EOL spending by Dartmouth HRR"
label var eol_spending_high "Top Quartile EOL spending by Dartmouth HRR"
label var eol_spending_3_cat "EOL Spending Group by Dartmouth HRR, Adjusted"
label var eol_spending_quintile "EOL Spending Quintile by Dartmouth HRR, Adjusted"
tempfile temp1
save "`temp1'"



use "E:\data\hrs_public_2012\dementia\pdem_withvarnames_ebl.dta", clear
destring id, gen(r_id)
rename core_year r_core_year_n1
tempfile temp2
save `temp2'

//Server file paths
global logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_v1 if (s_part_ab_6m==1 & s_hmo_d_6m==0) & s_core_year_n1<2012 //& (r_part_ab_6m==1 & r_hmo_d_6m==0)
*merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_intens_data_ps_set.dta" , gen(spmerge) ///
 *keep(match)
merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_data_full.dta" , gen(spmerge) keep(match)
merge 1:1 r_id r_core_year_n1 using `temp2', gen(demmerge) keep(match master)
merge m:1 hrrnum using `temp1', gen(hrrmerge) keep(match master)
*********************************************************
*********************************************************
//indicators of intensity-hospice 3+days, top quartile spending last 6m, and death in hosp (already there)
gen r_hs_3d_6m=r_hs_los_6m>=3


//get quartile of spending for match
gen s_tot_paid_by_mc_wi_6m18m=s_tot_paid_by_mc_wi_18m-s_tot_paid_by_mc_wi_6m
xtile spend_quart=s_tot_paid_by_mc_wi_6m18m , nq(4)
gen spend_quart4=spend_quart==4
sum r_tot_paid_by_mc_wi_6m, d
gen r_spending_6m_high=r_tot_paid_by_mc_wi_6m>=r(p75)

label var r_hs_3d "R Hospice use 3+ days last 6m"
label var r_spending_6m_high "R Medicare spending top quartile last 6m"


gen r_spend_or_hosp_death=r_spending_6m_high==1 | r_loc_==1
foreach s in r s {
foreach n in n1 n2 {
gen `s'_hrs_comorb_mild_`n'=`s'_comor_c_hrs_`n'==0
gen `s'_hrs_comorb_mod_`n'=`s'_comor_c_hrs_`n'==1
}
}
//where r&s highly correlated, use s
local rvarsa r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x  r_adl_impair_n1 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

tab eol_spending_quartile, gen(eol_spend_quart)
label var eol_spend_quart1 "Quartile EOL spending by HRR: Low"
label var eol_spend_quart2 "Quartile EOL spending by HRR: Mid-low"
label var eol_spend_quart3 "Quartile EOL spending by HRR: Mid-high"
label var eol_spend_quart4 "Quartile EOL spending by HRR: High"
local region /*eol_spend_quart2 eol_spend_quart3*/ eol_spend_quart4
//categorical spouse primary helper, duration'
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing
gen r_s_help_dur_cat = 0 if r_adl_sp_helper_x==0 & r_iadl_sp_helper_x==0
replace r_s_help_dur_cat = 1 if r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1
replace r_s_help_dur_cat = 2 if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) ///
 & ( r_adl_sp_helper_n1==1 | r_iadl_sp_helper_n1==1)
la def help 0 "S not primary helper x" 1 "S primary helper x only" 2 "S primary helper x+n1"
la val r_s_help_dur_cat help
tab r_s_help_dur_cat, gen(r_s_help_dur_ind)
label var r_s_help_dur_ind2 "S primary helper x only" 
label var r_s_help_dur_ind3 "S primary helper x+n1"
local svarsa s_age s_female s_race_cat1  ///
s_hseduc s_srh_pf_n1 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr

local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_independent_core_n1 ///
 likely_dem r_hrs_comorb_mod_n1 r_hrs_comorb_mild_n1 r_death_year

local svars s_age s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_adl_independent_core_n1 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 

/*local n1s srh_pf hrs_comorb_mild hrs_comorb_mod ///
nw_midlow nw_midhigh nw_highest  hrs_comorb_mod hrs_comorb_mild ///
adl_independent_core nhres */
sum `rvars' `svars' `region'
foreach x of local n1s {
foreach s in r s {
replace `s'_`x'_n1=`s'_`x'_n2 if r_death_date_e-`s'_c_ivw_date_n1<=183
}
}
local treatvars r_loc_hosp_x //r_hs_3d_6m  r_spending_6m_high r_spend_or_hosp_death 
tokenize `treatvars'
local max : word count `treatvars'

gen quartile_weight=.
gen topquartile_weight=.
forvalues i=1/`max' {
di "`i'"
log using $logpath\spouse_claims_match_``i''`time'.txt, text replace

*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
cap drop ip_* logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1
/*foreach quart in 1 2 3 4 {

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  ``i''  if spend_quart==`quart',outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' if spend_quart==`quart',treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time''  {
sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace quartile_weight=_weight if missing(quartile_weight)
} 

*/

psmatch2  ``i'' ,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' `region' ,treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time''  {
sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

rename _weight w_``i''`time'


foreach quart in 0 1 {
drop ip_pscore ip_block logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region' if spend_quart4==`quart', ///
pscore(ip_pscore) blockid(ip_block) logit
tab ``i''
tab ``i'' if spend_quart4==`quart'
tab ``i'' if spend_quart4==`quart' & !missing(ip_pscore)
di "PS graph1"
di "``i''"
*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i''  if spend_quart4==`quart',outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight
di "PS graph2"
*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' if spend_quart4==`quart',treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
di "Compare variance here"
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time'' `region' {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace topquartile_weight=_w if missing(topquartile_we)
}


log close
}

save spouse_claims_intensmatched, replace



H="poster outcomes w/ quartiles"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data


cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta if !missing(w_r_loc)


gen s_tot_paid_by_mc_6m18m=s_tot_paid_by_mc_18m-s_tot_paid_by_mc_6m
sum s_tot_paid_by_mc_6m18m,d
gen group_all=1
gen group_1=s_tot_paid_by_mc_6m18m<=r(p25)
gen group_2=s_tot_paid_by_mc_6m18m>r(p25) & s_tot_paid_by_mc_6m18m<=r(p50)
gen group_3=s_tot_paid_by_mc_6m18m>r(p50) & s_tot_paid_by_mc_6m18m<=r(p75)
gen group_4=s_tot_paid_by_mc_6m18m>r(p75) 
gen group_5=!group_4

preserve
replace s_tot_paid_by_mc_12m=s_tot_paid_by_mc_6m18m
replace s_tot_paid_by_mc_24m=s_tot_paid_by_mc_6m18m

foreach m in 12 24 24 {

foreach i in 0 1 {
sum s_tot_paid_by_mc_6m18m if r_loc_==`i',d
replace group_1=s_tot_paid_by_mc_6m18m<=r(p25) if r_loc_==`i'
replace group_2=s_tot_paid_by_mc_6m18m>r(p25) & s_tot_paid_by_mc_6m18m<=r(p50) if r_loc_==`i'
replace group_3=s_tot_paid_by_mc_6m18m>r(p50) & s_tot_paid_by_mc_6m18m<=r(p75) if r_loc_==`i'
replace group_4=s_tot_paid_by_mc_6m18m>r(p75) if r_loc_==`i'
}

foreach group in all 1 2 3 4 5 {

by r_loc_ group_`group', sort: gen n=_N if group_`group'==1 
mat tab=J(2,10,.)
mat stars=J(2,10,0)
local r=1
local c=1




foreach x in n s_tot_paid_by_mc_`m'm s_tot_paid_by_mc_p`m'm s_n_hospd_p`m'm s_icu_days_p`m'm {
	foreach i in 1 0  {
		sum `x' if r_loc_==`i' & group_`group'==1 [aw=w_r_loc]
		mat tab[`r',`c']==r(mean)
		if "`x'"!="n" & `i'==1 {
			nbreg `x' r_loc_ [pw=w_r_loc] if `x'>=0 & group_`group'==1
			mat tab[`r',`c'+1]=e(p)
			mat stars[`r',`c'+1]=(e(p)<.05)+(e(p)<.01)
}
		local r=`r'+1
}
	local c=`c'+2
	local r=1
}
glm s_tot_paid_by_mc_`m'm r_loc_ [pw=w_r_loc] if group_`group'==1, link(log) fam(gamma)
mat tab[1,4]=e(p)
mat stars[1,4]=(e(p)<.05)+(e(p)<.01)

glm s_tot_paid_by_mc_p`m'm r_loc_ [pw=w_r_loc] if group_`group'==1, link(log) fam(gamma)
mat tab[1,6]=e(p)
mat stars[1,6]=(e(p)<.05)+(e(p)<.01)

if `m'==12 & "`group'"=="all" local table "replace"
else local table "addtable"
drop n
frmttable using "E:\data\spouse_claims\logs\postertable_outcomes.rtf", statmat(tab) ///
title(Spending and utilization by treatment intensity, `m'm after R death Group `group') ///
ctitles("" "N" "MC Spending 6-18m prior" "MC Spending" "Hospital days" "ICU days") ///
rtitles("R in-hospital death" \"" \"R no in-hospital death"\"") ///
annotate(stars) asymbol(*,**) substat(1) sdec(0,2) `table' ///
note("Weighted means") 
}

if `m'==24 keep if s_death_date_e-r_death_date_e>=731


}


H="poste outcomes top quartile v others"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data


cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta if !missing(topquartile_w)


gen s_tot_paid_by_mc_6m18m=s_tot_paid_by_mc_18m-s_tot_paid_by_mc_6m
sum s_tot_paid_by_mc_6m18m,d
gen group_all=1
gen group_1=s_tot_paid_by_mc_6m18m<=r(p25)
gen group_2=s_tot_paid_by_mc_6m18m>r(p25) & s_tot_paid_by_mc_6m18m<=r(p50)
gen group_3=s_tot_paid_by_mc_6m18m>r(p50) & s_tot_paid_by_mc_6m18m<=r(p75)
gen group_4=s_tot_paid_by_mc_6m18m>r(p75) 
gen group_5=!group_4
gen group_bottom_75=s_tot_paid_by_mc_6m18m<=r(p75)
gen group_top_quartile=s_tot_paid_by_mc_6m18m>r(p75)

preserve
replace s_tot_paid_by_mc_12m=!spend_quart4
replace s_tot_paid_by_mc_24m=spend_quart4

foreach m in 12 24 24 {

foreach group in all bottom_75 top_quartile {

by r_loc_ group_`group', sort: gen n=_N if group_`group'==1 
mat tab=J(2,10,.)
mat stars=J(2,10,0)
local r=1
local c=1




foreach x in n s_tot_paid_by_mc_6m18m s_tot_paid_by_mc_p`m'm s_n_hospd_p`m'm s_icu_days_p`m'm {
	foreach i in 1 0  {
		sum `x' if r_loc_==`i' & group_`group'==1 [aw=topquartile_w]
		mat tab[`r',`c']==r(mean)
		if inlist(substr("`x'",1,3),"s_n","s_i") & `i'==1 {
			nbreg `x' r_loc_ [pw=topquartile_w] if `x'>=0 & group_`group'==1
			mat tab[`r',`c'+1]=e(p)
			mat stars[`r',`c'+1]=(e(p)<.05)+(e(p)<.01)
}
		local r=`r'+1
}
	local c=`c'+2
	local r=1
}
glm s_tot_paid_by_mc_6m18m r_loc_ [pw=topquartile_w] if group_`group'==1, link(log) fam(gamma)
mat tab[1,4]=e(p)
mat stars[1,4]=(e(p)<.05)+(e(p)<.01)

glm s_tot_paid_by_mc_p`m'm r_loc_ [pw=topquartile_w] if group_`group'==1, link(log) fam(gamma)
mat tab[1,6]=e(p)
mat stars[1,6]=(e(p)<.05)+(e(p)<.01)

if `m'==12 & "`group'"=="all" local table "replace"
else local table "addtable"
drop n
frmttable using "E:\data\spouse_claims\logs\postertable_outcomes_top_quartile_bottom_75.rtf", statmat(tab) ///
title(Spending and utilization by treatment intensity, `m'm after R death Group `group') ///
ctitles("" "N" "MC Spending 6-18m prior" "MC Spending" "Hospital days" "ICU days") ///
rtitles("R in-hospital death" \"" \"R no in-hospital death"\"") ///
annotate(stars) asymbol(*,**) substat(1) sdec(0,2) `table' ///
note("Weighted means") 
}

if `m'==24 keep if s_death_date_e-r_death_date_e>=731


}


H="margins instead of weighted means"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta
capture log close
cap gen difference12=s_tot_paid_by_mc_wi_p12m-s_tot_paid_by_mc_wi_12m
cap gen difference24=s_tot_paid_by_mc_wi_p24m-s_tot_paid_by_mc_wi_24m
/*local rvarsa2 r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_independent_core_n1 ///
 likely_dem r_hrs_comorb_mod_n1 r_hrs_comorb_mild_n1 r_death_year

local svarsa2 s_age s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1 s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 r_s_help_dur_ind2 r_s_help_dur_ind3 ///
/*s_tot_paid_by_mc_wi_12m*/s_adl_independent_core_n1*/
local rvarsa2 r_age i.r_nhres_n1 i.r_srh_pf_n1 i.r_advdir_x i.r_dexp_x i.r_adl_independent_core_n1 ///
 likely_dem i.r_hrs_comorb_mod_n1 i.r_hrs_comorb_mild_n1 

local svarsa2 s_age i.s_nw_midlow_n1 i.s_nw_midhigh_n1 i.s_nw_highest_n1 i.s_white_e ///
i.s_hseduc i.s_srh_pf_n1 i.s_hrs_comorb_mild_n1 i.s_hrs_comorb_mod_n1 i.s_adl_independent_core_n1 ///
i.r_s_help_dur_ind1 


local region /*eol_spend_quart2 eol_spend_quart3*/ eol_spend_quart4
local year "" "if r_death_year<=2010"
local j
foreach b in bonnet {
log using "E:\data\spouse_claims\logs\regressions_utilization.txt",text replace
foreach num in 12 24 {
outreg, clear

foreach x in  r_loc_hos { //r_spending r_hs_3d r_spend_or {
qui glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'],link(log) fam(gamma) eform 
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge 
}
di "GLM `num'm spending"
outreg, replay
local j "if r_death_year<=2010"
}
/*
local j
foreach num in 12 24 {
outreg, clear
di "OLS difference `num'm spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg difference`num' `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'] 
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
local j "if r_death_year<=2010"

outreg, replay
}*/
local j
foreach num in 12 24 {
outreg, clear
di "Any hospital admit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_admit_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x']  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<=2010"

}


local j
foreach num in 12 24 {
outreg, clear
di "Any ED visit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_ed_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x']  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<=2010"

}

/*
outreg, clear
di "OLS"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg s_tot_paid_by_mc_wi_p12m `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x']  
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

qui sum s_tot_paid_by_mc_wi_p12m, d
//qui gen s_spending_p12m_high=s_tot_paid_by_mc_wi_p12m>r(p75)

/*
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
glm difference `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}
di "GLM"
outreg, replay
*/
outreg, clear
di "OLS difference"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg difference `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'] 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_spending_p12m_high `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_admit_ind_p12m `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

*/

local j
foreach num in 12 24 {
qui outreg, clear

foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) merge or
}
di "GLM `num'm spending"
*outreg, replay
local j "if r_death_year<=2010"
}
/*
local j
foreach num in 12 24 {
* qui outreg, clear
di "OLS difference `num'm spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
reg difference`num' `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'] 
qui outreg, stats(b p) merge
}
local j "if r_death_year<=2010"

*outreg, replay
}*/
local j
foreach num in 12 24 {
* qui outreg, clear
di "Any hospital admit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
logit s_admit_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x']  , or
qui outreg, stats(e_b p) merge
}
*outreg, replay
local j "if r_death_year<=2010"

}


local j
foreach num in 12 24 {
* qui outreg, clear
di "Any ED visit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
logit s_ed_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x']  ,or
qui outreg, stats(e_b p) merge
}
*outreg, replay
local j "if r_death_year<=2010"

}
}
log close

outreg using "`logpath'\regressions.rtf", replay replace


H="more regressions"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\regression_outcomes.txt", text replace
cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta if !missing(w_r_loc)


local rvars r_age i.r_nhres_n1 i.r_srh_pf_n1 i.r_advdir_x i.r_dexp_x i.r_adl_independent_core_n1 ///
 likely_dem i.r_hrs_comorb_mod_n1 i.r_hrs_comorb_mild_n1 

local svars s_age i.s_nw_midlow_n1 i.s_nw_midhigh_n1 i.s_nw_highest_n1 i.s_white_e ///
i.s_hseduc i.s_srh_pf_n1 i.s_hrs_comorb_mild_n1 i.s_hrs_comorb_mod_n1 i.s_adl_independent_core_n1 ///
i.r_s_help_dur_ind1 
local region eol_spend_quart2 eol_spend_quart3 eol_spend_quart4

by r_loc_, sort: gen n=_N if !missing(w_r_loc)

*gen s_tot_paid_by_mc_wi_6m18m=s_tot_paid_by_mc_wi_18m-s_tot_paid_by_mc_wi_6m

preserve
replace s_tot_paid_by_mc_wi_12m=s_tot_paid_by_mc_wi_6m18m
replace s_tot_paid_by_mc_wi_24m=s_tot_paid_by_mc_wi_6m18m

foreach m in 12 24 {
mat tab=J(2,10,.)
mat stars=J(2,10,0)
local r=1
local c=1




foreach x in n s_tot_paid_by_mc_wi_`m'm s_tot_paid_by_mc_wi_p`m'm s_n_hospd_p`m'm s_icu_days_p`m'm {
	foreach i in 1 0  {
		sum `x' if r_loc_==`i' [aw=w_r_loc]
		mat tab[`r',`c']==r(mean)
		if "`x'"!="n" & `i'==1 {
			nbreg `x' r_loc_ [pw=w_r_loc] if `x'>=0
			mat tab[`r',`c'+1]=e(p)
			mat stars[`r',`c'+1]=(e(p)<.05)+(e(p)<.01)
}
		local r=`r'+1
}
	local c=`c'+2
	local r=1
}
glm s_tot_paid_by_mc_wi_`m'm r_loc_ [pw=w_r_loc], link(log) fam(gamma)
mat tab[1,4]=e(p)
mat stars[1,4]=(e(p)<.05)+(e(p)<.01)

glm s_tot_paid_by_mc_wi_p`m'm r_loc_ [pw=w_r_loc], link(log) fam(gamma)
mat tab[1,6]=e(p)
mat stars[1,6]=(e(p)<.05)+(e(p)<.01)

if `m'==12 local table "replace"
if `m'==24 local table "addtable"

frmttable using "E:\data\spouse_claims\logs\postertable_outcomes.rtf", statmat(tab) ///
title(Spending and utilization by treatment intensity, `m'm after R death) ///
ctitles("" "N" "MC Spending 6-18m prior" "MC Spending" "Hospital days" "ICU days") ///
rtitles("R in-hospital death" \"" \"R no in-hospital death"\"") ///
annotate(stars) asymbol(*,**) substat(1) sdec(0,2) `table' ///
note("Weighted means") 

drop if r_death_year==2011
}


glm s_tot_paid_by_mc_wi_p12m i.r_loc_ `rvars' `svars' `region' i.r_death_year [pw=w_r_loc_], link(log) fam(gamma)
margins, dydx(*) post
outreg, varlabels
nbreg


H="topquartile regressions"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta if spend_quart4==1
capture log close
cap gen difference12=s_tot_paid_by_mc_wi_p12m-s_tot_paid_by_mc_wi_12m
cap gen difference24=s_tot_paid_by_mc_wi_p24m-s_tot_paid_by_mc_wi_24m
/*local rvarsa2 r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_independent_core_n1 ///
 likely_dem r_hrs_comorb_mod_n1 r_hrs_comorb_mild_n1 r_death_year

local svarsa2 s_age s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1 s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 r_s_help_dur_ind2 r_s_help_dur_ind3 ///
/*s_tot_paid_by_mc_wi_12m*/s_adl_independent_core_n1*/
local rvarsa2 r_age i.r_nhres_n1 i.r_srh_pf_n1 i.r_advdir_x i.r_dexp_x i.r_adl_independent_core_n1 ///
 likely_dem i.r_hrs_comorb_mod_n1 i.r_hrs_comorb_mild_n1 

local svarsa2 s_age i.s_nw_midlow_n1 i.s_nw_midhigh_n1 i.s_nw_highest_n1 i.s_white_e ///
i.s_hseduc i.s_srh_pf_n1 i.s_hrs_comorb_mild_n1 i.s_hrs_comorb_mod_n1 i.s_adl_independent_core_n1 ///
i.r_s_help_dur_ind1 


local region /*eol_spend_quart2 eol_spend_quart3*/ eol_spend_quart4
local year "" "if r_death_year<=2010"
local j
foreach b in bonnet {
log using "E:\data\spouse_claims\logs\regressions_utilization_top_quartile.txt",text replace
foreach num in 12 24 {
outreg, clear

foreach x in  r_loc_hos { //r_spending r_hs_3d r_spend_or {
qui glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=topquartile_weight],link(log) fam(gamma) eform 
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge 
}
di "GLM `num'm spending"
outreg, replay
local j "if r_death_year<=2010"
}
/*
local j
foreach num in 12 24 {
outreg, clear
di "OLS difference `num'm spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg difference`num' `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=topquartile_weight] 
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
local j "if r_death_year<=2010"

outreg, replay
}*/
local j
foreach num in 12 24 {
outreg, clear
di "Any hospital admit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_admit_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=topquartile_weight]  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<=2010"

}


local j
foreach num in 12 24 {
outreg, clear
di "Any ED visit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_ed_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=topquartile_weight]  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<=2010"

}

/*
outreg, clear
di "OLS"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg s_tot_paid_by_mc_wi_p12m `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=topquartile_weight]  
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

qui sum s_tot_paid_by_mc_wi_p12m, d
//qui gen s_spending_p12m_high=s_tot_paid_by_mc_wi_p12m>r(p75)

/*
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
glm difference `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=topquartile_weight],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}
di "GLM"
outreg, replay
*/
outreg, clear
di "OLS difference"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg difference `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=topquartile_weight] 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_spending_p12m_high `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=topquartile_weight] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_admit_ind_p12m `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=topquartile_weight] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

*/

local j
foreach num in 12 24 {
qui outreg, clear

foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=topquartile_weight],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) merge or
}
di "GLM `num'm spending"
*outreg, replay
local j "if r_death_year<=2010"
}
/*
local j
foreach num in 12 24 {
* qui outreg, clear
di "OLS difference `num'm spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
reg difference`num' `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=topquartile_weight] 
qui outreg, stats(b p) merge
}
local j "if r_death_year<=2010"

*outreg, replay
}*/
local j
foreach num in 12 24 {
* qui outreg, clear
di "Any hospital admit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
logit s_admit_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=topquartile_weight]  , or
qui outreg, stats(e_b p) merge
}
*outreg, replay
local j "if r_death_year<=2010"

}


local j
foreach num in 12 24 {
* qui outreg, clear
di "Any ED visit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
logit s_ed_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=topquartile_weight]  ,or
qui outreg, stats(e_b p) merge
}
*outreg, replay
local j "if r_death_year<=2010"

}
}
log close

outreg using "`logpath'\regressions.rtf", replay replace


H="24m survivors only match"
/*Limited to decedents with FFS MC 6m prior to death, married at time of death,
with spouse mc id*/
clear all
capture log close

//Server file paths
global logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_intensmatched if s_cont_ffs_p_mos>=24
gen topquartile_weight_24=.
tokenize r_loc_hosp_x
local region /*eol_spend_quart2 eol_spend_quart3*/ eol_spend_quart4
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_independent_core_n1 ///
 likely_dem r_hrs_comorb_mod_n1 r_hrs_comorb_mild_n1 r_death_year

local svars s_age s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_adl_independent_core_n1 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 

foreach i in 1 {
di "`i'"
log using $logpath\spouse_claims_match_``i''`time'_24.txt, text replace

*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
cap drop ip_* logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region', pscore(ip_pscore) blockid(ip_block) logit

*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1
/*foreach quart in 1 2 3 4 {

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  ``i''  if spend_quart==`quart',outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' if spend_quart==`quart',treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time''  {
sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace quartile_weight=_weight if missing(quartile_weight)
} 

*/

psmatch2  ``i'' ,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' `region' ,treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time''  {
sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

rename _weight w_``i''`time'_24


foreach quart in 0 1 {
drop ip_pscore ip_block logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region' if spend_quart4==`quart', ///
pscore(ip_pscore) blockid(ip_block) logit
tab ``i''
tab ``i'' if spend_quart4==`quart'
tab ``i'' if spend_quart4==`quart' & !missing(ip_pscore)
di "PS graph1"
di "``i''"
*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i''  if spend_quart4==`quart',outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight
di "PS graph2"
*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' if spend_quart4==`quart',treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
di "Compare variance here"
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time'' `region' {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace topquartile_weight_24=_w if missing(topquartile_weight_24)
}


log close
}

save spouse_claims_intensmatched_24m, replace



H="poster tables and margins"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1_24m.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched_24m.dta
capture log close
cap gen difference12=s_tot_paid_by_mc_wi_p12m-s_tot_paid_by_mc_wi_12m
cap gen difference24=s_tot_paid_by_mc_wi_p24m-s_tot_paid_by_mc_wi_24m
/*local rvarsa2 r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_independent_core_n1 ///
 likely_dem r_hrs_comorb_mod_n1 r_hrs_comorb_mild_n1 r_death_year

local svarsa2 s_age s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1 s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 r_s_help_dur_ind2 r_s_help_dur_ind3 ///
/*s_tot_paid_by_mc_wi_12m*/s_adl_independent_core_n1*/
local rvarsa2 r_age i.r_nhres_n1 i.r_srh_pf_n1 i.r_advdir_x i.r_dexp_x i.r_adl_independent_core_n1 ///
 likely_dem i.r_hrs_comorb_mod_n1 i.r_hrs_comorb_mild_n1 

local svarsa2 s_age i.s_nw_midlow_n1 i.s_nw_midhigh_n1 i.s_nw_highest_n1 i.s_white_e ///
i.s_hseduc i.s_srh_pf_n1 i.s_hrs_comorb_mild_n1 i.s_hrs_comorb_mod_n1 i.s_adl_independent_core_n1 ///
i.r_s_help_dur_ind1 


local region /*eol_spend_quart2 eol_spend_quart3*/ eol_spend_quart4
local year "" "if r_death_year<=2010"
local j
foreach b in bonnet {
log using "E:\data\spouse_claims\logs\regressions_utilization.txt",text replace
foreach num in 12 24 {
outreg, clear

foreach x in  r_loc_hosp_x{ //r_spending r_hs_3d r_spend_or {
qui glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'_24],link(log) fam(gamma) eform 
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge 
}
di "GLM `num'm spending"
outreg, replay
local j "if r_death_year<=2010"
}
/*
local j
foreach num in 12 24 {
outreg, clear
di "OLS difference `num'm spending"
foreach x in r_loc_hosp_x{ //r_spending r_loc_hosp_xr_hs_3d r_spend_or 
qui reg difference`num' `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'_24] 
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
local j "if r_death_year<=2010"

outreg, replay
}*/
local j
foreach num in 12 24 {
outreg, clear
di "Any hospital admit `num'm"
foreach x in r_loc_hosp_x{ //r_spending r_loc_hosp_xr_hs_3d r_spend_or 
qui logit s_admit_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'_24]  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<=2010"

}


local j
foreach num in 12 24 {
outreg, clear
di "Any ED visit `num'm"
foreach x in r_loc_hosp_x{ //r_spending r_loc_hosp_xr_hs_3d r_spend_or 
qui logit s_ed_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'_24]  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<=2010"

}

/*
outreg, clear
di "OLS"
foreach x in r_loc_hosp_x{ //r_spending r_loc_hosp_xr_hs_3d r_spend_or 
qui reg s_tot_paid_by_mc_wi_p12m `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'_24]  
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

qui sum s_tot_paid_by_mc_wi_p12m, d
//qui gen s_spending_p12m_high=s_tot_paid_by_mc_wi_p12m>r(p75)

/*
foreach x in r_loc_hosp_x{ //r_spending r_loc_hosp_xr_hs_3d r_spend_or 
glm difference `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'_24],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}
di "GLM"
outreg, replay
*/
outreg, clear
di "OLS difference"
foreach x in r_loc_hosp_x{ //r_spending r_loc_hosp_xr_hs_3d r_spend_or 
qui reg difference `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'_24] 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_loc_hosp_x{ //r_spending r_loc_hosp_xr_hs_3d r_spend_or 
qui logit s_spending_p12m_high `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'_24] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_loc_hosp_x{ //r_spending r_loc_hosp_xr_hs_3d r_spend_or 
qui logit s_admit_ind_p12m `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'_24] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

*/

local j
foreach num in 12 24 {
qui outreg, clear

foreach x in r_loc_hosp_x{ //r_spending r_loc_hosp_xr_hs_3d r_spend_or 
glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'_24],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) merge or
}
di "GLM `num'm spending"
*outreg, replay
local j "if r_death_year<=2010"
}
/*
local j
foreach num in 12 24 {
* qui outreg, clear
di "OLS difference `num'm spending"
foreach x in r_loc_hosp_x{ //r_spending r_loc_hosp_xr_hs_3d r_spend_or 
reg difference`num' `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'_24] 
qui outreg, stats(b p) merge
}
local j "if r_death_year<=2010"

*outreg, replay
}*/
local j
foreach num in 12 24 {
* qui outreg, clear
di "Any hospital admit `num'm"
foreach x in r_loc_hosp_x{ //r_spending r_loc_hosp_xr_hs_3d r_spend_or 
logit s_admit_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'_24]  , or
qui outreg, stats(e_b p) merge
}
*outreg, replay
local j "if r_death_year<=2010"

}


local j
foreach num in 12 24 {
* qui outreg, clear
di "Any ED visit `num'm"
foreach x in r_loc_hosp_x{ //r_spending r_loc_hosp_xr_hs_3d r_spend_or 
logit s_ed_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'_24]  ,or
qui outreg, stats(e_b p) merge
}
*outreg, replay
local j "if r_death_year<=2010"

}
}
log close

outreg using "`logpath'\regressions_24m.rtf", replay replace


H="***********************"


H="pull sas outcomes--elective admissions"
/*data from spouse_2012.txt code - starting point for this work*/
libname spo_fnl 'E:\data\spouse_intensive\int_data';

/*data for this project with spouse medicare variables added in*/
libname proj_int 'E:\data\spouse_claims\data\int_data';

/*2000-2012 medicare claims*/
libname medi 'E:\data\cms_DUA_24548_2012';

/*hrs cleaned & restricted*/
libname hrs_cln 'E:\data\hrs_cleaned'; /*(contains exit, restricted, and core ivw's)*/
libname rand 'E:\data\hrs_public_2012\rand2012\main';

/*dartmouth wage index*/
libname dartm 'E:\data\Dartmouth_misc';
libname dart_wi 'E:\data\Dartmouth_misc\Wage Index';

data spouse(keep=r_id s_id s_bid_hrs index_date);
set spo_fnl.spouse_data;
if s_bid_hrs~="";
if s_id~=.;
index_date=r_death_date_e;
run;

data ip;
set medi.mp_2000_2012;
if sslssnf~="N";
run;

%macro nonels(time=,suff=);
proc sql;
create table ip_match as select a.*,b.admit_date,b.type_adm,b.sslssnf from
spouse a
left join
ip b
on a.s_bid_hrs=b.bid_hrs_21 and b.admit_date>a.index_date>=b.admit_date-&time.;
quit;

data ip_m2;
set ip_match;
nonelect=type_adm~="3" and type_adm~="";
run;

proc sql;
create table none_adms_&suff. as select distinct 
s_bid_hrs,sum(nonelect) as nonelective_adms_&suff.
	label="total n of nonelective admissions &suffix.", 
index_date, s_id, r_id
from ip_m2 group by s_bid_hrs, r_id, s_id;
quit;

%mend;


%nonels(time=365,suff=p12m);
%nonels(time=730,suff=p24m);

proc sql;
create table nonel_adms as select * from
none_adms_p12m a 
left join
none_adms_p24m b
on a.s_bid_hrs=b.s_bid_hrs and a.s_id=b.s_id and a.r_id=b.r_id;
quit;

proc export data=nonel_adms outfile="E:\data\spouse_claims\data\int_data\nonelective_admissions.dta" replace; run;

H="match by full sample, top quartile & bottom 75%"
/*Limited to decedents with FFS MC 6m prior to death, married at time of death,
with spouse mc id*/
clear all
mata: mata clear
set more off
capture log close
import excel "E:\data\Dartmouth_misc\EOL_mc_2yrs_HRR\DAP_HRR_03_07_to_merge.xls", sheet("Sheet1") firstrow case(lower) clear
keep hrr totalmedic
rename hrr hrrnum
xtile eol_spending_quintile=tot, nq(5)
xtile eol_spending_quartile=tot, nq(4)
gen eol_spending_3_cat=eol_spending_quartile
replace eol_spending_3_cat=eol_spending_3_cat-1 if inlist(eol_spending_3_cat,3,4)
label define eol_spending_3_cat 1 "Bottome Quartile" 2 "Middle 50%" 3 "Top quartile"
label values eol_spending_3_cat eol_spending_3_cat
gen eol_spending_low=eol_spending_3_cat==1
gen eol_spending_mid=eol_spending_3_cat==2
gen eol_spending_high=eol_spending_3_cat==3
label var eol_spending_low "Bottom Quartile EOL spending by Dartmouth HRR"
label var eol_spending_mid "Middle 50% EOL spending by Dartmouth HRR"
label var eol_spending_high "Top Quartile EOL spending by Dartmouth HRR"
label var eol_spending_3_cat "EOL Spending Group by Dartmouth HRR, Adjusted"
label var eol_spending_quintile "EOL Spending Quintile by Dartmouth HRR, Adjusted"
tempfile temp1
save "`temp1'"



use "E:\data\hrs_public_2012\dementia\pdem_withvarnames_ebl.dta", clear
destring id, gen(r_id)
rename core_year r_core_year_n1
tempfile temp2
save `temp2'

//Server file paths
global logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_v1 if (s_part_ab_6m==1 & s_hmo_d_6m==0) & s_core_year_n1<2012 //& (r_part_ab_6m==1 & r_hmo_d_6m==0)
*merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_intens_data_ps_set.dta" , gen(spmerge) ///
 *keep(match)
merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_data_full.dta" , gen(spmerge) keep(match)
merge 1:1 r_id r_core_year_n1 using `temp2', gen(demmerge) keep(match master)
merge m:1 hrrnum using `temp1', gen(hrrmerge) keep(match master)
*********************************************************
*********************************************************
//indicators of intensity-hospice 3+days, top quartile spending last 6m, and death in hosp (already there)
gen r_hs_3d_6m=r_hs_los_6m>=3


//get quartile of spending for match
gen s_tot_paid_by_mc_wi_6m18m=s_tot_paid_by_mc_wi_18m-s_tot_paid_by_mc_wi_6m
*replace s_tot_paid_by_mc_wi_6m18m=. if s_cont_ffs_n_mos<18
xtile spend_quart=s_tot_paid_by_mc_wi_6m18m , nq(4)
gen spend_quart4=spend_quart==4
sum r_tot_paid_by_mc_wi_6m, d
gen r_spending_6m_high=r_tot_paid_by_mc_wi_6m>=r(p75)

label var r_hs_3d "R Hospice use 3+ days last 6m"
label var r_spending_6m_high "R Medicare spending top quartile last 6m"


gen r_spend_or_hosp_death=r_spending_6m_high==1 | r_loc_==1
foreach s in r s {
foreach n in n1 n2 {
gen `s'_hrs_comorb_mild_`n'=`s'_comor_c_hrs_`n'==0
gen `s'_hrs_comorb_mod_`n'=`s'_comor_c_hrs_`n'==1
}
}
//where r&s highly correlated, use s
local rvarsa r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x  r_adl_impair_n1 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

tab eol_spending_quartile, gen(eol_spend_quart)
label var eol_spend_quart1 "Quartile EOL spending by HRR: Low"
label var eol_spend_quart2 "Quartile EOL spending by HRR: Mid-low"
label var eol_spend_quart3 "Quartile EOL spending by HRR: Mid-high"
label var eol_spend_quart4 "Quartile EOL spending by HRR: High"
local region /*eol_spend_quart2 eol_spend_quart3*/ eol_spend_quart4
//categorical spouse primary helper, duration'
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing
gen r_s_help_dur_cat = 0 if r_adl_sp_helper_x==0 & r_iadl_sp_helper_x==0
replace r_s_help_dur_cat = 1 if r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1
replace r_s_help_dur_cat = 2 if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) ///
 & ( r_adl_sp_helper_n1==1 | r_iadl_sp_helper_n1==1)
la def help 0 "S not primary helper x" 1 "S primary helper x only" 2 "S primary helper x+n1"
la val r_s_help_dur_cat help
tab r_s_help_dur_cat, gen(r_s_help_dur_ind)
label var r_s_help_dur_ind2 "S primary helper x only" 
label var r_s_help_dur_ind3 "S primary helper x+n1"
local svarsa s_age s_female s_race_cat1  ///
s_hseduc s_srh_pf_n1 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr

local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_independent_core_n1 ///
 likely_dem r_hrs_comorb_mild_n1 r_hrs_comorb_mod_n1 r_death_year

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_adl_independent_core_n1 ///
r_s_help_dur_ind1

/*local n1s srh_pf hrs_comorb_mild hrs_comorb_mod ///
nw_midlow nw_midhigh nw_highest  hrs_comorb_mod hrs_comorb_mild ///
adl_independent_core nhres */
sum `rvars' `svars' `region'
foreach x of local n1s {
foreach s in r s {
replace `s'_`x'_n1=`s'_`x'_n2 if r_death_date_e-`s'_c_ivw_date_n1<=183
}
}
local treatvars r_loc_hosp_x //r_hs_3d_6m  r_spending_6m_high r_spend_or_hosp_death 
tokenize `treatvars'
local max : word count `treatvars'

gen quartile_weight=.
gen topquartile_weight=.
gen surv_weight=.
gen surv=s_cont_ffs_p_mos>=24
forvalues i=1/`max' {
di "`i'"
log using $logpath\spouse_claims_match_``i''`time'.txt, text replace

*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
cap drop ip_* logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i'' ,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' `region' ,treated(``i'') both hist

local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time''  {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

rename _weight w_``i''`time'


foreach quart in 0 1 {
drop ip_pscore ip_block logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region' if spend_quart4==`quart', ///
pscore(ip_pscore) blockid(ip_block) logit
tab ``i''
tab ``i'' if spend_quart4==`quart'
tab ``i'' if spend_quart4==`quart' & !missing(ip_pscore)
di "PS graph1"
di "``i''"
*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i''  if spend_quart4==`quart',outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight
di "PS graph2"
*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' `region' if spend_quart4==`quart',treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
di "Compare variance here"
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time'' `region' {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace topquartile_weight=_w if missing(topquartile_we)
}
foreach quart in 1 {
drop ip_pscore ip_block logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region' if surv==`quart', ///
pscore(ip_pscore) blockid(ip_block) logit
tab ``i''
tab ``i'' if surv==`quart'
tab ``i'' if surv==`quart' & !missing(ip_pscore)
di "PS graph1"
di "``i''"
*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i''  if surv==`quart',outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight
di "PS graph2"
*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' `region' if surv==`quart',treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
di "Compare variance here"
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time'' `region' {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace surv_weight=_w if missing(surv_we)
}

log close
}

save spouse_claims_intensmatched, replace



H="match just full & survivors, no FFS pre-death req."
/*Limited to decedents with FFS MC 6m prior to death, married at time of death,
with spouse mc id*/
clear all
mata: mata clear
set more off
capture log close
import excel "E:\data\Dartmouth_misc\EOL_mc_2yrs_HRR\DAP_HRR_03_07_to_merge.xls", sheet("Sheet1") firstrow case(lower) clear
keep hrr totalmedic
rename hrr hrrnum
xtile eol_spending_quintile=tot, nq(5)
xtile eol_spending_quartile=tot, nq(4)
gen eol_spending_3_cat=eol_spending_quartile
replace eol_spending_3_cat=eol_spending_3_cat-1 if inlist(eol_spending_3_cat,3,4)
label define eol_spending_3_cat 1 "Bottome Quartile" 2 "Middle 50%" 3 "Top quartile"
label values eol_spending_3_cat eol_spending_3_cat
gen eol_spending_low=eol_spending_3_cat==1
gen eol_spending_mid=eol_spending_3_cat==2
gen eol_spending_high=eol_spending_3_cat==3
label var eol_spending_low "Bottom Quartile EOL spending by Dartmouth HRR"
label var eol_spending_mid "Middle 50% EOL spending by Dartmouth HRR"
label var eol_spending_high "Top Quartile EOL spending by Dartmouth HRR"
label var eol_spending_3_cat "EOL Spending Group by Dartmouth HRR, Adjusted"
label var eol_spending_quintile "EOL Spending Quintile by Dartmouth HRR, Adjusted"
tempfile temp1
save "`temp1'"



use "E:\data\hrs_public_2012\dementia\pdem_withvarnames_ebl.dta", clear
destring id, gen(r_id)
rename core_year r_core_year_n1
tempfile temp2
save `temp2'

//Server file paths
global logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_v1 if s_core_year_n1<2012 & r_death_year<=2011 //& (r_part_ab_6m==1 & r_hmo_d_6m==0)
*merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_intens_data_ps_set.dta" , gen(spmerge) ///
 *keep(match)
merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_data_full.dta" , gen(spmerge) keep(match)
merge 1:1 r_id r_core_year_n1 using `temp2', gen(demmerge) keep(match master)
merge m:1 hrrnum using `temp1', gen(hrrmerge) keep(match master)

//nonelective admissions
merge 1:1 s_id r_id using nonelective_admissions.dta, gen(nem) keep(match master)
rename nonelective* s_n_nonelect*
foreach x in 12m 24m {
gen s_ind_nonelect_adm_p`x'=s_n_nonelect_adms_p`x'>=1
label var s_ind_nonelect_adm_p`x' "Any nonelective admission `x' after R death"
}

*********************************************************
*********************************************************
//indicators of intensity-hospice 3+days, top quartile spending last 6m, and death in hosp (already there)
gen r_hs_3d_6m=r_hs_los_6m>=3


//get quartile of spending for match
gen s_tot_paid_by_mc_wi_6m18m=s_tot_paid_by_mc_wi_18m-s_tot_paid_by_mc_wi_6m ///
if s_cont_ffs_n_mos>=18
xtile spend_quart=s_tot_paid_by_mc_wi_6m18m , nq(4)
gen spend_quart4=spend_quart==4
sum r_tot_paid_by_mc_wi_6m, d
gen r_spending_6m_high=r_tot_paid_by_mc_wi_6m>=r(p75)

label var r_hs_3d "R Hospice use 3+ days last 6m"
label var r_spending_6m_high "R Medicare spending top quartile last 6m"


gen r_spend_or_hosp_death=r_spending_6m_high==1 | r_loc_==1
foreach s in r s {
foreach n in n1 n2 {
gen `s'_hrs_comorb_none_`n'=`s'_comor_c_hrs_`n'==0 if !missing(`s'_comor_c_hrs_`n')
gen `s'_hrs_comorb_mild_`n'=`s'_comor_c_hrs_`n'==1 if !missing(`s'_comor_c_hrs_`n')
gen `s'_hrs_comorb_modsev_`n'=`s'_comor_c_hrs_`n'>=2 if !missing(`s'_comor_c_hrs_`n')
foreach x in none mild {
	label var `s'_hrs_comorb_`x'_`n' "SR comorbidities: `x'"
}
label var `s'_hrs_comorb_modsev_`n' "SR comorbidities: Mod/Severe"
gen `s'_adl_impair_`n'=!`s'_adl_independent_core_`n' if !missing(`s'_adl_independent_core_`n')
label var `s'_adl_impair_`n' "Dependent in ADLs"
}
}
replace likely_dem=pdem>.5 if !missing(pdem)
//where r&s highly correlated, use s
local rvarsa r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x  r_adl_impair_n1 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

tab eol_spending_quartile, gen(eol_spend_quart)
label var eol_spend_quart1 "Quartile EOL spending by HRR: Low"
label var eol_spend_quart2 "Quartile EOL spending by HRR: Mid-low"
label var eol_spend_quart3 "Quartile EOL spending by HRR: Mid-high"
label var eol_spend_quart4 "Quartile EOL spending by HRR: High"
local region eol_spend_quart2 eol_spend_quart3 eol_spend_quart4
//categorical spouse primary helper, duration'
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing
gen r_s_help_dur_cat = 0 if r_adl_sp_helper_x==0 & r_iadl_sp_helper_x==0
replace r_s_help_dur_cat = 1 if r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1
replace r_s_help_dur_cat = 2 if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) ///
 & ( r_adl_sp_helper_n1==1 | r_iadl_sp_helper_n1==1)
la def help 0 "S not primary helper x" 1 "S primary helper x only" 2 "S primary helper x+n1"
la val r_s_help_dur_cat help
tab r_s_help_dur_cat, gen(r_s_help_dur_ind)
label var r_s_help_dur_ind2 "S primary helper x only" 
label var r_s_help_dur_ind3 "S primary helper x+n1"
local svarsa s_age s_female s_race_cat1  ///
s_hseduc s_srh_pf_n1 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr

local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_modsev_n1 r_hrs_comorb_mild_n1 ///
 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_modsev_n1 s_hrs_comorb_mild_n1 s_adl_impair_n1 ///
r_s_help_dur_ind1

/*local n1s srh_pf hrs_comorb_mild hrs_comorb_mod ///
nw_midlow nw_midhigh nw_highest  hrs_comorb_mod hrs_comorb_mild ///
adl_independent_core nhres */
sum `rvars' `svars' `region'
foreach x of local n1s {
foreach s in r s {
replace `s'_`x'_n1=`s'_`x'_n2 if r_death_date_e-`s'_c_ivw_date_n1<=183
}
}
local treatvars r_loc_hosp_x //r_hs_3d_6m  r_spending_6m_high r_spend_or_hosp_death 
tokenize `treatvars'
local max : word count `treatvars'

gen quartile_weight=.
gen topquartile_weight=.
gen surv_12_weight=.
gen surv_24_weight=.
gen surv_12=s_cont_ffs_p_mos>=12 & r_s_death>=366
gen surv_24=s_cont_ffs_p_mos>=24 & r_s_death>=731
gen missany=0
//added 2/13 drop if missing any vars
foreach x in `rvars`time'' `svars`time'' `region' {
replace missany=1 if missing(`x')
}
drop if missany==1
forvalues i=1/`max' {
di "`i'"
log using $logpath\spouse_claims_match_``i''`time'.txt, text replace
sum `rvars' `svars' `region'
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
cap drop ip_* logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i'' ,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' `region' ,treated(``i'') both hist

local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time''  {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

rename _weight w_``i''`time'


forvalues quart=0/1 {
drop ip_pscore ip_block logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region' if spend_quart4==`quart', ///
pscore(ip_pscore) blockid(ip_block) logit
tab ``i''
tab ``i'' if spend_quart4==`quart'
tab ``i'' if spend_quart4==`quart' & !missing(ip_pscore)
di "PS graph1"
di "``i''"
*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i''  if spend_quart4==`quart',outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight
di "PS graph2"
*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
di " Top Spending quartile pre-death=`quart'"
pstest `rvars`time'' `svars`time'' `region' if spend_quart4==`quart',treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
di "Compare variance here"
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time'' `region' {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace quartile_weight=_w if missing(quartile_we)
}

foreach quart in 12 24 {
drop ip_pscore ip_block logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region' if surv_`quart'==1, ///
pscore(ip_pscore) blockid(ip_block) logit
tab ``i''
tab ``i'' if surv_`quart'==1
tab ``i'' if surv_`quart'==1 & !missing(ip_pscore)
di "PS graph1"
di "``i''"
*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i''  if surv_`quart'==1,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight
di "PS graph2"
*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
di "`quart'm Survivors only"
pstest `rvars`time'' `svars`time'' `region' if surv_`quart'==1,treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
di "Compare variance here"
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time'' `region' {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace surv_`quart'_weight=_w if missing(surv_`quart'_we)
}

log close
}

save spouse_claims_intensmatched, replace



H="match excluding those w/ hmo in next two years"
/*Limited to decedents with FFS MC 6m prior to death, married at time of death,
with spouse mc id*/
clear all
mata: mata clear
set more off
capture log close
import excel "E:\data\Dartmouth_misc\EOL_mc_2yrs_HRR\DAP_HRR_03_07_to_merge.xls", sheet("Sheet1") firstrow case(lower) clear
keep hrr totalmedic
rename hrr hrrnum
xtile eol_spending_quintile=tot, nq(5)
xtile eol_spending_quartile=tot, nq(4)
gen eol_spending_3_cat=eol_spending_quartile
replace eol_spending_3_cat=eol_spending_3_cat-1 if inlist(eol_spending_3_cat,3,4)
label define eol_spending_3_cat 1 "Bottome Quartile" 2 "Middle 50%" 3 "Top quartile"
label values eol_spending_3_cat eol_spending_3_cat
gen eol_spending_low=eol_spending_3_cat==1
gen eol_spending_mid=eol_spending_3_cat==2
gen eol_spending_high=eol_spending_3_cat==3
label var eol_spending_low "Bottom Quartile EOL spending by Dartmouth HRR"
label var eol_spending_mid "Middle 50% EOL spending by Dartmouth HRR"
label var eol_spending_high "Top Quartile EOL spending by Dartmouth HRR"
label var eol_spending_3_cat "EOL Spending Group by Dartmouth HRR, Adjusted"
label var eol_spending_quintile "EOL Spending Quintile by Dartmouth HRR, Adjusted"
tempfile temp1
save "`temp1'"



use "E:\data\hrs_public_2012\dementia\pdem_withvarnames_ebl.dta", clear
destring id, gen(r_id)
rename core_year r_core_year_n1
tempfile temp2
save `temp2'

//Server file paths
global logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_v1 if s_core_year_n1<2012 & r_death_year<=2011 //& (r_part_ab_6m==1 & r_hmo_d_6m==0)
*merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_intens_data_ps_set.dta" , gen(spmerge) ///
 *keep(match)
merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_data_full.dta" , gen(spmerge) keep(match)
merge 1:1 r_id r_core_year_n1 using `temp2', gen(demmerge) keep(match master)
merge m:1 hrrnum using `temp1', gen(hrrmerge) keep(match master)

//nonelective admissions
merge 1:1 s_id r_id using nonelective_admissions.dta, gen(nem) keep(match master)
rename nonelective* s_n_nonelect*
foreach x in 12m 24m {
gen s_ind_nonelect_adm_p`x'=s_n_nonelect_adms_p`x'>=1
label var s_ind_nonelect_adm_p`x' "Any nonelective admission `x' after R death"
}
*********************************************************
*********************************************************
//indicators of intensity-hospice 3+days, top quartile spending last 6m, and death in hosp (already there)
gen r_hs_3d_6m=r_hs_los_6m>=3

replace likely_dem=0 if pdem<.5
//get quartile of spending for match
gen s_tot_paid_by_mc_wi_6m18m=s_tot_paid_by_mc_wi_18m-s_tot_paid_by_mc_wi_6m ///
if s_cont_ffs_n_mos>=18
xtile spend_quart=s_tot_paid_by_mc_wi_6m18m , nq(4)
gen spend_quart4=spend_quart==4
sum r_tot_paid_by_mc_wi_6m, d
gen r_spending_6m_high=r_tot_paid_by_mc_wi_6m>=r(p75)

label var r_hs_3d "R Hospice use 3+ days last 6m"
label var r_spending_6m_high "R Medicare spending top quartile last 6m"


gen r_spend_or_hosp_death=r_spending_6m_high==1 | r_loc_==1
foreach s in r s {
foreach n in n1 n2 {
gen `s'_hrs_comorb_none_`n'=`s'_comor_c_hrs_`n'==0 if !missing(`s'_comor_c_hrs_`n')
gen `s'_hrs_comorb_mild_`n'=`s'_comor_c_hrs_`n'==1 if !missing(`s'_comor_c_hrs_`n')
gen `s'_hrs_comorb_modsev_`n'=`s'_comor_c_hrs_`n'>=2 if !missing(`s'_comor_c_hrs_`n')
foreach x in none mild {
	label var `s'_hrs_comorb_`x'_`n' "SR comorbidities: `x'"
}
label var `s'_hrs_comorb_modsev_`n' "SR comorbidities: Mod/Severe"
gen `s'_adl_impair_`n'=!`s'_adl_independent_core_`n' if !missing(`s'_adl_independent_core_`n')
label var `s'_adl_impair_`n' "Dependent in ADLs"
}
}

//where r&s highly correlated, use s
local rvarsa r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x  r_adl_impair_n1 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

tab eol_spending_quartile, gen(eol_spend_quart)
label var eol_spend_quart1 "Quartile EOL spending by HRR: Low"
label var eol_spend_quart2 "Quartile EOL spending by HRR: Mid-low"
label var eol_spend_quart3 "Quartile EOL spending by HRR: Mid-high"
label var eol_spend_quart4 "Quartile EOL spending by HRR: High"
local region eol_spend_quart2 eol_spend_quart3 eol_spend_quart4
//categorical spouse primary helper, duration'
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing
gen r_s_help_dur_cat = 0 if r_adl_sp_helper_x==0 & r_iadl_sp_helper_x==0
replace r_s_help_dur_cat = 1 if r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1
replace r_s_help_dur_cat = 2 if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) ///
 & ( r_adl_sp_helper_n1==1 | r_iadl_sp_helper_n1==1)
la def help 0 "S not primary helper x" 1 "S primary helper x only" 2 "S primary helper x+n1"
la val r_s_help_dur_cat help
tab r_s_help_dur_cat, gen(r_s_help_dur_ind)
label var r_s_help_dur_ind2 "S primary helper x only" 
label var r_s_help_dur_ind3 "S primary helper x+n1"
local svarsa s_age s_female s_race_cat1  ///
s_hseduc s_srh_pf_n1 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1

local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_adl_impair_n1 ///
r_s_help_dur_ind1

/*local n1s srh_pf hrs_comorb_mild hrs_comorb_mod ///
nw_midlow nw_midhigh nw_highest  hrs_comorb_mod hrs_comorb_mild ///
adl_independent_core nhres */
sum `rvars' `svars' `region'

foreach x of local n1s {
foreach s in r s {
replace `s'_`x'_n1=`s'_`x'_n2 if r_death_date_e-`s'_c_ivw_date_n1<=183
}
}
local treatvars r_loc_hosp_x //r_hs_3d_6m  r_spending_6m_high r_spend_or_hosp_death 
tokenize `treatvars'
local max : word count `treatvars'

gen quartile_weight=.
gen topquartile_weight=.
gen surv_12_weight=.
gen surv_24_weight=.
gen surv_12=s_cont_ffs_p_mos>=12 & r_s_death>=366
gen surv_24=s_cont_ffs_p_mos>=24 & r_s_death>=731
gen fffs=s_non_hmo_d_p_mos>=s_part_ab_p_mos | s_non_hmo_d_p_mos>=floor(r_s_death/30.4) ///
| s_cont_ffs_p_mos>=24
keep if fffs
forvalues i=1/`max' {
di "`i'"
log using $logpath\spouse_claims_match_``i''`time'_fffs.txt, text replace
sum `rvars' `svars' `region'
foreach x in `rvars' `svars' `region' {
drop if missing(`x')
}
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
cap drop ip_* logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i'' ,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' `region' ,treated(``i'') both hist

local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time''  {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

rename _weight w_``i''`time'


forvalues quart=0/1 {
drop ip_pscore ip_block logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region' if spend_quart4==`quart', ///
pscore(ip_pscore) blockid(ip_block) logit
tab ``i''
tab ``i'' if spend_quart4==`quart'
tab ``i'' if spend_quart4==`quart' & !missing(ip_pscore)
di "PS graph1"
di "``i''"
*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i''  if spend_quart4==`quart',outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight
di "PS graph2"
*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
di "Top Spending quartile pre-death=`quart'"
pstest `rvars`time'' `svars`time'' `region' if spend_quart4==`quart',treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
di "Compare variance here"
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time'' `region' {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace quartile_weight=_w if missing(quartile_we)
}

foreach quart in 12 24 {
drop ip_pscore ip_block logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region' if surv_`quart'==1, ///
pscore(ip_pscore) blockid(ip_block) logit
tab ``i''
tab ``i'' if surv_`quart'==1
tab ``i'' if surv_`quart'==1 & !missing(ip_pscore)
di "PS graph1"
di "``i''"
*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i''  if surv_`quart'==1,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight
di "PS graph2"
*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
di "`quart'm Survivors only"
pstest `rvars`time'' `svars`time'' `region' if surv_`quart'==1,treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
di "Compare variance here"
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time'' `region' {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace surv_`quart'_weight=_w if missing(surv_`quart'_we)
}

log close
}

save spouse_claims_intensmatched_fffs, replace



H="table 1 fffs"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched_fffs.dta
***************************************************************
tab r_loc_hosp_x, missing
gen bottomquartile_w=quartile_w if spend_quart<4
replace topq=quartile_w if spend_quart==4
rename r_cc_*n12mn0 r_cc_*n12m

foreach d in 365 730{
gen s_died_`d'd=s_death_date-r_death_date_e<=`d'
label var s_died_`d'd "S death <=`d'd after R"
}
***************************************************************
	
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///


foreach x in `rvars' `svars' {
	drop if missing(`x')
}
*************************************************************************************
*************************************************************************************
//create Table 1, overall sample characteristics
*************************************************************************************
*************************************************************************************
//Part 1 - Decedent char
gen n=1

local rcvars r_age 
local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

local rivars r_female r_white_e r_hseduc  ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
 r_adl_impair_n1 r_srh_pf_n1 ///
 r_nhres_n1 likely_dem r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 ///
 `rhrscomorbs' r_loc_hosp_x loc_home loc_asst loc_nh loc_hs loc_oth ///
r_advdir_x r_dexp_x r_discuss_x  

local scvars s_age s_networth_adj2012_n1

local sivars s_female s_white_e s_hseduc  ///
 s_medicaid_n1 s_champus_n1 s_medigap_n1 ///
 s_adl_impair_n1 s_srh_pf_n1 ///
 s_nhres_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
 `shrscomorbs' 
local region eol_spend_quart1 eol_spend_quart2 eol_spend_quart3 eol_spend_quart4

gen loc_nh=r_location==2
gen loc_home=r_location==3
gen loc_hs=r_location==4
gen loc_asst=r_location==5
gen loc_oth=r_location==6
foreach x of varlist loc_* {
replace `x'=. if missing(r_loc_hosp)
}
label var loc_nh "Died in Nursing Home" 
label var loc_home "Died at Home"
label var loc_hs "Died at Hospice"
label var loc_asst "Died Assisted Living or Retirement Home"
label var loc_oth "Location of death Other/Unknown"
la var r_age "Age at death, years"
la var r_loc_ "Died in Hospital"
la var r_married_x "Married at death"
la var r_female "Female"
la var r_white_e "Race, White, Non-Hispanic"
la var r_hseduc "Education, High School Deg"
la var r_medicaid_n1  "Medicaid"
la var r_champus_n1  "VA Insurance"
la var r_medigap_n1 "Medigap"
la var r_adl_independent_core_n1 "ADL Independent"
la var r_srh_pf_n1 "SRH poor or fair**"
la var r_advdir_x "Had advanced directive"
la var r_dexp_x  "Death expected by family"
la var r_discuss_x "Discussion of EOL care"
la var s_age "Age at death, years"
la var s_loc_hosp_x "Died in Hospital"
la var s_married_x "Married at death"
la var s_female "Female"
la var s_white "Race, White, Non-Hispanic"
la var s_hseduc "Education, High School Deg"
la var s_medicaid_n1  "Medicaid"
la var s_champus_n1  "VA Insurance"
la var s_medigap_n1 "Medigap"
la var s_adl_independent_core_n1 "ADL Independent"
la var s_srh_pf_n1 "SRH poor or fair"
la var r_s_death_24m "S death within 2 years"

local rvars `rcvars' `rivars' 
local svars `scvars' `sivars' 
local rn : word count `rvars' `svars' `region' `coutcomes' `ioutcomes' 1 1 1 
mat tab=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

sum `rvars' `svars'
foreach loc in "0,1,." { //0 1 {
	foreach x in `rvars' `svars' `region' `coutcomes' `ioutcomes' {
		di "`x'"
		if "`x'"!="r_age" & "`x'"!="s_age" & ///
		!inlist(substr("`x'",1,6),"s_netw", "s_tot_","s_n_ho", ///
		"s_icu_") {
			sum `x' if inlist(r_loc_,`loc') `time'
			mat tab[`r',`c']=r(mean)*100
			if inlist("`loc'","1") & "`x'"!="r_loc_hosp_x" tab `x' r_loc_, chi2
			if inlist("`loc'","1") & "`x'"!="r_loc_hosp_x" mat tab[`r',`c'+1]=r(p)
			if inlist("`loc'","1") & "`x'"!="r_loc_hosp_x" mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
			else {
				if inlist("`x'","r_age","s_age","s_tot_paid_by_mc_wi_p12m") ///
				 local r=`r'+1
				sum `x' if inlist(r_loc_,`loc'),d 
				mat tab[`r',`c']=r(mean)
				mat tab[`r',`c'+1]=r(sd)
				mat tab[`r',`c'+2]=r(p50)
				if inlist("`loc'","1") ttest `x', by(r_loc_)
				if inlist("`loc'","1") mat tab[`r',`c'+1]=r(p)
				if inlist("`loc'","1") mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
	local r = `r'+1
}
	sum n if inlist(r_loc_,`loc') 
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}


mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' ///
 "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, ///
statmat(tab) title("Sample Characteristics, `title'") ///
ctitles("" "Mean/%" "SD" "Median" /*"Death not in-hospital" "R Death in Hospital" "P"*/) sdec(2) ///
replace varlabels annotate(stars) asymbol(*,**) ///

 /*
local rn: word count `rcvars' `rivars' `region' n 
mat tab=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

svyset [pw=w_r_loc]
foreach s in r s {
	foreach loc in 0 1 {
		foreach v in ``s'cvars' {
			sum `v' if r_loc_==`loc' /*[aw=w_r_loc]*/
			mat tab[`r',`c']=r(mean)
			mat tab[`r',`c'+1]=r(sd)
			if `loc'==1 {
				/*svy: mean `v', over(r_loc_)
				test [`v']0=[`v']1*/
				ttest `v', by(r_loc_)
				mat stars[`r',`c']=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach v in ``s'ivars' {
			sum `v' if r_loc_==`loc' /*[aw=w_r_loc]*/
			mat tab[`r',`c']=r(mean)*100
			if `loc'==1 & "`v'"!="r_loc_hosp_x" {
				/*svy: tab `v' r_loc_
				mat stars[`r',`c']=(e(p_Pear)<.01)+(e(p_Pear)<.05)*/
				tab `v' r_loc_, chi2
				mat stars[`r',`c']=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
}	
	sum n if r_loc_==`loc' /*[aw=w_r_loc]*/
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+2
}
}
mat rownames tab=`rcvars' `rivars' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, statmat(tab) title(Table 1) ///
ctitles("" "" "Decedent variables" "" "Surviving Spouse"  \"" "Control" "R Death in Hospital" ///
"Control" "R Death in Hospital" ) sdec(2) replace subst(1) annotate(stars) ///
asymbol(*,**) varlabels note("*p<.05,**p<.01")
*/

preserve
replace s_tot_paid_by_mc_wi_p24m=. if !surv_12 | r_death_year==2011
/*gen s_tot_paid_by_mc_wi_6m18m=s_tot_paid_by_mc_wi_18m-s_tot_paid_by_mc_wi_6m if ///
s_cont_ffs_n_mos>=18*/
mat tab=J(12,8,.)
mat stars=J(12,8,0)
local r=1
local c=1
sum spend_quart
local num=r(N)
sum s_tot_paid_by_mc_wi_p24m if !missing(spend_quart)
local num24=r(N)

forvalues i=1/4 {
	foreach x in 6m18m p12m p24m {
	local r=`r'+1
	qui ranksum s_tot_paid_by_mc_wi_`x' if spend_quart==`i', by(r_loc_hos)
	mat tab[`r',`c'+1]=2*(normprob(-abs(r(z))))
	mat stars[`r',`c'+1]=(2*(normprob(-abs(r(z))))<.01)+(2*(normprob(-abs(r(z))))<.05)
	
	foreach j in "0,1" 0 1 {	
	qui sum s_tot_paid_by_mc_wi_`x' if spend_quart==`i' & inlist(r_loc_hos,`j') ///
	/*[aw=w_r_loc]*/,d
	mat tab[`r',`c']=r(p50)
	local r=`r'+1
}
}
	local c=`c'+2
	local r=1

}
mat rownames tab="6-18m before R's death" "All" "No In-hospital death" "In-hospital death" ///
"12m after R's death" "All" "No In-hospital death" ///
"In-hospital death" "24m after R's death*" "All" "No In-hospital death" ///
"In-hospital death"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, statmat(tab) title("Median MC Spending by Quartile of S Expenditure prior to R's death") ///
note("Among those with 18m FFS prior to R's death only (N=`num')" ///
"WI & inflation adjusted to 2012$" "*-Excluding those with less than 12m FFS (N=`num24')" ///
"P-values from Wilcoxon rank-sum test") ///
ctitles("" "Bottom" "P" "2nd" "P" "3rd" "P" "Top" "P") addtable //replace
label var likely_dem "Pr. dementia >.5"

mat tab=J(12,8,.)
local r=1
local c=1
sum spend_quart
local num=r(N)
sum s_tot_paid_by_mc_wi_p24m if !missing(spend_quart)
local num24=r(N)

forvalues i=1/4 {
	foreach x in 6m18m p12m p24m {
	local r=`r'+1
	foreach j in "0,1" 0 1 {	
	qui sum s_tot_paid_by_mc_wi_`x' if spend_quart==`i' & inlist(r_loc_hos,`j') ///
	/*[aw=w_r_loc]*/,d
	mat tab[`r',`c']=r(p25)
	mat tab[`r',`c'+1]=r(p75)
	local r=`r'+1
}
}
	local c=`c'+2
	local r=1

}
mat rownames tab="6-18m before R's death" "All" "No In-hospital death" "In-hospital death" ///
"12m after R's death" "All" "No In-hospital death" ///
"In-hospital death" "24m after R's death*" "All" "No In-hospital death" ///
"In-hospital death"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, statmat(tab) ///
title("Within Quartile Interquartile Range") ///
note("Among those with 18m FFS prior to R's death only (N=`num')" ///
"WI & inflation adjusted to 2012$" "*-Excluding those with less than 12m FFS (N=`num24')") ///
ctitles("" "" "Bottom" "" "2nd" "" "3rd" "" "Top" \ "" "25th" "75th" "25th" "75th" "25th" ///
"75th" "25th" "75th") addtable //replace
label var likely_dem "Pr. dementia >.5"

mat sp=J(4,2,.)
tab spend_quart r_loc_, matcell(sp1)
forvalues i=1/4 {
	foreach j in 1 2 {
		mat sp[`i',`j']=(sp1[`i',`j']/(sp1[`i',1]+sp1[`i',2]))*100
}
}
mat rownames sp="Bottom quartile" "2nd" "3rd" "Top"
frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, ///
statmat(sp) title("Percentage of spending quartile, by R location") ///
ctitles("" "No In-hospital death" "In-hospital death") sdec(2) addtable

restore
/*foreach s in r s {
	label var `s'_hrs_comorb_mild_n1 "SR comorbidities: none"
	label var `s'_hrs_comorb_mod_n1 "SR comorbidities: mild (1-3)"
}*/
	gen r_s_helper_x=!r_s_help_dur_ind1
	label var r_s_helper_x "Spouse R's helper, from exit"
	
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x 

foreach x in s_tot_paid_by_mc_wi_p24m s_ed_ind_p24m s_admit_ind_p24m s_icu_ind_p24m ///
s_died_730d {
	replace `x'=. if r_death_year==2011
	gen `x'_cond=`x' if surv_12 & r_death_year<2011
	local lab : var label `x'
	label var `x'_cond "`lab', conditional on 12m Survival"
}

local coutcomes s_tot_paid_by_mc_wi_p12m s_tot_paid_by_mc_wi_p24m /*s_n_hospd_p12m ///
s_n_hospd_p24m s_icu_days_p12m s_icu_days_p24m*/ s_tot_paid_by_mc_wi_p24m_cond 
local ioutcomes s_admit_ind_p12m s_admit_ind_p24m s_admit_ind_p24m_cond ///
s_ed_ind_p12m s_ed_ind_p24m s_ed_ind_p24m_cond ///
s_icu_ind_p12m s_icu_ind_p24m s_icu_ind_p24m_cond s_died_365d s_died_730d s_died_730d_cond

foreach weight in w_r_loc surv_12_w surv_24_w bottomquartile_w topquartile_w {
	svyset [pw=`weight']
	foreach x in 0 1 {
	sum s_tot_paid_by_mc_wi_p24m_cond if r_loc_==`x' [aw=`weight']
	local denomcond`x'=r(N)
	sum s_tot_paid_by_mc_wi_p24m if r_loc_==`x' [aw=`weight']
	local denom24`x'=r(N)
}

	if "`weight'"=="w_r_loc" local title "Full Sample"
	if "`weight'"=="surv_12_w" {
		preserve
		keep if surv_12m
		local title "12m Survivors only"
	}
	if "`weight'"=="surv_24_w" {
		keep if surv_24m
		local title "24m Survivors only"
}
	if "`weight'"=="bottomquartile_w" {
		restore
		preserve
		keep if spend_quart<4
		local title "Bottom 75% pre-death spending"
}
	if "`weight'"=="topquartile_w" {
		restore
		preserve
		keep if spend_quart==4
		foreach x in 0 1 {
			sum s_tot_paid_by_mc_wi_p24m_cond if r_loc_==`x' [aw=`weight']
			local denomcond`x'=r(N)
			sum s_tot_paid_by_mc_wi_p24m if r_loc_==`x' [aw=`weight']
			local denom24`x'=r(N)
}

		local title "Top quartile pre-death spending"
}

local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x 


local rn : word count `rvars' `svars' `region' 1 1 1
mat tab=J(`rn',6,.)
local r=1
local c=1

foreach time in "" "[aw=`weight']" {
	foreach loc in 0 1 {
		foreach x in `rvars' `svars' `region' {
			if "`x'"!="r_age" & "`x'"!="s_age" {
					sum `x' if r_loc_==`loc' `time'
					mat tab[`r',`c']=r(mean)*100
					if `loc'==1 mat tab[`r',`=`c'+1']=(tab[`r',`=`c'-1']/100-tab[`r',`=`c'']/100)/sqrt((tab[`r',`=`c'-1']/100* ///
						(1-tab[`r',`=`c'-1']/100)+tab[`r',`=`c'']/100*(1-tab[`r',`=`c'']/100))/2)
}
			else {
				local r=`r'+1
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)
				local loc`loc'=r(sd)
				if `loc'==1 mat tab[`r',`=`c'+1']=(tab[`r',`c'-1]-tab[`r',`c']) ///
				/sqrt((`loc0'^2+`loc1'^2)/2) 
}
	local r = `r'+1
}
	sum n if r_loc_==`loc' `time'
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}
	local c=`c'+1
}

mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, ///
statmat(tab) title("Matching Variables, `title'") ///
ctitles("" "" "Unmatched" "" "" "Matched"  \"" "Control" "R Death in Hospital" ///
 "Std Diff" "Control""R Death in Hospital" "Std Diff") sdec(2) ///
addtable varlabels 

local rcvars r_age 
local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

local rivars r_female r_white_e r_hseduc  ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
 r_adl_impair_n1 r_srh_pf_n1 ///
 r_nhres_n1 likely_dem r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 ///
 `rhrscomorbs' r_loc_hosp_x ///
r_advdir_x r_dexp_x r_discuss_x  

local scvars s_age s_networth_adj2012_n1

local sivars s_female s_white_e s_hseduc  ///
 s_medicaid_n1 s_champus_n1 s_medigap_n1 ///
 s_adl_impair_n1 s_srh_pf_n1 ///
 s_nhres_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
 `shrscomorbs' 
 
/*local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x */


local rvars `rcvars' `rivars' 
local svars `scvars' `sivars' 
local rn : word count `rvars' `svars' `region' `coutcomes' `ioutcomes' 1 1 1 1
mat tab=J(`rn',3,.)
mat stars=J(`rn',3,0)
local r=1
local c=1
foreach time in "[aw=`weight']" {
	foreach loc in 0 1 {
		foreach x in `rvars' `svars' `region' `coutcomes' `ioutcomes'{
		di "`x'"
			if "`x'"!="r_age" & "`x'"!="s_age" & ///
			!inlist(substr("`x'",1,6),"s_netw", "s_tot_","s_n_ho", ///
			"s_icu_") {
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)*100
				if `loc'==1 & "`x'"!="r_loc_hosp_x" svy: tab `x' r_loc_
				if `loc'==1 & "`x'"!="r_loc_hosp_x" mat tab[`r',`c'+1]=e(p_Pear)
				if `loc'==1 & "`x'"!="r_loc_hosp_x" mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
			else {
				if inlist("`x'","r_age","s_age","s_tot_paid_by_mc_wi_p12m") ///
				 local r=`r'+1
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)
				if `loc'==1 svy: mean `x', over(r_loc_)
				if `loc'==1 test [`x']0=[`x']1
				if `loc'==1 mat tab[`r',`c'+1]=r(p)
				if `loc'==1 mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
	local r = `r'+1
}
	sum n if r_loc_==`loc' `time'
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}
}

mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' ///
"Outcomes" `coutcomes' `ioutcomes' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, ///
statmat(tab) title("Sample Characteristics, `title'") ///
ctitles("" "Control" "R Death in Hospital" "P") sdec(2) ///
addtable varlabels annotate(stars) asymbol(*,**) ///
 note("24m variables restricted to those with death date prior to 2011: N=`denom241' In-hospital death, `denom240' Non-hospital death" ///
 "24m condtional on 1yr survival: N=`denomcond1' In-hospital death, `denomcond0' Non-hospital death")

}





H="sample derivation"
//sample derivation for spouse claims location of death match

/*Limits the sample to dyads with surviving spouse who has ffs mc >64 at r's death*/

capture log close

clear all
set more off

//Server file paths
local logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data

log using `logpath'\2-HRS_Spouse_claims_sample_char.txt, text replace

cd `projdatapath'

use spouse_claims_all_decedents.dta


label var sp_xwalk "Surviving spouse has Medicare crosswalk id & HRS interview 2000-2010"
replace sp_xwalk=0 if s_core_year_n1==2012
label var inscope_0m "Surviving spouse 65+ with FFS at point of R's death"
replace inscope_0m=0 if s_core_year_n1>=2012
gen sp_xwalk2=inscope_0m==1 & s_core_year_n1<2012
label var sp_xwalk2 "Surviving spouse N1 interview 2000-2010"
/*final sample derivation table*/
gen deced2=r_death_year<=2011
label var deced2 "R death year 2000-2011"
foreach n in 6 12 18 24 {
gen survivors_`n'm=sp_xwalk2==1 & surv_`n'm==1
label var survivors_`n'm "`n'm Survivors"
}
local samplevars deced deced2 mar_or_part survived sp_xwalk ///
s_65 inscope_0m

foreach x in mar_or_part survived sp_xwalk ///
s_65 inscope_0m {
replace `x'=0 if r_death_year>2011
}

//survivors_6m survivors_12m survivors_18m survivors_24m

local mvars match01 match02 match0 match match2 match3
local rn :word count `samplevars' `mvars'

mat sample=J(`rn',1,.)
local r=1
foreach x of local samplevars {
	sum `x' if `x'==1
	mat sample[`r',1]==r(N)
	local r=`r'+1
}
cd `projdatapath'
use spouse_claims_intensmatched, clear

local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_modsev_n1 r_hrs_comorb_mild_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_adl_impair_n1 ///
r_s_help_dur_ind1

gen deced2=1
label var deced2 "Death year 2000-2011"
sum `rvars' `svars'
gen sp_xwalk2=1
label var sp_xwalk2 "Surviving spouse N1 interview 2000-2010"
gen match0=1
foreach x in `rvars' `svars' {
	replace match0=0 if missing(`x')
}
gen match01=!(s_hmo_d_p12m)
gen match02=!s_hmo_d_p24m
gen match=!missing(w_r_loc)
gen match2=!missing(surv_12_w)
gen match3=!missing(surv_24_w)
label var match0 "Complete cases--no missingness on matching variables"
label var match01 "No HMO 12m post-death"
label var match02 "No HMO 24m post-death"
label var match "Matched on full sample"
label var match2 "Matched, 12m survivors only"
label var match3 "Matched, 24m survivors only"
foreach x of local mvars {
	sum `x' if `x'==1
	mat sample[`r',1]==r(N)
	local r=`r'+1
}

mat rownames sample=`samplevars' `mvars'


frmttable using "`logpath'\sp_claims_location_sample_derivation.rtf" , ///
	statmat(sample) ///
	title("Spouse claims sample derivation") ///
	ctitle("","n") sdec(0) replace varlabels



H="table 1"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta
***************************************************************
tab r_loc_hosp_x, missing
gen bottomquartile_w=quartile_w if spend_quart<4
replace topq=quartile_w if spend_quart==4
rename r_cc_*n12mn0 r_cc_*n12m

foreach d in 365 730{
gen s_died_`d'd=s_death_date-r_death_date_e<=`d'
label var s_died_`d'd "S death <=`d'd after R"
}
***************************************************************
	
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///


foreach x in `rvars' `svars' {
	drop if missing(`x')
}
*************************************************************************************
*************************************************************************************
//create Table 1, overall sample characteristics
*************************************************************************************
*************************************************************************************
//Part 1 - Decedent char
gen n=1

local rcvars r_age 
local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

local rivars r_female r_white_e r_hseduc  ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
 r_adl_impair_n1 r_srh_pf_n1 ///
 r_nhres_n1 likely_dem r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 ///
 `rhrscomorbs' r_loc_hosp_x loc_home loc_asst loc_nh loc_hs loc_oth ///
r_advdir_x r_dexp_x r_discuss_x  

local scvars s_age s_networth_adj2012_n1

local sivars s_female s_white_e s_hseduc  ///
 s_medicaid_n1 s_champus_n1 s_medigap_n1 ///
 s_adl_impair_n1 s_srh_pf_n1 ///
 s_nhres_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
 `shrscomorbs' 
local region eol_spend_quart1 eol_spend_quart2 eol_spend_quart3 eol_spend_quart4

gen loc_nh=r_location==2
gen loc_home=r_location==3
gen loc_hs=r_location==4
gen loc_asst=r_location==5
gen loc_oth=r_location==6
foreach x of varlist loc_* {
replace `x'=. if missing(r_loc_hosp)
}
label var loc_nh "Died in Nursing Home" 
label var loc_home "Died at Home"
label var loc_hs "Died at Hospice"
label var loc_asst "Died Assisted Living or Retirement Home"
label var loc_oth "Location of death Other/Unknown"
la var r_age "Age at death, years"
la var r_loc_ "Died in Hospital"
la var r_married_x "Married at death"
la var r_female "Female"
la var r_white_e "Race, White, Non-Hispanic"
la var r_hseduc "Education, High School Deg"
la var r_medicaid_n1  "Medicaid"
la var r_champus_n1  "VA Insurance"
la var r_medigap_n1 "Medigap"
la var r_adl_independent_core_n1 "ADL Independent"
la var r_srh_pf_n1 "SRH poor or fair**"
la var r_advdir_x "Had advanced directive"
la var r_dexp_x  "Death expected by family"
la var r_discuss_x "Discussion of EOL care"
la var s_age "Age at death, years"
la var s_loc_hosp_x "Died in Hospital"
la var s_married_x "Married at death"
la var s_female "Female"
la var s_white "Race, White, Non-Hispanic"
la var s_hseduc "Education, High School Deg"
la var s_medicaid_n1  "Medicaid"
la var s_champus_n1  "VA Insurance"
la var s_medigap_n1 "Medigap"
la var s_adl_independent_core_n1 "ADL Independent"
la var s_srh_pf_n1 "SRH poor or fair"
la var r_s_death_24m "S death within 2 years"

local rvars `rcvars' `rivars' 
local svars `scvars' `sivars' 
local rn : word count `rvars' `svars' `region' `coutcomes' `ioutcomes' 1 1 1 
mat tab=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

sum `rvars' `svars'
foreach loc in "0,1,." { //0 1 {
	foreach x in `rvars' `svars' `region' `coutcomes' `ioutcomes' {
		di "`x'"
		if "`x'"!="r_age" & "`x'"!="s_age" & ///
		!inlist(substr("`x'",1,6),"s_netw", "s_tot_","s_n_ho", ///
		"s_icu_") {
			sum `x' if inlist(r_loc_,`loc') `time'
			mat tab[`r',`c']=r(mean)*100
			if inlist("`loc'","1") & "`x'"!="r_loc_hosp_x" tab `x' r_loc_, chi2
			if inlist("`loc'","1") & "`x'"!="r_loc_hosp_x" mat tab[`r',`c'+1]=r(p)
			if inlist("`loc'","1") & "`x'"!="r_loc_hosp_x" mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
			else {
				if inlist("`x'","r_age","s_age","s_tot_paid_by_mc_wi_p12m") ///
				 local r=`r'+1
				sum `x' if inlist(r_loc_,`loc'),d 
				mat tab[`r',`c']=r(mean)
				mat tab[`r',`c'+1]=r(sd)
				mat tab[`r',`c'+2]=r(p50)
				if inlist("`loc'","1") ttest `x', by(r_loc_)
				if inlist("`loc'","1") mat tab[`r',`c'+1]=r(p)
				if inlist("`loc'","1") mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
	local r = `r'+1
}
	sum n if inlist(r_loc_,`loc') 
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}


mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' ///
 "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, ///
statmat(tab) title("Sample Characteristics, `title'") ///
ctitles("" "Mean/%" "SD" "Median" /*"Death not in-hospital" "R Death in Hospital" "P"*/) sdec(2) ///
replace varlabels annotate(stars) asymbol(*,**) ///

 /*
local rn: word count `rcvars' `rivars' `region' n 
mat tab=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

svyset [pw=w_r_loc]
foreach s in r s {
	foreach loc in 0 1 {
		foreach v in ``s'cvars' {
			sum `v' if r_loc_==`loc' /*[aw=w_r_loc]*/
			mat tab[`r',`c']=r(mean)
			mat tab[`r',`c'+1]=r(sd)
			if `loc'==1 {
				/*svy: mean `v', over(r_loc_)
				test [`v']0=[`v']1*/
				ttest `v', by(r_loc_)
				mat stars[`r',`c']=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach v in ``s'ivars' {
			sum `v' if r_loc_==`loc' /*[aw=w_r_loc]*/
			mat tab[`r',`c']=r(mean)*100
			if `loc'==1 & "`v'"!="r_loc_hosp_x" {
				/*svy: tab `v' r_loc_
				mat stars[`r',`c']=(e(p_Pear)<.01)+(e(p_Pear)<.05)*/
				tab `v' r_loc_, chi2
				mat stars[`r',`c']=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
}	
	sum n if r_loc_==`loc' /*[aw=w_r_loc]*/
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+2
}
}
mat rownames tab=`rcvars' `rivars' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, statmat(tab) title(Table 1) ///
ctitles("" "" "Decedent variables" "" "Surviving Spouse"  \"" "Control" "R Death in Hospital" ///
"Control" "R Death in Hospital" ) sdec(2) replace subst(1) annotate(stars) ///
asymbol(*,**) varlabels note("*p<.05,**p<.01")
*/

preserve
replace s_tot_paid_by_mc_wi_p24m=. if !surv_12 | r_death_year==2011
/*gen s_tot_paid_by_mc_wi_6m18m=s_tot_paid_by_mc_wi_18m-s_tot_paid_by_mc_wi_6m if ///
s_cont_ffs_n_mos>=18*/
mat tab=J(12,8,.)
mat stars=J(12,8,0)
local r=1
local c=1
sum spend_quart
local num=r(N)
sum s_tot_paid_by_mc_wi_p24m if !missing(spend_quart)
local num24=r(N)

forvalues i=1/4 {
	foreach x in 6m18m p12m p24m {
	local r=`r'+1
	qui ranksum s_tot_paid_by_mc_wi_`x' if spend_quart==`i', by(r_loc_hos)
	mat tab[`r',`c'+1]=2*(normprob(-abs(r(z))))
	mat stars[`r',`c'+1]=(2*(normprob(-abs(r(z))))<.01)+(2*(normprob(-abs(r(z))))<.05)
	
	foreach j in "0,1" 0 1 {	
	qui sum s_tot_paid_by_mc_wi_`x' if spend_quart==`i' & inlist(r_loc_hos,`j') ///
	/*[aw=w_r_loc]*/,d
	mat tab[`r',`c']=r(p50)
	local r=`r'+1
}
}
	local c=`c'+2
	local r=1

}
mat rownames tab="6-18m before R's death" "All" "No In-hospital death" "In-hospital death" ///
"12m after R's death" "All" "No In-hospital death" ///
"In-hospital death" "24m after R's death*" "All" "No In-hospital death" ///
"In-hospital death"

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, statmat(tab) title("Median MC Spending by Quartile of S Expenditure prior to R's death") ///
note("Among those with 18m FFS prior to R's death only (N=`num')" ///
"WI & inflation adjusted to 2012$" "*-Excluding those with less than 12m FFS (N=`num24')" ///
"P-values from Wilcoxon rank-sum test") ///
ctitles("" "Bottom" "P" "2nd" "P" "3rd" "P" "Top" "P") addtable //replace
label var likely_dem "Pr. dementia >.5"

mat tab=J(12,8,.)
local r=1
local c=1
sum spend_quart
local num=r(N)
sum s_tot_paid_by_mc_wi_p24m if !missing(spend_quart)
local num24=r(N)

forvalues i=1/4 {
	foreach x in 6m18m p12m p24m {
	local r=`r'+1
	foreach j in "0,1" 0 1 {	
	qui sum s_tot_paid_by_mc_wi_`x' if spend_quart==`i' & inlist(r_loc_hos,`j') ///
	/*[aw=w_r_loc]*/,d
	mat tab[`r',`c']=r(p25)
	mat tab[`r',`c'+1]=r(p75)
	local r=`r'+1
}
}
	local c=`c'+2
	local r=1

}
mat rownames tab="6-18m before R's death" "All" "No In-hospital death" "In-hospital death" ///
"12m after R's death" "All" "No In-hospital death" ///
"In-hospital death" "24m after R's death*" "All" "No In-hospital death" ///
"In-hospital death"

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, statmat(tab) ///
title("Within Quartile Interquartile Range") ///
note("Among those with 18m FFS prior to R's death only (N=`num')" ///
"WI & inflation adjusted to 2012$" "*-Excluding those with less than 12m FFS (N=`num24')") ///
ctitles("" "" "Bottom" "" "2nd" "" "3rd" "" "Top" \ "" "25th" "75th" "25th" "75th" "25th" ///
"75th" "25th" "75th") addtable //replace
label var likely_dem "Pr. dementia >.5"

mat sp=J(4,2,.)
tab spend_quart r_loc_, matcell(sp1)
forvalues i=1/4 {
	foreach j in 1 2 {
		mat sp[`i',`j']=(sp1[`i',`j']/(sp1[`i',1]+sp1[`i',2]))*100
}
}
mat rownames sp="Bottom quartile" "2nd" "3rd" "Top"
frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, ///
statmat(sp) title("Percentage of spending quartile, by R location") ///
ctitles("" "No In-hospital death" "In-hospital death") sdec(2) addtable

restore
/*foreach s in r s {
	label var `s'_hrs_comorb_mild_n1 "SR comorbidities: none"
	label var `s'_hrs_comorb_mod_n1 "SR comorbidities: mild (1-3)"
}*/
	gen r_s_helper_x=!r_s_help_dur_ind1
	label var r_s_helper_x "Spouse R's helper, from exit"
	
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x 

foreach x in s_tot_paid_by_mc_wi_p24m s_ed_ind_p24m s_admit_ind_p24m s_icu_ind_p24m ///
s_died_730d s_ind_nonelect_adm_p24m {
	replace `x'=. if r_death_year==2011
	gen `x'_cond=`x' if surv_12 & r_death_year<2011
	local lab : var label `x'
	label var `x'_cond "`lab', conditional on 12m Survival"
}
local coutcomes
foreach x in p12m p24m p24m_cond {
	gen med_`x'=s_tot_paid_by_mc_wi_`x'
	local vl : var label s_tot_paid_by_mc_wi_`x'
	label var med_`x' "`vl', median"
	local coutcomes `coutcomes' s_tot_paid_by_mc_wi_`x' med_`x'
}

local coutcomes s_tot_paid_by_mc_wi_p12m med_p12m s_tot_paid_by_mc_wi_p24m ///
med_p24m /*s_n_hospd_p12m ///
s_n_hospd_p24m s_icu_days_p12m s_icu_days_p24m*/ s_tot_paid_by_mc_wi_p24m_cond ///
med_p24m_cond
local ioutcomes s_admit_ind_p12m s_admit_ind_p24m s_admit_ind_p24m_cond ///
s_ind_nonelect_adm_p12m s_ind_nonelect_adm_p24m s_ind_nonelect_adm_p24m_cond ///
s_ed_ind_p12m s_ed_ind_p24m s_ed_ind_p24m_cond ///
s_icu_ind_p12m s_icu_ind_p24m s_icu_ind_p24m_cond s_died_365d s_died_730d s_died_730d_cond

foreach weight in w_r_loc surv_12_w surv_24_w bottomquartile_w topquartile_w {
	svyset [pw=`weight']
	foreach x in 0 1 {
	sum s_tot_paid_by_mc_wi_p24m_cond if r_loc_==`x' [aw=`weight']
	local denomcond`x'=r(N)
	sum s_tot_paid_by_mc_wi_p24m if r_loc_==`x' [aw=`weight']
	local denom24`x'=r(N)
}

	if "`weight'"=="w_r_loc" local title "Full Sample"
	if "`weight'"=="surv_12_w" {
		preserve
		keep if surv_12m
		local title "12m Survivors only"
	}
	if "`weight'"=="surv_24_w" {
		keep if surv_24m
		local title "24m Survivors only"
}
	if "`weight'"=="bottomquartile_w" {
		restore
		preserve
		keep if spend_quart<4
		local title "Bottom 75% pre-death spending"
}
	if "`weight'"=="topquartile_w" {
		restore
		preserve
		keep if spend_quart==4
		foreach x in 0 1 {
			sum s_tot_paid_by_mc_wi_p24m_cond if r_loc_==`x' [aw=`weight']
			local denomcond`x'=r(N)
			sum s_tot_paid_by_mc_wi_p24m if r_loc_==`x' [aw=`weight']
			local denom24`x'=r(N)
}

		local title "Top quartile pre-death spending"
}

local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x 


local rn : word count `rvars' `svars' `region' 1 1 1
mat tab=J(`rn',6,.)
local r=1
local c=1

foreach time in "" "[aw=`weight']" {
	foreach loc in 0 1 {
		foreach x in `rvars' `svars' `region' {
			if "`x'"!="r_age" & "`x'"!="s_age" {
					sum `x' if r_loc_==`loc' `time'
					mat tab[`r',`c']=r(mean)*100
					if `loc'==1 mat tab[`r',`=`c'+1']=(tab[`r',`=`c'-1']/100-tab[`r',`=`c'']/100)/sqrt((tab[`r',`=`c'-1']/100* ///
						(1-tab[`r',`=`c'-1']/100)+tab[`r',`=`c'']/100*(1-tab[`r',`=`c'']/100))/2)
}
			else {
				local r=`r'+1
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)
				local loc`loc'=r(sd)
				if `loc'==1 mat tab[`r',`=`c'+1']=(tab[`r',`c'-1]-tab[`r',`c']) ///
				/sqrt((`loc0'^2+`loc1'^2)/2) 
}
	local r = `r'+1
}
	sum n if r_loc_==`loc' `time'
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}
	local c=`c'+1
}

mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, ///
statmat(tab) title("Matching Variables, `title'") ///
ctitles("" "" "Unmatched" "" "" "Matched"  \"" "Control" "R Death in Hospital" ///
 "Std Diff" "Control""R Death in Hospital" "Std Diff") sdec(2) ///
addtable varlabels 

local rcvars r_age 
local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

local rivars r_female r_white_e r_hseduc  ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
 r_adl_impair_n1 r_srh_pf_n1 ///
 r_nhres_n1 likely_dem r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 ///
 `rhrscomorbs' r_loc_hosp_x ///
r_advdir_x r_dexp_x r_discuss_x  

local scvars s_age s_networth_adj2012_n1

local sivars s_female s_white_e s_hseduc  ///
 s_medicaid_n1 s_champus_n1 s_medigap_n1 ///
 s_adl_impair_n1 s_srh_pf_n1 ///
 s_nhres_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
 `shrscomorbs' 
 
/*local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x */


local rvars `rcvars' `rivars' 
local svars `scvars' `sivars' 
local rn : word count `rvars' `svars' `region' `coutcomes' `ioutcomes' 1 1 1 1
mat tab=J(`rn',3,.)
mat stars=J(`rn',3,0)
local r=1
local c=1
foreach time in "[aw=`weight']" {
	foreach loc in 0 1 {
		foreach x in `rvars' `svars' `region' `coutcomes' `ioutcomes'{
		di "`x'"
			if "`x'"!="r_age" & "`x'"!="s_age" & ///
			!inlist(substr("`x'",1,6),"s_netw", "s_tot_","s_n_ho", ///
			"s_icu_","med_p1","med_p2") {
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)*100
				if `loc'==1 & "`x'"!="r_loc_hosp_x" svy: tab `x' r_loc_
				if `loc'==1 & "`x'"!="r_loc_hosp_x" mat tab[`r',`c'+1]=e(p_Pear)
				if `loc'==1 & "`x'"!="r_loc_hosp_x" mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
			else {
				if inlist("`x'","r_age","s_age","s_tot_paid_by_mc_wi_p12m") ///
				 local r=`r'+1
				if substr("`x'",1,3)!="med"	{
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)
				if `loc'==1 svy: mean `x', over(r_loc_)
				if `loc'==1 test [`x']0=[`x']1
				if `loc'==1 mat tab[`r',`c'+1]=r(p)
				if `loc'==1 mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
				else {
				sum `x' if r_loc_==`loc' `time',d
				mat tab[`r',`c']=r(p50)
}
}
	local r = `r'+1
}
	sum n if r_loc_==`loc' `time'
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}
}

mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' ///
"Outcomes" `coutcomes' `ioutcomes' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, ///
statmat(tab) title("Sample Characteristics, `title'") ///
ctitles("" "Control" "R Death in Hospital" "P") sdec(2) ///
addtable varlabels annotate(stars) asymbol(*,**) ///
 note("All 24m variables restricted to R death prior to 2011")

}





H="regressions full sample"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta
capture log close
cap gen difference12=s_tot_paid_by_mc_wi_p12m-s_tot_paid_by_mc_wi_12m
cap gen difference24=s_tot_paid_by_mc_wi_p24m-s_tot_paid_by_mc_wi_24m

local rvarsa2 r_age i.r_nhres_n1 i.r_srh_pf_n1 i.r_advdir_x i.r_dexp_x i.r_adl_independent_core_n1 ///
 likely_dem i.r_hrs_comorb_mod_n1 i.r_hrs_comorb_mild_n1 

local svarsa2 s_age i.s_nw_midlow_n1 i.s_nw_midhigh_n1 i.s_nw_highest_n1 i.s_white_e ///
i.s_hseduc i.s_srh_pf_n1 i.s_hrs_comorb_mild_n1 i.s_hrs_comorb_mod_n1 i.s_adl_independent_core_n1 ///
i.r_s_help_dur_ind1 

	gen r_s_helper_x=!r_s_help_dur_ind1
	label var r_s_helper_x "Spouse R's helper, from exit"

local rvarsa2 r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 /*r_hrs_comorb_none_n1*/ r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svarsa2 s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 /*s_hrs_comorb_none_n1*/ s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x 

local region /*eol_spend_quart2 eol_spend_quart3*/ eol_spend_quart4
local year "" "if r_death_year<2011"
local j
foreach b in bonnet {
log using "E:\data\spouse_claims\logs\regressions_utilization.txt",text replace
foreach num in 12 24 {
outreg, clear

foreach x in  r_loc_hos { //r_spending r_hs_3d r_spend_or {
qui glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'],link(log) fam(gamma) eform 
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge 
}
di "GLM `num'm spending"
outreg, replay
local j "if  r_death_year<2011"
}
/*
local j
foreach num in 12 24 {
outreg, clear
di "OLS difference `num'm spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg difference`num' `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'] 
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
local j "if  r_death_year<2011"

outreg, replay
}*/
local j
foreach num in 12 24 {
outreg, clear
di "Any hospital admit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_admit_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x']  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if  r_death_year<2011"

}


local j
foreach num in 12 24 {
outreg, clear
di "Any ED visit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_ed_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x']  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if  r_death_year<2011"

}

/*
outreg, clear
di "OLS"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg s_tot_paid_by_mc_wi_p12m `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x']  
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

qui sum s_tot_paid_by_mc_wi_p12m, d
//qui gen s_spending_p12m_high=s_tot_paid_by_mc_wi_p12m>r(p75)

/*
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
glm difference `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}
di "GLM"
outreg, replay
*/
outreg, clear
di "OLS difference"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg difference `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'] 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_spending_p12m_high `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_admit_ind_p12m `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=w_`x'] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

*/

local j
foreach num in 12 24 {
qui outreg, clear

foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) merge or
}
di "GLM `num'm spending"
*outreg, replay
local j "if  r_death_year<2011"
}
/*
local j
foreach num in 12 24 {
* qui outreg, clear
di "OLS difference `num'm spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
reg difference`num' `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x'] 
qui outreg, stats(b p) merge
}
local j "if  r_death_year<2011"

*outreg, replay
}*/
local j
foreach num in 12 24 {
* qui outreg, clear
di "Any hospital admit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
logit s_admit_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x']  , or
qui outreg, stats(e_b p) merge
}
*outreg, replay
local j "if  r_death_year<2011"

}


local j
foreach num in 12 24 {
* qui outreg, clear
di "Any ED visit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
logit s_ed_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=w_`x']  ,or
qui outreg, stats(e_b p) merge
}
*outreg, replay
local j "if  r_death_year<2011"

}
}
log close

outreg using "`logpath'\regressions.rtf", replay replace


H="regressions top quartile"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

foreach quart in 0 1 {
//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta if spend_quart4==`quart', clear
capture log close
cap gen difference12=s_tot_paid_by_mc_wi_p12m-s_tot_paid_by_mc_wi_12m
cap gen difference24=s_tot_paid_by_mc_wi_p24m-s_tot_paid_by_mc_wi_24m

local rvarsa2 r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_independent_core_n1 ///
 likely_dem r_cancer_hrs_n1 r_champus_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1

local svarsa2 s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 s_adl_independent_core_n1 ///
r_s_help_dur_ind1

local region /*eol_spend_quart2 eol_spend_quart3*/ eol_spend_quart4
local year "" "if r_death_year<=2010"
local j
foreach b in bonnet {
log using "E:\data\spouse_claims\logs\regressions_utilization_quartile`quart'.txt",text replace
foreach num in 12 24 {
outreg, clear

foreach x in  r_loc_hos { //r_spending r_hs_3d r_spend_or {
qui glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=quartile_w],link(log) fam(gamma) eform 
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge 
}
di "GLM `num'm spending"
outreg, replay
local j "if r_death_year<=2010"
}
/*
local j
foreach num in 12 24 {
outreg, clear
di "OLS difference `num'm spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg difference`num' `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=quartile_w] 
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
local j "if r_death_year<=2010"

outreg, replay
}*/
local j
foreach num in 12 24 {
outreg, clear
di "Any hospital admit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_admit_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=quartile_w]  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<=2010"

}


local j
foreach num in 12 24 {
outreg, clear
di "Any ED visit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_ed_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=quartile_w]  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<=2010"

}

/*
outreg, clear
di "OLS"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg s_tot_paid_by_mc_wi_p12m `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=quartile_w]  
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

qui sum s_tot_paid_by_mc_wi_p12m, d
//qui gen s_spending_p12m_high=s_tot_paid_by_mc_wi_p12m>r(p75)

/*
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
glm difference `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=quartile_w],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}
di "GLM"
outreg, replay
*/
outreg, clear
di "OLS difference"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg difference `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=quartile_w] 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_spending_p12m_high `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=quartile_w] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_admit_ind_p12m `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=quartile_w] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

*/

local j
foreach num in 12 24 {
qui outreg, clear

foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=quartile_w],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) merge or
}
di "GLM `num'm spending"
*outreg, replay
local j "if r_death_year<=2010"
}
/*
local j
foreach num in 12 24 {
* qui outreg, clear
di "OLS difference `num'm spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
reg difference`num' `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=quartile_w] 
qui outreg, stats(b p) merge
}
local j "if r_death_year<=2010"

*outreg, replay
}*/
local j
foreach num in 12 24 {
* qui outreg, clear
di "Any hospital admit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
logit s_admit_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=quartile_w]  , or
qui outreg, stats(e_b p) merge
}
*outreg, replay
local j "if r_death_year<=2010"

}


local j
foreach num in 12 24 {
* qui outreg, clear
di "Any ED visit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
logit s_ed_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=quartile_w]  ,or
qui outreg, stats(e_b p) merge
}
*outreg, replay
local j "if r_death_year<=2010"

}
}
log close

outreg using "`logpath'\regressions_topquart`quart'.rtf", replay replace
}


H="regressions 24m survivors only"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data


cd `datapath'
foreach yer in 12 24 {

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta if surv_`yer'==1, clear
capture log close
cap gen difference12=s_tot_paid_by_mc_wi_p12m-s_tot_paid_by_mc_wi_12m
cap gen difference24=s_tot_paid_by_mc_wi_p24m-s_tot_paid_by_mc_wi_24m
	gen r_s_helper_x=!r_s_help_dur_ind1
	label var r_s_helper_x "Spouse R's helper, from exit"

local rvarsa2 r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 /*r_hrs_comorb_none_n1*/ r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 

local svarsa2 s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 /*s_hrs_comorb_none_n1*/ s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x 

local region /*eol_spend_quart2 eol_spend_quart3*/ eol_spend_quart4
local year "" "if r_death_year<=2010"
local j
foreach b in bonnet {
log using "E:\data\spouse_claims\logs\regressions_utilization_`yer'm_survivors.txt",text replace
foreach num in 12 24 {
outreg, clear

foreach x in  r_loc_hos { //r_spending r_hs_3d r_spend_or {
qui glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=surv_`yer'_w],link(log) fam(gamma) eform 
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge 
}
di "GLM `num'm spending"
outreg, replay
local j "if r_death_year<2011"
}
/*
local j
foreach num in 12 24 {
outreg, clear
di "OLS difference `num'm spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg difference`num' `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=surv_`yer'_w] 
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
local j "if r_death_year<2011"

outreg, replay
}*/
local j
foreach num in 12 24 {
outreg, clear
di "Any hospital admit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_admit_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=surv_`yer'_w]  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<2011"

}


local j
foreach num in 12 24 {
outreg, clear
di "Any ED visit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_ed_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=surv_`yer'_w]  
qui margins, dydx(*) post
qui outreg, stats(b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}
outreg, replay
local j "if r_death_year<2011"

}

/*
outreg, clear
di "OLS"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg s_tot_paid_by_mc_wi_p12m `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=surv_`yer'_w]  
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

qui sum s_tot_paid_by_mc_wi_p12m, d
//qui gen s_spending_p12m_high=s_tot_paid_by_mc_wi_p12m>r(p75)

/*
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
glm difference `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=surv_`yer'_w],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}
di "GLM"
outreg, replay
*/
outreg, clear
di "OLS difference"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui reg difference `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=surv_`yer'_w] 
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_spending_p12m_high `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=surv_`yer'_w] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

outreg, clear
di "logit top quartile spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
qui logit s_admit_ind_p12m `x' `rvarsa2' `svarsa2' `region' i.r_death_year [pw=surv_`yer'_w] , or
qui outreg, stats(e_b p) keep(`x' /*s_tot_paid_by_mc_wi_12m*/) merge or
}

outreg, replay

*/

local j
foreach num in 12 24 {
qui outreg, clear

foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
glm s_tot_paid_by_mc_wi_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=surv_`yer'_w],link(log) fam(gamma) eform 
qui outreg, stats(e_b p) merge or
}
di "GLM `num'm spending"
*outreg, replay
local j "if r_death_year<2011"
}
/*
local j
foreach num in 12 24 {
* qui outreg, clear
di "OLS difference `num'm spending"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
reg difference`num' `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=surv_`yer'_w] 
qui outreg, stats(b p) merge
}
local j "if r_death_year<2011"

*outreg, replay
}*/
local j
foreach num in 12 24 {
* qui outreg, clear
di "Any hospital admit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
logit s_admit_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=surv_`yer'_w]  , or
qui outreg, stats(e_b p) merge
}
*outreg, replay
local j "if r_death_year<2011"

}


local j
foreach num in 12 24 {
* qui outreg, clear
di "Any ED visit `num'm"
foreach x in r_loc_hos { //r_spending r_loc_hos r_hs_3d r_spend_or 
logit s_ed_ind_p`num'm `x' `rvarsa2' `svarsa2' `region' i.r_death_year `j' [pw=surv_`yer'_w]  ,or
qui outreg, stats(e_b p) merge
}
*outreg, replay
local j "if r_death_year<2011"

}
}
log close

outreg using "`logpath'\regressions_`yer'm_survivors.rtf", replay replace
}


H="match incl heart cancer & va ins"
/*Limited to decedents with FFS MC 6m prior to death, married at time of death,
with spouse mc id*/
clear all
mata: mata clear
set more off
capture log close
import excel "E:\data\Dartmouth_misc\EOL_mc_2yrs_HRR\DAP_HRR_03_07_to_merge.xls", sheet("Sheet1") firstrow case(lower) clear
keep hrr totalmedic
rename hrr hrrnum
xtile eol_spending_quintile=tot, nq(5)
xtile eol_spending_quartile=tot, nq(4)
gen eol_spending_3_cat=eol_spending_quartile
replace eol_spending_3_cat=eol_spending_3_cat-1 if inlist(eol_spending_3_cat,3,4)
label define eol_spending_3_cat 1 "Bottome Quartile" 2 "Middle 50%" 3 "Top quartile"
label values eol_spending_3_cat eol_spending_3_cat
gen eol_spending_low=eol_spending_3_cat==1
gen eol_spending_mid=eol_spending_3_cat==2
gen eol_spending_high=eol_spending_3_cat==3
label var eol_spending_low "Bottom Quartile EOL spending by Dartmouth HRR"
label var eol_spending_mid "Middle 50% EOL spending by Dartmouth HRR"
label var eol_spending_high "Top Quartile EOL spending by Dartmouth HRR"
label var eol_spending_3_cat "EOL Spending Group by Dartmouth HRR, Adjusted"
label var eol_spending_quintile "EOL Spending Quintile by Dartmouth HRR, Adjusted"
tempfile temp1
save "`temp1'"



use "E:\data\hrs_public_2012\dementia\pdem_withvarnames_ebl.dta", clear
destring id, gen(r_id)
rename core_year r_core_year_n1
tempfile temp2
save `temp2'

//Server file paths
global logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_v1 if s_core_year_n1<2012 & r_death_year<=2011 //& (r_part_ab_6m==1 & r_hmo_d_6m==0)
*merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_intens_data_ps_set.dta" , gen(spmerge) ///
 *keep(match)
merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_data_full.dta" , gen(spmerge) keep(match)
merge 1:1 r_id r_core_year_n1 using `temp2', gen(demmerge) keep(match master)
merge m:1 hrrnum using `temp1', gen(hrrmerge) keep(match master)
*********************************************************
*********************************************************
//indicators of intensity-hospice 3+days, top quartile spending last 6m, and death in hosp (already there)
gen r_hs_3d_6m=r_hs_los_6m>=3

local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

//get quartile of spending for match
gen s_tot_paid_by_mc_wi_6m18m=s_tot_paid_by_mc_wi_18m-s_tot_paid_by_mc_wi_6m ///
if s_cont_ffs_n_mos>=18
xtile spend_quart=s_tot_paid_by_mc_wi_6m18m , nq(4)
gen spend_quart4=spend_quart==4
sum r_tot_paid_by_mc_wi_6m, d
gen r_spending_6m_high=r_tot_paid_by_mc_wi_6m>=r(p75)

label var r_hs_3d "R Hospice use 3+ days last 6m"
label var r_spending_6m_high "R Medicare spending top quartile last 6m"


gen r_spend_or_hosp_death=r_spending_6m_high==1 | r_loc_==1
foreach s in r s {
foreach n in n1 n2 {
gen `s'_hrs_comorb_none_`n'=`s'_comor_c_hrs_`n'==0 if !missing(`s'_comor_c_hrs_`n')
gen `s'_hrs_comorb_mild_`n'=`s'_comor_c_hrs_`n'==1 if !missing(`s'_comor_c_hrs_`n')
gen `s'_hrs_comorb_modsev_`n'=`s'_comor_c_hrs_`n'>=2 if !missing(`s'_comor_c_hrs_`n')
foreach x in none mild {
	label var `s'_hrs_comorb_`x'_`n' "SR comorbidities: `x'"
}
label var `s'_hrs_comorb_modsev_`n' "SR comorbidities: Mod/Severe"
gen `s'_adl_impair_`n'=!`s'_adl_independent_core_`n' if !missing(`s'_adl_independent_core_`n')
label var `s'_adl_impair_`n' "Dependent in ADLs"
}
}
replace likely_dem=pdem>.5 if !missing(pdem)
//where r&s highly correlated, use s
local rvarsa r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x  r_adl_impair_n1 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

tab eol_spending_quartile, gen(eol_spend_quart)
label var eol_spend_quart1 "Quartile EOL spending by HRR: Low"
label var eol_spend_quart2 "Quartile EOL spending by HRR: Mid-low"
label var eol_spend_quart3 "Quartile EOL spending by HRR: Mid-high"
label var eol_spend_quart4 "Quartile EOL spending by HRR: High"
local region eol_spend_quart2 eol_spend_quart3 eol_spend_quart4
//categorical spouse primary helper, duration'
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing
gen r_s_help_dur_cat = 0 if r_adl_sp_helper_x==0 & r_iadl_sp_helper_x==0
replace r_s_help_dur_cat = 1 if r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1
replace r_s_help_dur_cat = 2 if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) ///
 & ( r_adl_sp_helper_n1==1 | r_iadl_sp_helper_n1==1)
la def help 0 "S not primary helper x" 1 "S primary helper x only" 2 "S primary helper x+n1"
la val r_s_help_dur_cat help
tab r_s_help_dur_cat, gen(r_s_help_dur_ind)
label var r_s_help_dur_ind2 "S primary helper x only" 
label var r_s_help_dur_ind3 "S primary helper x+n1"
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
likely_dem r_cancer_hrs_n1 r_heart_hrs_n1 r_hrs_comorb_modsev_n1 r_hrs_comorb_mild_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_cancer_hrs_n1 s_heart_hrs_n1 s_hrs_comorb_modsev_n1 s_hrs_comorb_mild_n1 ///
s_adl_impair_n1 s_champus_n1 ///
r_s_help_dur_ind1

/*local n1s srh_pf hrs_comorb_mild hrs_comorb_mod ///
nw_midlow nw_midhigh nw_highest  hrs_comorb_mod hrs_comorb_mild ///
adl_independent_core nhres */
sum `rvars' `svars' `region'
foreach x of local n1s {
foreach s in r s {
replace `s'_`x'_n1=`s'_`x'_n2 if r_death_date_e-`s'_c_ivw_date_n1<=183
}
}
local treatvars r_loc_hosp_x //r_hs_3d_6m  r_spending_6m_high r_spend_or_hosp_death 
tokenize `treatvars'
local max : word count `treatvars'

gen quartile_weight=.
gen topquartile_weight=.
gen surv_12_weight=.
gen surv_24_weight=.
gen surv_12=s_cont_ffs_p_mos>=12 & r_s_death>=366
gen surv_24=s_cont_ffs_p_mos>=24 & r_s_death>=731
forvalues i=1/`max' {
di "`i'"
log using $logpath\spouse_claims_match_``i''`time'_canc_heart_va.txt, text replace
sum `rvars' `svars' `region'
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
cap drop ip_* logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i'' ,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' `region' ,treated(``i'') both hist

local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time''  {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

rename _weight w_``i''`time'

/*
forvalues quart=0/1 {
drop ip_pscore ip_block logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region' if spend_quart4==`quart', ///
pscore(ip_pscore) blockid(ip_block) logit
tab ``i''
tab ``i'' if spend_quart4==`quart'
tab ``i'' if spend_quart4==`quart' & !missing(ip_pscore)
di "PS graph1"
di "``i''"
*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i''  if spend_quart4==`quart',outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight
di "PS graph2"
*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
di "Spending quartile pre-death=`quart'"
pstest `rvars`time'' `svars`time'' `region' if spend_quart4==`quart',treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
di "Compare variance here"
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time'' `region' {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace quartile_weight=_w if missing(quartile_we)
}
*/
foreach quart in 12 24 {
drop ip_pscore ip_block logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region' if surv_`quart'==1, ///
pscore(ip_pscore) blockid(ip_block) logit
tab ``i''
tab ``i'' if surv_`quart'==1
tab ``i'' if surv_`quart'==1 & !missing(ip_pscore)
di "PS graph1"
di "``i''"
*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i''  if surv_`quart'==1,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight
di "PS graph2"
*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
di "24m Survivors only"
pstest `rvars`time'' `svars`time'' `region' if surv_`quart'==1,treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
di "Compare variance here"
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time'' `region' {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace surv_`quart'_weight=_w if missing(surv_`quart'_we)
}

log close
}

save spouse_claims_intensmatched, replace



H="tab1"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta
***************************************************************
tab r_loc_hosp_x, missing

rename r_cc_*n12mn0 r_cc_*n12m

foreach d in 365 730{
gen s_died_`d'd=s_death_date-r_death_date_e<=`d'
label var s_died_`d'd "S death <=`d'd after R"
}
***************************************************************


*************************************************************************************
*************************************************************************************
//create Table 1, overall sample characteristics
*************************************************************************************
*************************************************************************************
//Part 1 - Decedent char
gen n=1
local rcvars r_age r_networth_adj2012_n1
local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

local rivars r_female r_white_e r_hseduc  ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
 r_adl_independent_core_n1 r_srh_pf_n1 ///
 r_nhres_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 ///
 `rhrscomorbs' r_cc_3_alzhdmta_n12mn6m ///
r_cc_6_chrnkidn_n12mn6m r_cc_ami_isch_n12mn6m r_cc_8_chf_n12mn6m ///
r_cc_9_diabetes_n12mn6m r_cc_7_copd_n12mn6m r_cc_16_strketia_n12mn6m ///
r_cc_cncr_chronic_n12mn6m r_cc_4_atrialfb_n12mn6m r_cc_11_hipfrac_n12mn6m ///
r_cc_13_depressn_n12mn6m r_cc_14_osteoprs_n12mn6m r_cc_15_ra_oa_n12mn6m r_loc_hosp_x ///
r_advdir_x r_dexp_x r_discuss_x  

local scvars s_age s_networth_adj2012_n1

local sivars s_female s_white_e s_hseduc  ///
 s_medicaid_n1 s_champus_n1 s_medigap_n1 ///
 s_adl_independent_core_n1 s_srh_pf_n1 ///
 s_nhres_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
 `shrscomorbs' s_cc_3_alzhdmta_n12m ///
s_cc_6_chrnkidn_n12m s_cc_ami_isch_n12m s_cc_8_chf_n12m ///
s_cc_9_diabetes_n12m s_cc_7_copd_n12m s_cc_16_strketia_n12m ///
s_cc_cncr_chronic_n12m s_cc_4_atrialfb_n12m s_cc_11_hipfrac_n12m ///
s_cc_13_depressn_n12m s_cc_14_osteoprs_n12m s_cc_15_ra_oa_n12m ///

local region eol_spend_quart1 eol_spend_quart2 eol_spend_quart3 eol_spend_quart4


la var r_age "Age at death, years"
la var r_loc_ "Died in Hospital"
la var r_married_x "Married at death"
la var r_female "Female"
la var r_white_e "Race, White, Non-Hispanic"
la var r_hseduc "Education, High School Deg"
la var r_medicaid_n1  "Medicaid"
la var r_champus_n1  "VA Insurance"
la var r_medigap_n1 "Medigap"
la var r_adl_independent_core_n1 "ADL Independent"
la var r_srh_pf_n1 "SRH poor or fair**"
la var r_advdir_x "Had advanced directive"
la var r_dexp_x  "Death expected by family"
la var r_discuss_x "Discussion of EOL care"
la var s_age "Age at death, years"
la var s_loc_hosp_x "Died in Hospital"
la var s_married_x "Married at death"
la var s_female "Female"
la var s_white "Race, White, Non-Hispanic"
la var s_hseduc "Education, High School Deg"
la var s_medicaid_n1  "Medicaid"
la var s_champus_n1  "VA Insurance"
la var s_medigap_n1 "Medigap"
la var s_adl_independent_core_n1 "ADL Independent"
la var s_srh_pf_n1 "SRH poor or fair"
la var r_s_death_24m "S death within 2 years"


local rn: word count `rcvars' `rivars' n 
mat tab=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

svyset [pw=w_r_loc]
/*foreach s in r s {
	foreach loc in 0 1 {
		foreach v in ``s'cvars' {
			sum `v' if r_loc_==`loc' /*[aw=w_r_loc]*/
			mat tab[`r',`c']=r(mean)
			mat tab[`r',`c'+1]=r(sd)
			if `loc'==1 {
				/*svy: mean `v', over(r_loc_)
				test [`v']0=[`v']1*/
				ttest `v', by(r_loc_)
				mat stars[`r',`c']=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach v in ``s'ivars' {
			sum `v' if r_loc_==`loc' /*[aw=w_r_loc]*/
			mat tab[`r',`c']=r(mean)*100
			if `loc'==1 & "`v'"!="r_loc_hosp_x" {
				/*svy: tab `v' r_loc_
				mat stars[`r',`c']=(e(p_Pear)<.01)+(e(p_Pear)<.05)*/
				tab `v' r_loc_, chi2
				mat stars[`r',`c']=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
}	
	sum n if r_loc_==`loc' /*[aw=w_r_loc]*/
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+2
}
}
mat rownames tab=`rcvars' `rivars' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_heart_va.rtf, statmat(tab) title(Table 1) ///
ctitles("" "" "Decedent variables" "" "Surviving Spouse"  \"" "Control" "R Death in Hospital" ///
"Control" "R Death in Hospital" ) sdec(2) replace subst(1) annotate(stars) ///
asymbol(*,**) varlabels note("*p<.05,**p<.01")
*/

preserve
replace s_tot_paid_by_mc_wi_p24m=. if !surv_12 | r_death_year==2011
/*gen s_tot_paid_by_mc_wi_6m18m=s_tot_paid_by_mc_wi_18m-s_tot_paid_by_mc_wi_6m if ///
s_cont_ffs_n_mos>=18*/
mat tab=J(12,4,.)
local r=1
local c=1
sum spend_quart
local num=r(N)
sum s_tot_paid_by_mc_wi_p24m
local num24=r(N)

forvalues i=1/4 {
	foreach x in 6m18m p12m p24m {
	local r=`r'+1
	foreach j in "0,1" 0 1 {	
	qui sum s_tot_paid_by_mc_wi_`x' if spend_quart==`i' & inlist(r_loc_hos,`j') ///
	/*[aw=w_r_loc]*/,d
	mat tab[`r',`c']=r(p50)
	local r=`r'+1
}
}
	local c=`c'+1
	local r=1

}
mat rownames tab="6-18m before R's death" "All" "No In-hospital death" "In-hospital death" ///
"12m after R's death" "All" "No In-hospital death" ///
"In-hospital death" "24m after R's death*" "All" "No In-hospital death" ///
"In-hospital death"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_heart_va.rtf, statmat(tab) title("Median MC Spending by Quartile of S Expenditure prior to R's death") ///
note("Among those with 18m FFS prior to R's death only (N=`num')" ///
"WI & inflation adjusted to 2012$" "*-Excluding those with less than 12m FFS (N=`num24')") ///
ctitles("" "Bottom" "2nd" "3rd" "Top") replace
label var likely_dem "Pr. dementia >.5"
restore
/*foreach s in r s {
	label var `s'_hrs_comorb_mild_n1 "SR comorbidities: none"
	label var `s'_hrs_comorb_mod_n1 "SR comorbidities: mild (1-3)"
}*/
	gen r_s_helper_x=!r_s_help_dur_ind1
	label var r_s_helper_x "Spouse R's helper, from exit"
	
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x 

foreach x in s_tot_paid_by_mc_wi_p24m s_ed_ind_p24m s_admit_ind_p24m s_icu_ind_p24m ///
s_died_730d {
	gen `x'_cond=`x' if surv_12 & r_death_year<2011
	local lab : var label `x'
	label var `x'_cond "`lab', conditional*"
}
local coutcomes s_tot_paid_by_mc_wi_p12m s_tot_paid_by_mc_wi_p24m /*s_n_hospd_p12m ///
s_n_hospd_p24m s_icu_days_p12m s_icu_days_p24m*/ s_tot_paid_by_mc_wi_p24m_cond 
local ioutcomes s_admit_ind_p12m s_admit_ind_p24m s_admit_ind_p24m_cond ///
s_ed_ind_12m s_ed_ind_p24m s_ed_ind_p24m_cond ///
s_icu_ind_p12m s_icu_ind_p24m s_icu_ind_p24m_cond s_died_365d s_died_730d s_died_730d_cond


foreach weight in w_r_loc surv_12_w surv_24_w {
	if "`weight'"=="w_r_loc" local title "Full Sample"
	if "`weight'"=="surv_12_w" {
		preserve
		keep if surv_12m
		local title "12m Survivors only"
	}
	if "`weight'"=="surv_24_w" {
		keep if surv_24m
		local title "24m Survivors only"
}
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x 


local rn : word count `rvars' `svars' `region' 1 1 1
mat tab=J(`rn',6,.)
local r=1
local c=1

foreach time in "" "[aw=`weight']" {
	foreach loc in 0 1 {
		foreach x in `rvars' `svars' `region' {
			if "`x'"!="r_age" & "`x'"!="s_age" {
					sum `x' if r_loc_==`loc' `time'
					mat tab[`r',`c']=r(mean)*100
					if `loc'==1 mat tab[`r',`=`c'+1']=(tab[`r',`=`c'-1']/100-tab[`r',`=`c'']/100)/sqrt((tab[`r',`=`c'-1']/100* ///
						(1-tab[`r',`=`c'-1']/100)+tab[`r',`=`c'']/100*(1-tab[`r',`=`c'']/100))/2)
}
			else {
				local r=`r'+1
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)
				local loc`loc'=r(sd)
				if `loc'==1 mat tab[`r',`=`c'+1']=(tab[`r',`c'-1]-tab[`r',`c']) ///
				/sqrt((`loc0'^2+`loc1'^2)/2) 
}
	local r = `r'+1
}
	sum n if r_loc_==`loc' `time'
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}
	local c=`c'+1
}

mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_heart_va.rtf, ///
statmat(tab) title("Matching Variables, `title'") ///
ctitles("" "" "Unmatched" "" "" "Matched"  \"" "Control" "R Death in Hospital" ///
 "Std Diff" "Control""R Death in Hospital" "Std Diff") sdec(2) ///
addtable varlabels  note("*-Conditional on 12m survival and R death prior to 2011")

local rcvars r_age 
local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

local rivars r_female r_white_e r_hseduc  ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
 r_adl_impair_n1 r_srh_pf_n1 ///
 r_nhres_n1 likely_dem r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 ///
 `rhrscomorbs' r_loc_hosp_x ///
r_advdir_x r_dexp_x r_discuss_x  

local scvars s_age s_networth_adj2012_n1

local sivars s_female s_white_e s_hseduc  ///
 s_medicaid_n1 s_champus_n1 s_medigap_n1 ///
 s_adl_impair_n1 s_srh_pf_n1 ///
 s_nhres_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
 `shrscomorbs' 
 
/*local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x */

local rvars `rcvars' `rivars' 
local svars `scvars' `sivars' 
local rn : word count `rvars' `svars' `region' `coutcomes' `ioutcomes' 1 1 1 1
mat tab=J(`rn',3,.)
mat stars=J(`rn',3,0)
local r=1
local c=1
foreach time in "[aw=`weight']" {
	foreach loc in 0 1 {
		foreach x in `rvars' `svars' `region' `coutcomes' `ioutcomes'{
		di "`x'"
			if "`x'"!="r_age" & "`x'"!="s_age" & ///
			!inlist(substr("`x'",1,6),"s_netw", "s_tot_","s_n_ho", ///
			"s_icu_") {
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)*100
				if `loc'==1 & "`x'"!="r_loc_hosp_x" svy: tab `x' r_loc_
				if `loc'==1 & "`x'"!="r_loc_hosp_x" mat tab[`r',`c'+1]=e(p_Pear)
				if `loc'==1 & "`x'"!="r_loc_hosp_x" mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
			else {
				if inlist("`x'","r_age","s_age","s_tot_paid_by_mc_wi_p12m") ///
				 local r=`r'+1
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)
				if `loc'==1 svy: mean `x', over(r_loc_)
				if `loc'==1 test [`x']0=[`x']1
				if `loc'==1 mat tab[`r',`c'+1]=r(p)
				if `loc'==1 mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
	local r = `r'+1
}
	sum n if r_loc_==`loc' `time'
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}
}

mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' ///
"Outcomes" `coutcomes' `ioutcomes' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_heart_va.rtf, ///
statmat(tab) title("Sample Characteristics, `title'") ///
ctitles("" "Control" "R Death in Hospital" "P") sdec(2) ///
addtable varlabels annotate(stars) asymbol(*,**)

}





H="3 month spending graphs"
/*General data setup for the dataset
Limited to decedents with FFS MC 6m prior to Index Date, partner at time of Index Date,
with mc id*/

capture log close

clear all
set more off

//Server file paths
local logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_intensmatched.dta
cd `logpath'
svyset [pw=w_r_loc]
//note-you can use these next lines to drop the top 3% of pre-Index Date_spenders
/*
gen perstime=s_cont_ffs_n_mos
replace perstime=24 if perstime>24
gen npt=s_s_tot_paid_by_mc_24m/perstime
gen pperstime=s_cont_ffs_p_mos
replace pperstime=24 if ppers>24
gen ppt=s_s_tot_paid_by_mc_p24m/pperstime
gen pt=npt+ppt
gsort -npt
drop if _n<50
*/

forvalues n=1(3)24 {
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' [aw=w_r_loc_]
	gen ffs_tot`n'=. 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' [aw=w_r_loc_]
	gen ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==0 [aw=w_r_loc_]
	gen m_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==0 [aw=w_r_loc_]
	gen m_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==1 [aw=w_r_loc_]
	gen f_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==1 [aw=w_r_loc_]
	gen f_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' [aw=w_r_loc_]
	gen s_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' [aw=w_r_loc_]
	gen s_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==0 [aw=w_r_loc_]
	gen m_s_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==0 [aw=w_r_loc_]
	gen m_s_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==1 [aw=w_r_loc_]
	gen f_s_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==1 [aw=w_r_loc_]
	gen f_s_ffs_tot`=`n'+25'=.
}

foreach x of varlist *ffs_tot* {
gen sd`x'=.
}
sort r_loc_
foreach ind in 0 1 {
forvalues n=1(3)24 {
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_n_mos>=`n' [aw=w_r_loc_]
	replace ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_n_mos>=`n' 
	replace sdffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_n_mos>=`n'
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=`n' [aw=w_r_loc_]
	replace ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=`n'
	replace sdffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=`n'
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==0 [aw=w_r_loc_]
	replace m_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==0 
	replace sdm_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==0 [aw=w_r_loc_]
	replace m_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==0 
	replace sdm_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==1 [aw=w_r_loc_]
	replace f_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==1 
	replace sdf_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==1 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==1 [aw=w_r_loc_]
	replace f_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==1 
	replace sdf_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==1 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_p_mos>=24 [aw=w_r_loc_]
	replace s_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24
	replace sds_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=24 [aw=w_r_loc_]
	replace s_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 
	replace sds_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 [aw=w_r_loc_]
	replace m_s_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	replace sdm_s_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 [aw=w_r_loc_]
	replace m_s_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	replace sdm_s_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 [aw=w_r_loc_]
	replace f_s_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
	replace sdf_s_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 [aw=w_r_loc_]
	replace f_s_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
	replace sdf_s_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
}
}


/*
forvalues n=1(3)24 {
	by r_loc_, sort: gen tot_ffs_n`n'=s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' 
	by r_loc_, sort: gen tot_ffs_p`n'=s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n'
	by r_loc_, sort: egen ffs_tot`n'=mean(tot_ffs_n`n')
	by r_loc_, sort: egen ffs_tot`=`n'+25'=mean(tot_ffs_p`n')
	by r_loc_, sort: egen m_ffs_tot`n'=mean(tot_ffs_n`n') if s_female==0
	by r_loc_, sort: egen m_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if s_female==0
	by r_loc_, sort: egen f_ffs_tot`n'=mean(tot_ffs_n`n') if s_female==1
	by r_loc_, sort: egen f_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if s_female==1
	by r_loc_, sort: egen s_ffs_tot`n'=mean(tot_ffs_n`n') if inscope_p_mos>=24
	by r_loc_, sort: egen s_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if inscope_p_mos>=24 
	by r_loc_, sort: egen f_s_ffs_tot`n'=mean(tot_ffs_n`n') if inscope_p_mos>=24 & s_female==1  
	by r_loc_, sort: egen f_s_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if inscope_p_mos>=24 & s_female==1 
	by r_loc_, sort: egen m_s_ffs_tot`n'=mean(tot_ffs_n`n') if inscope_p_mos>=24 & s_female==0 
	by r_loc_, sort: egen m_s_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if inscope_p_mos>=24 & s_female==0 

}
*/
keep s_id *ffs_tot* s_female r_death_date_e r_loc_

foreach x of varlist ffs* m_* f_* s_ffs* {
	gen n`x'=.
	foreach i in 0 1 {
	sum `x' if r_loc_==`i'
	replace n`x'=r(N) if r_loc_==`i' & !missing(`x')
}
}
reshape long ffs_tot tot_ffs f_ffs_tot m_ffs_tot s_ffs_tot m_s_ffs_tot ///
 f_s_ffs_tot  sdffs_tot  sdf_ffs_tot sdm_ffs_tot sds_ffs_tot sdm_s_ffs_tot ///
 sdf_s_ffs_tot nffs_tot  nf_ffs_tot nm_ffs_tot ns_ffs_tot nm_s_ffs_tot ///
 nf_s_ffs_tot , i(s_id r_death_date_e) j(t)
gen source="comparison" if !r_loc_
replace source="spouse" if r_loc_
gen time=-(t+2)/3 if t<=24
replace time=(t-23)/3 if t>=24

label define time -8 "21-24m" -7 "19-21" -6 "16-18" -5 "13-15" -4 "9-12" ///
 -3 "7-9" -2 "4-6" -1 "0-3" 8 "21-24m" 7 "19-21" 6 "16-18" 5 "13-15" 4 "9-12" ///
 3 "7-9" 2 "4-6" 1 "0-3" 
label values time time
preserve
collapse m_s_ffs_tot f_s_ffs_tot ffs_tot f_ffs_tot m_ffs_tot s_ffs_tot  ///
 sdm_s_ffs_tot sdf_s_ffs_tot sdffs_tot sdf_ffs_tot sdm_ffs_tot sds_ffs_tot ///
 nm_s_ffs_tot nf_s_ffs_tot nffs_tot nf_ffs_tot nm_ffs_tot ns_ffs_tot, by(time source)

foreach x in ffs_tot f_ffs_tot m_ffs_tot s_ffs_tot m_s_ffs_tot f_s_ffs_tot {
by time source, sort: gen ulci`x'=`x'+invttail(n`x'-1,0.025)*(sd`x'/sqrt(n`x'))
by time source, sort: gen llci`x'=`x'-invttail(n`x'-1,0.025)*(sd`x'/sqrt(n`x'))
}
label var ffs_tot "Total MC Spending, all in scope"
label var f_ffs_tot "Total MC Spending, females"
label var m_ffs_tot "Total MC Spending, males"
label var s_ffs_tot "Total MC Spending, 24m Survivors only"
gen before=time if time<0
gen after=time if time>0


/*
foreach x in ffs_tot  {
twoway (connected m_`x' time if source=="spouse") (connected f_`x' time if source=="spouse") ///
(connected m_`x' time if source=="comparison") (connected f_`x' time if source=="comparison") , ///
 xline(0) xtitle("Months from index date")title("Mean Medicare Costs By Time from Index Date, 3month intervals") ///
 xlab(-8 -4 -1 1 4 8, valuelabel) ///
 note("WI Adjusted to 2012 $") subtitle("by gender ") legend(label(1 "Male Spouses") ///
label(2 "Female Spouses") label(3 "Male Comparison") label(4 "Female Comparison")) ///
  
graph save mc_costs_spouse_death_hosp_gender`x'.gph, replace
graph export mc_costs_spouse_death_hosp_gender_tot3months.pdf, replace

}

foreach x in ffs_tot  {
twoway (connected m_`x' time) (connected f_`x' time) (lfit m_`x' before) (lfit m_`x' after) ///
(lfit f_`x' before) (lfit f_`x' after), ///
 xline(0) xtitle("Months from index date")title("Mean Medicare Costs By Time from Index Date, 3month intervals") ///
 xlab(-8 -4 -1 1 4 8, valuelabel) ///
 note("WI Adjusted to 2012 $") subtitle("by gender ") legend(label(1 "Males") ///
label(2 "Females"))   
graph save mc_costs_spouse_death_hosp_gender`x'.gph, replace
graph export mc_costs_spouse_death_hosp_gender_tot3months_prepost.pdf, replace

}
*/
/*
foreach x in s_ffs_tot {
twoway (connected m_`x' time if source=="spouse") (connected f_`x' time if source=="spouse") ///
(connected m_`x' time if source=="comparison") (connected f_`x' time if source=="comparison") , ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel) ///
note("WI Adjusted to 2012 $" "24m survivors only") subtitle("by gender ") ///
legend(label(1 "Male Spouses") ///
label(2 "Female Spouses") label(3 "Male Comparison") label(4 "Female Comparison")) ///
  
graph save mc_costs_spouse_death_hosp_gender`x'.gph, replace
graph export mc_costs_spouse_death_hosp_gender_survivors3months.pdf, replace
}

foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012 $") subtitle("All `gend' Respondents")  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///
 ytitle()
graph save mc_costs_spouse_death_hosp_all, replace
graph export "Non-CI graphs/mc_costs_spouse_death_hosp_`g'all3months.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison"), ///
 xline(0) xtitle("Months from index date") ytitle()  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)     ///
note("WI Adjusted to 2012 $" )  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///
 subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors, replace
graph export "Non-CI graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months.pdf", replace
}



foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison") ///
(rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="spouse") (rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012 $") subtitle("All `gend' Respondents")  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///
 ytitle()
graph save mc_costs_spouse_death_hosp_all_ci, replace
graph export "CI graphs/mc_costs_spouse_death_hosp_`g'all3months_ci.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison") ///
(rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="spouse") (rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="comparison"),  ///
 xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)  ytitle()    ///
note("WI Adjusted to 2012 $")  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///
 label(3 "") label(4 "") ) subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors_ci, replace
graph export "CI graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months_ci.pdf", replace
}
/*General data setup for the dataset
Limited to decedents with FFS MC 6m prior to Index Date, partner at time of Index Date,
with mc id*/
*/
foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012 $") subtitle("All `gend' Respondents")  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///

graph save mc_costs_spouse_death_hosp_all, replace
graph export "graphs/mc_costs_spouse_death_hosp_`g'all3months.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison"), ///
 xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)     ///
note("WI Adjusted to 2012 $" )  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///
 subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors, replace
graph export "graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months.pdf", replace
}

foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison") ///
(rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="spouse") (rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012 $") subtitle("All `gend' Respondents")  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///

graph save mc_costs_spouse_death_hosp_all_ci, replace
graph export "graphs/mc_costs_spouse_death_hosp_`g'all3months_ci.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison") ///
(rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="spouse") (rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="comparison"),  ///
 xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)     ///
note("WI Adjusted to 2012 $")  legend(order( 1 "Bereaved Spouses" 2 "Matched Spouses")) ///
 subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors_ci, replace
graph export "graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months_ci.pdf", replace
}


H="median graphs"
/*General data setup for the dataset
Limited to decedents with FFS MC 6m prior to Index Date, partner at time of Index Date,
with mc id*/

capture log close

clear all
set more off

//Server file paths
local logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_intensmatched.dta
cd `logpath'
*svyset [pw=w_r_loc]
//note-you can use these next lines to drop the top 3% of pre-Index Date_spenders
/*
gen perstime=s_cont_ffs_n_mos
replace perstime=24 if perstime>24
gen npt=s_s_tot_paid_by_mc_24m/perstime
gen pperstime=s_cont_ffs_p_mos
replace pperstime=24 if ppers>24
gen ppt=s_s_tot_paid_by_mc_p24m/pperstime
gen pt=npt+ppt
gsort -npt
drop if _n<50
*/

forvalues n=1(3)24 {
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' /*[aw=w_r_loc_]*/
	gen ffs_tot`n'=. 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' /*[aw=w_r_loc_]*/
	gen ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==0 /*[aw=w_r_loc_]*/
	gen m_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==0 /*[aw=w_r_loc_]*/
	gen m_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==1 /*[aw=w_r_loc_]*/
	gen f_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==1 /*[aw=w_r_loc_]*/
	gen f_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' /*[aw=w_r_loc_]*/
	gen s_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' /*[aw=w_r_loc_]*/
	gen s_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==0 /*[aw=w_r_loc_]*/
	gen m_s_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==0 /*[aw=w_r_loc_]*/
	gen m_s_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==1 /*[aw=w_r_loc_]*/
	gen f_s_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==1 /*[aw=w_r_loc_]*/
	gen f_s_ffs_tot`=`n'+25'=.
}

foreach x of varlist *ffs_tot* {
gen sd`x'=.
}
sort r_loc_
foreach ind in 0 1 {
forvalues n=1(3)24 {
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_n_mos>=`n' /*[aw=w_r_loc_]*/, d
	replace ffs_tot`n'=r(p50) if r_loc_==`ind' & inscope_n_mos>=`n' 
	replace sdffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_n_mos>=`n'
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=`n' /*[aw=w_r_loc_]*/, d
	replace ffs_tot`=`n'+25'=r(p50) if r_loc_==`ind' & inscope_p_mos>=`n'
	replace sdffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=`n'
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==0 /*[aw=w_r_loc_]*/, d
	replace m_ffs_tot`n'=r(p50) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==0 
	replace sdm_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==0 /*[aw=w_r_loc_]*/, d
	replace m_ffs_tot`=`n'+25'=r(p50) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==0 
	replace sdm_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==1 /*[aw=w_r_loc_]*/, d
	replace f_ffs_tot`n'=r(p50) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==1 
	replace sdf_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==1 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==1 /*[aw=w_r_loc_]*/, d
	replace f_ffs_tot`=`n'+25'=r(p50) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==1 
	replace sdf_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==1 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_p_mos>=24 /*[aw=w_r_loc_]*/, d
	replace s_ffs_tot`n'=r(p50) if r_loc_==`ind' & inscope_p_mos>=24
	replace sds_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=24 /*[aw=w_r_loc_]*/, d
	replace s_ffs_tot`=`n'+25'=r(p50) if r_loc_==`ind' & inscope_p_mos>=24 
	replace sds_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 /*[aw=w_r_loc_]*/, d
	replace m_s_ffs_tot`n'=r(p50) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	replace sdm_s_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 /*[aw=w_r_loc_]*/, d
	replace m_s_ffs_tot`=`n'+25'=r(p50) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	replace sdm_s_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 /*[aw=w_r_loc_]*/, d
	replace f_s_ffs_tot`n'=r(p50) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
	replace sdf_s_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 /*[aw=w_r_loc_]*/, d
	replace f_s_ffs_tot`=`n'+25'=r(p50) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
	replace sdf_s_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
}
}


/*
forvalues n=1(3)24 {
	by r_loc_, sort: gen tot_ffs_n`n'=s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' 
	by r_loc_, sort: gen tot_ffs_p`n'=s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n'
	by r_loc_, sort: egen ffs_tot`n'=mean(tot_ffs_n`n')
	by r_loc_, sort: egen ffs_tot`=`n'+25'=mean(tot_ffs_p`n')
	by r_loc_, sort: egen m_ffs_tot`n'=mean(tot_ffs_n`n') if s_female==0
	by r_loc_, sort: egen m_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if s_female==0
	by r_loc_, sort: egen f_ffs_tot`n'=mean(tot_ffs_n`n') if s_female==1
	by r_loc_, sort: egen f_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if s_female==1
	by r_loc_, sort: egen s_ffs_tot`n'=mean(tot_ffs_n`n') if inscope_p_mos>=24
	by r_loc_, sort: egen s_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if inscope_p_mos>=24 
	by r_loc_, sort: egen f_s_ffs_tot`n'=mean(tot_ffs_n`n') if inscope_p_mos>=24 & s_female==1  
	by r_loc_, sort: egen f_s_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if inscope_p_mos>=24 & s_female==1 
	by r_loc_, sort: egen m_s_ffs_tot`n'=mean(tot_ffs_n`n') if inscope_p_mos>=24 & s_female==0 
	by r_loc_, sort: egen m_s_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if inscope_p_mos>=24 & s_female==0 

}
*/
keep s_id *ffs_tot* s_female r_death_date_e r_loc_

foreach x of varlist ffs* m_* f_* s_ffs* {
	gen n`x'=.
	foreach i in 0 1 {
	sum `x' if r_loc_==`i'
	replace n`x'=r(N) if r_loc_==`i' & !missing(`x')
}
}
reshape long ffs_tot tot_ffs f_ffs_tot m_ffs_tot s_ffs_tot m_s_ffs_tot ///
 f_s_ffs_tot  sdffs_tot  sdf_ffs_tot sdm_ffs_tot sds_ffs_tot sdm_s_ffs_tot ///
 sdf_s_ffs_tot nffs_tot  nf_ffs_tot nm_ffs_tot ns_ffs_tot nm_s_ffs_tot ///
 nf_s_ffs_tot , i(s_id r_death_date_e) j(t)
gen source="comparison" if !r_loc_
replace source="spouse" if r_loc_
gen time=-(t+2)/3 if t<=24
replace time=(t-23)/3 if t>=24

label define time -8 "21-24m" -7 "19-21" -6 "16-18" -5 "13-15" -4 "9-12" ///
 -3 "7-9" -2 "4-6" -1 "0-3" 8 "21-24m" 7 "19-21" 6 "16-18" 5 "13-15" 4 "9-12" ///
 3 "7-9" 2 "4-6" 1 "0-3" 
label values time time
preserve
collapse m_s_ffs_tot f_s_ffs_tot ffs_tot f_ffs_tot m_ffs_tot s_ffs_tot  ///
 sdm_s_ffs_tot sdf_s_ffs_tot sdffs_tot sdf_ffs_tot sdm_ffs_tot sds_ffs_tot ///
 nm_s_ffs_tot nf_s_ffs_tot nffs_tot nf_ffs_tot nm_ffs_tot ns_ffs_tot, by(time source)

foreach x in ffs_tot f_ffs_tot m_ffs_tot s_ffs_tot m_s_ffs_tot f_s_ffs_tot {
by time source, sort: gen ulci`x'=`x'+invttail(n`x'-1,0.025)*(sd`x'/sqrt(n`x'))
by time source, sort: gen llci`x'=`x'-invttail(n`x'-1,0.025)*(sd`x'/sqrt(n`x'))
}
label var ffs_tot "Total MC Spending, all in scope"
label var f_ffs_tot "Total MC Spending, females"
label var m_ffs_tot "Total MC Spending, males"
label var s_ffs_tot "Total MC Spending, 24m Survivors only"
gen before=time if time<0
gen after=time if time>0


/*
foreach x in ffs_tot  {
twoway (connected m_`x' time if source=="spouse") (connected f_`x' time if source=="spouse") ///
(connected m_`x' time if source=="comparison") (connected f_`x' time if source=="comparison") , ///
 xline(0) xtitle("Months from index date")title("Mean Medicare Costs By Time from Index Date, 3month intervals") ///
 xlab(-8 -4 -1 1 4 8, valuelabel) ///
 note("WI Adjusted to 2012 $") subtitle("by gender ") legend(label(1 "Male Spouses") ///
label(2 "Female Spouses") label(3 "Male Comparison") label(4 "Female Comparison")) ///
  
graph save mc_costs_spouse_death_hosp_gender`x'.gph, replace
graph export mc_costs_spouse_death_hosp_gender_tot3months_meds.pdf, replace

}

foreach x in ffs_tot  {
twoway (connected m_`x' time) (connected f_`x' time) (lfit m_`x' before) (lfit m_`x' after) ///
(lfit f_`x' before) (lfit f_`x' after), ///
 xline(0) xtitle("Months from index date")title("Mean Medicare Costs By Time from Index Date, 3month intervals") ///
 xlab(-8 -4 -1 1 4 8, valuelabel) ///
 note("WI Adjusted to 2012 $") subtitle("by gender ") legend(label(1 "Males") ///
label(2 "Females"))   
graph save mc_costs_spouse_death_hosp_gender`x'.gph, replace
graph export mc_costs_spouse_death_hosp_gender_tot3months_prepost_meds.pdf, replace

}
*/
/*
foreach x in s_ffs_tot {
twoway (connected m_`x' time if source=="spouse") (connected f_`x' time if source=="spouse") ///
(connected m_`x' time if source=="comparison") (connected f_`x' time if source=="comparison") , ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel) ///
note("WI Adjusted to 2012 $" "24m survivors only") subtitle("by gender ") ///
legend(label(1 "Male Spouses") ///
label(2 "Female Spouses") label(3 "Male Comparison") label(4 "Female Comparison")) ///
  
graph save mc_costs_spouse_death_hosp_gender`x'.gph, replace
graph export mc_costs_spouse_death_hosp_gender_survivors3months_meds.pdf, replace
}

foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012 $") subtitle("All `gend' Respondents")  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///
 ytitle()
graph save mc_costs_spouse_death_hosp_all, replace
graph export "Non-CI graphs/mc_costs_spouse_death_hosp_`g'all3months_meds.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison"), ///
 xline(0) xtitle("Months from index date") ytitle()  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)     ///
note("WI Adjusted to 2012 $" )  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///
 subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors, replace
graph export "Non-CI graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months_meds.pdf", replace
}



foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison") ///
(rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="spouse") (rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012 $") subtitle("All `gend' Respondents")  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///
 ytitle()
graph save mc_costs_spouse_death_hosp_all_ci, replace
graph export "CI graphs/mc_costs_spouse_death_hosp_`g'all3months_ci_meds.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison") ///
(rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="spouse") (rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="comparison"),  ///
 xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)  ytitle()    ///
note("WI Adjusted to 2012 $")  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///
 label(3 "") label(4 "") ) subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors_ci, replace
graph export "CI graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months_ci_meds.pdf", replace
}
/*General data setup for the dataset
Limited to decedents with FFS MC 6m prior to Index Date, partner at time of Index Date,
with mc id*/
*/
foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012 $") subtitle("All `gend' Respondents")  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///

graph save mc_costs_spouse_death_hosp_all, replace
graph export "graphs/mc_costs_spouse_death_hosp_`g'all3months_meds.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison"), ///
 xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)     ///
note("WI Adjusted to 2012 $" )  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///
 subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors, replace
graph export "graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months_meds.pdf", replace
}

foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison") ///
(rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="spouse") (rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012 $") subtitle("All `gend' Respondents")  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///

graph save mc_costs_spouse_death_hosp_all_ci, replace
graph export "graphs/mc_costs_spouse_death_hosp_`g'all3months_ci_meds.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison") ///
(rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="spouse") (rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="comparison"),  ///
 xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)     ///
note("WI Adjusted to 2012 $")  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///
 subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors_ci, replace
graph export "graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months_ci_meds.pdf", replace
}


H="weighted graphs"
/*General data setup for the dataset
Limited to decedents with FFS MC 6m prior to Index Date, partner at time of Index Date,
with mc id*/

capture log close

clear all
set more off

//Server file paths
local logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_intensmatched.dta
cd `logpath'
svyset [pw=w_r_loc]
//note-you can use these next lines to drop the top 3% of pre-Index Date_spenders
/*
gen perstime=s_cont_ffs_n_mos
replace perstime=24 if perstime>24
gen npt=s_s_tot_paid_by_mc_24m/perstime
gen pperstime=s_cont_ffs_p_mos
replace pperstime=24 if ppers>24
gen ppt=s_s_tot_paid_by_mc_p24m/pperstime
gen pt=npt+ppt
gsort -npt
drop if _n<50
*/

forvalues n=1(3)24 {
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' [aw=w_r_loc_]
	gen ffs_tot`n'=. 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' [aw=w_r_loc_]
	gen ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==0 [aw=w_r_loc_]
	gen m_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==0 [aw=w_r_loc_]
	gen m_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==1 [aw=w_r_loc_]
	gen f_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==1 [aw=w_r_loc_]
	gen f_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' [aw=w_r_loc_]
	gen s_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' [aw=w_r_loc_]
	gen s_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==0 [aw=w_r_loc_]
	gen m_s_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==0 [aw=w_r_loc_]
	gen m_s_ffs_tot`=`n'+25'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' & s_female==1 [aw=w_r_loc_]
	gen f_s_ffs_tot`n'=.
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n' & s_female==1 [aw=w_r_loc_]
	gen f_s_ffs_tot`=`n'+25'=.
}

foreach x of varlist *ffs_tot* {
gen sd`x'=.
}
sort r_loc_
foreach ind in 0 1 {
forvalues n=1(3)24 {
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_n_mos>=`n' [aw=w_r_loc_]
	replace ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_n_mos>=`n' 
	replace sdffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_n_mos>=`n'
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=`n' [aw=w_r_loc_]
	replace ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=`n'
	replace sdffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=`n'
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==0 [aw=w_r_loc_]
	replace m_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==0 
	replace sdm_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==0 [aw=w_r_loc_]
	replace m_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==0 
	replace sdm_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==1 [aw=w_r_loc_]
	replace f_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==1 
	replace sdf_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_n_mos>=`n' & s_female==1 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==1 [aw=w_r_loc_]
	replace f_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==1 
	replace sdf_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=`n' & s_female==1 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_p_mos>=24 [aw=w_r_loc_]
	replace s_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24
	replace sds_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=24 [aw=w_r_loc_]
	replace s_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 
	replace sds_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 [aw=w_r_loc_]
	replace m_s_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	replace sdm_s_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 [aw=w_r_loc_]
	replace m_s_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	replace sdm_s_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==0 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 [aw=w_r_loc_]
	replace f_s_ffs_tot`n'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
	replace sdf_s_ffs_tot`n'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
	sum s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 [aw=w_r_loc_]
	replace f_s_ffs_tot`=`n'+25'=r(mean) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
	replace sdf_s_ffs_tot`=`n'+25'=r(sd) if r_loc_==`ind' & inscope_p_mos>=24 & s_female==1 
}
}


/*
forvalues n=1(3)24 {
	by r_loc_, sort: gen tot_ffs_n`n'=s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2' if inscope_n_mos>=`n' 
	by r_loc_, sort: gen tot_ffs_p`n'=s_tot_paid_by_mc_wi_m_`n'_to_`=`n'+2'p if inscope_p_mos>=`n'
	by r_loc_, sort: egen ffs_tot`n'=mean(tot_ffs_n`n')
	by r_loc_, sort: egen ffs_tot`=`n'+25'=mean(tot_ffs_p`n')
	by r_loc_, sort: egen m_ffs_tot`n'=mean(tot_ffs_n`n') if s_female==0
	by r_loc_, sort: egen m_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if s_female==0
	by r_loc_, sort: egen f_ffs_tot`n'=mean(tot_ffs_n`n') if s_female==1
	by r_loc_, sort: egen f_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if s_female==1
	by r_loc_, sort: egen s_ffs_tot`n'=mean(tot_ffs_n`n') if inscope_p_mos>=24
	by r_loc_, sort: egen s_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if inscope_p_mos>=24 
	by r_loc_, sort: egen f_s_ffs_tot`n'=mean(tot_ffs_n`n') if inscope_p_mos>=24 & s_female==1  
	by r_loc_, sort: egen f_s_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if inscope_p_mos>=24 & s_female==1 
	by r_loc_, sort: egen m_s_ffs_tot`n'=mean(tot_ffs_n`n') if inscope_p_mos>=24 & s_female==0 
	by r_loc_, sort: egen m_s_ffs_tot`=`n'+25'=mean(tot_ffs_p`n') if inscope_p_mos>=24 & s_female==0 

}
*/
keep s_id *ffs_tot* s_female r_death_date_e r_loc_

foreach x of varlist ffs* m_* f_* s_ffs* {
	gen n`x'=.
	foreach i in 0 1 {
	sum `x' if r_loc_==`i'
	replace n`x'=r(N) if r_loc_==`i' & !missing(`x')
}
}
reshape long ffs_tot tot_ffs f_ffs_tot m_ffs_tot s_ffs_tot m_s_ffs_tot ///
 f_s_ffs_tot  sdffs_tot  sdf_ffs_tot sdm_ffs_tot sds_ffs_tot sdm_s_ffs_tot ///
 sdf_s_ffs_tot nffs_tot  nf_ffs_tot nm_ffs_tot ns_ffs_tot nm_s_ffs_tot ///
 nf_s_ffs_tot , i(s_id r_death_date_e) j(t)
gen source="comparison" if !r_loc_
replace source="spouse" if r_loc_
gen time=-(t+2)/3 if t<=24
replace time=(t-23)/3 if t>=24

label define time -8 "21-24m" -7 "19-21" -6 "16-18" -5 "13-15" -4 "9-12" ///
 -3 "7-9" -2 "4-6" -1 "0-3" 8 "21-24m" 7 "19-21" 6 "16-18" 5 "13-15" 4 "9-12" ///
 3 "7-9" 2 "4-6" 1 "0-3" 
label values time time
preserve
collapse m_s_ffs_tot f_s_ffs_tot ffs_tot f_ffs_tot m_ffs_tot s_ffs_tot  ///
 sdm_s_ffs_tot sdf_s_ffs_tot sdffs_tot sdf_ffs_tot sdm_ffs_tot sds_ffs_tot ///
 nm_s_ffs_tot nf_s_ffs_tot nffs_tot nf_ffs_tot nm_ffs_tot ns_ffs_tot, by(time source)

foreach x in ffs_tot f_ffs_tot m_ffs_tot s_ffs_tot m_s_ffs_tot f_s_ffs_tot {
by time source, sort: gen ulci`x'=`x'+invttail(n`x'-1,0.025)*(sd`x'/sqrt(n`x'))
by time source, sort: gen llci`x'=`x'-invttail(n`x'-1,0.025)*(sd`x'/sqrt(n`x'))
}
label var ffs_tot "Total MC Spending, all in scope"
label var f_ffs_tot "Total MC Spending, females"
label var m_ffs_tot "Total MC Spending, males"
label var s_ffs_tot "Total MC Spending, 24m Survivors only"
gen before=time if time<0
gen after=time if time>0


/*
foreach x in ffs_tot  {
twoway (connected m_`x' time if source=="spouse") (connected f_`x' time if source=="spouse") ///
(connected m_`x' time if source=="comparison") (connected f_`x' time if source=="comparison") , ///
 xline(0) xtitle("Months from index date")title("Mean Medicare Costs By Time from Index Date, 3month intervals") ///
 xlab(-8 -4 -1 1 4 8, valuelabel) ///
 note("WI Adjusted to 2012$") subtitle("by gender ") legend(label(1 "Male Spouses") ///
label(2 "Female Spouses") label(3 "Male Comparison") label(4 "Female Comparison")) ///
  
graph save mc_costs_spouse_death_hosp_gender`x'.gph, replace
graph export mc_costs_spouse_death_hosp_gender_tot3monthsweighted.pdf, replace

}

foreach x in ffs_tot  {
twoway (connected m_`x' time) (connected f_`x' time) (lfit m_`x' before) (lfit m_`x' after) ///
(lfit f_`x' before) (lfit f_`x' after), ///
 xline(0) xtitle("Months from index date")title("Mean Medicare Costs By Time from Index Date, 3month intervals") ///
 xlab(-8 -4 -1 1 4 8, valuelabel) ///
 note("WI Adjusted to 2012$") subtitle("by gender ") legend(label(1 "Males") ///
label(2 "Females"))   
graph save mc_costs_spouse_death_hosp_gender`x'.gph, replace
graph export mc_costs_spouse_death_hosp_gender_tot3months_prepostweighted.pdf, replace

}
*/
/*
foreach x in s_ffs_tot {
twoway (connected m_`x' time if source=="spouse") (connected f_`x' time if source=="spouse") ///
(connected m_`x' time if source=="comparison") (connected f_`x' time if source=="comparison") , ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel) ///
note("WI Adjusted to 2012$" "24m survivors only") subtitle("by gender ") ///
legend(label(1 "Male Spouses") ///
label(2 "Female Spouses") label(3 "Male Comparison") label(4 "Female Comparison")) ///
  
graph save mc_costs_spouse_death_hosp_gender`x'.gph, replace
graph export mc_costs_spouse_death_hosp_gender_survivors3monthsweighted.pdf, replace
}

foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012$")   legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///
 ytitle()
graph save mc_costs_spouse_death_hosp_all, replace
graph export "Non-CI graphs/mc_costs_spouse_death_hosp_`g'all3monthsweighted.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison"), ///
 xline(0) xtitle("Months from index date") ytitle()  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)     ///
note("WI Adjusted to 2012$" )  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///
 subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors, replace
graph export "Non-CI graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3monthsweighted.pdf", replace
}



foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison") ///
(rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="spouse") (rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012$")   legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///
 ytitle()
graph save mc_costs_spouse_death_hosp_all_ci, replace
graph export "CI graphs/mc_costs_spouse_death_hosp_`g'all3months_ciweighted.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison") ///
(rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="spouse") (rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="comparison"),  ///
 xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)  ytitle()    ///
note("WI Adjusted to 2012$")  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///
 label(3 "") label(4 "") ) subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors_ci, replace
graph export "CI graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months_ciweighted.pdf", replace
}
/*General data setup for the dataset
Limited to decedents with FFS MC 6m prior to Index Date, partner at time of Index Date,
with mc id*/
*/
foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (connected `g'ffs_tot time if source=="spouse") (connected `g'ffs_tot time if source=="comparison"),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
note("WI Adjusted to 2012$")   legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///

graph save mc_costs_spouse_death_hosp_all, replace
graph export "graphs/mc_costs_spouse_death_hosp_`g'all3monthsweighted.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison"), ///
 xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)     ///
note("WI Adjusted to 2012$" )  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///
 subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors, replace
graph export "graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3monthsweighted.pdf", replace
}

foreach g in "" "m_" "f_" {
	local gend 
	if "`g'"=="m_" local gend "Male"
	if "`g'"=="f_" local gend "Female"
twoway (line `g'ffs_tot time if source=="spouse", lcolor(dknavy)lwidth(medthick) /*msymbol(square)*/) ///
(line `g'ffs_tot time if source=="comparison", ///
lcolor(cranberry) lpattern(longdash) lwidth(medthick)) ///
(rcap ulci`g'ffs_tot llci`g'ffs_tot time if source=="spouse", lcolor(dknavy)) (rcap ulci`g'ffs_tot ///
llci`g'ffs_tot time if source=="comparison", lcolor(cranberry) ),  ///
xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)    ///
  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) 

graph save mc_costs_spouse_death_hosp_all_ci, replace
graph export "graphs/mc_costs_spouse_death_hosp_`g'all3months_ciweighted_soliddash.pdf", replace

twoway (connected `g's_ffs_tot time if source=="spouse") (connected `g's_ffs_tot time if source=="comparison") ///
(rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="spouse") (rcap ulci`g's_ffs_tot llci`g's_ffs_tot time if source=="comparison"),  ///
 xline(0) xtitle("Months from index date")  ///
 xlab(-8 -4 -1 1 4 8, valuelabel)     ///
/*note("WI Adjusted to 2012$")*/  legend(order( 1 "In-hospital death" 2 "Non-hospital death")) ///
 subtitle("24m `gend' Survivors only")
graph save mc_costs_spouse_death_hosp_24m_survivors_ci, replace
graph export "graphs/mc_costs_spouse_death_hosp_24m_`g'survivors3months_ciweighted.pdf", replace
}


H="table 1 2/17/17"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta
***************************************************************
tab r_loc_hosp_x, missing
gen bottomquartile_w=quartile_w if spend_quart<4
replace topq=quartile_w if spend_quart==4
rename r_cc_*n12mn0 r_cc_*n12m

foreach d in 365 730{
gen s_died_`d'd=s_death_date-r_death_date_e<=`d'
label var s_died_`d'd "S death <=`d'd after R"
}
***************************************************************
	
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///


foreach x in `rvars' `svars' {
	drop if missing(`x')
}
*************************************************************************************
*************************************************************************************
//create Table 1, overall sample characteristics
*************************************************************************************
*************************************************************************************
//Part 1 - Decedent char
gen n=1

local rcvars r_age 
local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

local rivars r_female r_white_e r_hseduc  ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
 r_adl_impair_n1 r_srh_pf_n1 ///
 r_nhres_n1 likely_dem r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 ///
 `rhrscomorbs' r_loc_hosp_x loc_home loc_asst loc_nh loc_hs loc_oth ///
r_advdir_x r_dexp_x r_discuss_x  

local scvars s_age s_networth_adj2012_n1

local sivars s_female s_white_e s_hseduc  ///
 s_medicaid_n1 s_champus_n1 s_medigap_n1 ///
 s_adl_impair_n1 s_srh_pf_n1 ///
 s_nhres_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
 `shrscomorbs' 
local region eol_spend_quart1 eol_spend_quart2 eol_spend_quart3 eol_spend_quart4

gen loc_nh=r_location==2
gen loc_home=r_location==3
gen loc_hs=r_location==4
gen loc_asst=r_location==5
gen loc_oth=r_location==6
foreach x of varlist loc_* {
replace `x'=. if missing(r_loc_hosp)
}
label var loc_nh "Died in Nursing Home" 
label var loc_home "Died at Home"
label var loc_hs "Died at Hospice"
label var loc_asst "Died Assisted Living or Retirement Home"
label var loc_oth "Location of death Other/Unknown"
la var r_age "Age at death, years"
la var r_loc_ "Died in Hospital"
la var r_married_x "Married at death"
la var r_female "Female"
la var r_white_e "Race, White, Non-Hispanic"
la var r_hseduc "Education, High School Deg"
la var r_medicaid_n1  "Medicaid"
la var r_champus_n1  "VA Insurance"
la var r_medigap_n1 "Medigap"
la var r_adl_independent_core_n1 "ADL Independent"
la var r_srh_pf_n1 "SRH poor or fair**"
la var r_advdir_x "Had advanced directive"
la var r_dexp_x  "Death expected by family"
la var r_discuss_x "Discussion of EOL care"
la var s_age "Age at death, years"
la var s_loc_hosp_x "Died in Hospital"
la var s_married_x "Married at death"
la var s_female "Female"
la var s_white "Race, White, Non-Hispanic"
la var s_hseduc "Education, High School Deg"
la var s_medicaid_n1  "Medicaid"
la var s_champus_n1  "VA Insurance"
la var s_medigap_n1 "Medigap"
la var s_adl_independent_core_n1 "ADL Independent"
la var s_srh_pf_n1 "SRH poor or fair"
la var r_s_death_24m "S death within 2 years"

local rvars `rcvars' `rivars' 
local svars `scvars' `sivars' 
local rn : word count `rvars' `svars' `region' `coutcomes' `ioutcomes' 1 1 1 
mat tab=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

sum `rvars' `svars'
foreach loc in "0,1,." { //0 1 {
	foreach x in `rvars' `svars' `region' `coutcomes' `ioutcomes' {
		di "`x'"
		if "`x'"!="r_age" & "`x'"!="s_age" & ///
		!inlist(substr("`x'",1,6),"s_netw", "s_tot_","s_n_ho", ///
		"s_icu_") {
			sum `x' if inlist(r_loc_,`loc') `time'
			mat tab[`r',`c']=r(mean)*100
			if inlist("`loc'","1") & "`x'"!="r_loc_hosp_x" tab `x' r_loc_, chi2
			if inlist("`loc'","1") & "`x'"!="r_loc_hosp_x" mat tab[`r',`c'+1]=r(p)
			if inlist("`loc'","1") & "`x'"!="r_loc_hosp_x" mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
			else {
				if inlist("`x'","r_age","s_age","s_tot_paid_by_mc_wi_p12m") ///
				 local r=`r'+1
				sum `x' if inlist(r_loc_,`loc'),d 
				mat tab[`r',`c']=r(mean)
				mat tab[`r',`c'+1]=r(sd)
				mat tab[`r',`c'+2]=r(p50)
				if inlist("`loc'","1") ttest `x', by(r_loc_)
				if inlist("`loc'","1") mat tab[`r',`c'+1]=r(p)
				if inlist("`loc'","1") mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
	local r = `r'+1
}
	sum n if inlist(r_loc_,`loc') 
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}


mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' ///
 "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, ///
statmat(tab) title("Sample Characteristics, `title'") ///
ctitles("" "Mean/%" "SD" "Median" /*"Death not in-hospital" "R Death in Hospital" "P"*/) sdec(2) ///
replace varlabels annotate(stars) asymbol(*,**) ///

 /*
local rn: word count `rcvars' `rivars' `region' n 
mat tab=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

svyset [pw=w_r_loc]
foreach s in r s {
	foreach loc in 0 1 {
		foreach v in ``s'cvars' {
			sum `v' if r_loc_==`loc' /*[aw=w_r_loc]*/
			mat tab[`r',`c']=r(mean)
			mat tab[`r',`c'+1]=r(sd)
			if `loc'==1 {
				/*svy: mean `v', over(r_loc_)
				test [`v']0=[`v']1*/
				ttest `v', by(r_loc_)
				mat stars[`r',`c']=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach v in ``s'ivars' {
			sum `v' if r_loc_==`loc' /*[aw=w_r_loc]*/
			mat tab[`r',`c']=r(mean)*100
			if `loc'==1 & "`v'"!="r_loc_hosp_x" {
				/*svy: tab `v' r_loc_
				mat stars[`r',`c']=(e(p_Pear)<.01)+(e(p_Pear)<.05)*/
				tab `v' r_loc_, chi2
				mat stars[`r',`c']=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
}	
	sum n if r_loc_==`loc' /*[aw=w_r_loc]*/
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+2
}
}
mat rownames tab=`rcvars' `rivars' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, statmat(tab) title(Table 1) ///
ctitles("" "" "Decedent variables" "" "Surviving Spouse"  \"" "Control" "R Death in Hospital" ///
"Control" "R Death in Hospital" ) sdec(2) replace subst(1) annotate(stars) ///
asymbol(*,**) varlabels note("*p<.05,**p<.01")
*/

preserve
replace s_tot_paid_by_mc_wi_p24m=. if !surv_12 | r_death_year==2011
/*gen s_tot_paid_by_mc_wi_6m18m=s_tot_paid_by_mc_wi_18m-s_tot_paid_by_mc_wi_6m if ///
s_cont_ffs_n_mos>=18*/
mat tab=J(12,8,.)
mat stars=J(12,8,0)
local r=1
local c=1
sum spend_quart
local num=r(N)
sum s_tot_paid_by_mc_wi_p24m if !missing(spend_quart)
local num24=r(N)

forvalues i=1/4 {
	foreach x in 6m18m p12m p24m {
	local r=`r'+1
	qui ranksum s_tot_paid_by_mc_wi_`x' if spend_quart==`i', by(r_loc_hos)
	mat tab[`r',`c'+1]=2*(normprob(-abs(r(z))))
	mat stars[`r',`c'+1]=(2*(normprob(-abs(r(z))))<.01)+(2*(normprob(-abs(r(z))))<.05)
	
	foreach j in "0,1" 0 1 {	
	qui sum s_tot_paid_by_mc_wi_`x' if spend_quart==`i' & inlist(r_loc_hos,`j') ///
	/*[aw=w_r_loc]*/,d
	mat tab[`r',`c']=r(p50)
	local r=`r'+1
}
}
	local c=`c'+2
	local r=1

}
mat rownames tab="6-18m before R's death" "All" "No In-hospital death" "In-hospital death" ///
"12m after R's death" "All" "No In-hospital death" ///
"In-hospital death" "24m after R's death*" "All" "No In-hospital death" ///
"In-hospital death"

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, statmat(tab) title("Median MC Spending by Quartile of S Expenditure prior to R's death") ///
note("Among those with 18m FFS prior to R's death only (N=`num')" ///
"WI & inflation adjusted to 2012$" "*-Excluding those with less than 12m FFS (N=`num24')" ///
"P-values from Wilcoxon rank-sum test") ///
ctitles("" "Bottom" "P" "2nd" "P" "3rd" "P" "Top" "P") addtable //replace
label var likely_dem "Pr. dementia >.5"

mat tab=J(12,8,.)
local r=1
local c=1
sum spend_quart
local num=r(N)
sum s_tot_paid_by_mc_wi_p24m if !missing(spend_quart)
local num24=r(N)

forvalues i=1/4 {
	foreach x in 6m18m p12m p24m {
	local r=`r'+1
	foreach j in "0,1" 0 1 {	
	qui sum s_tot_paid_by_mc_wi_`x' if spend_quart==`i' & inlist(r_loc_hos,`j') ///
	/*[aw=w_r_loc]*/,d
	mat tab[`r',`c']=r(p25)
	mat tab[`r',`c'+1]=r(p75)
	local r=`r'+1
}
}
	local c=`c'+2
	local r=1

}
mat rownames tab="6-18m before R's death" "All" "No In-hospital death" "In-hospital death" ///
"12m after R's death" "All" "No In-hospital death" ///
"In-hospital death" "24m after R's death*" "All" "No In-hospital death" ///
"In-hospital death"

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, statmat(tab) ///
title("Within Quartile Interquartile Range") ///
note("Among those with 18m FFS prior to R's death only (N=`num')" ///
"WI & inflation adjusted to 2012$" "*-Excluding those with less than 12m FFS (N=`num24')") ///
ctitles("" "" "Bottom" "" "2nd" "" "3rd" "" "Top" \ "" "25th" "75th" "25th" "75th" "25th" ///
"75th" "25th" "75th") addtable //replace
label var likely_dem "Pr. dementia >.5"

mat sp=J(4,2,.)
tab spend_quart r_loc_, matcell(sp1)
forvalues i=1/4 {
	foreach j in 1 2 {
		mat sp[`i',`j']=(sp1[`i',`j']/(sp1[`i',1]+sp1[`i',2]))*100
}
}
mat rownames sp="Bottom quartile" "2nd" "3rd" "Top"
frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, ///
statmat(sp) title("Percentage of spending quartile, by R location") ///
ctitles("" "No In-hospital death" "In-hospital death") sdec(2) addtable

restore
/*foreach s in r s {
	label var `s'_hrs_comorb_mild_n1 "SR comorbidities: none"
	label var `s'_hrs_comorb_mod_n1 "SR comorbidities: mild (1-3)"
}*/
	gen r_s_helper_x=!r_s_help_dur_ind1
	label var r_s_helper_x "Spouse R's helper, from exit"
	
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x 

foreach x in s_tot_paid_by_mc_wi_p24m s_ed_ind_p24m s_admit_ind_p24m s_icu_ind_p24m ///
s_died_730d s_ind_nonelect_adm_p24m {
	replace `x'=. if r_death_year==2011
	gen `x'_cond=`x' if surv_12 & r_death_year<2011
	local lab : var label `x'
	label var `x'_cond "`lab', conditional on 12m Survival"
}
local coutcomes
foreach x in p12m p24m p24m_cond {
	gen med_`x'=s_tot_paid_by_mc_wi_`x'
	local vl : var label s_tot_paid_by_mc_wi_`x'
	label var med_`x' "`vl', median"
	local coutcomes `coutcomes' s_tot_paid_by_mc_wi_`x' med_`x'
}

local coutcomes s_tot_paid_by_mc_wi_p12m med_p12m s_tot_paid_by_mc_wi_p24m ///
med_p24m /*s_n_hospd_p12m ///
s_n_hospd_p24m s_icu_days_p12m s_icu_days_p24m*/ s_tot_paid_by_mc_wi_p24m_cond ///
med_p24m_cond
local ioutcomes s_admit_ind_p12m s_admit_ind_p24m s_admit_ind_p24m_cond ///
s_ind_nonelect_adm_p12m s_ind_nonelect_adm_p24m s_ind_nonelect_adm_p24m_cond ///
s_ed_ind_p12m s_ed_ind_p24m s_ed_ind_p24m_cond ///
s_icu_ind_p12m s_icu_ind_p24m s_icu_ind_p24m_cond s_died_365d s_died_730d s_died_730d_cond

foreach weight in w_r_loc surv_12_w surv_24_w bottomquartile_w topquartile_w {
	svyset [pw=`weight']
	foreach x in 0 1 {
	sum s_tot_paid_by_mc_wi_p24m_cond if r_loc_==`x' [aw=`weight']
	local denomcond`x'=r(N)
	sum s_tot_paid_by_mc_wi_p24m if r_loc_==`x' [aw=`weight']
	local denom24`x'=r(N)
}

	if "`weight'"=="w_r_loc" local title "Full Sample"
	if "`weight'"=="surv_12_w" {
		preserve
		keep if surv_12m
		local title "12m Survivors only"
	}
	if "`weight'"=="surv_24_w" {
		keep if surv_24m
		local title "24m Survivors only"
}
	if "`weight'"=="bottomquartile_w" {
		restore
		preserve
		keep if spend_quart<4
		local title "Bottom 75% pre-death spending"
}
	if "`weight'"=="topquartile_w" {
		restore
		preserve
		keep if spend_quart==4
		foreach x in 0 1 {
			sum s_tot_paid_by_mc_wi_p24m_cond if r_loc_==`x' [aw=`weight']
			local denomcond`x'=r(N)
			sum s_tot_paid_by_mc_wi_p24m if r_loc_==`x' [aw=`weight']
			local denom24`x'=r(N)
}

		local title "Top quartile pre-death spending"
}

local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x 


local rn : word count `rvars' `svars' `region' 1 1 1
mat tab=J(`rn',6,.)
local r=1
local c=1

foreach time in "" "[aw=`weight']" {
	foreach loc in 0 1 {
		foreach x in `rvars' `svars' `region' {
			if "`x'"!="r_age" & "`x'"!="s_age" {
					sum `x' if r_loc_==`loc' `time'
					mat tab[`r',`c']=r(mean)*100
					if `loc'==1 mat tab[`r',`=`c'+1']=(tab[`r',`=`c'-1']/100-tab[`r',`=`c'']/100)/sqrt((tab[`r',`=`c'-1']/100* ///
						(1-tab[`r',`=`c'-1']/100)+tab[`r',`=`c'']/100*(1-tab[`r',`=`c'']/100))/2)
}
			else {
				local r=`r'+1
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)
				local loc`loc'=r(sd)
				if `loc'==1 mat tab[`r',`=`c'+1']=(tab[`r',`c'-1]-tab[`r',`c']) ///
				/sqrt((`loc0'^2+`loc1'^2)/2) 
}
	local r = `r'+1
}
	sum n if r_loc_==`loc' `time'
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}
	local c=`c'+1
}

mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, ///
statmat(tab) title("Matching Variables, `title'") ///
ctitles("" "" "Unmatched" "" "" "Matched"  \"" "Control" "R Death in Hospital" ///
 "Std Diff" "Control""R Death in Hospital" "Std Diff") sdec(2) ///
addtable varlabels 

local rcvars r_age 
local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

local rivars r_female r_white_e r_hseduc  ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
 r_adl_impair_n1 r_srh_pf_n1 ///
 r_nhres_n1 likely_dem r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 ///
 `rhrscomorbs' r_loc_hosp_x ///
r_advdir_x r_dexp_x r_discuss_x  

local scvars s_age s_networth_adj2012_n1

local sivars s_female s_white_e s_hseduc  ///
 s_medicaid_n1 s_champus_n1 s_medigap_n1 ///
 s_adl_impair_n1 s_srh_pf_n1 ///
 s_nhres_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
 `shrscomorbs' 
 
/*local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x */


local rvars `rcvars' `rivars' 
local svars `scvars' `sivars' 
local rn : word count `rvars' `svars' `region' `coutcomes' `ioutcomes' 1 1 1 1
mat tab=J(`rn',3,.)
mat stars=J(`rn',3,0)
local r=1
local c=1
foreach time in "[aw=`weight']" {
	foreach loc in 0 1 {
		foreach x in `rvars' `svars' `region' `coutcomes' `ioutcomes'{
		di "`x'"
			if "`x'"!="r_age" & "`x'"!="s_age" & ///
			!inlist(substr("`x'",1,6),"s_netw", "s_tot_","s_n_ho", ///
			"s_icu_","med_p1","med_p2") {
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)*100
				if `loc'==1 & "`x'"!="r_loc_hosp_x" svy: tab `x' r_loc_
				if `loc'==1 & "`x'"!="r_loc_hosp_x" mat tab[`r',`c'+1]=e(p_Pear)
				if `loc'==1 & "`x'"!="r_loc_hosp_x" mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
			else {
				if inlist("`x'","r_age","s_age","s_tot_paid_by_mc_wi_p12m") ///
				 local r=`r'+1
				if substr("`x'",1,3)!="med"	{
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)
				if `loc'==1 svy: mean `x', over(r_loc_)
				if `loc'==1 test [`x']0=[`x']1
				if `loc'==1 mat tab[`r',`c'+1]=r(p)
				if `loc'==1 mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
				else {
				sum `x' if r_loc_==`loc' `time',d
				mat tab[`r',`c']=r(p50)
}
}
	local r = `r'+1
}
	sum n if r_loc_==`loc' `time'
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}
}

mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' ///
"Outcomes" `coutcomes' `ioutcomes' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched.rtf, ///
statmat(tab) title("Sample Characteristics, `title'") ///
ctitles("" "Control" "R Death in Hospital" "P") sdec(2) ///
addtable varlabels annotate(stars) asymbol(*,**) ///
 note("All 24m variables restricted to R death prior to 2011")

}





H="ffs table 1 2/17"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched_fffs.dta
***************************************************************
tab r_loc_hosp_x, missing
gen bottomquartile_w=quartile_w if spend_quart<4
replace topq=quartile_w if spend_quart==4
rename r_cc_*n12mn0 r_cc_*n12m

foreach d in 365 730{
gen s_died_`d'd=s_death_date-r_death_date_e<=`d'
label var s_died_`d'd "S death <=`d'd after R"
}
***************************************************************
	
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///


foreach x in `rvars' `svars' {
	drop if missing(`x')
}
*************************************************************************************
*************************************************************************************
//create Table 1, overall sample characteristics
*************************************************************************************
*************************************************************************************
//Part 1 - Decedent char
gen n=1

local rcvars r_age 
local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

local rivars r_female r_white_e r_hseduc  ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
 r_adl_impair_n1 r_srh_pf_n1 ///
 r_nhres_n1 likely_dem r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 ///
 `rhrscomorbs' r_loc_hosp_x loc_home loc_asst loc_nh loc_hs loc_oth ///
r_advdir_x r_dexp_x r_discuss_x  

local scvars s_age s_networth_adj2012_n1

local sivars s_female s_white_e s_hseduc  ///
 s_medicaid_n1 s_champus_n1 s_medigap_n1 ///
 s_adl_impair_n1 s_srh_pf_n1 ///
 s_nhres_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
 `shrscomorbs' 
local region eol_spend_quart1 eol_spend_quart2 eol_spend_quart3 eol_spend_quart4

gen loc_nh=r_location==2
gen loc_home=r_location==3
gen loc_hs=r_location==4
gen loc_asst=r_location==5
gen loc_oth=r_location==6
foreach x of varlist loc_* {
replace `x'=. if missing(r_loc_hosp)
}
label var loc_nh "Died in Nursing Home" 
label var loc_home "Died at Home"
label var loc_hs "Died at Hospice"
label var loc_asst "Died Assisted Living or Retirement Home"
label var loc_oth "Location of death Other/Unknown"
la var r_age "Age at death, years"
la var r_loc_ "Died in Hospital"
la var r_married_x "Married at death"
la var r_female "Female"
la var r_white_e "Race, White, Non-Hispanic"
la var r_hseduc "Education, High School Deg"
la var r_medicaid_n1  "Medicaid"
la var r_champus_n1  "VA Insurance"
la var r_medigap_n1 "Medigap"
la var r_adl_independent_core_n1 "ADL Independent"
la var r_srh_pf_n1 "SRH poor or fair**"
la var r_advdir_x "Had advanced directive"
la var r_dexp_x  "Death expected by family"
la var r_discuss_x "Discussion of EOL care"
la var s_age "Age at death, years"
la var s_loc_hosp_x "Died in Hospital"
la var s_married_x "Married at death"
la var s_female "Female"
la var s_white "Race, White, Non-Hispanic"
la var s_hseduc "Education, High School Deg"
la var s_medicaid_n1  "Medicaid"
la var s_champus_n1  "VA Insurance"
la var s_medigap_n1 "Medigap"
la var s_adl_independent_core_n1 "ADL Independent"
la var s_srh_pf_n1 "SRH poor or fair"
la var r_s_death_24m "S death within 2 years"

local rvars `rcvars' `rivars' 
local svars `scvars' `sivars' 
local rn : word count `rvars' `svars' `region' `coutcomes' `ioutcomes' 1 1 1 
mat tab=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

sum `rvars' `svars'
foreach loc in "0,1,." { //0 1 {
	foreach x in `rvars' `svars' `region' `coutcomes' `ioutcomes' {
		di "`x'"
		if "`x'"!="r_age" & "`x'"!="s_age" & ///
		!inlist(substr("`x'",1,6),"s_netw", "s_tot_","s_n_ho", ///
		"s_icu_") {
			sum `x' if inlist(r_loc_,`loc') `time'
			mat tab[`r',`c']=r(mean)*100
			if inlist("`loc'","1") & "`x'"!="r_loc_hosp_x" tab `x' r_loc_, chi2
			if inlist("`loc'","1") & "`x'"!="r_loc_hosp_x" mat tab[`r',`c'+1]=r(p)
			if inlist("`loc'","1") & "`x'"!="r_loc_hosp_x" mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
			else {
				if inlist("`x'","r_age","s_age","s_tot_paid_by_mc_wi_p12m") ///
				 local r=`r'+1
				sum `x' if inlist(r_loc_,`loc'),d 
				mat tab[`r',`c']=r(mean)
				mat tab[`r',`c'+1]=r(sd)
				mat tab[`r',`c'+2]=r(p50)
				if inlist("`loc'","1") ttest `x', by(r_loc_)
				if inlist("`loc'","1") mat tab[`r',`c'+1]=r(p)
				if inlist("`loc'","1") mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
	local r = `r'+1
}
	sum n if inlist(r_loc_,`loc') 
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}


mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' ///
 "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, ///
statmat(tab) title("Sample Characteristics, `title'") ///
ctitles("" "Mean/%" "SD" "Median" /*"Death not in-hospital" "R Death in Hospital" "P"*/) sdec(2) ///
replace varlabels annotate(stars) asymbol(*,**) ///

 /*
local rn: word count `rcvars' `rivars' `region' n 
mat tab=J(`rn',8,.)
mat stars=J(`rn',8,0)
local r=1
local c=1

svyset [pw=w_r_loc]
foreach s in r s {
	foreach loc in 0 1 {
		foreach v in ``s'cvars' {
			sum `v' if r_loc_==`loc' /*[aw=w_r_loc]*/
			mat tab[`r',`c']=r(mean)
			mat tab[`r',`c'+1]=r(sd)
			if `loc'==1 {
				/*svy: mean `v', over(r_loc_)
				test [`v']0=[`v']1*/
				ttest `v', by(r_loc_)
				mat stars[`r',`c']=(r(p)<.05)+(r(p)<.01)
}
			local r=`r'+1
}
		foreach v in ``s'ivars' {
			sum `v' if r_loc_==`loc' /*[aw=w_r_loc]*/
			mat tab[`r',`c']=r(mean)*100
			if `loc'==1 & "`v'"!="r_loc_hosp_x" {
				/*svy: tab `v' r_loc_
				mat stars[`r',`c']=(e(p_Pear)<.01)+(e(p_Pear)<.05)*/
				tab `v' r_loc_, chi2
				mat stars[`r',`c']=(r(p)<.05)+(r(p)<.01)
}
		local r=`r'+1
}	
	sum n if r_loc_==`loc' /*[aw=w_r_loc]*/
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+2
}
}
mat rownames tab=`rcvars' `rivars' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, statmat(tab) title(Table 1) ///
ctitles("" "" "Decedent variables" "" "Surviving Spouse"  \"" "Control" "R Death in Hospital" ///
"Control" "R Death in Hospital" ) sdec(2) replace subst(1) annotate(stars) ///
asymbol(*,**) varlabels note("*p<.05,**p<.01")
*/

preserve
replace s_tot_paid_by_mc_wi_p24m=. if !surv_12 | r_death_year==2011
/*gen s_tot_paid_by_mc_wi_6m18m=s_tot_paid_by_mc_wi_18m-s_tot_paid_by_mc_wi_6m if ///
s_cont_ffs_n_mos>=18*/
mat tab=J(12,8,.)
mat stars=J(12,8,0)
local r=1
local c=1
sum spend_quart
local num=r(N)
sum s_tot_paid_by_mc_wi_p24m if !missing(spend_quart)
local num24=r(N)

forvalues i=1/4 {
	foreach x in 6m18m p12m p24m {
	local r=`r'+1
	qui ranksum s_tot_paid_by_mc_wi_`x' if spend_quart==`i', by(r_loc_hos)
	mat tab[`r',`c'+1]=2*(normprob(-abs(r(z))))
	mat stars[`r',`c'+1]=(2*(normprob(-abs(r(z))))<.01)+(2*(normprob(-abs(r(z))))<.05)
	
	foreach j in "0,1" 0 1 {	
	qui sum s_tot_paid_by_mc_wi_`x' if spend_quart==`i' & inlist(r_loc_hos,`j') ///
	/*[aw=w_r_loc]*/,d
	mat tab[`r',`c']=r(p50)
	local r=`r'+1
}
}
	local c=`c'+2
	local r=1

}
mat rownames tab="6-18m before R's death" "All" "No In-hospital death" "In-hospital death" ///
"12m after R's death" "All" "No In-hospital death" ///
"In-hospital death" "24m after R's death*" "All" "No In-hospital death" ///
"In-hospital death"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, statmat(tab) title("Median MC Spending by Quartile of S Expenditure prior to R's death") ///
note("Among those with 18m FFS prior to R's death only (N=`num')" ///
"WI & inflation adjusted to 2012$" "*-Excluding those with less than 12m FFS (N=`num24')" ///
"P-values from Wilcoxon rank-sum test") ///
ctitles("" "Bottom" "P" "2nd" "P" "3rd" "P" "Top" "P") addtable //replace
label var likely_dem "Pr. dementia >.5"

mat tab=J(12,8,.)
local r=1
local c=1
sum spend_quart
local num=r(N)
sum s_tot_paid_by_mc_wi_p24m if !missing(spend_quart)
local num24=r(N)

forvalues i=1/4 {
	foreach x in 6m18m p12m p24m {
	local r=`r'+1
	foreach j in "0,1" 0 1 {	
	qui sum s_tot_paid_by_mc_wi_`x' if spend_quart==`i' & inlist(r_loc_hos,`j') ///
	/*[aw=w_r_loc]*/,d
	mat tab[`r',`c']=r(p25)
	mat tab[`r',`c'+1]=r(p75)
	local r=`r'+1
}
}
	local c=`c'+2
	local r=1

}
mat rownames tab="6-18m before R's death" "All" "No In-hospital death" "In-hospital death" ///
"12m after R's death" "All" "No In-hospital death" ///
"In-hospital death" "24m after R's death*" "All" "No In-hospital death" ///
"In-hospital death"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, statmat(tab) ///
title("Within Quartile Interquartile Range") ///
note("Among those with 18m FFS prior to R's death only (N=`num')" ///
"WI & inflation adjusted to 2012$" "*-Excluding those with less than 12m FFS (N=`num24')") ///
ctitles("" "" "Bottom" "" "2nd" "" "3rd" "" "Top" \ "" "25th" "75th" "25th" "75th" "25th" ///
"75th" "25th" "75th") addtable //replace
label var likely_dem "Pr. dementia >.5"

mat sp=J(4,2,.)
tab spend_quart r_loc_, matcell(sp1)
forvalues i=1/4 {
	foreach j in 1 2 {
		mat sp[`i',`j']=(sp1[`i',`j']/(sp1[`i',1]+sp1[`i',2]))*100
}
}
mat rownames sp="Bottom quartile" "2nd" "3rd" "Top"
frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, ///
statmat(sp) title("Percentage of spending quartile, by R location") ///
ctitles("" "No In-hospital death" "In-hospital death") sdec(2) addtable

restore
/*foreach s in r s {
	label var `s'_hrs_comorb_mild_n1 "SR comorbidities: none"
	label var `s'_hrs_comorb_mod_n1 "SR comorbidities: mild (1-3)"
}*/
	gen r_s_helper_x=!r_s_help_dur_ind1
	label var r_s_helper_x "Spouse R's helper, from exit"
	
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x 

foreach x in s_tot_paid_by_mc_wi_p24m s_ed_ind_p24m s_admit_ind_p24m s_icu_ind_p24m ///
s_died_730d s_ind_nonelect_adm_p24m {
	replace `x'=. if r_death_year==2011
	gen `x'_cond=`x' if surv_12 & r_death_year<2011
	local lab : var label `x'
	label var `x'_cond "`lab', conditional on 12m Survival"
}
local coutcomes
foreach x in p12m p24m p24m_cond {
	gen med_`x'=s_tot_paid_by_mc_wi_`x'
	local vl : var label s_tot_paid_by_mc_wi_`x'
	label var med_`x' "`vl', median"
	local coutcomes `coutcomes' s_tot_paid_by_mc_wi_`x' med_`x'
}

local coutcomes s_tot_paid_by_mc_wi_p12m med_p12m s_tot_paid_by_mc_wi_p24m ///
med_p24m /*s_n_hospd_p12m ///
s_n_hospd_p24m s_icu_days_p12m s_icu_days_p24m*/ s_tot_paid_by_mc_wi_p24m_cond ///
med_p24m_cond
local ioutcomes s_admit_ind_p12m s_admit_ind_p24m s_admit_ind_p24m_cond ///
s_ind_nonelect_adm_p12m s_ind_nonelect_adm_p24m s_ind_nonelect_adm_p24m_cond ///
s_ed_ind_p12m s_ed_ind_p24m s_ed_ind_p24m_cond ///
s_icu_ind_p12m s_icu_ind_p24m s_icu_ind_p24m_cond s_died_365d s_died_730d s_died_730d_cond

foreach weight in w_r_loc surv_12_w surv_24_w bottomquartile_w topquartile_w {
	svyset [pw=`weight']
	foreach x in 0 1 {
	sum s_tot_paid_by_mc_wi_p24m_cond if r_loc_==`x' [aw=`weight']
	local denomcond`x'=r(N)
	sum s_tot_paid_by_mc_wi_p24m if r_loc_==`x' [aw=`weight']
	local denom24`x'=r(N)
}

	if "`weight'"=="w_r_loc" local title "Full Sample"
	if "`weight'"=="surv_12_w" {
		preserve
		keep if surv_12m
		local title "12m Survivors only"
	}
	if "`weight'"=="surv_24_w" {
		keep if surv_24m
		local title "24m Survivors only"
}
	if "`weight'"=="bottomquartile_w" {
		restore
		preserve
		keep if spend_quart<4
		local title "Bottom 75% pre-death spending"
}
	if "`weight'"=="topquartile_w" {
		restore
		preserve
		keep if spend_quart==4
		foreach x in 0 1 {
			sum s_tot_paid_by_mc_wi_p24m_cond if r_loc_==`x' [aw=`weight']
			local denomcond`x'=r(N)
			sum s_tot_paid_by_mc_wi_p24m if r_loc_==`x' [aw=`weight']
			local denom24`x'=r(N)
}

		local title "Top quartile pre-death spending"
}

local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 ///
 r_hrs_comorb_modsev_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x 


local rn : word count `rvars' `svars' `region' 1 1 1
mat tab=J(`rn',6,.)
local r=1
local c=1

foreach time in "" "[aw=`weight']" {
	foreach loc in 0 1 {
		foreach x in `rvars' `svars' `region' {
			if "`x'"!="r_age" & "`x'"!="s_age" {
					sum `x' if r_loc_==`loc' `time'
					mat tab[`r',`c']=r(mean)*100
					if `loc'==1 mat tab[`r',`=`c'+1']=(tab[`r',`=`c'-1']/100-tab[`r',`=`c'']/100)/sqrt((tab[`r',`=`c'-1']/100* ///
						(1-tab[`r',`=`c'-1']/100)+tab[`r',`=`c'']/100*(1-tab[`r',`=`c'']/100))/2)
}
			else {
				local r=`r'+1
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)
				local loc`loc'=r(sd)
				if `loc'==1 mat tab[`r',`=`c'+1']=(tab[`r',`c'-1]-tab[`r',`c']) ///
				/sqrt((`loc0'^2+`loc1'^2)/2) 
}
	local r = `r'+1
}
	sum n if r_loc_==`loc' `time'
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}
	local c=`c'+1
}

mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, ///
statmat(tab) title("Matching Variables, `title'") ///
ctitles("" "" "Unmatched" "" "" "Matched"  \"" "Control" "R Death in Hospital" ///
 "Std Diff" "Control""R Death in Hospital" "Std Diff") sdec(2) ///
addtable varlabels 

local rcvars r_age 
local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

local rivars r_female r_white_e r_hseduc  ///
 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
 r_adl_impair_n1 r_srh_pf_n1 ///
 r_nhres_n1 likely_dem r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 ///
 `rhrscomorbs' r_loc_hosp_x ///
r_advdir_x r_dexp_x r_discuss_x  

local scvars s_age s_networth_adj2012_n1

local sivars s_female s_white_e s_hseduc  ///
 s_medicaid_n1 s_champus_n1 s_medigap_n1 ///
 s_adl_impair_n1 s_srh_pf_n1 ///
 s_nhres_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
 `shrscomorbs' 
 
/*local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_none_n1 r_hrs_comorb_mild_n1 r_hrs_comorb_modsev_n1 

local svars s_age s_female s_nw_lowest_n1 /*s_nw_midlow_n1 s_nw_midhigh_n1 s_nw_highest_n1*/ s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_modsev_n1 ///
s_adl_impair_n1 ///
r_s_helper_x */


local rvars `rcvars' `rivars' 
local svars `scvars' `sivars' 
local rn : word count `rvars' `svars' `region' `coutcomes' `ioutcomes' 1 1 1 1
mat tab=J(`rn',3,.)
mat stars=J(`rn',3,0)
local r=1
local c=1
foreach time in "[aw=`weight']" {
	foreach loc in 0 1 {
		foreach x in `rvars' `svars' `region' `coutcomes' `ioutcomes'{
		di "`x'"
			if "`x'"!="r_age" & "`x'"!="s_age" & ///
			!inlist(substr("`x'",1,6),"s_netw", "s_tot_","s_n_ho", ///
			"s_icu_","med_p1","med_p2") {
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)*100
				if `loc'==1 & "`x'"!="r_loc_hosp_x" svy: tab `x' r_loc_
				if `loc'==1 & "`x'"!="r_loc_hosp_x" mat tab[`r',`c'+1]=e(p_Pear)
				if `loc'==1 & "`x'"!="r_loc_hosp_x" mat stars[`r',`c'+1]=(e(p_Pear)<.01)+(e(p_Pear)<.05)
}
			else {
				if inlist("`x'","r_age","s_age","s_tot_paid_by_mc_wi_p12m") ///
				 local r=`r'+1
				if substr("`x'",1,3)!="med"	{
				sum `x' if r_loc_==`loc' `time'
				mat tab[`r',`c']=r(mean)
				if `loc'==1 svy: mean `x', over(r_loc_)
				if `loc'==1 test [`x']0=[`x']1
				if `loc'==1 mat tab[`r',`c'+1]=r(p)
				if `loc'==1 mat stars[`r',`c'+1]=(r(p)<.05)+(r(p)<.01) 
}
				else {
				sum `x' if r_loc_==`loc' `time',d
				mat tab[`r',`c']=r(p50)
}
}
	local r = `r'+1
}
	sum n if r_loc_==`loc' `time'
	mat tab[`r',`c']==r(N)
	local r=1
	local c=`c'+1
}
}

mat rownames tab="Respondent" `rvars' "Surviving Spouse" `svars' `region' ///
"Outcomes" `coutcomes' `ioutcomes' "N"

frmttable using `logpath'/sample_characteristics_death_hosp_matched_fffs.rtf, ///
statmat(tab) title("Sample Characteristics, `title'") ///
ctitles("" "Control" "R Death in Hospital" "P") sdec(2) ///
addtable varlabels annotate(stars) asymbol(*,**) ///
 note("All 24m variables restricted to R death prior to 2011")

}





H="quarterly table"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta


mat tab=J(50,6,.)
mat stars=J(50,6,0)
local r=3
local c=1

forvalues i=22(-3)1 {
forvalues j=0/1 {
	sum s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2' if r_loc_==`j',d
	local n`j'=r(N)
	mat tab[`r',`=`j'+2']=r(mean)
	mat tab[`r'+1,`j'+2]=r(p50)
}
	mat tab[`r',1]=`n0'+`n1'
	ttest s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2',by(r_loc_)
	mat tab[`r',4]=r(p)
	mat stars[`r',4]=(r(p)<.01)+(r(p)<.05)
	ranksum s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2', by(r_loc_)
	mat tab[`r',5]=2*(normprob(-abs(r(z))))
	mat stars[`r',5]=(2*(normprob(-abs(r(z))))<.01)+(2*(normprob(-abs(r(z))))<.05)	
	glm s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2' r_loc_, link(log) fam(gamma)
	mat tab[`r',6]=e(p)
	mat stars[`r',6]=(e(p)<.01)+(e(p)<.05)	
	local r=`r'+3
}
local r=`r'+1
forvalues i=1(3)24 {
forvalues j=0/1 {
	sum s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2'p if r_loc_==`j',d
	local n`j'=r(N)
	mat tab[`r',`=`j'+2']=r(mean)
	mat tab[`r'+1,`j'+2]=r(p50)
}
	mat tab[`r',1]=`n0'+`n1'
	ttest s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2'p,by(r_loc_)
	mat tab[`r',4]=r(p)
	mat stars[`r',4]=(r(p)<.01)+(r(p)<.05)
	ranksum s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2'p, by(r_loc_)
	mat tab[`r',5]=2*(normprob(-abs(r(z))))
	mat stars[`r',5]=(2*(normprob(-abs(r(z))))<.01)+(2*(normprob(-abs(r(z))))<.05)	
	glm s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2'p r_loc_, link(log) fam(gamma)
	mat tab[`r',6]=e(p)
	mat stars[`r',6]=(e(p)<.01)+(e(p)<.05)
	local r=`r'+3
}

mat rownames tab= "Quarters pre R death" 8 mean median 7 mean median 6 mean median 5 mean median ///
4 mean median 3 mean median 2 mean median 1 mean median "Quarters post R death" 1 mean median ///
2 mean median 3 mean median 4 mean median 5 mean median 6 mean median 7 ///
mean median 8 mean median

frmttable using "`logpath'\quarterly_spending.rtf", replace statmat(tab) ctitles("" "N contributing" "Non-hospital death"  ///
"In-hospital death" "" "P-value" ""\"" "" "" "T-test" "Rank sum" "GLM") sdec(0,2,2,2) annotate(stars) asymbol(*,**) ///
title(Quarterly MC Expenditures) note("S included if has FFS for the first month (closest to index date) in period" ///
"Bivariate GLM with log link and gamma family") 


H="quarterly table matched sample"


capture log close

clear all
set more off

//Amy's PC
local  logpath E:\data\spouse_claims\logs
local datapath E:\data\spouse_claims\data\int_data

log using "`logpath'\Spouse_intensive_table1.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_claims_intensmatched.dta
svyset [pw=w_r_loc]

mat tab=J(50,6,.)
mat stars=J(50,6,0)
local r=3
local c=1

forvalues i=22(-3)1 {
forvalues j=0/1 {
	sum s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2' if r_loc_==`j' [aw=w_r_loc_],d
	local n`j'=r(N)
	mat tab[`r',`=`j'+2']=r(mean)
	mat tab[`r'+1,`j'+2]=r(p50)
}
	mat tab[`r',1]=`n0'+`n1'
	*ttest s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2',by(r_loc_)
	reg s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2' r_loc_ [pw=w_r_loc]
	test r_loc_
	mat tab[`r',4]=r(p)
	mat stars[`r',4]=(r(p)<.01)+(r(p)<.05)
/*	ranksum s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2', by(r_loc_)
	mat tab[`r',5]=2*(normprob(-abs(r(z))))
	mat stars[`r',5]=(2*(normprob(-abs(r(z))))<.01)+(2*(normprob(-abs(r(z))))<.05)	
*/	glm s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2' r_loc_ [pw=w_r_loc_], link(log) fam(gamma)
	mat tab[`r',6]=e(p)
	mat stars[`r',6]=(e(p)<.01)+(e(p)<.05)	
	local r=`r'+3
}
local r=`r'+1
forvalues i=1(3)24 {
forvalues j=0/1 {
	sum s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2'p if r_loc_==`j' [aw=w_r_loc_],d
	local n`j'=r(N)
	mat tab[`r',`=`j'+2']=r(mean)
	mat tab[`r'+1,`j'+2]=r(p50)
}
	mat tab[`r',1]=`n0'+`n1'
*	ttest s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2'p,by(r_loc_)
	reg s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2'p r_loc_ [pw=w_r_loc]
	test r_loc_
	mat tab[`r',4]=r(p)
	mat stars[`r',4]=(r(p)<.01)+(r(p)<.05)
/*	ranksum s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2'p, by(r_loc_)
	mat tab[`r',5]=2*(normprob(-abs(r(z))))
	mat stars[`r',5]=(2*(normprob(-abs(r(z))))<.01)+(2*(normprob(-abs(r(z))))<.05)	
	*/glm s_tot_paid_by_mc_wi_m_`i'_to_`=`i'+2'p r_loc_ [pw=w_r_loc_], link(log) fam(gamma)
	mat tab[`r',6]=e(p)
	mat stars[`r',6]=(e(p)<.01)+(e(p)<.05)
	local r=`r'+3
}

mat rownames tab= "Quarters pre R death" 8 mean median 7 mean median 6 mean median 5 mean median ///
4 mean median 3 mean median 2 mean median 1 mean median "Quarters post R death" 1 mean median ///
2 mean median 3 mean median 4 mean median 5 mean median 6 mean median 7 ///
mean median 8 mean median

frmttable using "`logpath'\quarterly_spending_matched.rtf", replace statmat(tab) ctitles("" "N contributing" "Non-hospital death"  ///
"In-hospital death" "" "P-value" ""\"" "" "" "T-test" "Rank sum" "GLM") sdec(0,2,2,2) annotate(stars) asymbol(*,**) ///
title(Quarterly MC Expenditures) note("All means, medians, and significance tests based on propensity matched sample" ///
"S included if has FFS for the first month (closest to index date) in period" ///
"Bivariate GLM with log link and gamma family") 


H="hsr revision"
/*Limited to decedents with FFS MC 6m prior to death, married at time of death,
with spouse mc id*/
clear all
mata: mata clear
set more off
capture log close
import excel "E:\data\Dartmouth_misc\EOL_mc_2yrs_HRR\DAP_HRR_03_07_to_merge.xls", sheet("Sheet1") firstrow case(lower) clear
keep hrr totalmedic
rename hrr hrrnum
xtile eol_spending_quintile=tot, nq(5)
xtile eol_spending_quartile=tot, nq(4)
gen eol_spending_3_cat=eol_spending_quartile
replace eol_spending_3_cat=eol_spending_3_cat-1 if inlist(eol_spending_3_cat,3,4)
label define eol_spending_3_cat 1 "Bottome Quartile" 2 "Middle 50%" 3 "Top quartile"
label values eol_spending_3_cat eol_spending_3_cat
gen eol_spending_low=eol_spending_3_cat==1
gen eol_spending_mid=eol_spending_3_cat==2
gen eol_spending_high=eol_spending_3_cat==3
label var eol_spending_low "Bottom Quartile EOL spending by Dartmouth HRR"
label var eol_spending_mid "Middle 50% EOL spending by Dartmouth HRR"
label var eol_spending_high "Top Quartile EOL spending by Dartmouth HRR"
label var eol_spending_3_cat "EOL Spending Group by Dartmouth HRR, Adjusted"
label var eol_spending_quintile "EOL Spending Quintile by Dartmouth HRR, Adjusted"
tempfile temp1
save "`temp1'"



use "E:\data\hrs_public_2012\dementia\pdem_withvarnames_ebl.dta", clear
destring id, gen(r_id)
rename core_year r_core_year_n1
tempfile temp2
save `temp2'

//Server file paths
global logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data\int_data


cd `projdatapath'

use spouse_claims_v1 if s_core_year_n1<2012 & r_death_year<=2011 //& (r_part_ab_6m==1 & r_hmo_d_6m==0)
*merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_intens_data_ps_set.dta" , gen(spmerge) ///
 *keep(match)
merge 1:1 r_id s_id using "E:\data\spouse_intensive\int_data\spouse_data_full.dta" , gen(spmerge) keep(match)
merge 1:1 r_id r_core_year_n1 using `temp2', gen(demmerge) keep(match master)
merge m:1 hrrnum using `temp1', gen(hrrmerge) keep(match master)
*********************************************************
*********************************************************
//indicators of intensity-hospice 3+days, top quartile spending last 6m, and death in hosp (already there)
gen r_hs_3d_6m=r_hs_los_6m>=3

local shrscomorbs s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
 s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 s_psych_hrs_n1
local rhrscomorbs r_cancer_hrs_n1 r_lung_hrs_n1 r_heart_hrs_n1 r_chf_hrs_n1 ///
 r_stroke_hrs_n1 r_memory_hrs_n1 r_htn_hrs_n1 r_dm_hrs_n1 r_psych_hrs_n1

//get quartile of spending for match
gen s_tot_paid_by_mc_wi_6m18m=s_tot_paid_by_mc_wi_18m-s_tot_paid_by_mc_wi_6m ///
if s_cont_ffs_n_mos>=18
xtile spend_quart=s_tot_paid_by_mc_wi_6m18m , nq(4)
gen spend_quart4=spend_quart==4
sum r_tot_paid_by_mc_wi_6m, d
gen r_spending_6m_high=r_tot_paid_by_mc_wi_6m>=r(p75)

label var r_hs_3d "R Hospice use 3+ days last 6m"
label var r_spending_6m_high "R Medicare spending top quartile last 6m"


gen r_spend_or_hosp_death=r_spending_6m_high==1 | r_loc_==1
foreach s in r s {
foreach n in n1 n2 {
gen `s'_hrs_comorb_none_`n'=`s'_comor_c_hrs_`n'==0 if !missing(`s'_comor_c_hrs_`n')
gen `s'_hrs_comorb_mild_`n'=`s'_comor_c_hrs_`n'==1 if !missing(`s'_comor_c_hrs_`n')
gen `s'_hrs_comorb_modsev_`n'=`s'_comor_c_hrs_`n'>=2 if !missing(`s'_comor_c_hrs_`n')
foreach x in none mild {
	label var `s'_hrs_comorb_`x'_`n' "SR comorbidities: `x'"
}
label var `s'_hrs_comorb_modsev_`n' "SR comorbidities: Mod/Severe"
gen `s'_adl_impair_`n'=!`s'_adl_independent_core_`n' if !missing(`s'_adl_independent_core_`n')
label var `s'_adl_impair_`n' "Dependent in ADLs"
}
}
replace likely_dem=pdem>.5 if !missing(pdem)
//where r&s highly correlated, use s
local rvarsa r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x  r_adl_impair_n1 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

tab eol_spending_quartile, gen(eol_spend_quart)
label var eol_spend_quart1 "Quartile EOL spending by HRR: Low"
label var eol_spend_quart2 "Quartile EOL spending by HRR: Mid-low"
label var eol_spend_quart3 "Quartile EOL spending by HRR: Mid-high"
label var eol_spend_quart4 "Quartile EOL spending by HRR: High"
local region eol_spend_quart2 eol_spend_quart3 eol_spend_quart4
//categorical spouse primary helper, duration'
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing
gen r_s_help_dur_cat = 0 if r_adl_sp_helper_x==0 & r_iadl_sp_helper_x==0
replace r_s_help_dur_cat = 1 if r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1
replace r_s_help_dur_cat = 2 if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) ///
 & ( r_adl_sp_helper_n1==1 | r_iadl_sp_helper_n1==1)
la def help 0 "S not primary helper x" 1 "S primary helper x only" 2 "S primary helper x+n1"
la val r_s_help_dur_cat help
tab r_s_help_dur_cat, gen(r_s_help_dur_ind)
label var r_s_help_dur_ind2 "S primary helper x only" 
label var r_s_help_dur_ind3 "S primary helper x+n1"
local rvars r_age r_nhres_n1 r_srh_pf_n1 r_advdir_x r_dexp_x r_adl_impair_n1 ///
 likely_dem r_cancer_hrs_n1 r_hrs_comorb_modsev_n1 r_hrs_comorb_mild_n1 r_champus_n1

local svars s_age s_female s_nw_lowest_n1 s_white_e ///
s_hseduc s_srh_pf_n1 s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_adl_impair_n1 ///
r_s_help_dur_ind1

/*local n1s srh_pf hrs_comorb_mild hrs_comorb_mod ///
nw_midlow nw_midhigh nw_highest  hrs_comorb_mod hrs_comorb_mild ///
adl_independent_core nhres */
sum `rvars' `svars' `region'
foreach x of local n1s {
foreach s in r s {
replace `s'_`x'_n1=`s'_`x'_n2 if r_death_date_e-`s'_c_ivw_date_n1<=183
}
}

gen int_any_of5_1m=0
foreach x in cpr enteral_nut gastro_tude trach intubation {
replace int_any_of5_1m=1 if int_`x'_1m==1
}
tab int_any_of5 int_any_1m

local treatvars r_loc_hosp_x r_spending_6m_high r_int_any_30d r_hs_3d_6m ///
r_icu_x
 
tokenize `treatvars'
local max : word count `treatvars'

gen quartile_weight=.
gen topquartile_weight=.
gen surv_12_weight=.
gen surv_24_weight=.
gen surv_12=s_cont_ffs_p_mos>=12 & r_s_death>=366
gen surv_24=s_cont_ffs_p_mos>=24 & r_s_death>=731


//first sort data randomly
set seed 2000
gen x=uniform()
sort x

forvalues i=1/`max' {
di "`i'"
log using $logpath\spouse_claims_match_``i''`time'_canc_heart_va.txt, text replace
sum `rvars' `svars' `region'
*******************************************************************
//propensity score generation


cap drop ip_* logitpscore

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region', pscore(ip_pscore) blockid(ip_block) logit

*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i'' ,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
pstest `rvars`time'' `svars`time'' `region' ,treated(``i'') both hist

local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time''  {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

rename _weight w_``i''`time'

/*
forvalues quart=0/1 {
drop ip_pscore ip_block logitpscore x
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region' if spend_quart4==`quart', ///
pscore(ip_pscore) blockid(ip_block) logit
tab ``i''
tab ``i'' if spend_quart4==`quart'
tab ``i'' if spend_quart4==`quart' & !missing(ip_pscore)
di "PS graph1"
di "``i''"
*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i''  if spend_quart4==`quart',outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight
di "PS graph2"
*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
di "Spending quartile pre-death=`quart'"
pstest `rvars`time'' `svars`time'' `region' if spend_quart4==`quart',treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
di "Compare variance here"
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time'' `region' {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace quartile_weight=_w if missing(quartile_we)
}
*/
foreach quart in 12 24 {
drop ip_pscore ip_block logitpscore

//generate pscore variable hs_pscore
pscore ``i'' `rvars`time'' `svars`time'' `region' if surv_`quart'==1, ///
pscore(ip_pscore) blockid(ip_block) logit
tab ``i''
tab ``i'' if surv_`quart'==1
tab ``i'' if surv_`quart'==1 & !missing(ip_pscore)
di "PS graph1"
di "``i''"
*psgraph, treated(``i'') pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

psmatch2  ``i''  if surv_`quart'==1,outcome(s_admit_ind_p12m) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight
di "PS graph2"
*******************************************************************
//look at balance of propensity score across variables
psgraph, pscore(ip_pscore)
di "``i''"
di "24m Survivors only"
pstest `rvars`time'' `svars`time'' `region' if surv_`quart'==1,treated(``i'') both hist
/*
//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if ``i''==1 & _support==1
gen `v'_comparison = `v' if ``i''==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}
*/
local rn : word count `rvars`time'' `svars`time'' `region'
mat vr=J(`rn',6,.)
di "Compare variance here"
//compare variance of covariates before and after matching
local var=1
foreach v in `rvars`time'' `svars`time'' `region' {
qui sum `v' if ``i''==1 //get variance treated before matching
mat vr[`var',1]=r(Var)
qui sum `v' if ``i''==0 //get variance comparison before matching
mat vr[`var',2]=r(Var)
mat vr[`var',3]= vr[`var',1]/vr[`var',2] //ratio
qui sum `v' if ``i''==1 & _support==1 //get variance treated after matching
mat vr[`var',4]=r(Var)
qui sum `v' if ``i''==0 [iweight=_weight] //get variance comparison after matching
mat vr[`var',5]=r(Var)
mat vr[`var',6]= (vr[`var',4]) / (vr[`var',5]) //ratio
local var=`var'+1
}

mat rownames vr=`rvars`time'' `svars`time'' `region'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if ``i''==1, missing //n=4 treated dropped, off comm support
tab _support if ``i''==0, missing
tab _weight if ``i''==1, missing
sum _weight if ``i''==0 //n=9 control dropped, no weight assigned

replace surv_`quart'_weight=_w if missing(surv_`quart'_we)
}

log close
}

save spouse_claims_intensmatched, replace

