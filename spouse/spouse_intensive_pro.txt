= V4 Outline MultiLine NoSorting TabWidth=30

H="R intensive procedures, effect on surving spouse depression"
****Need to create new dataset because of corrected death dates.  Leaving Rebecca's code for now, but skip down to "Bringing in Karen's death date" header.****
xxxxStarts with dataset created for the spousal depression outcomes project
created in the file spouse_2012.txt
This ds is created in the "Create additional variables" tab of spouse_2012.txtxxxx


**Code, data, and output/logs archived on 11/23/2015 after submission to JAMA.  
all found at "E:\projects\spouse_intensive\archive JAMA submission Nov2015"**


H="Define sample"
/*This switches to Stata using data dataset exported in spouse_2012.txt code*/

/*Full decedent sample (2002-2012 exit interviews) is restricted to:
1. Decedents with core interview at least 6m before death
2. With medicare xwalk id
3. With FFS medicare last 6 months of life
4. Married or partnered at time of death
5. With spouse p1 interview
6. With spouse core interview at least 6m before R's death
7. Spouse has full CES-D information both pre and post R's death
8. Decedent had at least one comorbidity = data warehouse cc's, excluding cataract and glaucoma
9. Decedent cause of death not accident, suicide, homicide or missing

Additional variables to consider for sensitivity analysis:
2. P1 interview within 90 days of R's death

Also creates table looking at rates of intensive procedures in the sample
*/

capture log close

clear all
mata: mata clear
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local origdata E:\data\spouse\final_data
local datapath E:\data\spouse_intensive\data

log using "`logpath'\1-HRS_Spouse_intensive_sample.txt", text replace

cd `datapath'

use `origdata'\spouse_data_full.dta
************************************************************
//create variables needed to define sample

//get indicator for any of 5 intensive procedures, excluding hemodialysis
gen int_any_of5_6m = .
replace int_any_of5_6m = 1 if int_intubation_6m==1 | int_trach_6m==1 | ///
 int_gastro_tude_6m==1 | int_enteral_nut_6m==1 | int_cpr_6m==1
replace int_any_of5_6m = 0 if int_intubation_6m==0 & int_trach_6m==0 & ///
 int_gastro_tude_6m==0 & int_enteral_nut_6m==0 & int_cpr_6m==0
la var int_any_of5_6m "Any intensive pro last 6m, excl hemodial"
tab int_any_of5_6m, missing
tab int_any_of5_6m int_any_6m, missing
tab int_any_of5_6m int_hemodia_6m, missing

//check date of death for full decedent sample
tab r_exit_year_x if r_death_date_e==., missing
tab r_xwalk_yes if r_death_date_e==., missing
//if have xwalk, check if there is a dod present in the claims
gen r_ind_claims_dod = 0
replace r_ind_claims_dod=1 if r_claims_dod~=.
tab r_ind_claims_dod, missing
tab r_ind_claims_dod if r_death_date_e==., missing

//use the claims dod if the HRS dod is missing
gen r_death_date = r_death_date_e
replace r_death_date = r_claims_dod if  r_death_date_e==.
la var r_death_date "R DOD from HRS or claims"
gen r_use_claims_dod = 0
replace r_use_claims_dod = 1 if r_death_date_e==. & r_ind_claims_dod==1
tab r_use_claims_dod, missing

gen r_ind_dod = 0
replace r_ind_dod = 1 if r_death_date ~=.
la var r_ind_dod "Indicator R death date present"
tab r_ind_dod, missing

//Death date 2000-2011
gen r_death_year=year(r_death_date)
tab r_death_year, missing

gen r_ind_dod_00_12=(1999<r_death_year & r_death_year<2012 & r_death_year!=.)
tab r_death_year r_ind_dod_00_12, missing
la var r_ind_dod_00_12 "R DOD 2000 to 2011, 1=yes"
li r_death_date_e r_claims_dod r_xwalk_yes if r_death_year<1999

//Decedent has n1 core interview or n2 if n1 w/i 6m of death
gen r_days_n1_core_dead = r_death_date - r_c_ivw_date_n1
tab r_ind_dod if r_days_n1_core_dead==., missing
//missing days all have no core n1 interview
tab r_core_year_n1 if r_days_n1_core_dead==., missing

gen r_ind_n1_wi_6m_dead = .
replace r_ind_n1_wi_6m_dead=1 if r_days_n1_core_dead <183 & r_days_n1_core_dead!=.
replace r_ind_n1_wi_6m_dead=0 if r_days_n1_core_dead >=183 & r_days_n1_core_dead!=.
label var r_ind_n1_wi_6m_dead "r n1 core within 6m of death"
tab r_ind_n1_wi_6m_dead , missing

gen r_core_pre_ind=0
replace r_core_pre_ind=1 if r_core_year_n1!=. & r_ind_n1_wi_6m_dead==0
replace r_core_pre_ind=1 if r_core_year_n2!=. & r_ind_n1_wi_6m_dead==1
la var r_core_pre_ind "R has core interview gt 6m before death"
tab r_core_pre_ind, missing
tab r_core_pre_ind r_exit_year_x , missing

//Decedent had parts a and b coverage and no hmo 6m prior to death
gen byte ins_ind=.
replace ins_ind=1 if r_part_ab_6m==1 & r_hmo_d_6m==0
replace ins_ind=0 if r_part_ab_6m!=1 | r_hmo_d_6m!=0
la var ins_ind "FFS Medicare 6m pre-death"
tab ins_ind, missing

//married vs partnered
tab r_married_x r_married_or_part_v2_x, missing

//has spouse p1 interview
gen byte sp1core_ind=.
replace sp1core_ind=0 if s_core_year_p1==.
replace sp1core_ind=1 if s_core_year_p1!=.
tab sp1core_ind, missing
tab sp1core_ind r_exit_year_x , missing
tab s_core_year_p1 r_exit_year_x , missing

//has spouse n1 interview or n2 if n1 w/i 6m of R's death
gen s_days_n1_core_dead = r_death_date - s_c_ivw_date_n1
tab s_core_year_n1 if s_days_n1_core_dead==., missing
 
gen s_ind_n1_wi_6m_dead = .
replace s_ind_n1_wi_6m_dead=1 if s_days_n1_core_dead <183 & s_days_n1_core_dead!=.
replace s_ind_n1_wi_6m_dead=0 if s_days_n1_core_dead >=183 & s_days_n1_core_dead!=.
label var s_ind_n1_wi_6m_dead "S n1 core within 6m of death"
tab s_ind_n1_wi_6m_dead, missing

gen s_core_pre_ind=0
replace s_core_pre_ind=1 if s_core_year_n1!=. & s_ind_n1_wi_6m_dead==0
replace s_core_pre_ind=1 if s_core_year_n2!=. & s_ind_n1_wi_6m_dead==1
la var s_core_pre_ind "S has core interview gt 6m before death"
tab s_core_pre_ind, missing
tab s_core_pre_ind r_exit_year_x , missing

//for spouse cesd = use n2 ivw if n1 is within 6m of R's death
tab s_cesd_tot_n1 s_ind_n1_wi_6m_dead, missing
gen s_cesd_tot_n1n2 = s_cesd_tot_n1 if s_ind_n1_wi_6m_dead==0
replace s_cesd_tot_n1n2 = s_cesd_tot_n2 if s_ind_n1_wi_6m_dead==1
tab s_cesd_tot_n1n2 s_core_pre_ind, missing

gen byte cesd_miss_n1n2 = 0
replace cesd_miss_n1n2 =1 if s_cesd_tot_n1n2==.
gen byte cesd_miss_p1 = 0
replace cesd_miss_p1 =1 if s_cesd_tot_p1==.
tab cesd_miss_n1n2 cesd_miss_p1 , missing
gen byte cesd_miss_n1_p1 = 0
replace cesd_miss_n1_p1 =1 if cesd_miss_n1n2==1 | cesd_miss_p1 ==1
la var cesd_miss_n1_p1 "CESD missing either n1 or p1"
tab cesd_miss_n1_p1 , missing

//missing cesd b/c proxy interview - so not asked
gen s_proxy_n1n2 = s_proxy_core_n1 if s_ind_n1_wi_6m_dead==0
replace s_proxy_n1n2 = s_proxy_core_n2 if s_ind_n1_wi_6m_dead==1
tab s_proxy_n1n2 , missing
gen byte proxy_n1_or_p1 = 0
replace proxy_n1_or_p1 =1 if s_proxy_core_p1==1 | s_proxy_n1n2==1
la var proxy_n1_or_p1 "Ind. that s p1 or n1 ivw is via proxy"
tab proxy_n1_or_p1, missing

tab proxy_n1_or_p1 cesd_miss_n1_p1 if r_core_pre_ind==1 & r_xwalk_yes==1 & ///
	ins_ind==1 & r_married_or_part_v2_x==1 & sp1core_ind==1 & s_core_pre_ind==1 , missing

//cc's excluding cataract and glaucoma
gen cc_all_count_12m_2 = cc_1_ami_n12mn0 + cc_2_alzh_n12mn0 + cc_3_alzhdmta_n12mn0 + ///
cc_4_atrialfb_n12mn0 + /*cc_5_cataract_n12mn0 +*/ cc_6_chrnkidn_n12mn0 + ///
cc_7_copd_n12mn0 + cc_8_chf_n12mn0 + cc_9_diabetes_n12mn0 + /*cc_10_glaucoma_n12mn0 +*/ ///
cc_11_hipfrac_n12mn0 + cc_12_ischmcht_n12mn0 + cc_13_depressn_n12mn0 + ///
cc_14_osteoprs_n12mn0 + cc_15_ra_oa_n12mn0 + cc_16_strketia_n12mn0 + ///
cc_17_cncrbrst_n12mn0 + cc_18_cncrclrc_n12mn0 + cc_19_cncrprst_n12mn0 + ///
cc_20_cncrlung_n12mn0 + cc_21_cncrendm_n12mn0
la var cc_all_count_12m_2 "Count of cc's, excludes cataract and glaucoma"

tab cc_all_count_12m_2, missing

gen byte no_cc_12m_excl_cataract = .
replace no_cc_12m_excl_cataract =1 if cc_all_count_12m_2==0
replace no_cc_12m_excl_cataract =0 if (cc_all_count_12m_2>0 & cc_all_count_12m_2!=.)
la var no_cc_12m_excl_cataract "Ind. for no Chronic conditions 12m before death"
tab no_cc_12m_excl_cataract , missing

//cause of death = Accidents, Suicide, Homicide (var = 12)
tab r_cause_death_12_n_e, missing
replace r_cause_death_12_n_e=. if r_cause_death_12_n_e==14
gen byte accident_cause_death = .
replace accident_cause_death =1 if r_cause_death_12_n_e==12
replace accident_cause_death =0 if (r_cause_death_12_n_e!=12 & r_cause_death_12_n_e!=.)
la var accident_cause_death "Cause of death = accidents, suicide, homicide"
tab accident_cause_death r_exit_year_x, missing
gen _deathyear=year(r_death_date)
tab _deathyear accident_cause_death, missing

************************************************************
//set matrix for sample size determination table
mat sample=J(13,1,.)

//all decedents from 2002-2012 exit interviews
sum r_exit_year_x, detail
mat sample[1,1]=r(N)

//decedents with date of death 2000-2011 for full ndi information
sum r_exit_year_x if r_ind_dod_00_12==1, detail
mat sample[2,1]=r(N)

//decedents with pre-death core interview
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1, detail
mat sample[3,1]=r(N)

//decedents with n1 core + xwalk
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1, detail
mat sample[4,1]=r(N)

//decedents with n1 core + xwalk + ffs mc last 6 months of life
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1, detail
mat sample[5,1]=r(N)

//decedents with n1 core + xwalk + partnered
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1, detail
mat sample[6,1]=r(N)

//decedents with n1 core + xwalk + partnered + spouse p1 interview
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & sp1core_ind==1, detail
mat sample[7,1]=r(N)

//decedents with n1 core + xwalk + partnered + spouse p1 and n1 interview
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & sp1core_ind==1 & s_core_pre_ind==1, detail
mat sample[8,1]=r(N)

//full n1 p1 cesd interview?
//missing cesd b/c of proxy interview
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & /// 
sp1core_ind==1 & s_core_pre_ind==1 & proxy_n1_or_p1==0, detail
mat sample[9,1]=r(N)

//missing cesd for unknown reason (has interviews and not proxy interviews)
//decedents with n1 core + xwalk + partnered + spouse p1 interview 
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & /// 
sp1core_ind==1 & s_core_pre_ind==1 & proxy_n1_or_p1==0 & cesd_miss_n1_p1==0, detail
mat sample[10,1]=r(N)

//using chronic conditions 1 year prior to death, excluding cataract and glaucoma
//decedents with n1 core + xwalk + partnered + spouse p1 interview
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & /// 
sp1core_ind==1 & s_core_pre_ind==1 & proxy_n1_or_p1==0 & cesd_miss_n1_p1==0 & ///
no_cc_12m_excl_cataract==0, detail
mat sample[11,1]=r(N)

//cause of death = Accidents, Suicide, Homicide (var = 12)
//using ccs v2
//decedents with n1 core + xwalk + partnered + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & /// 
sp1core_ind==1 & s_core_pre_ind==1 & proxy_n1_or_p1==0 & cesd_miss_n1_p1==0 & ///
no_cc_12m_excl_cataract==0 & accident_cause_death==0, detail
mat sample[12,1]=r(N)
************************************************************

//p1 interview within 30, 90 days of r's death
gen days_p1_core_dead =  s_c_ivw_date_p1 -  r_death_date_e
gen p1_wi_90d = .
replace p1_wi_90d=1 if days_p1_core_dead<=90
replace p1_wi_90d=0 if (days_p1_core_dead>90 & days_p1_core_dead!=.)
la var p1_wi_90d "p1 interview w/i 90 days r death"
tab p1_wi_90d, missing

gen p1_wi_30d = .
replace p1_wi_30d=1 if days_p1_core_dead<=30
replace p1_wi_30d=0 if (days_p1_core_dead>30 & days_p1_core_dead!=.)
la var p1_wi_30d "p1 interview w/i 30 days r death"
tab p1_wi_30d, missing

//decedents with n1 core + xwalk + partnered + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & /// 
sp1core_ind==1 & s_core_pre_ind==1 & no_cc_12m_excl_cataract==0 ///
& accident_cause_death==0 & cesd_miss_n1_p1==0 & p1_wi_90d==0, detail
mat sample[13,1]=r(N)

mat list sample

frmttable using `logpath'\1-spouse_intens_pro_sample , statmat(sample) ///
	title("2012 sample size estimate - requiring an n1 core interview") ///
	ctitle("","n") ///
	rtitle("All decedents from 2002-2012 exit interviews" \ ///
	"Date of death 2000-2011 for full ndi info" \ "With pre-death core interview" \ ///
	"With mc xwalk id" \ "With FFS mc last 6 months of life" \ "Partnered at time of death" \ ///
	"Spouse p1 core interview" \"Spouse pre-death core interview" \ ///
	"Not Proxy n1 or p1 s interview" \ "Full CESD interview n1 and p1" \ ///
	"No comorb 12m before death" \ "Accidents, Suicide, Homicide or Missing = cause of death" \ ///
	"p1 ivw 90+ days from r's death") ///
	note("Pre-death core interview defined as having core interview at least" \ ///
	"6m prior to R's death for both R and S. No comorb 12m before death uses data" \ ///
	"warehouse chronic conditions excluding cataract and glaucoma.") ///
	sdec(0) replace
**************************************************
//details re n1 vs n2 interviews and missingness
mat n1n2=J(14,2,.)

sum r_exit_year_x if r_ind_dod_00_12==1, detail //all 2002-2012 exit interviews with dod 2000 to 2011
mat n1n2[1,1]=r(N)

//number requiring n1
//the n=305 missing are all missing a pre-death core interview
tab r_core_year_n1 if r_ind_dod_00_12==1 & r_days_n1_core_dead==., missing
tab r_ind_n1_wi_6m_dead, missing matcell(n1)
mat n1n2[2,1]=n1[1,1]+n1[3,1] //require n1, do those missing and those with ivw before 6m
mat n1n2[2,2]=n1[2,1]

sum r_core_pre_ind if r_ind_dod_00_12==1 & (r_ind_n1_wi_6m_dead==0 | r_days_n1_core_dead==.)  //have n1
mat n1n2[3,1]=r(mean)*r(N)

sum r_core_pre_ind if r_ind_dod_00_12==1 & r_ind_n1_wi_6m_dead==1  //have n2
mat n1n2[3,2]=r(mean)*r(N)

sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1, detail //overall with pre-death core interview
mat n1n2[4,1]=r(N)

//with next set of requirements (xwalk, partner, s p1 core)
local req1 r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & sp1core_ind==1
sum r_exit_year_x if `req1', detail
mat n1n2[5,1]=r(N)

tab s_core_year_n1 if s_days_n1_core_dead==., missing
tab s_ind_n1_wi_6m_dead if `req1', missing matcell(n1)
mat n1n2[6,1]=n1[1,1]+n1[3,1] //require n1, do those missing and those with ivw before 6m
mat n1n2[6,2]=n1[2,1]

sum s_core_pre_ind if (s_ind_n1_wi_6m_dead==0 | s_ind_n1_wi_6m_dead==.) & `req1' //have n1
mat n1n2[7,1]=r(mean)*r(N)

sum s_core_pre_ind if s_ind_n1_wi_6m_dead==1 & `req1' //have n2
mat n1n2[7,2]=r(mean)*r(N)

sum r_exit_year_x if s_core_pre_ind==1 & `req1', detail //overall with pre-death core interview
mat n1n2[8,1]=r(N)

//not proxy n1 or p1, split by the n1 vs n2 interview groups
sum r_exit_year_x if `req1' & s_core_pre_ind==1 & proxy_n1_or_p1==0 & s_ind_n1_wi_6m_dead==0 , detail
mat n1n2[9,1]=r(N)

sum r_exit_year_x if `req1' & s_core_pre_ind==1 & proxy_n1_or_p1==0 & s_ind_n1_wi_6m_dead==1 , detail
mat n1n2[9,2]=r(N)

sum r_exit_year_x if `req1' & s_core_pre_ind==1 & proxy_n1_or_p1==0 , detail
mat n1n2[10,1]=r(N)

//missing ces-d, split by the n1 vs n2 interview
local req2 `req1' & s_core_pre_ind==1 & proxy_n1_or_p1==0
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 & s_ind_n1_wi_6m_dead==0, detail
mat n1n2[11,1]=r(N)
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 & s_ind_n1_wi_6m_dead==1, detail
mat n1n2[11,2]=r(N)
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 , detail
mat n1n2[12,1]=r(N)

//at least 1 comorbidity
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 & s_ind_n1_wi_6m_dead==0 & no_cc_12m_excl_cataract==0, detail
mat n1n2[13,1]=r(N)
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 & s_ind_n1_wi_6m_dead==1 & no_cc_12m_excl_cataract==0, detail
mat n1n2[13,2]=r(N)

//cause of death not accident, etc or missing
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 & s_ind_n1_wi_6m_dead==0  ///
 & no_cc_12m_excl_cataract==0 & accident_cause_death==0 , detail
mat n1n2[14,1]=r(N)
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 & s_ind_n1_wi_6m_dead==1 ///
 & no_cc_12m_excl_cataract==0 & accident_cause_death==0 , detail
mat n1n2[14,2]=r(N)

mat list n1n2
	
frmttable using `logpath'\1-spouse_intens_pro_sample , statmat(n1n2) ///
	title("Sample details re n1 vs n2 interview required if n1 w/i 6m of R's death") ///
	ctitle("","n","n" \ "" "Use n1" "Use n2") ///
	rtitle("All decedents from 2002-2012 exit interviews and dod 2000-2011" \ "Where R n1 or n2 ivw is needed" \ ///
	"R has n1 or n2 ivw" \ "R has pre-death core ivw" \ "W/ FFS MC, partnered, S has p1 ivw" \ ///
	"S n1 or n2 ivw needed" \ "S has n1 or n2 ivw" \"S has pre-death core interview" \ ///
	"S Not proxy by n1 or n2" \ "S not proxy pre or post ivw" \ "S Full CESD by n1 or n2" \ ///
	"Full CESD interview n1 and p1" \ "R At least 1 comorbidity" \ "R cause death not missing or accident,etc.") ///
	note("Pre-death core interview defined as having core interview at least" \ ///
	"6m prior to R's death for both R and S.") ///
	sdec(0) addtable
	
**************************************************
/*drop observations not in the sample*/
drop if r_ind_dod_00_12!=1
drop if r_core_pre_ind==0
drop if r_xwalk_yes==0
drop if ins_ind==0 
drop if r_married_or_part_v2_x==0 
drop if sp1core_ind==0
drop if s_core_pre_ind==0
drop if cesd_miss_n1_p1==1
drop if no_cc_12m_excl_cataract==1
drop if accident_cause_death==1 | accident_cause_death==.

tab r_exit_year_x r_core_year_n1

la def r_cause_death_12_n_e 1 "Infectious disease" 2 "HIV/AIDS" ///
3 "Cardiovascular disease" 4 "Chronic lower respiratory disease" ///
5 "Other Respiratory disease" 6 "Diabetes" 7 "Alzheimers Disease" ///
9 "Neoplasms" 10 "Kidney Disease (not infectious)" ///
11 "Liver, Gallbladder, Stomach and/or Intestinal disease" ///
12 "Accidents, Suicide, Homicide" 13 "Other"

la val r_cause_death_12_n_e r_cause_death_12_n_e
tab r_cause_death_12_n_e, missing

li r_death_date_e r_claims_dod r_xwalk_yes if r_death_year<1999

**************************************************
//tables looking at intensive procedure use in the sample
//just do for those with spouse with full cesd information

//generate indicators hospice use
gen r_hs_1d_6m = .
replace r_hs_1d_6m = 1 if hs_los_6m>=1 & hs_los_6m!=.
replace r_hs_1d_6m = 0 if hs_los_6m<1 & hs_los_6m!=.

gen r_hs_3d_6m = .
replace r_hs_3d_6m = 1 if hs_los_6m>=3 & hs_los_6m!=.
replace r_hs_3d_6m = 0 if hs_los_6m<3 & hs_los_6m!=.

gen r_hs_7d_6m = .
replace r_hs_7d_6m = 1 if hs_los_6m>=7 & hs_los_6m!=.
replace r_hs_7d_6m = 0 if hs_los_6m<7 & hs_los_6m!=.

la var r_hs_1d_6m "1+ days hospice use vs 0 days"
la var r_hs_3d_6m "3+ days hospice use vs 0-2 days"
la var r_hs_7d_6m "7+ days hospice use vs 0-6 days"

//hospice and intensive procedure use overlap?
gen hs_and_intens_pro = .
replace hs_and_intens_pro = 1 if r_hs_3d_6m==1 & int_any_of5_6m==1
replace hs_and_intens_pro = 0 if r_hs_3d_6m==0 | int_any_of5_6m==0
la var hs_and_intens_pro "Hospice 3+ days and Intensive Proced"

*********************************************************
save spouse_intens_data_sample.dta, replace
*********************************************************

la var int_intubation_6m "Intubation and mechanical ventilation"
la var int_trach_6m "Tracheostomy"
la var int_gastro_tude_6m "Gastrostomy tube insertion"
la var int_hemodia_6m "Hemodialysis"
la var int_enteral_nut_6m "Enteral or parenteral nutrition"
la var int_cpr_6m "CPR"

//first, look at intensive procedures in the sample
local intvars int_intubation_6m int_trach_6m int_gastro_tude_6m ///
int_hemodia_6m int_enteral_nut_6m int_cpr_6m int_any_6m int_any_of5_6m ///
r_hs_1d_6m r_hs_3d_6m r_hs_7d_6m hs_and_intens_pro 

mat int_n=J(1,1,.)
sum r_exit_year_x 
mat int_n[1,1]=r(N)

mat rownames int_n="N"
frmttable, statmat(int_n) sdec(0) store(int1)

mat int_2=J(12,1,.)
local r = 1
foreach v in `intvars'{
	tab `v' , missing	
	sum `v' , detail
	mat int_2[`r',1]=r(mean)*100 //percent
	local r = `r'+1
}

mat list int_2

mat rownames int_2=`intvars'

frmttable, varlabels statmat(int_2) sdec(2) store(int2)

//looking at hospice LOS
mat int_3 = J(2,2,.)

//row 1 = los overall sample
local r = 1
sum hs_los_6m , detail
mat int_3[`r',1]=r(mean)
mat int_3[`r',2]=r(sd)

//row 2 = los if 3+ day hospice use
local r = 2
sum hs_los_6m if r_hs_3d_6m==1, detail
mat int_3[`r',1]=r(mean)
mat int_3[`r',2]=r(sd)

mat rownames int_3="Hospice LOS, mean (SD)" "LOS if 3+days use, mean (SD)"
mat list int_3

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(2,1,1)

frmttable, statmat(int_3) ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(int3) 	

outreg , replay(int1) append(int2) store(inta)

outreg using `logpath'\1-spouse_intens_pro_sample , ///
	replay(inta) append(int3) ///
	title("Intensive procedures") ///
	ctitle("","%") ///
	note("Decedents 2002-2012 exit interviews, with n1 core interview and ffs medicare" \ ///
	"last 6m of life, married at time of death with spouse with pre and post death core interview" \ ///
	"and pre and post death CES-D score complete." \ ///
	"Also excludes observations where cause of death = accidents, etc, or missing; or" \ ///
	"no comorb 12m before death excluding cataract and glaucoma." \ ///
	"Hospice use is based on claims in the last 6 months of R's life.") ///
	addtable
	
**************************************************
//cross tabulation of hospice use and intensive procedures
tab int_any_of5_6m r_hs_3d_6m  , missing

mat xtab=J(5,2,.)
sum r_exit_year_x  //sample 
mat xtab[1,1] = r(N)

sum r_exit_year_x if int_any_of5_6m==0 & r_hs_3d_6m==0
mat xtab[2,1]=r(N) //n
mat xtab[3,1]=r(N)/xtab[1,1]*100 //percent

sum r_exit_year_x if int_any_of5_6m==0 & r_hs_3d_6m==1
mat xtab[2,2]=r(N) //n
mat xtab[3,2]=r(N)/xtab[1,1]*100 //percent

sum r_exit_year_x if int_any_of5_6m==1 & r_hs_3d_6m==0
mat xtab[4,1]=r(N) //n
mat xtab[5,1]=r(N)/xtab[1,1]*100 //percent

sum r_exit_year_x if int_any_of5_6m==1 & r_hs_3d_6m==1
mat xtab[4,2]=r(N) //n
mat xtab[5,2]=r(N)/xtab[1,1]*100 //percent
**************************************************

mat list xtab

frmttable using `logpath'\1-spouse_intens_pro_sample , ///
	statmat(xtab) sdec(0\0\2\0\2) ///
	title("Crosstabulation of hospice use and intensive procedure use") ///
	ctitles("", "No Hospice Use", "Hospice Use") ///
	rtitles("N overall" \ "Intensive procedure No, n" \ "%" \ "Yes, n"\ "%") ///
	note("Hospice use = 3+ days in last 6m of life") addtable


**************************************************
log close



H="Define new variables"
capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\2-Spouse_intensive_variablesetup.txt", text replace

cd `datapath'

use spouse_intens_data_sample.dta
*************************************************
tab r_exit_year_x, missing

*************************************************
label define location 1  "Hospital" 2 "Nursing Home" 3 "Home" 4 "Hospice" ///
      5 "Assisted Living/Retirement Home" 6 "Other/Don't Know "
label values *location* location


//demographic variables
sum r_age, detail
sum s_age, detail

//gender
la var s_female "S Female"
la def fem 0 "Male" 1 "Female"
la val s_female r_female fem
tab r_female, missing
tab s_female, missing
tab r_female s_female

//race & ethnicity
tab r_race_e r_hisp_eth_e, missing
//gen race_categorical variable including hispanic
foreach g in r s {
gen `g'_race_cat = 0 if `g'_white_e==1 & `g'_hisp_eth_e==0
replace `g'_race_cat = 1 if `g'_black_e==1 & `g'_hisp_eth_e==0
replace `g'_race_cat = 2 if `g'_hisp_eth_e==1
replace `g'_race_cat = 3 if `g'_other_na_api_race_e==1 & `g'_hisp_eth_e==0
tab `g'_race_cat, missing
tab `g'_race_cat `g'_white_e, missing
tab `g'_race_cat `g'_black_e, missing
tab `g'_race_cat `g'_hisp_eth_e, missing
tab `g'_race_cat `g'_other_na_api_race_e, missing
la var `g'_race_cat "`g' race, categorical"
}

la def race_cat 0 "White, non-Hispanic" 1 "Black, non-Hispanic" ///
2 "Hispanic" 3 "Other race, non-Hispanic"
la val r_race_cat s_race_cat race_cat
tab r_race_cat, missing
tab s_race_cat, missing

tab s_white_e r_white_e, missing

foreach g in r s {
tab `g'_race_cat, gen(`g'_race_cat)
}

//education, from tracker file, degree variable
tab r_degree_e r_educ_n1, missing
label variable r_degree_e "R's Eduction, Highest Level, from Tracker file"
label define r_degree_e 0 "No degree" 1 "GED" 2 "High School" 3 "2yr college degree" ///
  4 "4yr College degree" ///
      5 "Master degree" 6"Professional degree" 9 "degree unknown/some college", modify
label values r_degree_e r_degree_e 
tab r_degree_e, missing

//create r hs degree variable
tab r_degree_e r_hseduc , missing
la var r_hseduc "R HS Degree, from tracker, 1=yes"

//code s-education variable from tracker file
label variable s_degree_e "S's Eduction, Highest Level, from Tracker file"
label values s_degree_e r_degree_e 
tab s_degree_e, missing

//create s hs degree variable
tab s_degree_e s_hseduc , missing
la var s_hseduc "S HS Degree, from tracker, 1=yes"

//marital status
tab r_married_x, missing

*************************************************
//additional respondant variables
tab r_nw_lowest_n1, missing
tab r_nw_midlow_n1, missing
tab r_nw_midhigh_n1, missing 
tab r_nw_highest_n1, missing

tab r_imprelig_vimp_n1, missing
tab s_imprelig_vimp_n1, missing

//adl indicator for needing assistance
gen s_adl_impair_n1 = 0 if  s_adl_independent_core_n1 == 1
replace s_adl_impair_n1 = 1 if s_adl_independent_core_n1 == 0
la var s_adl_impair_n1 "S ADL impairment n1"
tab s_adl_impair_n1 s_adl_independent_core_n1, missing

gen r_adl_impair_n1 = 0 if  r_adl_independent_core_n1 == 1
replace r_adl_impair_n1 = 1 if r_adl_independent_core_n1 == 0
la var r_adl_impair_n1 "R ADL impairment n1"
tab r_adl_impair_n1 r_adl_independent_core_n1, missing

gen r_adl_impair_n2 = 0 if  r_adl_independent_core_n2 == 1
replace r_adl_impair_n2 = 1 if r_adl_independent_core_n2 == 0
la var r_adl_impair_n2 "R ADL impairment n2"
tab r_adl_impair_n2 r_adl_independent_core_n2, missing

//insurance status
tab r_medicaid_n1 s_medicaid_n1, missing
tab r_medigap_n1 s_medigap_n1, missing
tab r_champus_n1 s_champus_n1, missing

//eol planning
tab r_advdir_x, missing
tab r_discuss_x, missing
tab r_eoldec_x, missing
tab r_eoldec_x int_any_of5_6m , missing 

//chronic conditions count, excluding glaucoma and cataract
gen cc_all_count_6m12m_2 = cc_1_ami_n12mn6m + cc_2_alzh_n12mn6m + cc_3_alzhdmta_n12mn6m + ///
cc_4_atrialfb_n12mn6m + /*cc_5_cataract_n12mn6m +*/ cc_6_chrnkidn_n12mn6m + ///
cc_7_copd_n12mn6m + cc_8_chf_n12mn6m + cc_9_diabetes_n12mn6m + /*cc_10m_glaucoma_n12mn6m +*/ ///
cc_11_hipfrac_n12mn6m + cc_12_ischmcht_n12mn6m + cc_13_depressn_n12mn6m + ///
cc_14_osteoprs_n12mn6m + cc_15_ra_oa_n12mn6m + cc_16_strketia_n12mn6m + ///
cc_17_cncrbrst_n12mn6m + cc_18_cncrclrc_n12mn6m + cc_19_cncrprst_n12mn6m + ///
cc_20_cncrlung_n12mn6m + cc_21_cncrendm_n12mn6m
la var cc_all_count_6m12m_2 "Count of cc's, 6-12m pre-death, excludes cataract and glaucoma"
tab cc_all_count_6m12m_2 , missing

//categorical spouse primary helper, duration'
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing
gen r_s_help_dur_cat = 0 if r_adl_sp_helper_x==0 & r_iadl_sp_helper_x==0
replace r_s_help_dur_cat = 1 if r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1
replace r_s_help_dur_cat = 2 if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) ///
 & ( r_adl_sp_helper_n1==1 | r_iadl_sp_helper_n1==1)
la def help 0 "S not primary helper x" 1 "S primary helper x only" 2 "S primary helper x+n1"
la val r_s_help_dur_cat help
tab r_s_help_dur_cat, missing

tab r_s_help_dur_cat, gen(r_s_help_dur_ind)

la var r_s_help_dur_ind1 "S not prim helper exit"
la var r_s_help_dur_ind2 "S prim helper exit only"
la var r_s_help_dur_ind3 "S prim helper exit and n1"

*************************************************
//hospice , intensive procedures timing variables
gen proc_to_hs_enrol = hs_enrol_dt - first_proc_date_excl_hd_6m 
tab proc_to_hs_enrol, missing

gen hs_enrol_to_death = r_death_date - hs_enrol_dt
tab hs_enrol_to_death , missing
tab hs_los_6m if hs_enrol_to_death>180 & hs_enrol_to_death~=.

*************************************************
//interview timeline variables
//note these use the dod from HRS if present and claims if HRS is missing
sum r_days_n1_core_dead, detail
sum s_days_n1_core_dead, detail

gen r_days_n2_core_dead = r_death_date-r_c_ivw_date_n2
gen s_days_n2_core_dead = r_death_date-s_c_ivw_date_n2
label var r_days_n2_core_dead "Days from R's n2 ivw to death"
label var s_days_n2_core_dead "Days from S's n2 ivw to R's death"

gen r_days_x_exit_dead = r_e_ivw_date_x - r_death_date
label var days_p1_core_dead "Days from R's death to S p1 interview"
sum r_days_x_exit_dead, detail
sum days_p1_core_dead, detail

//create categorical variable for 6m intervals for death to p1 ivw
//categorical variable for interview timing from r's death
gen days_p1_core_dod_cat = .
replace days_p1_core_dod_cat = 0 if 0<=days_p1_core_dead & days_p1_core_dead<183
replace days_p1_core_dod_cat = 1 if 183<=days_p1_core_dead & days_p1_core_dead<366
replace days_p1_core_dod_cat = 2 if 366<=days_p1_core_dead & days_p1_core_dead<548
replace days_p1_core_dod_cat = 3 if 548<=days_p1_core_dead & days_p1_core_dead<731
replace days_p1_core_dod_cat = 4 if 731<=days_p1_core_dead & days_p1_core_dead !=.
la def days_p1_core_dod_cat 0 "0-6 months" 1 "6-12 months" 2 "12-18 months" ///
3 "18-24 months" 4 "24+ months"
la var days_p1_core_dod_cat "Days from R death to p1 interview, categorical"
la val days_p1_core_dod_cat days_p1_core_dod_cat 
tab days_p1_core_dod_cat , missing

tab days_p1_core_dod_cat , gen(p1_ind)
rename p1_ind1 days_p1_core_dod_lt6m 
rename p1_ind2 days_p1_core_dod_6_12m 
rename p1_ind3 days_p1_core_dod_12_18m 
rename p1_ind4 days_p1_core_dod_18_24m 
rename p1_ind5 days_p1_core_dod_gt2yr 

la var days_p1_core_dod_lt6m "R death to P1 ivw lt 6m"
la var days_p1_core_dod_6_12m "R death to P1 ivw 6-12m"
la var days_p1_core_dod_12_18m "R death to P1 ivw 12-18m"
la var days_p1_core_dod_18_24m "R death to P1 ivw 18-24m"
la var days_p1_core_dod_gt2yr "R death to P1 ivw gt 2yr"

foreach v in days_p1_core_dod_lt6m days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr{
	sum days_p1_core_dead if `v'==1, detail
}

tab r_ind_n1_wi_6m_dead, missing
tab s_ind_n1_wi_6m_dead, missing

*************************************************
//variables that use n2 core if r n1 within 6m of death
local rvarn1n2 r_nhres r_rel_nb r_adl_impair r_srh_pf 
local svarn1n2 s_psych_overall_hrs s_cesd_tot_ge3 s_srh_pf s_adl_independent_core
//note s_cesd_tot_n1n2 created in previous section

foreach i in r s{
	foreach v in ``i'varn1n2'{
		tab `v'_n1 `i'_ind_n1_wi_6m_dead, missing
		gen `v'_n1n2 = `v'_n1 if `i'_ind_n1_wi_6m_dead==0
		replace `v'_n1n2 = `v'_n2 if `i'_ind_n1_wi_6m_dead==1
		tab `v'_n1n2, missing
	}
}

la var r_nhres_n1n2 "R NH Res at n1 or n2 core"
la var r_rel_nb_n1n2 "R Relatives nearby at n1 or n2 core"
la var r_adl_impair_n1n2 "R ADL Impaired at n1 or n2 core"
la var r_srh_pf_n1n2 "R SRH Fair/Poor n1 or n2 core"

la var s_psych_overall_hrs_n1n2 "S Psych condition n1 or n2 core"
la var s_cesd_tot_n1n2 "S CES-D score, n1 or n2 core"
la var s_cesd_tot_ge3_n1n2 "S Depressed CESD 3+, n1 or n2 core"
la var s_srh_pf_n1n2 "S SRH Poor/Fair, n1 or n2 core"
la var s_adl_independent_core_n1n2 "S ADL Independent, n1 or n2 core"

//timing pre to post interview
//first variable n1 to p1 for all 
gen s_days_n1_to_p1 = s_days_n1_core_dead + days_p1_core_dead
sum s_days_n1_to_p1, detail

//second is n1 or n2 if n1 within 6m of death to p1
gen s_days_n1n2_to_p1 = s_days_n1_to_p1 if s_ind_n1_wi_6m_dead==0
replace s_days_n1n2_to_p1 = s_days_n2_core_dead + days_p1_core_dead if s_ind_n1_wi_6m_dead==1
sum s_days_n1n2_to_p1, detail

label var s_days_n1_to_p1 "Days S n1 interview to p1 core"
label var s_days_n1n2_to_p1 "Days S n1 or n2 to p1 core (use n2 if n1 within 6m of death)"

*************************************************
//s comorb category indicators
tab s_comor_c_hrs_n1, missing
tab s_comor_c_hrs_n1, gen(scom)
rename scom1 s_hrs_comorb_none_n1
rename scom2 s_hrs_comorb_mild_n1
rename scom3 s_hrs_comorb_mod_n1
rename scom4 s_hrs_comorb_sev_n1

tab s_hrs_comorb_none_n1, missing
tab s_hrs_comorb_mild_n1, missing
tab s_hrs_comorb_mod_n1, missing
tab s_hrs_comorb_sev_n1, missing

//since only 1 obs has severe, categorize as mod
replace s_hrs_comorb_mod_n1=1 if s_hrs_comorb_sev_n1==1

*************************************************
//s cesd change variables from interview before 6m before R's death to p1 interview

//change cesd count n1 to p1?
gen s_cesdchange= s_cesd_tot_p1- s_cesd_tot_n1n2
tab s_cesdchange, missing
la var s_cesdchange "Change in S's CESD count n1 to p1"
*histogram s_cesdchange

//CESD improvement indicator
gen byte s_cesdbetter=.
replace s_cesdbetter= 1 if s_cesdchange <0
replace s_cesdbetter= 0 if (s_cesdchange >=0 & s_cesdchange !=.)
la var s_cesdbetter "S CESD Improvement n1 to p1"

//CESD decline indicator
gen byte s_cesdworse=.
replace s_cesdworse= 1 if (s_cesdchange >0 & s_cesdchange !=.)
replace s_cesdworse= 0 if s_cesdchange <=0 
la var s_cesdworse"S CESD Decline n1 to p1"

//CESD decline indicator
gen byte s_cesdsame=.
replace s_cesdsame= 1 if s_cesdchange ==0
replace s_cesdsame= 0 if (s_cesdchange !=0 & s_cesdchange !=.)
la var s_cesdsame "S CESD Stable n1 to p1"

tab s_cesdchange s_cesdbetter, missing
tab s_cesdchange s_cesdworse, missing
tab s_cesdchange s_cesdsame , missing

//cesd change categorical variable
gen s_cesdchange_3 =.
replace s_cesdchange_3 =1 if (s_cesdchange <0 & s_cesdchange!=.) // improvement
replace s_cesdchange_3 =-1 if (s_cesdchange >0 & s_cesdchange!=.) //decline
replace s_cesdchange_3 =0 if (s_cesdchange ==0) //no change
la var s_cesdchange_3 "S CESD change categories n1 to p1"
la def s_cesdchange_3 1 "Improvement" 0 "No change" -1 "Decline"
la val s_cesdchange_3 s_cesdchange_3 
tab s_cesdchange_3, missing

//cesd improved from >=3 to 3-  look at CESD 3 clin depression change 
//(three options compared to improved or not*
gen s_cesd_ge3_change= s_cesd_tot_ge3_p1- s_cesd_tot_ge3_n1n2

//cesd improved: 3 or higher in n1 to less than 3 in p1
gen byte s_cesd_ge3better = .
replace s_cesd_ge3better = 1 if s_cesd_ge3_change < 0
replace s_cesd_ge3better = 0 if (s_cesd_ge3_change >= 0 & s_cesd_ge3_change !=.)
la var s_cesd_ge3better "S CESD change from 3+ n1 to <3 p1"
tab s_cesd_ge3better s_cesd_ge3_change, missing

//cesd same or better: 2 or higher in n1 to less than 3 in p1 or no change
gen byte s_cesd_ge3betterorsame = .
replace s_cesd_ge3betterorsame = 1 if s_cesd_ge3_change<=0
replace s_cesd_ge3betterorsame = 0 if (s_cesd_ge3_change > 0 & s_cesd_ge3_change !=.)
la var s_cesd_ge3betterorsame "S CESD no change or change from 3+ n1 to <3 p1"
tab s_cesd_ge3betterorsame s_cesd_ge3_change, missing
*************************************************
//spouse primary caregiver per exit helper details?
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing

*************************************************
//regional variables
sum hci_index, detail
sum hospital_beds, detail
sum specialists, detail

*************************************************
save spouse_intens_data_cleaned.dta, replace

*************************************************
log close


H="Univariate comparison intensive procedures vs not"
/*First look at differences between intensive procedure and not groups
univariate comparison using p-values
first version had standardized deviation, those sections are commented out for now
in case we want to go back to stand dev when we do matching

*/

capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\3-Spouse_intensive_univariate.txt", text replace

cd `datapath'

use spouse_intens_data_cleaned.dta 
*********************************************************

tab int_any_of5_6m, missing 
*********************************************************
//Table 1 Decedent characteristics
*********************************************************
local rvars r_female r_race_cat1 r_race_cat2 r_race_cat3 r_race_cat4 r_hseduc r_nw_lowest_n1 ///
r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
r_imprelig_vimp_n1 r_rel_nb_n1n2 r_nhres_n1n2 r_advdir_x r_discuss_x r_hs_3d_6m ///
r_adl_impair_n1n2 r_srh_pf_n1n2 ///
cc_3_alzhdmta_n12mn6m ///
cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m cc_8_chf_n12mn6m ///
cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m cc_16_strketia_n12mn6m ///
cc_cncr_chronic_n12mn6m cc_4_atrialfb_n12mn6m cc_11_hipfrac_n12mn6m ///
cc_13_depressn_n12mn6m cc_14_osteoprs_n12mn6m cc_15_ra_oa_n12mn6m 

local rvars_2 cc_all_count_6m12m_2 hci_index hospital_beds specialists

la var r_age "Age at death, years, mean (SD)"
la var r_female "Female, %"
la var r_race_cat1 "Race, White, Non-Hispanic, %*"
la var r_race_cat2 "Race, Black, Non-Hispanic, %*"
la var r_race_cat3 "Hispanic Ethnicity, %*"
la var r_race_cat4 "Other Race, Non-Hispanic, %*"
la var r_hseduc "Education, High School Deg, %"
la var r_nw_lowest_n1 "Net Worth, 1 (low) Quartile, %"
la var r_nw_midlow_n1  "Net Worth, 2 Quartile, %"
la var r_nw_midhigh_n1  "Net Worth, 3 Quartile, %"
la var r_nw_highest_n1  "Net Worth, 4 (high) Quartile, %"
la var r_medicaid_n1  "Medicaid, %"
la var r_champus_n1  "VA Insurance, %"
la var r_medigap_n1 "Medigap, %"
la var r_imprelig_vimp_n1 "Religion very important, %"
la var r_rel_nb_n1n2 "Relatives nearby, %**"
la var r_nhres_n1n2 "Nursing home resident pre-death, %**"
la var r_advdir_x "Had advanced directive, %**"
la var r_discuss_x "Discussion of EOL care, %"
la var r_hs_3d_6m "Hospice 3+ days in last 6m of life, %"
la var r_adl_impair_n1n2 "ADL Impairment, %**"
la var r_srh_pf_n1n2 "SRH poor or fair, %**"
la var cc_all_count_6m12m_2 "Number of chronic conditions, mean (SD)"
la var hci_index "Hospital care intensity index, mean (SD)"
la var hospital_beds "Acute care hospital beds/1000 res., mean (SD)"
la var specialists "Specialists/10000 res., mean (SD)"

//part 1, get n's
mat t1_n=J(1,3,.)
tab int_any_of5_6m, missing matcell(d1)
mat t1_n[1,1]=d1[2,1] //no intensive procedures n
mat t1_n[1,2]=d1[1,1] //intensive procedures n
mat rownames t1_n="Sample n"

frmttable, statmat(t1_n) varlabels ///
	sdec(0) store(tab1_1)

//part 2, get age mean, std deviation, p-value
mat t1_2=J(1,5,.)
local c = 1
foreach i in 1 0{
	sum r_age if int_any_of5_6m==`i'
	mat t1_2[1,`c']=r(mean)
	mat t1_2[1,`c'+1]=r(sd)
	local c = `c'+2	
}
local r = 1
//mat t1_2[`r',5]=(t1_2[`r',1]-t1_2[`r',3])/sqrt((t1_2[`r',2]^2+t1_2[`r',4]^2)/2) 
ttest r_age, by(int_any_of5_6m) 
mat t1_2[`r',5]=r(p)

mat rownames t1_2=r_age

mat dmat=(0,1,0,1,0)
mat ann=(1,1,0\1,1,0)
mat list dmat
mat list ann

mat list t1_2

frmttable, statmat(t1_2) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_2) 	

//part 3, r characteristics, binary vars, % and std diff
mat t1_3=J(34,3,.)
local r = 1
foreach v in `rvars'{
	local c = 1
	foreach i in 1 0{
		sum `v' if int_any_of5_6m==`i'
		mat t1_3[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
//	mat t1_3[`r',3]=(t1_3[`r',1]/100-t1_3[`r',2]/100)/sqrt((t1_3[`r',1]/100* ///
//		(1-t1_3[`r',1]/100)+t1_3[`r',2]/100*(1-t1_3[`r',2]/100))/2)
	tab int_any_of5_6m `v', row chi
	mat t1_3[`r',3]=r(p)
	local r = `r'+1
}
mat rownames t1_3=`rvars'
frmttable, statmat(t1_3) varlabels ///
	sdec(2) store(tab1_3)

//part 4, remaining continuous variables, mean (sd)
mat t1_4=J(4,5,.)
local r = 1
foreach v in `rvars_2'{
	local c = 1
	foreach i in 1 0{
		sum `v' if int_any_of5_6m==`i'
		mat t1_4[`r',`c']=r(mean)
		mat t1_4[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
//	mat t1_4[`r',5]=(t1_4[`r',1]-t1_4[`r',3])/sqrt((t1_4[`r',2]^2+t1_4[`r',4]^2)/2) 
	ttest `v', by(int_any_of5_6m)
	mat t1_4[`r',5]=r(p)
	local r = `r'+1
}
mat rownames t1_4=`rvars_2'

mat list t1_4

mat dmat=(0,1,0,1,0)
mat ann=(1,1,0\1,1,0\1,1,0\1,1,0)
mat list dmat
mat list ann

frmttable, statmat(t1_4) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_4) 	

//combine into single table and export
outreg, replay(tab1_1) append(tab1_2) store(tab1_a)
outreg, replay(tab1_a) append(tab1_3) store(tab1_b)
outreg using `logpath'/3_s_intens_pro_univar, ///
	replay(tab1_b) append(tab1_4) ///
	title("Table 1: Decedent and region characteristics by intensive procedure use") ///
	ctitles("","Intensive Procedure Used","No intensive procedure","P-value") ///
	note("* Categories do not total 100% because of missing responses" \ ///
	"** If pre-death interview within 6m of death, use prior interview (n2) response" \ ///
	"Chronic conditions are cms data warehouse chronic conditions, 6-12 pre death"\ ///
	"P-value from t-test for continuous variables and chi-squared test for categorical variables.") ///
	replace

*********************************************************
//Table 2 Spouse characteristics
*********************************************************
local svars s_female s_race_cat1 s_race_cat2 s_race_cat3 s_race_cat4 s_hseduc ///
s_srh_pf_n1n2 s_imprelig_vimp_n1 s_hrs_comorb_none_n1 ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
s_cesdbetter s_cesd_ge3better s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 ///
days_p1_core_dod_lt6m days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr

gen months_p1_core_dead = days_p1_core_dead /30.5

local svars_2 months_p1_core_dead s_cesdchange s_cesd_tot_n1n2 s_cesd_tot_p1 

la var s_age "Age at  R's death, years, mean (SD)"
la var s_female "Female, %"
la var s_race_cat1 "Race, White, Non-Hispanic, %*"
la var s_race_cat2 "Race, Black, Non-Hispanic, %*"
la var s_race_cat3 "Hispanic Ethnicity, %*"
la var s_race_cat4 "Other Race, Non-Hispanic, %*"
la var s_hseduc "Education, High School Degree, %"

la var s_srh_pf_n1n2 "SRH Fair or Poor, %**"
la var s_imprelig_vimp_n1 "Religion very important, %" 
la var s_hrs_comorb_none_n1 "Comorbidities - none, %"
la var s_hrs_comorb_mild_n1 "Mild (1-3), %"
la var s_hrs_comorb_mod_n1 "Moderate (4-6) or Severe (7), %"
la var s_psych_overall_hrs_n1n2 "Psychiatric condition, %**"
la var s_cesdbetter "CESD Improved (any amount) pre to post death, %"
la var s_cesd_ge3better "CESD Clinical Improvement pre to post death, %"
la var s_cesd_tot_ge3_n1n2 "Clinically depressed (3+) pre death, %"
la var s_cesd_tot_ge3_p1 "Clinically depressed (3+) post death, %"
la var days_p1_core_dod_lt6m "P1 ivw 0-6m, %"
la var days_p1_core_dod_6_12m "P1 ivw 6-12m, %"
la var days_p1_core_dod_12_18m "P1 ivw 12-18m, %"
la var days_p1_core_dod_18_24m "P1 ivw 18-24m, %"
la var days_p1_core_dod_gt2yr "P1 ivw 2+ years, %"

la var months_p1_core_dead "Months R's death to p1 ivw, mean (SD)"
la var s_cesdchange "S CES-D score change, pre to post, mean (SD)"
la var s_cesd_tot_n1n2 "S CES-D score, pre-death, mean (SD)"
la var s_cesd_tot_p1 "S CES-D score, post-death, mean (SD)"

//part 1, get n's
//just use tab1_1 from Decedent char table above

//part 2, get age mean, std deviation, p-value
mat t2_2=J(1,5,.)
local c = 1
foreach i in 1 0{
	sum s_age if int_any_of5_6m==`i'
	mat t2_2[1,`c']=r(mean)
	mat t2_2[1,`c'+1]=r(sd)
	local c = `c'+2	
}
local r = 1
//mat t2_2[`r',5]=(t2_2[`r',1]-t2_2[`r',3])/sqrt((t2_2[`r',2]^2+t2_2[`r',4]^2)/2) 
ttest s_age, by(int_any_of5_6m)
mat t2_2[`r',5]=r(p)

mat rownames t2_2=s_age

mat dmat=(0,1,0,1,0)
mat ann=(1,1,0\1,1,0)
mat list dmat
mat list ann

mat list t2_2

frmttable, statmat(t2_2) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_2) 	

//part 3, s characteristics, binary vars, % and std diff
mat t2_3=J(21,3,.)
local r = 1
foreach v in `svars'{
	local c = 1
	foreach i in 1 0{
		sum `v' if int_any_of5_6m==`i'
		mat t2_3[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
//	mat t2_3[`r',3]=(t2_3[`r',1]/100-t2_3[`r',2]/100)/sqrt((t2_3[`r',1]/100* ///
//		(1-t2_3[`r',1]/100)+t2_3[`r',2]/100*(1-t2_3[`r',2]/100))/2)
	tab int_any_of5_6m `v', row chi
	mat t2_3[`r',3]=r(p)
	local r = `r'+1
}
mat rownames t2_3=`svars'
mat list t2_3
frmttable, statmat(t2_3) varlabels ///
	sdec(2) store(tab2_3)
	
//part 4, remaining continuous variables, mean (sd)
mat t2_4=J(4,5,.)
local r = 1
foreach v in `svars_2'{
	local c = 1
	foreach i in 1 0{
		sum `v' if int_any_of5_6m==`i'
		mat t2_4[`r',`c']=r(mean)
		mat t2_4[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
//	mat t2_4[`r',5]=(t2_4[`r',1]-t2_4[`r',3])/sqrt((t2_4[`r',2]^2+t2_4[`r',4]^2)/2) 
	ttest `v', by(int_any_of5_6m)
	mat t2_4[`r',5]=r(p)
	local r = `r'+1
}
mat rownames t2_4=`svars_2'

mat list t2_4

mat dmat=(0,1,0,1,0)
mat ann=(1,1,0\1,1,0\1,1,0\1,1,0)

frmttable, statmat(t2_4) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_4) 	

//combine into single table and export
outreg, replay(tab1_1) append(tab2_2) store(tab2_a)
outreg, replay(tab2_a) append(tab2_3) store(tab2_b)
outreg using `logpath'/3_s_intens_pro_univar, ///
	replay(tab2_b) append(tab2_4) ///
	title("Table 2: Spouse characteristics by intensive procedure use") ///
	ctitles("","Intensive Procedure Used","No intensive procedure","P-value") ///
	note("* Categories do not total 100% because of missing responses" \ ///
	"** If pre-death interview within 6m of death, use prior interview (n2) response" \ ///
	"P-value from t-test for continuous variables and chi-squared test for categorical variables.") ///
	addtable

*********************************************************
log close


H="Sample characteristics table"
/*Overall sample characteristics

Only compare those with full cesd pre/post
Does include those without sudden death
*/

capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\4-Spouse_intensive_overall_sample.txt", text replace

cd `datapath'

use spouse_intens_data_cleaned.dta 
**************************************************************
local rvars r_female r_race_cat1 r_race_cat2 r_race_cat3 r_race_cat4 r_hseduc ///
r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
r_imprelig_vimp_n1 r_rel_nb_n1n2 r_nhres_n1n2 r_advdir_x r_discuss_x ///
r_hs_3d_6m  r_adl_impair_n1n2 r_srh_pf_n1n2 ///
cc_3_alzhdmta_n12mn6m ///
cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m cc_8_chf_n12mn6m ///
cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m cc_16_strketia_n12mn6m ///
cc_cncr_chronic_n12mn6m cc_4_atrialfb_n12mn6m cc_11_hipfrac_n12mn6m ///
cc_13_depressn_n12mn6m cc_14_osteoprs_n12mn6m cc_15_ra_oa_n12mn6m 

local rvars_2 cc_all_count_6m12m_2 hci_index hospital_beds specialists s_age

la var r_age "Age at death, years, mean (SD)"
la var r_networth_adj2012_n1 "Net worth, mean (median)"
la var r_female "Female, %"
la var r_race_cat1 "Race, White, Non-Hispanic, %*"
la var r_race_cat2 "Race, Black, Non-Hispanic, %*"
la var r_race_cat3 "Hispanic Ethnicity, %*"
la var r_race_cat4 "Other Race, Non-Hispanic, %*"
la var r_hseduc "Education, High School Degree, %"
la var r_medicaid_n1  "Medicaid, %"
la var r_champus_n1  "VA Insurance, %"
la var r_medigap_n1 "Medigap, %"
la var r_imprelig_vimp_n1 "Religion very important, %"
la var r_rel_nb_n1n2 "Relatives nearby, %**"
la var r_nhres_n1n2 "Nursing home resident pre-death, %**"
la var r_advdir_x "Had advanced directive, %**"
la var r_discuss_x "Discussion of EOL care, %"
la var r_hs_3d_6m "Hospice 3+ days in last 6m of life, %"
la var r_adl_impair_n1n2 "ADL Impairment, %**"
la var r_srh_pf_n1n2 "SRH poor or fair, %**"
la var cc_all_count_6m12m_2 "Number of chronic conditions, mean (SD)"
la var hci_index "Hospital care intensity index, mean (SD)"
la var hospital_beds "Acute care hospital beds/1000 res., mean (SD)"
la var specialists "Specialists/10000 res., mean (SD)"

local svars s_female s_race_cat1 s_race_cat2 s_race_cat3 s_race_cat4 s_hseduc ///
s_srh_pf_n1n2 s_imprelig_vimp_n1 s_hrs_comorb_none_n1 ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
s_cesdbetter s_cesd_ge3better s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 

local svars_2 s_cesd_tot_n1n2 s_cesd_tot_p1 

la var s_age "Age at  R's death, years, mean (SD)"
la var s_female "Female, %"
la var s_race_cat1 "Race, White, Non-Hispanic, %*"
la var s_race_cat2 "Race, Black, Non-Hispanic, %*"
la var s_race_cat3 "Hispanic Ethnicity, %*"
la var s_race_cat4 "Other Race, Non-Hispanic, %*"
la var s_hseduc "Education, High School Degree, %"

la var s_srh_pf_n1n2 "SRH Fair or Poor, %**"
la var s_imprelig_vimp_n1 "Religion very important, %" 
la var s_hrs_comorb_none_n1 "Comorbidities - none, %"
la var s_hrs_comorb_mild_n1 "Mild (1-3), %"
la var s_hrs_comorb_mod_n1 "Moderate (4-6) or Severe (7), %"
la var s_psych_overall_hrs_n1n2 "Psychiatric condition, %**"
la var s_cesdbetter "CESD Improved (any amount) pre to post death, %"
la var s_cesd_ge3better "CESD Clinical Improvement pre to post death, %"
la var s_cesd_tot_ge3_n1n2 "Clinically depressed (3+) pre death, %"
la var s_cesd_tot_ge3_p1 "Clinically depressed (3+) post death, %"

la var s_cesd_tot_n1n2 "S CES-D score, pre-death, mean (SD)"
la var s_cesd_tot_p1 "S CES-D score, post-death, mean (SD)"
**************************************************************
//create table

mat tab1=J(1,2,.)

sum r_age, detail //r age
mat tab1[1,1]=r(mean)
mat tab1[1,2]=r(sd)

mat rownames tab1=r_age

mat dmat=(0,1)
mat ann=(1)

mat list tab1

frmttable, statmat(tab1) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1) 	

sum r_networth_adj2012_n1, detail //r net worth
mat tab1[1,1]=r(mean)
mat tab1[1,2]=r(p50)
mat rownames tab1=r_networth_adj2010_n1
frmttable, statmat(tab1) varlabels ///
	sdec(0) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	append(tab1) store(tab1)
	
foreach v in `rvars'{
sum `v'
mat tab1[1,1]=r(mean)*r(N) //n
mat tab1[1,2]=r(mean)*100 //percent
mat rownames tab1=`v'

frmttable, statmat(tab1) varlabels ///
	sdec(0) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	append(tab1) store(tab1)
}	

foreach v in `rvars_2'{
sum `v'
mat tab1[1,1]=r(mean) //mean
mat tab1[1,2]=r(sd) //sd
mat rownames tab1=`v'

frmttable, statmat(tab1) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	append(tab1) store(tab1)
}

foreach v in `svars'{
sum `v'
mat tab1[1,1]=r(mean)*r(N) //n
mat tab1[1,2]=r(mean)*100 //percent
mat rownames tab1=`v'

frmttable, statmat(tab1) varlabels ///
	sdec(0) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	append(tab1) store(tab1)
}

foreach v in `svars_2'{
sum `v'
mat tab1[1,1]=r(mean) //mean
mat tab1[1,2]=r(sd) //sd
mat rownames tab1=`v'

frmttable, statmat(tab1) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	append(tab1) store(tab1)
}

//also generate the overall n
mat tab1_n=J(1,1,.)
sum r_exit_year_x
mat tab1_n[1,1]=r(N)

mat rownames tab1_n="N"
frmttable, statmat(tab1_n) sdec(0) store(tab1_n)

outreg using "`logpath'/4_overall_sample_char" , ///
replay(tab1_n) append(tab1) replace ///
title("Spouse intensive procedures - Overall sample characteristics") ///
	note("* Categories do not total 100% because of missing responses" \ ///
	"** If pre-death interview within 6m of death, use prior interview (n2) response")

**************************************************************
log close


H="Run multivariate logit regression"
/*Multivariate regression on spousal depression including intensive procedure use

3 outcomes modeled:
1. Any S CES-D improvement (binary)
2. S CES-D clincial improvement from 3+ before death to less than 3 after death (binary)
3. S CES-D change pre to post death (continuous)

Run 2 versions, one with all dyads, one excluding hospice users

*/

capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\5-Spouse_intensive_multivar.txt", text replace

cd `datapath'

use spouse_intens_data_cleaned.dta 
*******************************************************************
la var int_any_of5_6m "Intensive procedure last 6 months of life"
la var r_race_cat1 "Race, White, Non-Hispanic"
la var r_hseduc "R HS Degree"
la var r_nhres_n1n2 "Nursing home resident"
la var r_adl_impair_n1n2 "ADL Impairment"
la var cc_cncr_chronic_n12mn6m "Number of Chronic Conditions"
la var s_srh_pf_n1n2 "S SRH Poor or Fair"
la var s_hrs_comorb_mild_n1 "S Comorb. Mild 1-3"
la var s_hrs_comorb_mod_n1 "S Comorb. Mod 4-6 or Severe 7"
la var s_psych_overall_hrs_n1n2 "S Psychiatric condition"
la var hci_index "Hospital care intensity index"
la var hospital_beds "Acute care hospital beds/1000 res."
la var specialists "Specialists per 100000 res"

la var r_hs_3d_6m "Hospice 3+ days in last 6m of life"

//where r&s highly correlated, use r
local rvars r_age r_female r_race_cat1 ///
r_hseduc r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_advdir_x r_hs_3d_6m r_adl_impair_n1n2 cc_3_alzhdmta_n12mn6m ///
cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m cc_8_chf_n12mn6m ///
cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m cc_16_strketia_n12mn6m ///
cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m cc_all_count_6m12m_2

local region hci_index hospital_beds specialists

local svars s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
*******************************************************************
//check correlation
pwcorr int_any_of5_6m `rvars' `svars' `region'

*******************************************************************
//base categories - R=not white, low quartile net worth, S no comorbidities, 
//S p1 ivw 0-6m after R's death
logit s_cesdbetter int_any_of5_6m `rvars' `svars' `region', or vce(cluster hrrnum)
outreg , ///
	title("Impact of intensive procedure on Spousal depression") ///
	varlabels stats(e_b e_ci p) nosubstat ///
	ctitles("" "(1) Any improvement" "" "" \ "" "OR" "95% CI" "P-value") ///
	note("Base categories are lowest net worth quartile," \ ///
	"spouse no comorbidities per HRS survey," \ ///
	"and S p1 interview 0-6m after R's death." \ ///
	"Robust standard errors are clustered by HRR.") ///
	starlevels(10 5 1) store(res1) summstat(N) landscape


logit s_cesd_ge3better int_any_of5_6m `rvars' `svars' `region', or vce(cluster hrrnum)
outreg using `logpath'\5_multivar_logit_results, ///
	varlabels stats(e_b e_ci p) nosubstat ///
	ctitles("" "(2) Clinical improvement" "" "" \ "" "OR" "95% CI" "P-value") ///
	starlevels(10 5 1) merge(res1) summstat(N) landscape replace

regress s_cesdchange int_any_of5_6m `rvars' `svars' `region', vce(cluster hrrnum)
outreg using `logpath'\5_multivar_logit_results, ///
	varlabels stats(e_b e_ci p) nosubstat ///
	title("Outcome = Change in CES-D score, pre to post death") ///
	ctitles("" "Coefficient" "95% CI" "P-value") ///
		note("Base categories are lowest net worth quartile," \ ///
	"spouse no comorbidities per HRS survey," \ ///
	"and S p1 interview 0-6m after R's death." \ ///
	"CES-D possible range 0-8, Change CES-D range = -8 to +8" \ ///
	"Positive change indicates higher CES-D post death, ie more depressed." \ ///
	"Robust standard errors are clustered by HRR.") ///
	starlevels(10 5 1) summstat(N) landscape addtable

*******************************************************************
//run version excluding those with 3+ days hospice use last 6mos
local rvars2 r_age r_female r_race_cat1 ///
r_hseduc r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_advdir_x r_adl_impair_n1n2 cc_3_alzhdmta_n12mn6m ///
cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m cc_8_chf_n12mn6m ///
cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m cc_16_strketia_n12mn6m ///
cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m cc_all_count_6m12m_2

logit s_cesdbetter int_any_of5_6m `rvars2' `svars' `region' if r_hs_3d_6m==0, or vce(cluster hrrnum)
outreg , ///
	title("Impact of intensive procedure on Spousal depression" \ ///
	"Excluding observations where R hospice use 3+ days") ///
	varlabels stats(e_b e_ci p) nosubstat ///
	ctitles("" "(1) Any improvement" "" "" \ "" "OR" "95% CI" "P-value") ///
	note("Base categories are lowest net worth quartile," \ ///
	"spouse no comorbidities per HRS survey," \ ///
	"and S p1 interview 0-6m after R's death." \ ///
	"Robust standard errors are clustered by HRR.") ///
	starlevels(10 5 1) store(res1) summstat(N) landscape


logit s_cesd_ge3better int_any_of5_6m `rvars2' `svars' `region' if r_hs_3d_6m==0, or vce(cluster hrrnum)
outreg using `logpath'\5_multivar_logit_results, ///
	varlabels stats(e_b e_ci p) nosubstat ///
	ctitles("" "(2) Clinical improvement" "" "" \ "" "OR" "95% CI" "P-value") ///
	starlevels(10 5 1) merge(res1) summstat(N) landscape addtable

regress s_cesdchange int_any_of5_6m `rvars2' `svars' `region' if r_hs_3d_6m==0, vce(cluster hrrnum)
outreg using `logpath'\5_multivar_logit_results, ///
	varlabels stats(e_b e_ci p) nosubstat ///
	title("Outcome = Change in CES-D score, pre to post death" \ ///
	"Excluding observations where R hospice use 3+ days") ///
	ctitles("" "Coefficient" "95% CI" "P-value") ///
		note("Base categories are lowest net worth quartile," \ ///
	"spouse no comorbidities per HRS survey," \ ///
	"and S p1 interview 0-6m after R's death." \ ///
	"CES-D possible range 0-8, Change CES-D range = -8 to +8" \ ///
	"Positive change indicates higher CES-D post death, ie more depressed." \ ///
	"Robust standard errors are clustered by HRR.") ///
	starlevels(10 5 1) summstat(N) landscape addtable


*******************************************************************
log close


H="Set up and run initial propensity score matching"
capture log close

clear all
set more off

local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\6-Spouse_intensive_ps_match.txt", text replace

cd `datapath'

use spouse_intens_data_cleaned.dta 
*******************************************************************

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local region hci_index hospital_beds specialists

local svars s_age s_female s_race_cat1  ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr

//drop observations that are missing in any of the variables
foreach v in `rvars' `svars'{
tab `v', missing
drop if `v'==.
}

tab int_any_of5_6m , missing

//save this dataset with no missing variables
save spouse_intens_data_ps_set.dta, replace
*******************************************************************
//look at some additional variables
*******************************************************************
label define decmaker 0 "N/A No EOL care decision made" 1 "Patient" ///
      2 "Spouse or Partner" 3 "Exit Interview Proxy"  ///
      4 "Child/Child-in-law/Grandchild" 5 "Other Relative" 6 "Friend" ///
      7 "Physician/Health Care Provider" 8 "Minister/Rabbi/Priest" ///
      9 "Other" 10 "Don't Know/Refused", modify
label values r_decmaker_x decmaker

tab r_decmaker_x, missing
tab r_eoldec_x, missing
tab r_eoldec_x int_any_of5_6m, missing
tab r_dexp_x, missing
tab r_capacity_x, missing
tab r_s_help_dur_cat, missing

*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore int_any_of5_6m `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit detail

psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  int_any_of5_6m,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(.01475826) logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_of5_6m) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_of5_6m==1 & _support==1
gen `v'_comparison = `v' if int_any_of5_6m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v', replace
}

mat vr=J(34,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
sum `v' if int_any_of5_6m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if int_any_of5_6m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if int_any_of5_6m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if int_any_of5_6m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_of5_6m==1, missing //n=1 treated dropped, off comm support
tab _support if int_any_of5_6m==0, missing
tab _weight if int_any_of5_6m==1, missing
sum _weight if int_any_of5_6m==0 //n=2 control dropped, no weight assigned

rename _weight ip_weight

save spouse_intens_data_ps_matched.dta, replace
//use  spouse_intens_data_ps_matched.dta
*******************************************************************
//run the doubly robust models
la var int_any_of5_6m "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_of5_6m `rvars' `svars' [pw=ip_weight], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_of5_6m `rvars' `svars' [pw=ip_weight], or
outreg using `logpath'\6_dr_est_results_ps_matched, replace ///
merge(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_of5_6m `rvars' `svars' [pw=ip_weight]
outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape 

logit s_cesdworse int_any_of5_6m `rvars' `svars' [pw=ip_weight], or
outreg, ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)


*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_of5_6m `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight]

outreg using `logpath'\6_dr_est_results_ps_matched, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  

*******************************************************************
log close


H="Propensity match - caregivers only"
capture log close

clear all
set more off

local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\6b-Spouse_intense_caregivers.txt", text replace

cd `datapath'

//use dataset with no missing variables, caregivers only
*******************************************************************
use spouse_intens_data_ps_set.dta if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) 

tab r_s_help_dur_cat, missing
//no one =0, not helper in exit so base for this model is helper exit only

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_female s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore int_any_of5_6m `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit detail

psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  int_any_of5_6m,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(.01621111) logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_of5_6m) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_of5_6m==1 & _support==1
gen `v'_comparison = `v' if int_any_of5_6m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}

mat vr=J(33,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
sum `v' if int_any_of5_6m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if int_any_of5_6m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if int_any_of5_6m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if int_any_of5_6m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_of5_6m==1, missing //n=5 treated dropped, off comm support
tab _support if int_any_of5_6m==0, missing
tab _weight if int_any_of5_6m==1, missing
sum _weight if int_any_of5_6m==0 //n=0 control dropped, no weight assigned

rename _weight ip_weight_cg

*******************************************************************
//run the doubly robust models
la var int_any_of5_6m "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_of5_6m `rvars' `svars' [pw=ip_weight_cg], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, Primary cargiver spouses only") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_of5_6m `rvars' `svars' [pw=ip_weight_cg], or
outreg , ///
merge(res1) store(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_of5_6m `rvars' `svars' [pw=ip_weight_cg]
outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape

logit s_cesdworse int_any_of5_6m `rvars' `svars' [pw=ip_weight_cg], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)

*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_of5_6m `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight_cg]

outreg using `logpath'\6b_ps_matched_caregivers_only, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  


*******************************************************************
//quick look at matched sample, outcomes univariate comparison
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, p1 core"
la var s_cesd_tot_ge3_p1 "S CES-D Score, p1 core"

mat t2_2m=J(3,4,.)

local r = 1
foreach v in s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_cg]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_of5_6m `v' [iw=ip_weight_cg]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(3,6,.)
local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_cg]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_of5_6m `v' [iw=ip_weight_cg]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\6b_ps_matched_caregivers_only, ///
replay(tab2_2m) append(tab2_3m) addtable ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value") ///
title("Matched sample, S CES-D before and after R's death")

*******************************************************************
log close


H="Propensity match - non-hospice only"
capture log close

clear all
set more off

local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\6c-Spouse_intense_nonhospice.txt", text replace

cd `datapath'

//use dataset with no missing variables, caregivers only
*******************************************************************
use spouse_intens_data_ps_set.dta 
tab r_hs_3d_6m int_any_of5_6m, missing

drop if r_hs_3d_6m==1

tab int_any_of5_6m, missing

tab r_s_help_dur_cat, missing

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_female s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore int_any_of5_6m `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit detail

psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2 int_any_of5_6m,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(.01277744) logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_of5_6m) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_of5_6m==1 & _support==1
gen `v'_comparison = `v' if int_any_of5_6m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}

mat vr=J(34,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
sum `v' if int_any_of5_6m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if int_any_of5_6m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if int_any_of5_6m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if int_any_of5_6m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_of5_6m==1, missing //n=1 treated dropped, off comm support
tab _support if int_any_of5_6m==0, missing
tab _weight if int_any_of5_6m==1, missing
sum _weight if int_any_of5_6m==0 //n=7 control dropped, no weight assigned

rename _weight ip_weight_cg

*******************************************************************
//run the doubly robust models
la var int_any_of5_6m "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_of5_6m `rvars' `svars' [pw=ip_weight_cg], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, Subsample with 0-2 day hospice use only") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_of5_6m `rvars' `svars' [pw=ip_weight_cg], or
outreg , ///
merge(res1) store(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_of5_6m `rvars' `svars' [pw=ip_weight_cg]
outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape

logit s_cesdworse int_any_of5_6m `rvars' `svars' [pw=ip_weight_cg], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)

*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_of5_6m `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight_cg]

outreg using `logpath'\6c_ps_matched_no_hospice_only, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  


*******************************************************************
//quick look at matched sample, outcomes univariate comparison
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, p1 core"
la var s_cesd_tot_ge3_p1 "S CES-D Score, p1 core"

mat t2_2m=J(3,4,.)

local r = 1
foreach v in s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_cg]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_of5_6m `v' [iw=ip_weight_cg]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(3,6,.)
local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_cg]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_of5_6m `v' [iw=ip_weight_cg]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\6c_ps_matched_no_hospice_only, ///
replay(tab2_2m) append(tab2_3m) addtable ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value") ///
title("Matched sample, S CES-D before and after R's death")

*******************************************************************
log close


H="xxxManual pscore generation"
/*this is not entirely right, if want to use it, need to look into this more
doesn't drop those off common support
doesn't match, just weights*/

capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\6a-Spouse_intensive_manual_ps_match.txt", text replace

cd `datapath'

//use sample with full ces-d information, with missing variables dropped
use spouse_intens_data_ps_set.dta


*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_female s_white_e ///
s_hseduc_n1_n3 s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr

logit int_any_of5_6m `rvars' `svars'

predict predic_prob, pr

gen w=predic_prob/(1-predic_prob)

logit s_cesdbetter int_any_of5_6m `rvars' `svars' [pw=w], or
regress s_cesdchange int_any_of5_6m `rvars' `svars' [pw=w]


*******************************************************************
log close


H="xxxPlot cesd vs time"
/*creates two versions of the plots, first has 6m time windows
second is 1 year time windows to get smaller 95%CI's with larger groups*/

capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\7-Spouse_intensive_cesd_vs_time.txt", text replace

cd `datapath'

//use sample with full ces-d information
use spouse_intens_data_cleaned.dta if cesd_miss_n1_p1==0
*******************************************************************
//create pre death time variables

//first set of time variables - 6m time windows
//use n1 ivw if >6m pre death, n2 otherwise
gen s_days_n_core_dead = s_days_n1_core_dead if s_ind_n1_wi_6m_dead==0
replace s_days_n_core_dead = s_days_n2_core_dead if s_ind_n1_wi_6m_dead==1

gen days_n_core_dod_cat = .
replace days_n_core_dod_cat = 0 if 0<=s_days_n_core_dead & s_days_n_core_dead <183
replace days_n_core_dod_cat = 1 if 183<=s_days_n_core_dead & s_days_n_core_dead <366
replace days_n_core_dod_cat = 2 if 366<=s_days_n_core_dead & s_days_n_core_dead <548
replace days_n_core_dod_cat = 3 if 548<=s_days_n_core_dead & s_days_n_core_dead <731
replace days_n_core_dod_cat = 4 if 731<=s_days_n_core_dead & s_days_n_core_dead !=.
la def days_n_core_dod_cat 0 "0-6 months" 1 "6-12 months" 2 "12-18 months" ///
3 "18-24 months" 4 "24+ months"
la var days_n_core_dod_cat "Days from pre-death core ivw to  R death, categorical"
la val days_n_core_dod_cat days_n_core_dod_cat 
tab days_n_core_dod_cat , missing

tab days_p1_core_dod_cat, missing 

//second set of time variables - 12m time windows
gen n_core_cat2=0 if inlist(days_n_core_dod_cat,0,1)
replace n_core_cat2=1 if inlist(days_n_core_dod_cat,2,3)
replace n_core_cat2=2 if days_n_core_dod_cat==4
la def n_core_cat2 0 "0-12 months" 1"12-24 months" 2"24+ months"
la val n_core_cat2 n_core_cat2

gen p_core_cat2=0 if inlist(days_p1_core_dod_cat,0,1)
replace p_core_cat2=1 if inlist(days_p1_core_dod_cat,2,3)
replace p_core_cat2=2 if days_p1_core_dod_cat==4
la def p_core_cat2 0 "0-12 months" 1"12-24 months" 2"24+ months"
la val p_core_cat2 p_core_cat2

tab n_core_cat2 days_n_core_dod_cat, missing
tab p_core_cat2 days_p1_core_dod_cat, missing

****************************************************************
//Plot using 6m time windows
****************************************************************
mat mean_pro0=J(10,1,.) //means if procedure=no
mat mean_pro1=J(10,1,.) //means if procedure=yes
mat v_pro0=J(10,1,.)
mat v_pro1=J(10,1,.)

//get pre death cesd scores, by intensive procedures and time
mat struct_n=[4,1 \ 3,2 \ 2,3 \ 1,4 ]
mat list struct_n

forvalues r=1/4{
mean s_cesd_tot_n1n2 if days_n_core_dod_cat==struct_n[`r',1], over(int_any_of5_6m)
mat mean=e(b)
mat mean_pro0[struct_n[`r',2],1]= mean[1,1]
mat mean_pro1[struct_n[`r',2],1]= mean[1,2]
mat v=e(V)
mat v_pro0[struct_n[`r',2],1]= v[1,1]
mat v_pro1[struct_n[`r',2],1]= v[2,2]
}

//post death cesd, by intensive procedures and time
mat struct_p=[0,6 \ 1,7 \ 2,8 \ 3,9 \ 4,10]
mat list struct_p

forvalues r=1/5{
mean s_cesd_tot_p1 if days_p1_core_dod_cat==struct_p[`r',1], over(int_any_of5_6m)
mat mean=e(b)
mat mean_pro0[struct_p[`r',2],1]= mean[1,1]
mat mean_pro1[struct_p[`r',2],1]= mean[1,2]
mat v=e(V)
mat v_pro0[struct_p[`r',2],1]= v[1,1]
mat v_pro1[struct_p[`r',2],1]= v[2,2]
}

svmat mean_pro0
svmat mean_pro1
svmat v_pro0
svmat v_pro1

gen int sitenum = 1 in 1/10
forvalues i=2/10{
replace sitenum=`i' in `i'
}

list sitenum mean_pro0 mean_pro1 v_pro0 v_pro1 in 1/10

foreach x in 0 1{
gen se_pro`x'=sqrt(v_pro`x')

gen ll_pro`x'=mean_pro`x'-1.96*se_pro`x'
gen ul_pro`x'=mean_pro`x'+1.96*se_pro`x'
}

list sitenum mean_pro0 se_pro0 ll_pro0 ul_pro0 mean_pro1 se_pro1 ll_pro1 ul_pro1 in 1/10


twoway rcap ll_pro0 ul_pro0 sitenum, color(gs9) ///
	|| scatter mean_pro0 sitenum, color(midblue) ///
	|| rcap ll_pro1 ul_pro1 sitenum, color(gs5) ///
	|| scatter mean_pro1 sitenum, color(orange) ///
	xline(5) ytitle("Mean CES-D score") ///
	xlabel(1 "24+" 2 "18-24" 3 "12-18" 4"6-12" 5"0" 6"0-6" 7"6-12" ///
	8"12-18" 9"18-24" 10"24+") xtitle("Months relative to R's death") ///
	legend(order(4 3 2 1) symxsize(*.5) cols(2) ///
	label(1 95% confidence interval) label(2 No Itensive Procedure) ///
		label(3 95% confidence interval) label(4 Intensive Procedure) )  ///
	title("Mean CES-D score by time of interview" ///
	"and intensive procedure utilization")
graph save `logpath'/mean_cesd_time,replace
graph export `logpath'/mean_cesd_time.eps,replace

drop mean_pro0 mean_pro1 v_pro0 v_pro1 sitenum se_pro0 se_pro1 ///
ll_pro0 ll_pro1 ul_pro0 ul_pro1
****************************************************************
//Plot using 12m time windows
****************************************************************
mat mean_pro0=J(7,1,.) //means if procedure=no
mat mean_pro1=J(7,1,.) //means if procedure=yes
mat v_pro0=J(7,1,.)
mat v_pro1=J(7,1,.)

//get pre death cesd scores, by intensive procedures and time
mat struct_n=[0,1 \ 1,2 \ 2,3 ]
mat list struct_n

forvalues r=1/3{
mean s_cesd_tot_n1n2 if  n_core_cat2==struct_n[`r',1], over(int_any_of5_6m)
mat mean=e(b)
mat mean_pro0[struct_n[`r',2],1]= mean[1,1]
mat mean_pro1[struct_n[`r',2],1]= mean[1,2]
mat v=e(V)
mat v_pro0[struct_n[`r',2],1]= v[1,1]
mat v_pro1[struct_n[`r',2],1]= v[2,2]
}

//post death cesd, by intensive procedures and time
mat struct_p=[0,5 \ 1,6 \ 2,7 ]
mat list struct_p

forvalues r=1/3{
mean s_cesd_tot_p1 if  p_core_cat2==struct_p[`r',1], over(int_any_of5_6m)
mat mean=e(b)
mat mean_pro0[struct_p[`r',2],1]= mean[1,1]
mat mean_pro1[struct_p[`r',2],1]= mean[1,2]
mat v=e(V)
mat v_pro0[struct_p[`r',2],1]= v[1,1]
mat v_pro1[struct_p[`r',2],1]= v[2,2]
}

svmat mean_pro0
svmat mean_pro1
svmat v_pro0
svmat v_pro1

gen int sitenum = 1 in 1/7
forvalues i=2/7{
replace sitenum=`i' in `i'
}

list sitenum mean_pro0 mean_pro1 v_pro0 v_pro1 in 1/7

foreach x in 0 1{
gen se_pro`x'=sqrt(v_pro`x')

gen ll_pro`x'=mean_pro`x'-1.96*se_pro`x'
gen ul_pro`x'=mean_pro`x'+1.96*se_pro`x'
}

list sitenum mean_pro0 se_pro0 ll_pro0 ul_pro0 mean_pro1 se_pro1 ll_pro1 ul_pro1 in 1/7


twoway rcap ll_pro0 ul_pro0 sitenum, color(gs9) ///
	|| scatter mean_pro0 sitenum, color(midblue) ///
	|| rcap ll_pro1 ul_pro1 sitenum, color(gs5) ///
	|| scatter mean_pro1 sitenum, color(orange) ///
	xline(4) ytitle("Mean CES-D score") ///
	xlabel(1 "24+" 2 "12-24" 3 "0-12" 4"0" 5"0-12" 6"12-24" 7"24+") ///
	xtitle("Months relative to R's death") ///
	legend(order(4 3 2 1) symxsize(*.5) cols(2) ///
	label(1 95% confidence interval) label(2 No Itensive Procedure) ///
		label(3 95% confidence interval) label(4 Intensive Procedure) )  ///
	title("Mean CES-D score by time of interview" ///
	"and intensive procedure utilization")
graph save `logpath'/mean_cesd_time_12m,replace
graph export `logpath'/mean_cesd_time_12m.eps,replace
*******************************************************************
log close


H="xxxPlot Percent Improvement CESD vs time ivw"
/*creates two versions of the plots, first has 6m time windows
second is 0-12m / 12m+ to get smaller 95%CI's with larger groups*/

capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\8-Spouse_intensive_pct_impr_vs_time.txt", text replace

cd `datapath'

//use sample with full ces-d information
use spouse_intens_data_cleaned.dta if cesd_miss_n1_p1==0
*****************************************************************
mean s_cesdbetter, over(int_any_of5_6m)
mean s_cesd_ge3better, over(int_any_of5_6m)

tab days_p1_core_dod_cat, missing 

mat mean_pro0=J(5,1,.) //means if procedure=no
mat mean_pro1=J(5,1,.) //means if procedure=yes
mat v_pro0=J(5,1,.)
mat v_pro1=J(5,1,.)

mat struct_p=[0,1 \ 1,2 \ 2,3 \ 3,4 \ 4,5]
mat list struct_p

forvalues r=1/5{
mean s_cesdbetter if days_p1_core_dod_cat==struct_p[`r',1], over(int_any_of5_6m)
mat mean=e(b)
mat mean_pro0[struct_p[`r',2],1]= mean[1,1]
mat mean_pro1[struct_p[`r',2],1]= mean[1,2]
mat v=e(V)
mat v_pro0[struct_p[`r',2],1]= v[1,1]
mat v_pro1[struct_p[`r',2],1]= v[2,2]
}

svmat mean_pro0
svmat mean_pro1
svmat v_pro0
svmat v_pro1

gen int sitenum = 1 in 1/5
forvalues i=2/5{
replace sitenum=`i' in `i'
}

list sitenum mean_pro0 mean_pro1 v_pro0 v_pro1 in 1/5

foreach x in 0 1{
gen se_pro`x'=sqrt(v_pro`x')

gen ll_pro`x'=mean_pro`x'-1.96*se_pro`x'
gen ul_pro`x'=mean_pro`x'+1.96*se_pro`x'
}

list sitenum mean_pro0 se_pro0 ll_pro0 ul_pro0 mean_pro1 se_pro1 ll_pro1 ul_pro1 in 1/5


twoway rcap ll_pro0 ul_pro0 sitenum, color(gs9) ///
	|| scatter mean_pro0 sitenum, color(midblue) ///
	|| rcap ll_pro1 ul_pro1 sitenum, color(gs5) ///
	|| scatter mean_pro1 sitenum, color(orange) ///
	ytitle("% Spouses with Improved CES-D score") ///
	xlabel(1 "0-6" 2 "6-12" 3 "12-18" 4"18-24" 5"24+") ///
	xtitle("Months after to R's death") ///
	legend(order(4 3 2 1) symxsize(*.5) cols(2) ///
	label(1 95% confidence interval) label(2 No Itensive Procedure) ///
		label(3 95% confidence interval) label(4 Intensive Procedure) )  ///
	title("Any Improvement in CES-D score by time of interview" ///
	"and intensive procedure utilization")
graph save `logpath'/imp_cesd_time,replace
graph export `logpath'/imp_cesd_time.eps,replace

drop mean_pro0 mean_pro1 v_pro0 v_pro1 sitenum se_pro0 se_pro1 ///
ll_pro0 ll_pro1 ul_pro0 ul_pro1

*****************************************************************
//collapsed to before / after 1 year time periods
//adding % clinical improvement
tab days_p1_core_dod_cat, missing 
gen p_core_cat2=0 if inlist(days_p1_core_dod_cat,0,1)
replace p_core_cat2=1 if inlist(days_p1_core_dod_cat,2,3,4)
la def p_core_cat2 0 "0-12 months" 1"12+ months"
la val p_core_cat2 p_core_cat2

mat mean_pro0=J(2,1,.) //means if procedure=no
mat mean_pro1=J(2,1,.) //means if procedure=yes
mat v_pro0=J(2,1,.)
mat v_pro1=J(2,1,.)

mat mean_cl_pro0=J(2,1,.) //means if procedure=no for clinical improvement
mat mean_cl_pro1=J(2,1,.) //means if procedure=yes
mat v_cl_pro0=J(3,1,.)
mat v_cl_pro1=J(3,1,.)

mat struct_p=[0,1 \ 1,2 ]
mat list struct_p

forvalues r=1/2{
mean s_cesdbetter if p_core_cat2==struct_p[`r',1], over(int_any_of5_6m)
mat mean=e(b)
mat mean_pro0[struct_p[`r',2],1]= mean[1,1]
mat mean_pro1[struct_p[`r',2],1]= mean[1,2]
mat v=e(V)
mat v_pro0[struct_p[`r',2],1]= v[1,1]
mat v_pro1[struct_p[`r',2],1]= v[2,2]

mean s_cesd_ge3better if p_core_cat2==struct_p[`r',1], over(int_any_of5_6m)
mat mean=e(b)
mat mean_cl_pro0[struct_p[`r',2],1]= mean[1,1]
mat mean_cl_pro1[struct_p[`r',2],1]= mean[1,2]
mat v=e(V)
mat v_cl_pro0[struct_p[`r',2],1]= v[1,1]
mat v_cl_pro1[struct_p[`r',2],1]= v[2,2]

}

svmat mean_pro0
svmat mean_pro1
svmat v_pro0
svmat v_pro1
svmat mean_cl_pro0
svmat mean_cl_pro1
svmat v_cl_pro0
svmat v_cl_pro1

gen int sitenum = 1 in 1/2
replace sitenum=2 in 2

gen float sitenum2=0.8 in 1/2
replace sitenum2=1.8 in 2

list sitenum mean_pro0 mean_pro1 v_pro0 v_pro1 in 1/2

list sitenum2 mean_cl_pro0 mean_cl_pro1 v_cl_pro0 v_cl_pro1 in 1/2

foreach x in 0 1{
gen se_pro`x'=sqrt(v_pro`x')

gen ll_pro`x'=mean_pro`x'-1.96*se_pro`x'
gen ul_pro`x'=mean_pro`x'+1.96*se_pro`x'

gen se_cl_pro`x'=sqrt(v_cl_pro`x')

gen ll_cl_pro`x'=mean_cl_pro`x'-1.96*se_cl_pro`x'
gen ul_cl_pro`x'=mean_cl_pro`x'+1.96*se_cl_pro`x'
}

list sitenum mean_pro0 se_pro0 ll_pro0 ul_pro0 mean_pro1 se_pro1 ll_pro1 ul_pro1 in 1/2
list sitenum2 mean_cl_pro0 se_cl_pro0 ll_cl_pro0 ul_cl_pro0 mean_cl_pro1 ///
	se_cl_pro1 ll_cl_pro1 ul_cl_pro1 in 1/2


twoway rcap ll_cl_pro0 ul_cl_pro0 sitenum2, color(gs9) /// //clin impr w/o 
	|| scatter mean_cl_pro0 sitenum2, color(navy) ///
	|| rcap ll_pro0 ul_pro0 sitenum, color(gs9) ///           //any impr w/o
	|| scatter mean_pro0 sitenum, color(midblue) ///
	|| rcap ll_cl_pro1 ul_cl_pro1 sitenum2, color(gs5) /// //clin impr w 
	|| scatter mean_cl_pro1 sitenum2, color(dkorange) ///
	|| rcap ll_pro1 ul_pro1 sitenum, color(gs5) /// //any impr w
	|| scatter mean_pro1 sitenum, color(orange) ///
	ytitle("% Spouses with CES-D improvement") ///
	xlabel(1 "0-12" 2 "12+") ///
	xtitle("Months after to R's death") ///
	legend(order(8 6 4 2) symxsize(*.5) cols(2) ///
	label(2 No Itensive Procedure, Clinical Impr.) ///
	label(4 No Intensive Procedure, Any Impr.) ///
	label(6 Intensive procedure, Clinical Impr.) ///
	label(8 Intensive procedure, Any Impr.))  ///
	title("Improvement in CES-D score by time of interview" ///
	"and intensive procedure utilization")
graph save `logpath'/imp_cesd_time_12m,replace
graph export `logpath'/imp_cesd_time_12m.eps,replace
*****************************************************************
log close


H="Bar graph cesd vs time"
//use dataset where observations missing data for psmatched variables are dropped
capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\9-Spouse_intensive_bar_chart.txt", text replace

cd `datapath'

//use sample with full ces-d information
use spouse_intens_data_ps_matched.dta
***************************************************************
//set time variables
gen s_days_n_core_dead = s_days_n1_core_dead if s_ind_n1_wi_6m_dead==0
replace s_days_n_core_dead = s_days_n2_core_dead if s_ind_n1_wi_6m_dead==1

gen days_n_core_dod_cat = .
replace days_n_core_dod_cat = 0 if 0<=s_days_n_core_dead & s_days_n_core_dead <183
replace days_n_core_dod_cat = 1 if 183<=s_days_n_core_dead & s_days_n_core_dead <366
replace days_n_core_dod_cat = 2 if 366<=s_days_n_core_dead & s_days_n_core_dead <548
replace days_n_core_dod_cat = 3 if 548<=s_days_n_core_dead & s_days_n_core_dead <731
replace days_n_core_dod_cat = 4 if 731<=s_days_n_core_dead & s_days_n_core_dead !=.
la def days_n_core_dod_cat 0 "0-6 months" 1 "6-12 months" 2 "12-18 months" ///
3 "18-24 months" 4 "24+ months"
la var days_n_core_dod_cat "Days from pre-death core ivw to  R death, categorical"
la val days_n_core_dod_cat days_n_core_dod_cat 
tab days_n_core_dod_cat , missing

tab days_p1_core_dod_cat, missing 

//now create cesd variables for each of the time periods,
//leave missing if cesd not taking within the time window
gen cesd_1=s_cesd_tot_n1n2 if days_n_core_dod_cat==4 //n1 core 24+m
gen cesd_2=s_cesd_tot_n1n2 if days_n_core_dod_cat==3 //n1 core 18-24m
gen cesd_3=s_cesd_tot_n1n2 if days_n_core_dod_cat==2
gen cesd_4=s_cesd_tot_n1n2 if days_n_core_dod_cat==1
gen cesd_5=s_cesd_tot_n1n2 if days_n_core_dod_cat==0
gen cesd_6=s_cesd_tot_p1 if days_p1_core_dod_cat==0
gen cesd_7=s_cesd_tot_p1 if days_p1_core_dod_cat==1
gen cesd_8=s_cesd_tot_p1 if days_p1_core_dod_cat==2
gen cesd_9=s_cesd_tot_p1 if days_p1_core_dod_cat==3
gen cesd_10=s_cesd_tot_p1 if days_p1_core_dod_cat==4

//drop variables don't need
keep r_id cesd_* int_any_of5_6m ip_weight
drop cesd_miss*

//restructure dataset, 2 rows per person, one before death, one after death
reshape long cesd_, i(r_id) j(time)

save cesd_bar_graph.dta, replace
*****************************************************************
//do pre-match graph
collapse cesd_, by(time int_any_of5_6m)

//again restructure so have one obs per time, but two mean cesd
preserve
keep if int_any_of5_6m==1
rename cesd_ cesd_int
save int_1.dta, replace
restore

keep if int_any_of5_6m==0

merge 1:1 time using int_1.dta

graph bar cesd_ cesd_int,  over(time, relabel(1 "24+" 2 "18-24m" 3 "12-18" ///
	4 "6-12" 5 "Death" 6 "0-6" 7"6-12" 8"12-18" 9"18-24" 10"24+" )) ///
	legend(label(1 No intensive procedure) label(2 Intensive procedure)) ///
	ytitle("Mean CES-D score") ///
	title("Spouse Mean CES-D score by time of interview, not matched") ///
	subtitle("Months before & after death")
	
graph save `logpath'/mean_cesd_bar_6m_not_matched, replace

*****************************************************************
//now post-match graph
use cesd_bar_graph.dta, clear

collapse cesd_ [pw=ip_weight], by(time int_any_of5_6m)

preserve //again restructure so have one obs per time, but two mean cesd
keep if int_any_of5_6m==1
rename cesd_ cesd_int
save int_1.dta, replace
restore

keep if int_any_of5_6m==0

merge 1:1 time using int_1.dta

graph bar cesd_ cesd_int,  over(time, relabel(1 "24+" 2 "18-24m" 3 "12-18" ///
	4 "6-12" 5 "death" 6 "0-6" 7"6-12" 8"12-18" 9"18-24" 10"24+" )) ///
	legend(label(1 No intensive procedure) label(2 Intensive procedure)) ///
	ytitle("Mean CES-D score") ///
	title("Spouse Mean CES-D score by time of interview, matched") ///
	subtitle("Months before & after death")
	
graph save `logpath'/mean_cesd_bar_6m_matched, replace
***************************************************************

//a simple figure, this time mean before vs after by intense procedure groups
use spouse_intens_data_ps_matched.dta, clear

collapse s_cesd_tot_n1n2 s_cesd_tot_p1 [pw=ip_weight], by(int_any_of5_6m)

rename s_cesd_tot_n1n2 cesd1
rename s_cesd_tot_p1 cesd2

reshape long cesd, i(int_any_of5_6m) j(time)

la var int_any_of5_6m "Intensive procedure last 6m of life"
la def int_any_of5_6m 0 "No intensive procedure" 1"Intensive procedure"
la val int_any_of5_6m int_any_of5_6m

scatter cesd time, by(int_any_of5_6m, note("")) connect(direct) ///
ytitle("Mean CES-D Score") ///
xtitle("Interview relative to death") ///
xlabel(1 "Before" 2 "After") ///
xscale(range(.75 2.25))

graph save `logpath'/mean_cesd_by_proced_matched, replace

***************************************************************
log close


H="Create Tables 1 and 2"
/*creates 3 tables:
Table 1: Overall sample characteristics, not matched
Table 2: Not matched / matched char by intensive procedure use, shows std differences
to demonstrate propensity score matched sample is well matched on all included covariates
Table 3: CES-D score before/after by intensive procedure use, matched and not matched
Table 4: Tabulation of rates of the 5 procedures
Table 5: Decedent age, race by intensive procedure use
*/

capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\10-Spouse_intensive_tables12.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_intens_data_ps_matched.dta
***************************************************************
tab int_any_of5_6m, missing


*************************************************************************************
*************************************************************************************
//create Table 1, overall sample characteristics, prior to matching
*************************************************************************************
*************************************************************************************
//Part 1 - Decedent char
local rvars r_female r_married_x r_race_cat1 r_hseduc r_nw_lowest_n1 ///
r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
r_nhres_n1n2 r_advdir_x r_dexp_x  r_discuss_x ///
r_adl_impair_n1n2 r_srh_pf_n1n2 int_any_of5_6m ///
cc_3_alzhdmta_n12mn6m ///
cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m cc_8_chf_n12mn6m ///
cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m cc_16_strketia_n12mn6m ///
cc_cncr_chronic_n12mn6m cc_4_atrialfb_n12mn6m cc_11_hipfrac_n12mn6m ///
cc_13_depressn_n12mn6m cc_14_osteoprs_n12mn6m cc_15_ra_oa_n12mn6m r_loc_

//r cont vars
//r_age cc_all_count_6m12m_2 
 
la var r_age "Age at death, years, mean (SD)"
la var r_loc_ "Died in Hospital, %"
la var r_married_x "Married at death, %"
la var r_female "Female, %"
la var r_race_cat1 "Race, White, Non-Hispanic, %"
la var r_hseduc "Education, High School Deg, %"
la var r_nw_lowest_n1 "Net Worth, 1 (low) Quartile, %"
la var r_nw_midlow_n1  "Net Worth, 2 Quartile, %"
la var r_nw_midhigh_n1  "Net Worth, 3 Quartile, %"
la var r_nw_highest_n1  "Net Worth, 4 (high) Quartile, %"
la var r_medicaid_n1  "Medicaid, %"
la var r_champus_n1  "VA Insurance, %"
la var r_medigap_n1 "Medigap, %"
la var r_nhres_n1n2 "Nursing home resident pre-death, %**"
la var r_advdir_x "Had advanced directive, %"
la var r_dexp_x  "Death expected by family, %"
la var r_discuss_x "Discussion of EOL care, %"
la var r_adl_impair_n1n2 "ADL Impairment, %**"
la var r_srh_pf_n1n2 "SRH poor or fair, %**"
la var cc_all_count_6m12m_2 "Number of chronic conditions, mean (SD)"


mat rchar_1=J(1,2,.)

sum r_age, detail //age
mat rchar_1[1,1]=r(mean)
mat rchar_1[1,2]=r(sd)

sum s_age, detail //get overall sample n
local samplen=r(N)

mat rownames rchar_1=r_age

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(1,1,1)

frmttable, statmat(rchar_1) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_1) 	

mat rchar_2=J(32,1,.)
local r = 1
foreach v in `rvars'{
	sum `v'
	mat rchar_2[`r',1]=r(mean)*100 //percent
	local r = `r'+1
	}

mat rownames rchar_2 = `rvars'

frmttable, statmat(rchar_2) varlabels ///
	sdec(2) store(tab1_2) 	  

mat rchar_3=J(1,2,.)

sum cc_all_count_6m12m_2, detail //cc's count
mat rchar_3[1,1]=r(mean)
mat rchar_3[1,2]=r(sd)

mat rownames rchar_3=cc_all_count_12m_2

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(1,1,1)

frmttable, statmat(rchar_3) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_3) 	  

outreg, replay(tab1_1) append(tab1_2) store(tab1_a)

*** add the headings, notes, using file name etc. to this one
outreg using "`logpath'\10_spo_ip_tab1and2", ///
replay(tab1_a) append(tab1_3) ///
title("Table 1: Characteristics of Study sample (n=`samplen')") ///
ctitles("Decedent","") ///
note("Decedent chronic conditions from Medicare claims. 6-12m before death." \ ///
"Spouse chronic conditions from self report in HRS interviews." \ ///
"** From the pre-death interview at least 6m prior to death.") ///
landscape replace

**************************************************
//Part 2 - Spouse char

//just check no severe category
tab s_hrs_comorb_mod_n1 s_comor_c_hrs_n1, missing

local svars s_female s_race_cat1  s_hseduc ///
s_medicaid_n1 s_adl_independent_core_n1n2 s_srh_pf_n1n2 s_imprelig_vimp_n1 ///
s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 ///
s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 ///
s_psych_overall_hrs_n1n2 s_smoke_curr_n1 s_vig_phy_act_n1 ///
r_s_help_dur_ind1 r_s_help_dur_ind2 r_s_help_dur_ind3 ///
s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter s_cesd_ge3better 

la var s_age "Age at spouse's death, years, mean (SD)"
la var s_female "Female, %"
la var s_race_cat1 "Race, White, Non-Hispanic, %"
la var s_hseduc "Education, High School Degree, %"
la var s_medicaid_n1  "Medicaid, %"
la var s_adl_independent_core_n1n2 "ADL Independent pre-death, %**"
la var s_srh_pf_n1n2 "SRH poor or fair, %**"
la var s_imprelig_vimp_n1 "Religion very important, %"
la var s_cancer_hrs_n1 "Cancer, %"
la var s_lung_hrs_n1 "Lung disease, %"
la var s_heart_hrs_n1 "Heart disease, %"
la var s_chf_hrs_n1 "CHF, %"
la var s_stroke_hrs_n1 "Stroke, %"
la var s_memory_hrs_n1 "Memory disease, %"
la var s_htn_hrs_n1 "Hypertension, %"
la var s_dm_hrs_n1 "Diabetes, %"
la var s_hrs_comorb_none_n1 "Comorbidities, none, %"
la var s_hrs_comorb_mild_n1 "Comorbidities, Mild (1-3), %"
la var s_hrs_comorb_mod_n1 "Comorbidities, Moderate (4-6), %"
la var s_psych_overall_hrs_n1n2 "Psychological problems, %**"
la var s_smoke_curr_n1 "Currently smoker, %"
la var s_vig_phy_act_n1 "Vigorous physical activity, %"
la var r_s_help_dur_ind1 "Spouse not primary caregiver exit, %"
la var r_s_help_dur_ind2 "Spouse primary caregiver exit only, %"
la var r_s_help_dur_ind3 "Spouse primary caregiver exit + core, %"
la var s_cesd_tot_ge3_n1n2 "S Depressed CESD 3+, pre-death, %**"
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, post-death, %"
la var s_cesdbetter "S CES-D Improved n1 to p1,%"
la var s_cesd_ge3better "Clinical improvement n1 to p1,%"

la var s_cesd_tot_n1n2 "CESD score pre-death, mean(SD)**"
la var s_cesd_tot_p1 "CESD score post-death, mean(SD)"
la var s_cesdchange "Change CES-D Score n1 to p1, mean(SD)"
la var days_p1_core_dead "Days R death to p1 s interview, mean(SD)"

//convert days to months to report months in the table
gen s_months_n1_to_p1=s_days_n1_to_p1/30.5
gen s_months_n1n2_to_p1=s_days_n1n2_to_p1/30.5
la var s_months_n1_to_p1  "Months n1 to p1 s interview, mean(SD)"
la var s_months_n1n2_to_p1  "Months n1 or n2 to p1 s interview, mean(SD)"

mat schar_1=J(1,2,.)

sum s_age, detail //age
mat schar_1[1,1]=r(mean)
mat schar_1[1,2]=r(sd)

mat rownames schar_1=s_age

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(1,1,1)

frmttable, statmat(schar_1) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_1) 	

mat schar_2=J(28,1,.)
local r = 1
foreach v in `svars'{
	sum `v'
	mat schar_2[`r',1]=r(mean)*100 //percent
	local r = `r'+1
	}

mat rownames schar_2 = `svars'

frmttable, statmat(schar_2) varlabels ///
	sdec(2) store(tab1_2) 	  

mat schar_3=J(6,2,.)

local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange days_p1_core_dead ///
 s_months_n1_to_p1 s_months_n1n2_to_p1 {
	sum `v', detail //ces-d scores
	mat schar_3[`r',1]=r(mean)
	mat schar_3[`r',2]=r(sd)
	local r = `r'+1
	}

mat rownames schar_3=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange ///
 days_p1_core_dead s_months_n1_to_p1 s_months_n1n2_to_p1 

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(3,1,1)

frmttable, statmat(schar_3) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_3) 	  

outreg, replay(tab1_1) append(tab1_2) store(tab1_a)

*** add the headings, notes, using file name etc. to this one
outreg using "`logpath'\10_spo_ip_tab1and2", ///
replay(tab1_a) append(tab1_3) ///
title("Table 1: Characteristics of Study sample (n=`samplen')") ///
ctitles("Spouse","") ///
note("Decedent chronic conditions from Medicare claims. 6-12m before death." \ ///
"Spouse chronic conditions from self report in HRS interviews." \ ///
"** From the pre-death interview at least 6m prior to death.") ///
landscape addtable


*************************************************************************************
*************************************************************************************
//Create Table 2, Decedent and Spouse PS Score Matching Variables
//Col 1-3: Unweighted, unmatched sample
//Col 4-6: Weighted and matched sample
*************************************************************************************
*************************************************************************************

local t2vars1 r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 r_loc_

local t2vars2 cc_all_count_6m12m_2 s_age 

local t2vars3 s_female s_race_cat1 ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr

la var r_nhres_n1n2 "Nursing home resident pre-death"
la var r_srh_pf_n1n2 "SRH poor or fair"
la var r_adl_impair_n1n2 "ADL Impairment"
la var s_srh_pf_n1n2 "SRH poor or fair"
la var s_psych_overall_hrs_n1n2 "Psychological problems"
	
//part 1, n unmatched
mat t2_1=J(1,3,.)
tab int_any_of5_6m , missing matcell(d1)
mat t2_1[1,2]=d1[1,1] //no procedures n
mat t2_1[1,1]=d1[2,1] //procedure n
mat rownames t2_1="Sample n"

frmttable, statmat(t2_1) varlabels ///
	sdec(0) store(tab2_1) 	

//part 2, decedent char, % and std difference
mat t2_2=J(19,5,.)

local r = 1
foreach v in `t2vars1'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m==`d', detail
		mat t2_2[`r',`c']=r(mean)*r(N) //n
		mat t2_2[`r',`c'+1]=r(mean)*100 //percent
		local c = `c'+2		
	}
	mat t2_2[`r',5]=(t2_2[`r',2]/100-t2_2[`r',4]/100)/sqrt((t2_2[`r',2]/100* ///
		(1-t2_2[`r',2]/100)+t2_2[`r',4]/100*(1-t2_2[`r',4]/100))/2)
	local r = `r'+1
}
mat rownames t2_2=`t2vars1'

mat dmat=(0,1,0,1,0)
mat ann=J(17,2,1)

frmttable, statmat(t2_2) varlabels ///
	sdec(1,1,2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_2) 	

//part 3, cont vars r & s, mean and std diff
mat t2_3=J(2,5,.)

local r = 1
foreach v in `t2vars2'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m==`d', detail
		mat t2_3[`r',`c']=r(mean)
		mat t2_3[`r',`c'+1]=r(sd)
		local c = `c'+2		
	}
	mat t2_3[`r',5]=(t2_3[`r',1]-t2_3[`r',3])/sqrt((t2_3[`r',2]^2+t2_3[`r',4]^2)/2) 
	local r = `r'+1
}

mat rownames t2_3=`t2vars2'

mat dmat=(0,1,0,1,0)
mat ann=(1,1,0\1,1,0)
mat list dmat
mat list ann

mat list t2_3

frmttable, statmat(t2_3) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3) 

//part 4, spouse char, %
mat t2_4=J(14,5,.)

local r = 1
foreach v in `t2vars3'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m==`d', detail
		mat t2_4[`r',`c']=r(mean)*r(N)
		mat t2_4[`r',`c'+1]=r(mean)*100
		local c = `c'+2		
	}
	mat t2_4[`r',5]=(t2_4[`r',2]/100-t2_4[`r',4]/100)/sqrt((t2_4[`r',2]/100* ///
		(1-t2_4[`r',2]/100)+t2_4[`r',4]/100*(1-t2_4[`r',4]/100))/2)

	local r = `r'+1
}
mat rownames t2_4=`t2vars3'

mat dmat=(0,1,0,1,0)
mat ann=J(12,2,1)

frmttable, statmat(t2_4) varlabels ///
	sdec(1,1,2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_4) 	

outreg, replay(tab2_1) append(tab2_2) store(tab2_a)
outreg, replay(tab2_a) append(tab2_3) store(tab2_b)
outreg, replay(tab2_b) append(tab2_4) store(tab2_c) //complete unmatched table w/ std diff

***************************************************************
//end of unmatched sample, start matched sample
***************************************************************
//part 1, n matched
mat t2_1m=J(1,3,.)
tab int_any_of5_6m if ip_weight!=., missing matcell(d1)
mat t2_1m[1,2]=d1[1,1] //no procedures n
mat t2_1m[1,1]=d1[2,1] //procedure n
mat rownames t2_1m="Sample n"

frmttable, statmat(t2_1m) varlabels ///
	sdec(0) store(tab2_1m) 	

//part 2, decedent char, % and std difference
mat t2_2m=J(19,3,.)

local r = 1
foreach v in `t2vars1'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m==`d' [iweight=ip_weight]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
	local r = `r'+1
}
mat rownames t2_2m=`t2vars1'
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 	

//part 3, cont vars r & s, mean and std diff
mat t2_3m=J(2,5,.)

local r = 1
foreach v in `t2vars2'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m==`d' [iweight=ip_weight]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2		
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	local r = `r'+1
}

mat rownames t2_3m=`t2vars2'

mat dmat=(0,1,0,1,0)
mat ann=(1,1,0\1,1,0)
mat list dmat
mat list ann

mat list t2_3

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

//part 4, spouse char, %
mat t2_4m=J(14,3,.)

local r = 1
foreach v in `t2vars3'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m==`d' [iweight=ip_weight]
		mat t2_4m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_4m[`r',3]=(t2_4m[`r',1]/100-t2_4m[`r',2]/100)/sqrt((t2_4m[`r',1]/100* ///
		(1-t2_4m[`r',1]/100)+t2_4m[`r',2]/100*(1-t2_4m[`r',2]/100))/2)

	local r = `r'+1
}

mat rownames t2_4m=`t2vars3'
frmttable, statmat(t2_4m) varlabels ///
	sdec(2) store(tab2_4m) 	

outreg, replay(tab2_1m) append(tab2_2m) store(tab2_am)
outreg, replay(tab2_am) append(tab2_3m) store(tab2_bm)
outreg, replay(tab2_bm) append(tab2_4m) store(tab2_cm) //complete matched table w/ std diff

//combine unmatched and match tables
outreg using "`logpath'\10_spo_ip_tab1and2", ///
 replay(tab2_c) merge(tab2_cm) ///
 title("Table 2: Decedent and spouse characteristics used in propensity score matching, by intensive procedure use status") ///
 ctitles("","Unmatched sample","","","Matched sample","","" \ ///
    "","Intensive procedure n (%)","No procedure n (%)","Standardized Difference", ///
    "Intensive procedure %","No procedure %","Standardized Difference") ///
 landscape addtable

*******************************************************************
*******************************************************************
//Table 3 - CES-D score pre/post death by intense procedures use
*******************************************************************
**************************************************************
la var s_cesd_tot_ge3_n1n2 "S Depressed CESD 3+, pre-death,%"
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, post-death,%"
la var s_cesdbetter "S CES-D Improved n1 to p1,%"
la var s_cesdsame "S CES-D No Change n1 to p1,%"
la var s_cesdworse "S CES-D Worsened n1 to p1,%"
la var s_cesd_ge3better "Clinical improvement n1 to p1,%"
la var s_cesd_tot_n1n2 "S CES-D Score, pre-death, mean(sd)"
la var s_cesd_tot_p1 "S CES-D Score, post-death, mean(sd)"
la var s_cesdchange "Change CES-D Score n1 to p1, mean(sd)"

la var days_p1_core_dead "Days death to p1, mean(sd)"

local ivars s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter s_cesdsame s_cesdworse  s_cesd_ge3better 
local cvars s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange days_p1_core_dead

//part 1 - prior to matching
mat t2_2m=J(6,4,.)

local r = 1
foreach v in `ivars' { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d'
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_of5_6m `v'
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m= `ivars' 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(4,6,.)
local r = 1
foreach v in `cvars'  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d', detail 
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_of5_6m `v'
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=`cvars' 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\10_spo_ip_tab1and2, ///
replay(tab2_2m) append(tab2_3m) addtable ///
title("Table 3a: Spouse CES-D score details, sample before matching") ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value")

//Part 2 - after matching
mat t2_2m=J(6,4,.)

local r = 1
foreach v in `ivars' { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_of5_6m `v' [iw=ip_weight]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=`ivars'
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(4,6,.)
local r = 1
foreach v in `cvars'  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_of5_6m `v' [iw=ip_weight]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=`cvars' 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\10_spo_ip_tab1and2, ///
replay(tab2_2m) append(tab2_3m) addtable ///
title("Table 3b: Spouse CES-D score details, matched sample") ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value")

//test pre-post cesd score difference, not matched, full sample
ttest s_cesd_tot_p1=s_cesd_tot_n1n2   //overall sample
ttest s_cesd_tot_p1=s_cesd_tot_n1n2 if ///
 (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) //caregiver sample
ttest s_cesdchange if  (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1), ///
 by(int_any_of5_6m)  //caregiver sample

tab r_female s_female, missing 
***************************************************************
//details re which procedures were done
mat t4=J(5,2,.)

local r=1
foreach v in int_intubation_6m int_trach_6m int_gastro_tude_6m ///
int_enteral_nut_6m int_cpr_6m {
		tab `v' , missing
		sum `v' , detail
		mat t4[`r',1]=r(mean)*100 //percent
		mat t4[`r',2]=r(mean)*r(N)
		local r = `r'+1
		}
		
mat list t4

frmttable using `logpath'\10_spo_ip_tab1and2, ///
addtable statmat(t4)  ///
sdec(2)  ///
title("Table 4: Procedure rates") ///
ctitles("" "percent of full sample" "n") ///
rtitles("Intubation, mech ventilation"\ "Trachostomy" \"Gastrostomy tube"\ ///
"Enteral/parenteral nutrition"\ "CPR")
***************************************************************
//r age, mean and sd

mat tab5=J(2,5,.)

	local c = 1
	foreach d in 1 0 {

	sum r_age if int_any_of5_6m==`d', detail //age
	mat tab5[1,`c']=r(mean)
	mat tab5[1,`c'+1]=r(sd)
	
	sum r_race_cat1 if int_any_of5_6m==`d', detail //race
	mat tab5[2,`c']=r(mean)*100 //percent
	
	local c = `c'+2
}

ttest r_age, by(int_any_of5_6m)
	mat tab5[1,5]=r(p)
	
tab int_any_of5_6m r_race_cat1, chi2
	mat tab5[2,5]=r(p)



mat rownames tab5="Age, mean, sd" "Race, white, percent"

frmttable using `logpath'\10_spo_ip_tab1and2, ///
addtable statmat(tab5)  ///
sdec(2)  ///
title("Table 5: Misc decedent characteristics, by procedure use") ///
ctitles("" "With procedure" "" "No procedure" "" "P-value") ///
varlabels

***************************************************************
log close


H="notes"
Evan's project used:
Age at n1 core interview
Marital status at n1 core interview

For spouse depression, we used age at death, filtered on marital status at death

If n1 core was within the 6m preceding death, then used n2 core for the following:
Nursing home residence
Relative living nearby
Functional status

For chronic conditions, Evan controlled for conditions 6-12m before death
We currently have them coded for the full last 2 years of life


*******************************************************
Tables (based on spouse hospice depression paper)

Table 1 - Sample characteristics, overall before matching

Table 2 - Variables in propensity score matching only by intensive procedure use
Both before and after matching with percent standardized difference reported

Table 3 - Results
Think about how to split
Full sample / Excluding Hospice
Primary caregiver spouses including / excluding hospice users

H="********************************"


H="Bring in EOL intensity quintile by HRR"
/**Create Stata dataset to add to Spouse file in SAS*

libname ref "E:\data\spouse\ref_data";
libname ref2 "E:\data\dartmouth_misc\eol_mc_2yrs_hrr";

proc import
datafile="E:\data\Dartmouth_misc\EOL_mc_2yrs_HRR\DAP_HRR_03_07_to_merge.xls"
out=EOL_dartmouth dbms=xls replace;
run;

proc contents data=eol_dartmouth;
run;

data hcietc;
set ref.zip_hrr_hci_bed_eol_3;
run;

proc sort data=hcietc;
by hrrnum;
run;

proc sort data=eol_dartmouth;
by hrr;
run;

proc sql;
create table hrr as select * from eol_dartmouth a left join hcietc as b 
on a.hrrnum=b.hrr;
quit;

proc export data = hrr
outfile = "E:\data\spouse_intensive\data\zip_hrr_hci_.dta" replace;
run;


*** Use stata to Bring in EOL Intensity Quintile & MC spending final dataset****/
clear all
capture log close
set more off

local datapath E:\data\spouse_intensive\data
local logpath E:\data\spouse_intensive\logs

log using `logpath'\11-Adding_eol_quintile.text, text replace

use `datapath'\zip_hrr_hci_

duplicates drop hrr, force

xtile eol_spending_quintile=total_medicare_spending, nq(5)

save `datapath'\zip_hrr_hci_v2, replace

use `datapath'\spouse_intens_data_cleaned

merge m:1 hrrnum using `datapath'\zip_hrr_hci_v2, keepusing(quintile total_me eol_sp)

drop if r_id==.

save `datapath'\spouse_intens_data_cleaned_iv, replace


H="12-IV Regressions first pass"
/*Instrumenting for intensive procedure*/
clear all 
capture log close
set more off

use E:\data\spouse_intensive\data\spouse_intens_data_cleaned_iv

log using "E:\data\spouse_intensive\logs\12-IV_regressions_intensive.txt", text replace
sum hci, d 
xtile quinthci=hci, nq(5)
gen hciind=quinthci==5

sum total_medicare_sp, d
gen eol_spending_ind=eol_spending_qu==5

*local region hci_index hospital_beds specialists

local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_female s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr


ivreg2 s_cesdchange (int_any_of5=hcii), sfirst
ivreg2 s_cesdchange (int_any_of5=eol_spending_ind), sfirst
ivreg2 s_cesdchange (int_any_of5=hcii) `rvars' `svars', sfirst
ivreg2 s_cesdchange (int_any_of5=eol_spending_ind) `rvars' `svars', sfirst

ivreg2 s_cesd_tot_p1 (int_any_of5=hcii) s_cesd_tot_n1, sfirst
ivreg2 s_cesd_tot_p1 (int_any_of5=eol_spending_ind) s_cesd_tot_n1, sfirst
ivreg2 s_cesd_tot_p1 (int_any_of5=hcii) s_cesd_tot_n1 `rvars' `svars', sfirst
ivreg2 s_cesd_tot_p1 (int_any_of5=eol_spending_ind) s_cesd_tot_n1 `rvars' `svars', sfirst


H="IV Regressions, HCI Continuous"
/*Instrumenting for intensive procedure*/
clear all 
capture log close
set more off

use E:\data\spouse_intensive\data\spouse_intens_data_cleaned_iv

log using "E:\data\spouse_intensive\logs\13-IV_regressions_intensive_continuous.txt", text replace
sum hci, d 

sum total_medicare_sp, d

*local region hci_index hospital_beds specialists

local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_female s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr


ivreg2 s_cesdchange (int_any_of5=hci)
ivreg2 s_cesdchange (int_any_of5=hci) `rvars' `svars'

ivreg2 s_cesd_tot_p1 (int_any_of5=hci) s_cesd_tot_n1
ivreg2 s_cesd_tot_p1 (int_any_of5=hci) s_cesd_tot_n1 `rvars' `svars'

****alternate method, as outlined in Angrist and Pischke 4.6.1****
logit int_any_of5 hci
predict p1

logit int_any_of5 hci `rvars' `svars'
predict p2

ivreg2 s_cesdchange (int_any_of5=p1), sfirst
ivreg2 s_cesdchange (int_any_of5=p2) `rvars' `svars', sfirst


H="Propensity match - split by gender"
capture log close

clear all
set more off

local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\data

log using "`logpath'\14-Spouse_intense_gender.txt", text replace

cd `datapath'

//use dataset with no missing variables, by gender
*******************************************************************
foreach g in "0" "1" {

use spouse_intens_data_ps_set.dta, clear

tab r_female s_female, m

keep if s_female==`g' //0=male; 1=female

tab r_female s_female, m

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x
//generate pscore variable pscore0 (male) pscore1(female)
pscore int_any_of5_6m `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1`g'=r(sd)*0.02
di "S.D.*0.02"
di cal_ps1`g'

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  int_any_of5_6m,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(`=cal_ps1`g'') logit
//note this creates variable _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_of5_6m) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_of5_6m==1 & _support==1
gen `v'_comparison = `v' if int_any_of5_6m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_f`g', replace
}

mat vr=J(33,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
qui sum `v' if int_any_of5_6m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
qui sum `v' if int_any_of5_6m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
qui sum `v' if int_any_of5_6m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
qui sum `v' if int_any_of5_6m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_of5_6m==1, missing //n=4(M) treated dropped, off comm support
tab _support if int_any_of5_6m==0, missing
tab _weight if int_any_of5_6m==1, missing
sum _weight if int_any_of5_6m==0 //n=0 control dropped, no weight assigned

rename _weight ip_weight_f`g'

*******************************************************************
//run the doubly robust models
la var int_any_of5_6m "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_of5_6m `rvars' `svars' [pw=ip_weight_f`g'], or
qui outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, Female=`g' spouses only") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_of5_6m `rvars' `svars' [pw=ip_weight_f`g'], or
qui outreg , ///
merge(res1) store(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_of5_6m `rvars' `svars' [pw=ip_weight_f`g']
qui outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape

logit s_cesdworse int_any_of5_6m `rvars' `svars' [pw=ip_weight_f`g'], or
qui outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)

*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_of5_6m `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight_f`g']

qui outreg using `logpath'\14_ps_matched_female`g'_only, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  


*******************************************************************
//quick look at matched sample, outcomes univariate comparison
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, p1 core"
la var s_cesd_tot_ge3_p1 "S CES-D Score, p1 core"

mat t2_2m=J(3,4,.)

local r = 1
foreach v in s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter { //indicator variables
	local c = 1
	foreach d in 1 0 {
		qui sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_f`g']
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_of5_6m `v' [iw=ip_weight_f`g']
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter 
qui frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(3,6,.)
local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		qui sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_f`g']
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_of5_6m `v' [iw=ip_weight_f`g']
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

qui frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\14_ps_matched_female`g'_only, ///
replay(tab2_2m) append(tab2_3m) addtable ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value") ///
title("Matched sample, S CES-D before and after R's death")

*******************************************************************
}
log close


H="procedure to death"
capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local origdata E:\dtata\spouse_intensive\data
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\procedure_to_death.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_intens_data_ps_matched.dta

*rename r_bid_hrs bid_hrs_21
*merge 1:m bid_hrs_21 using "E:\data\surgery_hysterectomy\int_2012clms\death_date_2012", ///
 *keepusing(death_all) keep(match master) nogen

gen proc_to_death=r_death_date-first_proc_date_e
/*gen procedure_to_death=death_all-first_proc_date_e

sum proc_to_death,d

sum procedure_to_death, d

tab proc_to_death if proc_to_death<0

tab proc_to_death if procedure_to_death<15
*/
gen died_1st_day=proc_to_death<2

gen died_1st_wk=proc_to_death<8

gen died_1st_fortnight=proc_to_death<15
/*
gen d1_day=procedure_to_death<2

gen d1_wk=procedure_to_death<8

gen d1_fn=procedure_to_death<15
*/

mat cesd=J(5,9,.)

local r=1
local c=4

foreach x in 0 1 {
	
	sum s_cesdchange if int_any_of5==`x'
	mat cesd[`r',1]=r(mean)
	mat cesd[`r',2]=r(sd)
	mat cesd[`r',3]=r(N)
	foreach s in better worse same {
		sum s_cesd`s' if int_any_of5==`x'
		mat cesd[`r',`c']=r(mean)*100
		mat cesd[`r',`c'+1]=r(N)*r(mean)
		local c=`c'+2
}
	local r=`r'+1
	local c=4
}

foreach x in fortnight wk day {
	sum s_cesdchange if died_1st_`x'==1
	mat cesd[`r',1]=r(mean)
	mat cesd[`r',2]=r(sd)
	mat cesd[`r',3]=r(N)
	foreach s in better worse same {
		sum s_cesd`s' if died_1st_`x'==1
		mat cesd[`r',`c']=r(mean)*100
		mat cesd[`r',`c'+1]=r(N)*r(mean)
		local c=`c'+2
}
	local r=`r'+1
	local c=4
}

mat rownames cesd="No intensive procedure last 6m" "Intensive procedure last 6m" "Int proc last 2 wks" ///
"Int proc last week" "Int proc w/in 1 day"

frmttable, statmat(cesd) sdec(2,2,0,2,0,2,0,2,0) title("Surviving Spousal Depression and Intensive Procedure at EOL") ///
ctitles("" "mean CESD Change" "sd" "N" "% CESD Better" "n" "% CESD Worse" "n" "CESD Unchanged" ///
"n") store(cesd1) 

outreg using `logpath'\cesd_last_2wks.rtf, replay(cesd1) replace

label define location 1  "Hospital" 2 "Nursing Home" 3 "Home" 4 "Hospice" ///
      5 "Assisted Living/Retirement Home" 6 "Other/Don't Know "
label values *location* location

log close


H="**************************************"


H="Bringing in Karen's death date to look at sample"
//need to recreate the dataset from the beginning to see if using the correct date alters anything.

Use the HRS datasets already cleaned (using HRS_Processing.txt sas/stata code)

hrs_cln.core_00_to_12.sas7bdat - core, with observation for each core interview, includes
net worth data, TICS score and interview date from restricted dataset

hrs_cln.exit_02_to_12_dt.sas7bdat - exit dataset with interview date added from restricted dataset

hrs_cln.restricted_v2012.sas7bdat - restricted dataset

Steps are:
1. Add r's medicare xwalk to r's exit interview dataset
2. Merge restricted info to r's exit data
3. Get Spouse id from Rand and get S's mc xwalk id
4. Merge in the following:
	r's core n1 and n2 interviews
	s's core n1, n2, p1 interviews
	s's exit and restricted information
5. Medicare FFS determination based on 6 months pre-r's death date
6. Use claims to get additional medicare usage data 
	(LOS, Elixhauser comorbidities, chronic conditions)
7. Merge in regional data
8. Define sample based on interviews, Medicare coverage, spouse interviews



H="merge core & exit"
/*
Create respondant dataset with exit, restricted HRS and medicare xwalk

Resulting dataset is:
spo_int.exit_restricted_02_to_12_v1
*/

/*Set libnames for the project*/
libname hrs_cln 'E:\data\hrs_cleaned'; /*(contains exit, restricted, and core ivw's)*/
libname spo_int 'E:\data\spouse_intensive\int_data';
libname rand 'E:\data\hrs_public_2012\rand2012\main';
libname medi 'E:\data\cms_DUA_24548_2012';

/*******************************************************************/
/*******************************************************************/
/*  Bring medicare xwalk id to exit interview dataset              */
/*******************************************************************/
/*******************************************************************/

proc contents data=hrs_cln.exit_02_to_12_dt(keep=id);
run;

data exit_1;
set hrs_cln.exit_02_to_12_dt;
run;

/*just keep cleaned variables from exit interview*/
data exit;
set exit_1(keep=ID EXIT_YEAR PROXY_EXIT FEMALE MARITAL MARRIED MARITAL_SEP MARITAL_DIV MARITAL_WID MARITAL_NEV
MARITAL_SD MARITAL_MISSING MARRIED_OR_PART_V2 MEDICARE MEDICAREB MEDICAID CHAMPUS HMO MEDIGAP CATINSUR NHRES
HOSPICE FREQRELG CHILD GCHIL ALLCHIL RESCHIL RESCHIL_D RESSPOUSE HHM LIVEALONE LOCATION LOC_HOSP
ICU VENT DIALYSIS DEC_ALL DEC_LIM DEC_WHLD DEC_COMF DEC_CAT DEXP EOLDEC CAPACITY DURATION ADAPP
ADPROB DECMAKER LWILL LW_ALL LW_LIM LW_WHLD LW_COMF LW_CAT HCP DISCUSS ADVDIR EOLPLAN
ADL_BEDBOUND DAYS_BED_ILL ADL_DR ADL_WK ADL_BH ADL_E ADL_TX ADL_T ADL_INDEX ADL_CAT ADL_INDEPENDENT
ADL_PARTIAL ADL_SEVERE IADL_MP IADL_GR IADL_PH IADL_RX IADL_M IADL_IND IADL_CAT IADL_INDEPENDENT
IADL_PARTIAL IADL_SEVERE ADL_SP_HELPER ADL_OTH_HELPER IADL_SP_HELPER IADL_OTH_HELPER adl_helper_count iadl_helper_count adl_helper_1-adl_helper_7 iadl_helper_1-iadl_helper_6 HH_WORKER CANCER_HRS LUNG_HRS HEART_HRS CHF_HRS STROKE_HRS MEMORY_HRS FALLS_HRS
INCONT_HRS PAIN_HRS PAIN_LEVEL_HRS HTN_HRS DM_HRS PSYCH_HRS ARTH_HRS COMOR_IN_HRS COMOR_C_HRS 
dyspnea_hrs no_appet_hrs vomit_hrs depr_exit delirium_exit fatigue_hrs
nhres_2yr_exit nh_stays_exit nh_nights_exit nh_ins_exit e_ivw_day e_ivw_month e_ivw_year 
e_ivw_date e_ivw_day_imp ) ;
run;

/*HRS - CMS 2012 crosswalk initial processing 
xwalk file: cmsxref2012.sas7bdat
*/

data crosswalk_1;
set medi.cmsxref2012;
keep bid_hrs_21 hhid pn;
run;

/*get 2 variables bid_hrs = claims id, id=HRS id*/
data crosswalk_2;
set crosswalk_1;
bid_hrs=bid_hrs_21;
id=trim(hhid)||trim(pn);
drop hhid pn;
drop bid_hrs_21;
run;

proc sort data= crosswalk_2;
by bid_hrs;
run;

proc sort data=exit_1;
by id;
run;

/*bring in xwalk id to exit interview dataset*/
proc sql;
create table exit_xwalk as select
a.*,b.bid_hrs from
exit a
left join
crosswalk_2 b
on a.id=b.id;
quit;

/*check for missing xwalk ids
480 r's with exit interviews are missing xwalk ids*/
data check1;
set exit_xwalk ;
if bid_hrs ='';
run;

/*create indicator for having xwalk id*/
data exit_xwalk_1;
set exit_xwalk;
xwalk_yes=.;
if bid_hrs ='' then xwalk_yes=0;
if bid_hrs~='' then xwalk_yes=1;
run;

proc freq;
table xwalk_yes*exit_year /missprint;
run;

/*keep a version before renaming so can use it later to get spouse exit*/
data exit_xwalk_2;
set exit_xwalk_1;
run;

/*******************************************************************/
/*******************************************************************/
/* Rename variables with r_ prefix and _x suffix for exit dataset  */
/*******************************************************************/
/*******************************************************************/
*options macrogen mprint mlogic;
%macro rename2(lib,dsn,pre,first);
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "Before Renaming All Variables";
run;
proc sql noprint;
select nvar into :num_vars
from dictionary.tables
where libname="&LIB" and
memname="&DSN";
select distinct(name) into :var1-
:var%TRIM(%LEFT(&num_vars))
from dictionary.columns
where libname="&LIB" and
memname="&DSN" ;
quit;
run;
proc datasets library=&LIB;
modify &DSN;
rename
%do i=1 %to &num_vars;

&&var&i=&first.&&var&i.&&pre.
%end;
;
quit;
run;
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "After Renaming All Variables";
run;
%mend ;
%rename2(WORK,EXIT_XWALK_2,_x,r_);

data exit_xwalk_3;
set exit_xwalk_2;
rename r_id_x=r_id;
rename r_bid_hrs_x=r_BID_hrs;
rename r_xwalk_yes_x=r_xwalk_yes;
run;

proc print data=exit_xwalk_3(keep=r_id r_BID_hrs obs=10);
run;
proc sort data=exit_xwalk_3;
by r_id;
run;

/*******************************************************************/
/*******************************************************************/
/*  Merge the exit w/ mc xwalk with the restricted dataset         */
/*******************************************************************/
/*******************************************************************/

proc contents data=hrs_cln.restr_tracker_v2012;
run;

data restricted;
set hrs_cln.restr_tracker_v2012;
run;

proc sort data=exit_xwalk_3 nodupkey;
by r_id;
run;

/*replace id with character id so restricted dataset can be merged in
to the exit dataset*/
data restricted_2;
set restricted;
length id_new $9 hhid $6 pn $3;
id_new=hhid||pn;
drop id;
rename id_new=id;
run;

/*get restricted dataset that is just decedents*/
proc sql;
create table restricted_r as select * from
restricted_2 where id in (select r_id from exit_xwalk_3);
quit;


/*rename variables in restricted dataset with r_ prefix and _e suffix*/
%rename2(WORK,RESTRICTED_R,_e,r_);

data restricted_r3;
set restricted_r;
rename r_id_e=r_id;
rename r_death_date_e=r_death_date_e1;
run;
proc print data=restricted_r3(keep=r_id obs=10);
run;
proc sort data=restricted_r3 nodupkey;
by r_id;
run;

/*this dataset = 8001 decedents from 2002 - 2012 exit interviews*/
proc sql;
create table exit_restricted_02_to_12(drop=r_id2) as 
select *
from  exit_xwalk_3 a
left join
restricted_r3(rename=(r_id=r_id2)) b
on a.r_id=b.r_id2;
quit;

/*this dataset = 8001 decedents from 2002 - 2012 exit interviews*/
data spo_int.exit_restricted_02_to_12_v1;
set exit_restricted_02_to_12;
if r_id<0 or r_id=. then delete;
run;
proc contents data=hrs_cln.death_date_2012;run;
data death_date;
set hrs_cln.death_date_2012;
rename death_all=r_death_date_e;
run;

proc sql;
create table spo_int.exit_restricted_02_to_12_v2 as select a.*,b.r_death_date_e from
spo_int.exit_restricted_02_to_12_v1 a
left join 
death_date b
on a.r_id=b.id;
quit;


/*there are a handful of observations where the death year
is several years before the exit interview year*/
data death_year;
set spo_int.exit_restricted_02_to_12_v2;
r_death_year=year(r_death_date_e);
run;



H="get spouse id from Rand"
/*Gets spouse id for each decedent from rand xwave file
Get spouse medicare xwalk id from xwalk file */



/**********************************************************/
/******* Get spouse id from rand                  *********/
/**********************************************************/
/*pull each wave spouse id from rand xwave data file
wave 5 = 2000
wave 6 = 2002 ... wave 10 = 2010
*/
options fmterr=no;
data sp_rand;
set rand.rndhrs_n(keep=hhid pn s1HHIDPN s2HHIDPN S3HHIDPN S4HHIDPN S5HHIDPN s6HHIDPN s7HHIDPN s8HHIDPN s9HHIDPN s10HHIDPN s11HHIDPN);

id=hhid*1000+pn;
keep id s1HHIDPN s2HHIDPN S3HHIDPN S4HHIDPN S5HHIDPN s6HHIDPN s7HHIDPN s8HHIDPN s9HHIDPN s10HHIDPN s11HHIDPN;
label id="HRS resp ID";
run;

/*need to get id from decedent dataset into numeric format to match
that in rand so can merge*/
data exit_restr;
set spo_int.exit_restricted_02_to_12_v2;
id_num=r_id+0;
label id_num="HRS resp ID";
run;

/*merge all wave spouse ids to exit dataset*/
proc sql;
create table exit_02_to_12_sp_1(drop=id) as
select * from 
exit_restr a
left join 
sp_rand b
 on a.id_num=b.id;
quit;

/*assign the spouse id as that reported in the the core interview
in the 2 years prior to exit interview
first check if spouse id listed in exit year
if no exit year, then try core the n1 core year
use x = wave number (1998=wave 1, 2000=wave2, etc) to get the 
specific wave spouse id b/c rand is a xwave dataset*/
data exit_02_to_12_sp_2;
set exit_02_to_12_sp_1;
missing M;
x=(r_EXIT_YEAR_x-1992)/2+1;
sp_id_var=('s'||trim(left(x))||"HHIDPN");
*the spouse id at the exit interview year,or n1 core;
if ~missing(vvaluex('s'||trim(left(x))||"HHIDPN")) then sp_id = vvaluex('s'||trim(left(x))||"HHIDPN")+0 ;
if sp_id =. & ~missing(vvaluex('s'||trim(left(x-1))||"HHIDPN")) then
	sp_id = vvaluex('s'||trim(left(x-1))||"HHIDPN")+0 ;
label sp_id ="spouse hrs id from resp's exit year or the wave before exit year";
run;

proc freq data=exit_02_to_12_sp_2; table sp_id /missprint; run;

proc freq; table x*sp_id_var /missprint; run;

/**********************************************************/
/******* Get spouse medicare id from xwalk file   *********/
/**********************************************************/
libname medi 'E:\data\cms_DUA_24548_2012';

data crosswalk_1_sp;
set medi.cmsxref2012;
keep bid_hrs_21 hhid pn;
run;

/*get 2 variables bid_hrs = claims id, id=HRS id*/
data crosswalk_2_sp;
set crosswalk_1_sp;
bid_hrs=bid_hrs_21;
id=trim(hhid)||trim(pn);
drop hhid pn;
drop bid_hrs_21;
run;

/*convert id from xwalk to numeric variable type*/
data crosswalk_3_sp;
set crosswalk_2_sp;
id_num=input(id,9.);
label id_num="HRS hhidpn";
drop id;
rename id_num=id;
run;

proc sort data=crosswalk_3_sp nodupkey;
by id;
run;

/* bring in mc xwalk id if in xwalk file
sp_bid = . if missing from xwalk file */
proc sql;
create table exit_02_to_12_sp_3 as
select a.*,b.bid_hrs as sp_bid label="spouse medicare id " from 
exit_02_to_12_sp_2 a
left join 
crosswalk_3_sp b
on a.sp_id=b.id;
quit;

data spo_int.exit_restricted_02_to_12_sp;
set exit_02_to_12_sp_3(drop=r_id s1hhidpn s2hhidpn s3hhidpn 
s4hhidpn s5hhidpn s6hhidpn s7hhidpn s8hhidpn s9hhidpn s10hhidpn s11hhidpn
x sp_id_var ) ;
rename id_num = r_id; /*numeric id*/
if sp_bid='' then s_xwalk_yes=0;
if sp_bid~='' then s_xwalk_yes=1;
label s_xwalk_yes="Spouse has Medicare xwalk id";
run;

proc freq; table r_xwalk_yes*s_xwalk_yes r_exit_year_x*s_xwalk_yes; run;


H="xxxxadd r's n1 and s's p1"

/*******************************************************************/
/*******************************************************************/
/*  get the negative one core variables for the spouse             */
/*******************************************************************/
/*******************************************************************/



/*get list of all spouse core interviews before r's death date*/
proc sql;
create table s_n1_core_before_death(drop=id)
as select a.id_new as r_id,b.*,a.sp_id
 from spo_int.exit_restricted_02_to_10_sp(where=(sp_id>0)) a 
 inner join
core_00_to_10_idnum b
  on a.sp_id=b.id and a.death_date>b.c_ivw_date;
  quit;

proc sort data=s_n1_core_before_death ;
by sp_id c_ivw_date;
run;

/*just keep the n1 core interview for the spouse
**2561 interviews*/
data sp_core_n1;
set s_n1_core_before_death;
by sp_id c_ivw_date;
if last.sp_id;
run;

proc freq;
table core_year;
run;

/*list of spouses with no n1 core per the list above*/
proc sql;
create table temp1 as select a.*,b.sp_id as sp_id2
from s_n1_core_before_death a left join
sp_core_n1 b
on a.sp_id=b.sp_id and a.core_year=b.core_year;
quit;
data temp2;
set temp1;
if sp_id2=.;
run;

proc sort data=temp2 ;
by sp_id c_ivw_date;
run;

/*look at n2 core from spouse where n1 core was present, just to get
an idea of where n2 cores are available **1953 n2 cores ??*/
data sp_core_n2;
set temp2;
by sp_id c_ivw_date;
if last.sp_id;
run;
proc freq;
table core_year;
run;
/*******************************************************************/
/*******************************************************************/
/*  Get the p1 core interview for the spouse                       */
/*******************************************************************/
/*******************************************************************/

/*get list of all spouse core interviews post r's death*/
proc sql;
create table p1_core_after_death(drop=id)
as select a.id_new as r_id,b.*,a.sp_id
 from spo_int.exit_restricted_02_to_10_sp(where=(sp_id>0)) a 
 inner join
core_00_to_10_idnum b
  on a.sp_id=b.id and a.death_date<b.c_ivw_date;
  quit;

proc sort data=p1_core_after_death ;
by sp_id c_ivw_date;
run;

/*just keep first interview after r's death
**2274 interviews*/
data sp_core_p1;
set p1_core_after_death;
by sp_id c_ivw_date;
if first.sp_id;
run;

/*******************************************************************/
/*******************************************************************/
/*  rename variables with s_ and r_ prefixes and _n1 _p1 suffix    */
/*******************************************************************/
/*******************************************************************/

*options macrogen mprint mlogic;
%macro rename2(lib,dsn,pre,first);
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "Before Renaming All Variables";
run;
proc sql noprint;
select nvar into :num_vars
from dictionary.tables
where libname="&LIB" and
memname="&DSN";
select distinct(name) into :var1-
:var%TRIM(%LEFT(&num_vars))
from dictionary.columns
where libname="&LIB" and
memname="&DSN" ;
quit;
run;
proc datasets library=&LIB;
modify &DSN;
rename
%do i=1 %to &num_vars;

&&var&i=&first.&&var&i.&&pre.
%end;
;
quit;
run;
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "After Renaming All Variables";
run;
%mend ;
%rename2(WORK,RESP_CORE_N1,_n1,r_);
%rename2(WORK,SP_CORE_P1,_p1,s_);
%rename2(WORK,SP_CORE_N1,_n1,s_);
*%rename2(WORK,RESP_CORE_N2,_n2,r_);
*%rename2(WORK,SP_CORE_N2,_n2,s_);

/*******************************************************************/
/*******************************************************************/
/*  Merge s and r interviews into singlet dataset                  */
/*******************************************************************/
/*******************************************************************/

/*prepare resp n1 core for merge*/
data RESP_CORE_N1;
set RESP_CORE_N1;
r_id=r_r_id_n1;
run;
proc print data=RESP_CORE_N1(keep=r_id obs=10);
run;
proc sort data=RESP_CORE_N1;
by r_id;
run;

/*prepare spouse core n1 for merge*/
data SP_CORE_N1;
set SP_CORE_N1;
sp_id=s_sp_id_n1;
r_id=s_r_id_n1;
run;
proc print data=SP_CORE_N1(keep=r_id sp_id obs=10);
run;
proc sort data=SP_CORE_n1;
by r_id;
run;

/*prepare spouse p1 core for merge*/
data SP_CORE_P1;
set SP_CORE_P1;
sp_id=s_sp_id_P1;
r_id=s_r_id_p1;
run;
proc print data=SP_CORE_p1(keep=r_id sp_id obs=10);
run;
proc sort data=SP_CORE_p1;
by r_id;
run;

/*merge the datasets by respondant id*/
data spo_int.r_sp_core_n1_p1;
merge RESP_CORE_N1 SP_CORE_N1 SP_CORE_P1;
by r_id;
run;


/*******************************************************************/
/*******************************************************************/
/*  Bring core interviews into decedent's restr and exit data      */
/*******************************************************************/
/*******************************************************************/

/*Note this should be updated when do final dataset to bring
in the spouses restricted information and also add prefixes to
variable names from restricted and exit*/

proc sql;
create table spo_int.exit_rest_r_s_core_n1_p1
 as select * from
spo_int.exit_restricted_02_to_10_sp a 
left join 
spo_int.r_sp_core_n1_p1 b
on a.id_new=b.r_id;
quit;






H="get r's core"
/*Get r's n1 and n2 core interviews*/


/*******************************************************************/
/*******************************************************************/
/*  get the negative one core variables for the respondent         */
/*******************************************************************/
/*******************************************************************/

/*convert the id from the core dataset to a numeric variable*/
data core_00_to_12_idnum;
set hrs_cln.core_00_to_12;
id_num=input(id,9.);
label id_num="HRS hhidpn";
drop id;
rename id_num=id;
run;


/*list of all core interviews before death date*/
proc sql;
create table r_n1_core_before_death(drop=id)
as select b.*,b.id as r_id label="respondent's id"
 from spo_int.exit_restricted_02_to_12_sp a 
 inner join
core_00_to_12_idnum b
  on a.r_id=b.id and a.r_death_date_e>b.c_ivw_date;
  quit;

proc sort data=r_n1_core_before_death ;
by r_id c_ivw_date;
run;

/*keep only the n1 core interview
7665 interviews identified
of these, 167 are in 1998 so will be dropped because no n2 core*/
data resp_core_n1;
set r_n1_core_before_death;
by r_id c_ivw_date;
if last.r_id;
run;
proc freq;
table core_year;
run;

/*******************************************************************/
/*******************************************************************/
/*  get the negative 2 core variables for the respondent         */
/*******************************************************************/
/*******************************************************************/
/*list of all core interviews before n1 interview*/
proc sql;
create table r_n2_core_before_death(drop=id)
as select b.*,b.id as r_id label="respondent's id"
 from resp_core_n1 a 
 inner join
core_00_to_12_idnum b
  on a.r_id=b.id and a.c_ivw_date>b.c_ivw_date;
  quit;

proc sort data=r_n2_core_before_death ;
by r_id c_ivw_date;
run;

/*keep only the n2 core interview
7343 interviews identified*/
data resp_core_n2;
set r_n2_core_before_death;
by r_id c_ivw_date;
if last.r_id;
run;
proc freq;
table core_year;
run;



H="get s's core"
/*Get spouse's n1, n2, and p1 core interviews
and s's exit interview and restricted data*/

/*******************************************************************/
/*******************************************************************/
/******         Spouse n1 interview                         ********/ 
/*******************************************************************/
/*******************************************************************/

/*get list of all spouse core interviews before r's death date*/
proc sql;
create table s_n1_core_before_death(drop=id)
as select b.*,a.sp_id,a.r_id
 from spo_int.exit_restricted_02_to_12_sp(where=(sp_id>0)) a 
 inner join
core_00_to_12_idnum b
  on a.sp_id=b.id and a.r_death_date_e>b.c_ivw_date;
  quit;

proc sort data=s_n1_core_before_death ;
by sp_id c_ivw_date;
run;

/*just keep the n1 core interview for the spouse
**3021 interviews*/
data sp_core_n1;
set s_n1_core_before_death;
by sp_id c_ivw_date;
if last.sp_id;
run;

proc freq;
table core_year;
run;

/*******************************************************************/
/*******************************************************************/
/******         Spouse n2 interview                         ********/ 
/*******************************************************************/
/*******************************************************************/
proc sql;
create table s_n2_core_before_death(drop=id)
as select b.*,a.sp_id,a.r_id
 from sp_core_n1 a 
 inner join
core_00_to_12_idnum b
  on a.sp_id=b.id and a.c_ivw_date>b.c_ivw_date;
  quit;

proc sort data=s_n2_core_before_death ;
by sp_id c_ivw_date;
run;

/*just keep the n2 core interview for the spouse
**2938 interviews*/
data sp_core_n2;
set s_n2_core_before_death;
by sp_id c_ivw_date;
if last.sp_id;
run;

proc freq;
table core_year;
run;


/*******************************************************************/
/*******************************************************************/
/******         Spouse p1 interview                         ********/ 
/*******************************************************************/
/*******************************************************************/

/*get list of all spouse core interviews after r's death date*/
proc sql;
create table s_p1_core_after_death(drop=id)
as select b.*,a.sp_id,a.r_id
 from spo_int.exit_restricted_02_to_12_sp(where=(sp_id>0)) a 
 inner join
core_00_to_12_idnum b
  on a.sp_id=b.id and a.r_death_date_e<b.c_ivw_date;
  quit;

proc sort data=s_p1_core_after_death ;
by sp_id c_ivw_date;
run;

/*just keep the p1 core interview for the spouse
**2682 interviews*/
data sp_core_p1;
set s_p1_core_after_death;
by sp_id c_ivw_date;
if first.sp_id;
run;

proc freq;
table core_year;
run;


/*******************************************************************/
/*******************************************************************/
/******         Spouse restricted data, add xwalk id        ********/ 
/*******************************************************************/
/*******************************************************************/

data restricted;
set hrs_cln.restr_tracker_v2012;
run;

proc sort data=restricted nodupkey; by id ; run;

proc sql;
create table s_restr
as select * from restricted  
where id in (select sp_id from spo_int.exit_restricted_02_to_12_sp) ;
quit;

/*get spouse id list from exit/restr dataset*/
data spid;
set spo_int.exit_restricted_02_to_12_sp(keep=sp_id sp_bid s_xwalk_yes);
if sp_id~='' & sp_id~=0;
run;

proc sort data=spid out=spid_2 nodupkey; by sp_id; run;

/*bring in spouse xwalk id and indicator*/
proc sql;
create table s_restr_a as select a.*,b.sp_bid,b.s_xwalk_yes from
s_restr a left join
spid_2 b
on a.id=b.sp_id;
quit;

data s_restr_1;
set s_restr_a;
rename id=sp_id;
run;

proc freq; table s_xwalk_yes; run;

/*******************************************************************/
/*******************************************************************/
/******         Spouse exit interview                       ********/ 
/*******************************************************************/
/*******************************************************************/

/*get id in exit-xwalk dataset to number format*/
data exit_xwalk_1a;
set exit;
id_num = input(id,9.);
run;

proc contents;
run;

/*988 spouse exit interviews */
proc sql;
create table s_exit
as select * from exit_xwalk_1a  
where id_num in (select sp_id from spo_int.exit_restricted_02_to_12_sp) ;
quit;

data s_exit_1;
set s_exit;
rename id_num=sp_id;
drop id;
run;


H="merge r&s"
/*First rename variables*/

%rename2(WORK,RESP_CORE_N1,_n1,r_);
%rename2(WORK,RESP_CORE_N2,_n2,r_);

%rename2(WORK,SP_CORE_P1,_p1,s_);
%rename2(WORK,SP_CORE_N1,_n1,s_);
%rename2(WORK,SP_CORE_N2,_n2,s_);

%rename2(WORK,S_RESTR_1,_e,s_);
%rename2(WORK,S_EXIT_1,_x,s_);

/*Rename id variables and sort to prepare to merge*/

/*r's n1 core*/
data resp_core_n1_a;
set RESP_CORE_N1;
rename r_r_id_n1 = r_id;
run;

proc sort data=resp_core_n1_a nodupkey;
by r_id;
run;

/*r's n2 core*/
data resp_core_n2_a;
set RESP_CORE_N2;
rename r_r_id_n2 = r_id; 
run;

proc sort data=resp_core_n2_a nodupkey;
by r_id;
run;


/*s's p1 core*/
data sp_core_p1_a;
set SP_CORE_P1;
rename s_sp_id_p1 = s_id; 
rename s_r_id_p1 = r_id;
run;

proc sort data=sp_core_p1_a nodupkey;
by r_id;
run;

/*s's n1 core*/
data sp_core_n1_a;
set SP_CORE_N1;
rename s_sp_id_n1 = s_id;
rename s_r_id_n1= r_id;
run;

proc sort data=sp_core_n1_a nodupkey;
by r_id;
run;

/*s's n2 core*/
data sp_core_n2_a;
set SP_CORE_N2;
rename s_sp_id_n2 = s_id;
rename s_r_id_n2 = r_id;
run;

proc sort data=sp_core_n2_a nodupkey;
by r_id;
run;

/*s's restricted (no r_id in this dataset)*/
data s_restr_1_a;
set S_RESTR_1;
rename s_sp_id_e = s_id ;
run;

proc sort data=s_restr_1_a nodupkey;
by s_id;
run;

/*s's exit (no r_id in this dataset)*/
data s_exit_1_a;
set S_EXIT_1;
rename s_sp_id_x = s_id; 
run;

proc sort data=s_exit_1_a nodupkey;
by s_id;
run;

/*merge datasets*/
/*Step 1, merge r's interviews with exit/restricted dataset*/
/*Sort r's exit and restricted dataset including r and s xwalk ids*/
proc sort data=spo_int.exit_restricted_02_to_12_sp out=r_ex_restr;
by r_id;
run;

proc contents; run;

data r_x_r_n1_n2;
merge r_ex_restr resp_core_n1_a resp_core_n2_a ;
by r_id;
run;

/*Step 2, bring in spouse core interviews*/
proc sort data=r_x_r_n1_n2;
by r_id;
run;

data r_all_s_n1_n2_p1;
merge r_x_r_n1_n2 sp_core_n1_a sp_core_n2_a sp_core_p1_a ;
by r_id;
run;

/*Step 3, merge in spouse exit and restricted*/
data spouse_x_e;
merge s_restr_1_a s_exit_1_a ;
by s_id;
run;

proc sort data=r_all_s_n1_n2_p1;
by s_id;
run;

proc sql;
create table r_s_core_x_e1(drop=s_id2) as select a.*, b.* from 
r_all_s_n1_n2_p1 a
left join
spouse_x_e(rename=(s_id=s_id2)) b
on a.s_id=b.s_id2;
quit;

data r_s_core_x_e2;
set r_s_core_x_e1;
drop s_death_date_e;
run;

data s_death_datea;
set hrs_cln.death_date_2012;
rename death_all=s_death_date_e;
rename id=id8;
run;

data s_death_date;
set s_death_datea;
id=id8+0;
run;
proc sql;
create table r_s_core_x_e3 as select a.r_id, b.s_death_date_e from
r_s_core_x_e2 a
inner join s_death_date b
on a.s_id=b.id; 
quit;

proc sql;
create table r_s_core_x_e as select a.*, b.s_death_date_e from
r_s_core_x_e2 a
left join r_s_core_x_e3 b
on a.r_id=b.r_id; 
quit;


proc contents; run;

/*drop extra id variables*/
data r_s_core_x_e_1;
set r_s_core_x_e;
rename sp_bid=s_bid_hrs;
drop sp_id;
label r_BID_hrs = "R's claims ID";
run;

proc freq data=r_s_core_x_e_1;
table r_core_year_n1 r_core_year_n2;
run;

/*Final dataset:
Contains: R's core n1, n2, exit, restricted, mc id and S's core n1, n2, p1, exit, restricted, mc id
r_ prefix: respondant
s_ prefix: spouse
_n1 _n2 _3 suffix: pre-r's death core interviews (n3 is just education info)
_p1 suffix: post-r's death core interview for spouse
_x suffix: exit interview
_e suffix: restricted HRS*/
proc sort data=r_s_core_x_e_1 out=spo_int.r_s_core_x_e nodupkey;
by r_id;
run;

proc contents;
run;

H="get ffs"
/*Create indicator variables for Respondant
1. Parts a and b coverage for 6 months prior to death
2. No HMO coveage during that time (so fee for service)
*/


/*sort claims denominator file*/
proc sort data=medi.dn_2000_2012 out=dn_2000_20122  nodupkey;
by BID_HRS_21 year;
run;

/***********************************************************/
/*first, backfill missing hrs dod with dod from claims denominator file*/
data r_dod_missing;
set spo_int.r_s_core_x_e;
if r_death_date_e=.;
run;

*n=126 obs have missing dod in the HRS restricted dataset but have exit interview
do they have a dod in the claims denominator file?;
proc sql;
create table r_dod_missing1 as select BID_HRS_21,year,death_date 
from dn_2000_20122
where BID_HRS_21 in(select r_BID_hrs from r_dod_missing);
quit;

proc sort data=r_dod_missing1; by BID_HRS_21 year;
run;

*just keep latest year since looking for dod, n=116;
data r_dod_missing2;
set r_dod_missing1;
by BID_HRS_21;
if last.BID_HRS_21;
run;

*n=110 that have claims dod but no HRS dod;
data r_dod_missing3(rename=(death_date=claims_dod));
set r_dod_missing2;
if death_date~=.;
format death_date date9.;
run;

/*if dod is missing from hrs, then fill in with claims dod for pulling claims relative to dod*/
proc sql;
create table r_sp as select a.*,b.claims_dod from
spo_int.r_s_core_x_e a left join
r_dod_missing3 b
on a.r_BID_hrs=b.BID_HRS_21;
quit;

data r_sp_1;
set r_sp;
dod_hrs_claims=r_death_date_e;
use_claims_dod=0;
if r_death_date_e=. and claims_dod~=. then do;
	dod_hrs_claims=claims_dod;
	use_claims_dod=1;
	end;
run;

*now only n=16 missing dod;
data miss_dod_incl_claims;
set r_sp_1;
if dod_hrs_claims=.;
run;

/*assign death year using merged dataset with all r and s info
save this so can use it later*/
data spo_int.r_sp_2;
set r_sp_1;
r_death_year=year(dod_hrs_claims);
run;

proc freq; table r_death_year use_claims_dod /missprint; run;

/***********************************************************/
/*get denominator file for just death year
for those with xwalk id only*/
proc sql;
create table dn_death_y as select
a.*,b.buyin12,b.year,b.HMOIND12
from spo_int.r_sp_2 a inner join
dn_2000_20122 b
on trim(left(a.r_BID_hrs))=trim(left(b.BID_hrs_21))
and a.r_death_year=b.year;
quit;

proc freq data=dn_death_y;
table r_death_year use_claims_dod /missprint;
run;

/*7214 from exit have denominator file linked*/
proc sql;
select count(distinct r_BID_hrs) from dn_death_y;
quit;

data dn_death_y2;
set dn_death_y;
death_month=month(dod_hrs_claims);
if length(trim(left(buyin12)))=12 and death_month>0 then do;
buyin_dy=substr(trim(left(buyin12)),1,death_month);
hmo_dy=substr(trim(left(HMOIND12)),1,death_month);
end;
else do;
buyin_dy=trim(left(buyin12));
hmo_dy=trim(left(HMOIND12));
end;
format dod_hrs_claims date9.;
run;
proc means n;
var  death_month;
run;

/*Check year prior to death to backfill for death dates
in the first half of the year (since doing 6 mo look back)*/
/* 6838 have the -1 year dn file*/
proc sql;
create table dn_death_y_bef as select
a.r_BID_hrs,a.year as death_year,
b.year as death_year_bef,
b.year,b.buyin12,b.HMOIND12
from dn_death_y a inner join
dn_2000_20122 b
on trim(left(a.r_BID_hrs))=trim(left(b.BID_hrs_21))
and 0<a.year-b.year<=1 order by r_bid_hrs,year;
quit;

proc sql;
create table all_insurance as select a.*,b.buyin12 as buyin_bef,b.HMOIND12 as hmo_bef from
dn_death_y2 a
left join
dn_death_y_bef b
on trim(left(a.r_BID_hrs))=trim(left(b.r_BID_hrs));
quit;

/*merge death year and year before death buy-in and hmo variables
Trim so the final variable _6m is 6 months pre-death
Note: indicator variables for parts a and b and hmo are null if don't
have information for full 6 months pre-death*/
data all_insurance2;
set all_insurance;
buyin_2y=trim(left(buyin_bef))||trim(left(buyin_dy));
hmo_2y=trim(left(hmo_bef))||trim(left(hmo_dy));

buyin_2y_r=reverse(trim(buyin_2y));
hmo_2y_r=reverse(trim(hmo_2y));

/*create 6 month variable*/
if length(buyin_2y_r)>5 then buyin_6m_r=substr(trim(left(buyin_2y_r)),1,6);
if length(hmo_2y_r)>5 then hmo_6m_r=substr(trim(left(hmo_2y_r)),1,6);

if length(buyin_2y_r)<6 then buyin_6m_r="";
if length(hmo_2y_r)<6 then hmo_6m_r="";

buyin_6m=reverse(trim(buyin_6m_r));
hmo_6m=reverse(trim(hmo_6m_r));

/*create indicator variable for mc coverage 6 mo. 0=no, 1=yes*/
if length(buyin_6m)=6 then do;
if indexc(buyin_6m,"0","1","2","A","B") then part_ab_6m=0;
if indexc(buyin_6m,"0","1","2","A","B")=0 then part_ab_6m=1;
end;
if length(hmo_6m)=6 then do;
if index(hmo_6m,"00000") then hmo_d_6m=0;
if index(hmo_6m,"00000")=0 then hmo_d_6m=1;
end;

run;

/*70 observations don't have full denominator data re insurance status
either died Before July 2000 or are missing year -1 dn file*/
proc freq;
table part_ab_6m hmo_d_6m;
run;

data zzzztest;
set all_insurance2;
if part_ab_6m=.;
run;

proc freq; table r_exit_year_x /missprint; run;

/*****************************************************************************/
/* get list of r's claims death dates to bring into main dataset */
proc sort data=dn_2000_20122 out=dn_2000_2012_3; 
by BID_HRS_21 year;
run;

data dn_2000_2012_4;
set dn_2000_2012_3;
by BID_HRS_21;
if last.BID_HRS_21;
run;

data spo_int.claims_dod(rename=(death_date=r_claims_dod));
set dn_2000_2012_4(keep=BID_HRS_21 death_date);
if death_date~=.;
format death_date date9.;
run;

/*merge claims dod into insurance info dataset*/
proc sql;
create table all_insurance3 as select
a.*, b.r_claims_dod from
all_insurance2 a left join
spo_int.claims_dod b
on a.r_BID_hrs=b.BID_HRS_21;
quit;


/*****************************************************************************/
/*bring in insurance indicators and claims death date to full decedent dataset*/
proc sql;
create table spo_int.r_sp_core_n1_p1_n2_ins as select
a.*, b.part_ab_6m as r_part_ab_6m , b.hmo_d_6m as r_hmo_d_6m , 
	 b.r_claims_dod
from spo_int.r_s_core_x_e a
left join all_insurance3 b
on trim(left(a.r_BID_hrs))=trim(left(b.r_BID_hrs));
quit;

proc freq;
table r_part_ab_6m*r_hmo_d_6m;
run;


H="create add'l med use vars"


proc contents data=spo_int.r_sp_core_n1_p1_n2_ins;
run;

/*first, get list of mc id's and death dates for each r
7521 decedents have xwalk id
if missing the death date from the restricted dataset, use the claims dod*/
data r_dod;
set spo_int.r_sp_core_n1_p1_n2_ins;
if r_xwalk_yes=1;
death_date=r_death_date_e;
use_claims_dod=0;
if r_death_date_e=. & r_claims_dod~=. then do;
	death_date=r_claims_dod;
	use_claims_dod=1;
	end;
ind_dod_yes=0;
if death_date~=. then ind_dod_yes=1;
keep r_BID_hrs death_date use_claims_dod ind_dod_yes;
run;

proc freq; table use_claims_dod ind_dod_yes; run;

/*keep a version for just those r's with xwalk and dod n=7508*/
data r_dod_2;
set r_dod;
if ind_dod_yes=1;
run;

/*****************************************************************/
/*Get lists of IP, SNF and hospice claims 2 years before death */
/*****************************************************************/

/*macro to get claims before death*/
%macro claims(days_start=,days_bef_death=,source=,suf=);

/*claims fully within 2 years of death date*/
proc sql;
create table &source._meet_1 as select a.*,b.death_date
from medi.&source._2000_2012 a inner join
r_dod_2 b
on trim(left(a.bid_hrs_21))=trim(left(b.r_bid_hrs))
and &days_start<=b.death_date-a.admit_date<=&days_bef_death ;
quit;

/*claims that start earlier than 2 years but span into 2 years before death*/
proc sql;
create table &source._meet_2 as select a.*,b.death_date
from medi.&source._2000_2012 a inner join
r_dod_2 b
on trim(left(a.bid_hrs_21))=trim(left(b.r_bid_hrs))
and b.death_date-a.admit_date>&days_bef_death and b.death_date-a.disch_date<=&days_bef_death;
quit;

data &source._meet_&suf.(compress=yes);
set &source._meet_1 &source._meet_2;
run;
%mend;

/*run for hospice*/
%claims(days_start=0,days_bef_death=(365*2),source=hs,suf=24m);
/*medpar (ip + snf)*/
%claims(days_start=0,days_bef_death=(365*2),source=mp,suf=24m);

/*split medpar claims list into separate lists for ip and snf claims*/
data snf_meet_24m;
set mp_meet_24m(where=(trim(left(SSLSSNF))="N"));
run;

data ip_meet_24m;
set mp_meet_24m(where=(trim(left(SSLSSNF))~="N"));
run;

/*get hospice claims last 1 year and 6m of life for additional LOS variable*/
%claims(days_start=0,days_bef_death=(365),source=hs,suf=12m);
%claims(days_start=0,days_bef_death=(183),source=hs,suf=6m);


/*****************************************************************/
/*Use macro to get hospice, ip and snf days */
/*****************************************************************/

%macro los(source=,days_bef_death=,days=);
/*for claims that span the 2 years before death cutoff, change admit
date to calculate los*/
data &source._meet_3;
set &source._meet_&days_bef_death.;
if admit_date < (death_date - &days. ) then admit_date=(death_date - &days. );
run;

data &source._meet_4;
set &source._meet_3;
los = disch_date - admit_date;
if los=0 then los=1;
run;

proc sort data=&source._meet_4 nodupkey;
by bid_hrs_21 admit_date disch_date;
run;

proc means;
var los;
run;

proc sql;
create table spo_int.&source.&days_bef_death. as select 
bid_hrs_21,sum(los) as &source._los_&days_bef_death. from &source._meet_4
group by bid_hrs_21;
quit;

proc means;
var &source._los: ;
run;

%mend;

/*macro saves datasets to spo_int library*/
%los(source=hs,days_bef_death=24m,days=(365*2));
%los(source=ip,days_bef_death=24m,days=(365*2));
%los(source=snf,days_bef_death=24m,days=(365*2));
%los(source=hs,days_bef_death=12m,days=(365));
%los(source=hs,days_bef_death=6m,days=(183));

/**********************************************************/
/*******Get hospice enrollment date       *****/
/**********************************************************/
/*start with list of claims last 6m of life, get earliest claim*/
proc sort data=hs_meet_6m; 
by bid_hrs_21 admit_date; 
run;

data hs_enrol_1;
set hs_meet_6m;
by bid_hrs_21;
if first.bid_hrs_21;
run;

data hs_enrol_2;
set hs_enrol_1;
days_enr_to_dod=death_date-admit_date;
run;

proc freq; table days_enr_to_dod ;
run;

data spo_int.hs_enrol_3(keep=bid_hrs_21 hs_enrol_dt );
set hs_enrol_2(rename=( admit_date = hs_enrol_dt));
label hs_enrol_dt="Hospice enrollment date, from claims 6m pre death";
run;
/*****************************************************************/
/*get hospice hospital based from last 1 year claims */
/*****************************************************************/
/*start with list of claims last 12m of life, get earliest claim*/
proc sort data=hs_meet_12m; 
by bid_hrs_21 admit_date; 
run;

/*type service 1=hospice,non-hospital based, 2=hospice,hospital based*/
proc freq; table FAC_TYPE*TYPESRVC; run;

data hs_type_1;
set hs_meet_12m;
by bid_hrs_21;
if first.bid_hrs_21;
if typesrvc=2 then hs_hospital_based_12m=1;
if typesrvc=1 then hs_hospital_based_12m=0;
run;

proc freq; table hs_hospital_based_12m;
run;

data spo_int.hs_type_2(keep=bid_hrs_21 hs_hospital_based_12m);
set hs_type_1;
label hs_hospital_based_12m="Hospice,hospital based, from claims 12m pre death";
run;


/*****************************************************************/
/*pull los and hospice enrollment date variables into main dataset*/
/*****************************************************************/
/*try compressing the main dataset before adding new variables*/
data ivws(compress=yes);
set spo_int.r_sp_core_n1_p1_n2_ins;
run;

proc sql;
create table add_los1 as select a.*, b.hs_los_24m from
ivws a
left join
spo_int.hs24m b
on a.r_bid_hrs = b.bid_hrs_21;
quit;

proc sql;
create table add_los1_1 as select a.*, b.hs_enrol_dt from
add_los1 a
left join
spo_int.hs_enrol_3 b
on a.r_bid_hrs = b.bid_hrs_21;
quit;

proc sql;
create table add_los1_1a as select a.*,b.hs_hospital_based_12m from
add_los1_1 a
left join
spo_int.hs_type_2 b
on a.r_bid_hrs = b.bid_hrs_21;
quit;

proc sql;
create table add_los2 as select a.*, b.ip_los_24m from
add_los1_1a a
left join
spo_int.ip24m b
on a.r_bid_hrs = b.bid_hrs_21;
quit;

proc sql;
create table add_los2a as select a.*, b.snf_los_24m from
add_los2 a
left join
spo_int.snf24m b
on a.r_bid_hrs = b.bid_hrs_21;
quit;

proc sql;
create table add_los2b as select a.*, b.hs_los_12m from
add_los2a a
left join
spo_int.hs12m b
on a.r_bid_hrs = b.bid_hrs_21;
quit;

proc sql;
create table add_los2c as select a.*, b.hs_los_6m from
add_los2b a
left join
spo_int.hs6m b
on a.r_bid_hrs = b.bid_hrs_21;
quit;


/*if have ffs medicare 6m before death, then fill in medicare use variables,
if don't have ffs mc then leave medicare use variables missing*/
data spo_int.add_los3;
set add_los2c ;
array list ip_los_24m snf_los_24m hs_los_24m  hs_los_12m hs_los_6m;
do over list;
if list=. & r_part_ab_6m=1 & r_hmo_d_6m=0 then list=0;
if r_part_ab_6m~=1 or r_hmo_d_6m~=0 then list=.;
end;
run;

proc freq; table r_part_ab_6m*r_hmo_d_6m hs_hospital_based_12m; run;

proc means;
var hs_los_24m ip_los_24m snf_los_24m hs_los_12m hs_los_6m;
run;

/*the dataset spo_int.add_los3 has all of the survey data and the los
for ip, snf, and hs for 2 years prior to r's death*/

/**********************************************************/
/**********************************************************/
/*  Get list of diagnoses across all claims before death  */
/**********************************************************/
/**********************************************************/

/*First need to get lists of claims across all claim
types for 12 months before death and 6-12m before death*/

/*use claims macro created above, re-run for 12 months across
all claim types, list includes claims fully within 1 year and 
those that span the 1 year cutoff*/

/*run for 0-12m before death*/
%claims(days_start=0,days_bef_death=365,source=hh,suf=12m); /*home health*/
%claims(days_start=0,days_bef_death=365,source=hs,suf=12m); /*hospice*/
%claims(days_start=0,days_bef_death=365,source=mp,suf=12m); /*medpar*/
%claims(days_start=0,days_bef_death=365,source=dm,suf=12m); /*dme*/
%claims(days_start=0,days_bef_death=365,source=op,suf=12m); /*outpatient*/
%claims(days_start=0,days_bef_death=365,source=pb,suf=12m); /*carrier*/
/*run for 6-12m before death*/
%claims(days_start=184,days_bef_death=365,source=hh,suf=6m12m); /*home health*/
%claims(days_start=184,days_bef_death=365,source=hs,suf=6m12m); /*hospice*/
%claims(days_start=184,days_bef_death=365,source=mp,suf=6m12m); /*medpar*/
%claims(days_start=184,days_bef_death=365,source=dm,suf=6m12m); /*dme*/
%claims(days_start=184,days_bef_death=365,source=op,suf=6m12m); /*outpatient*/
%claims(days_start=184,days_bef_death=365,source=pb,suf=6m12m); /*carrier*/

/*run for 0-24m, 0-18m and 0-6m before death
Not used in creating this dataset, but used for spouse_mc_link code to
get R utilization information pre-R's death*/
%claims(days_start=0,days_bef_death=730,source=hh,suf=24m); /*home health*/
%claims(days_start=0,days_bef_death=730,source=hs,suf=24m); /*hospice*/
%claims(days_start=0,days_bef_death=730,source=mp,suf=24m); /*medpar*/
%claims(days_start=0,days_bef_death=730,source=dm,suf=24m); /*dme*/
%claims(days_start=0,days_bef_death=730,source=op,suf=24m); /*outpatient*/
%claims(days_start=0,days_bef_death=730,source=pb,suf=24m); /*carrier*/

%claims(days_start=0,days_bef_death=548,source=hh,suf=18m); /*home health*/
%claims(days_start=0,days_bef_death=548,source=hs,suf=18m); /*hospice*/
%claims(days_start=0,days_bef_death=548,source=mp,suf=18m); /*medpar*/
%claims(days_start=0,days_bef_death=548,source=dm,suf=18m); /*dme*/
%claims(days_start=0,days_bef_death=548,source=op,suf=18m); /*outpatient*/
%claims(days_start=0,days_bef_death=548,source=pb,suf=18m); /*carrier*/

%claims(days_start=0,days_bef_death=183,source=hh,suf=6m); /*home health*/
%claims(days_start=0,days_bef_death=183,source=hs,suf=6m); /*hospice*/
%claims(days_start=0,days_bef_death=183,source=mp,suf=6m); /*medpar*/
%claims(days_start=0,days_bef_death=183,source=dm,suf=6m); /*dme*/
%claims(days_start=0,days_bef_death=183,source=op,suf=6m); /*outpatient*/
%claims(days_start=0,days_bef_death=183,source=pb,suf=6m); /*carrier*/

/**********************************************************************/
/* Intermediate step - save the datasets to use to get R costs 6, 12, 24m pre death*/
/**********************************************************************/
%macro save_claims(source=,suf=);
data spo_int.&source._meet_&suf.;
set &source._meet_&suf.;
run;
%mend;

%save_claims(source=hh, suf=6m);
%save_claims(source=hs, suf=6m);
%save_claims(source=mp, suf=6m);
%save_claims(source=dm, suf=6m);
%save_claims(source=op, suf=6m);
%save_claims(source=pb, suf=6m);

%save_claims(source=hh, suf=12m);
%save_claims(source=hs, suf=12m);
%save_claims(source=mp, suf=12m);
%save_claims(source=dm, suf=12m);
%save_claims(source=op, suf=12m);
%save_claims(source=pb, suf=12m);

%save_claims(source=hh, suf=18m);
%save_claims(source=hs, suf=18m);
%save_claims(source=mp, suf=18m);
%save_claims(source=dm, suf=18m);
%save_claims(source=op, suf=18m);
%save_claims(source=pb, suf=18m);

%save_claims(source=hh, suf=24m);
%save_claims(source=hs, suf=24m);
%save_claims(source=mp, suf=24m);
%save_claims(source=dm, suf=24m);
%save_claims(source=op, suf=24m);
%save_claims(source=pb, suf=24m);

/**********************************************************************/
/*Pull dx code lists */
/**********************************************************************/
%macro dx_time_range(range1=, range2=, suf=);
/*pulls just dx codes from carrier claims*/
data pb_last_&range2._dx(keep=bid_hrs_21 diag);
set pb_meet_&suf.(keep=bid_hrs_21 PDGNS_CD DGNSCD01-DGNSCD12 );
array dx PDGNS_CD DGNSCD01-DGNSCD12;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=pb_last_&range2._dx out=pb_last_&range2._dx2 nodupkey;
by bid_hrs_21 diag;
run;

/*outpatient claims*/
data op_last_&range2._dx(keep=bid_hrs_21 diag);
set op_meet_&suf.(keep=bid_hrs_21 PDGNS_CD DGNSCD01-DGNSCD25  );
array dx PDGNS_CD DGNSCD01-DGNSCD25 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=op_last_&range2._dx out=op_last_&range2._dx2 nodupkey;
by bid_hrs_21 diag;
run;

/*medpar claims*/
data mp_last_&range2._dx(keep=bid_hrs_21 diag);
set mp_meet_&suf.(keep=bid_hrs_21 AD_DGNS DGNS_CD01-DGNS_CD25 );
array dx D_DGNS DGNS_CD01-DGNS_CD25 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=mp_last_&range2._dx out=mp_last_&range2._dx2 nodupkey;
by bid_hrs_21 diag;
run;

/*dme claims*/
data dm_last_&range2._dx(keep=bid_hrs_21 diag);
set dm_meet_&suf.(keep=bid_hrs_21 PDGNS_CD DGNSCD01-DGNSCD12 );
array dx PDGNS_CD DGNSCD01-DGNSCD12 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=dm_last_&range2._dx out=dm_last_&range2._dx2 nodupkey;
by bid_hrs_21 diag;
run;

/*home health agency*/
data hh_last_&range2._dx(keep=bid_hrs_21 diag);
set hh_meet_&suf.(keep=bid_hrs_21 PDGNS_CD DGNSCD01-DGNSCD25 );
array dx PDGNS_CD DGNSCD01-DGNSCD25 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=hh_last_&range2._dx out=hh_last_&range2._dx2 nodupkey;
by bid_hrs_21 diag;
run;

/*hospice*/
data hs_last_&range2._dx(keep=bid_hrs_21 diag);
set hs_meet_&suf.(keep=bid_hrs_21 PDGNS_CD DGNSCD01-DGNSCD25 );
array dx PDGNS_CD DGNSCD01-DGNSCD25 ;
do over dx;
diag=dx ;
output;
end;
run;
proc sort data=hs_last_&range2._dx out=hs_last_&range2._dx2 nodupkey;
by bid_hrs_21 diag;
run;

/*set diag variable length = 7 chars since that's the max length from the mc claims
Need to do this because length varies across the different mc claim types*/
data hs_last_&range2._dx3;
length diag $7;
set hs_last_&range2._dx2;
run;
data hh_last_&range2._dx3;
length diag $7;
set hh_last_&range2._dx2;
run;
data mp_last_&range2._dx3;
length diag $7;
set mp_last_&range2._dx2;
run;
data dm_last_&range2._dx3;
length diag $7;
set dm_last_&range2._dx2;
run;
data op_last_&range2._dx3;
length diag $7;
set op_last_&range2._dx2;
run;
data pb_last_&range2._dx3;
length diag $7;
set pb_last_&range2._dx2;
run;

data dx_all_last_&range2.;
set hs_last_&range2._dx3
hh_last_&range2._dx3
mp_last_&range2._dx3
dm_last_&range2._dx3
op_last_&range2._dx3
pb_last_&range2._dx3;
run;
proc sort data=dx_all_last_&range2.(where=(diag~="")) out=spo_int.dx_&range1._&range2 nodupkey;
by bid_hrs_21 diag;
run;

%mend;

/*run macro to create data file spo_int.dx_0d_n12m */
%dx_time_range(range1=0d, range2=n12m, suf=12m);

/*run macro to create data file spo_int.dx_6m_n12m */
%dx_time_range(range1=6m, range2=n12m, suf=6m12m);

/*6904 bid's have at least 1 dx in the 1 year before death*/
proc sql;
select count(distinct BID_hrs_21) from spo_int.dx_0d_n12m;
quit;

/*5889 have 1 dx 6-12m before death*/
proc sql;
select count(distinct BID_hrs_21) from spo_int.dx_6m_n12m;
quit;


H="R's elixhauser codes"
/*creates indicators for each of the Elixhauser comorbidities
based on the dx codes 12 months  before death

resulting dataset is spo_int.hrs_elix_n12m*/

/*rename macro - called within the elixhauser macro
to add time suffix to variables

lib=library
dsn=dataset name
pre=suffix to be added to all of the variable names
*/

%macro rename(lib,dsn,pre);
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "Before Renaming All Variables";
run;

proc sql noprint;
select nvar into :num_vars
from dictionary.tables
where libname="&LIB" and
memname="&DSN";
select distinct(name) into :var1-
:var%TRIM(%LEFT(&num_vars))
from dictionary.columns
where libname="&LIB" and
memname="&DSN";
quit;
run;

proc datasets library=&LIB;
modify &DSN;
rename
%do i=1 %to &num_vars;
&&var&i=&&var&i.._&pre 
%end;
;
quit;
run;
options pageno=1 nodate;
proc contents data=&lib..&dsn;
title "After Renaming All Variables";
run;
%mend rename;



/*Elixhauser index macro
Note includes additional 2 comorbidities: Dementia and Coronary Artery Disease*/

%macro elixhauser(range1=, range2=);

data dx_31_comor_&range2;
set spo_int.dx_&range1._&range2(rename=(diag=dx_0));
dx=trim(left(dx_0));

if dx~="" then do;

comorbi_1=0;
comorbi_2=0;
comorbi_3=0;
comorbi_4=0;
comorbi_5=0;
comorbi_6=0;
comorbi_7=0;
comorbi_8=0;
comorbi_9=0;
comorbi_10=0;
comorbi_11=0;
comorbi_12=0;
comorbi_13=0;
comorbi_14=0;
comorbi_15=0;
comorbi_16=0;
comorbi_17=0;
comorbi_18=0;
comorbi_19=0;
comorbi_20=0;
comorbi_21=0;
comorbi_22=0;
comorbi_23=0;
comorbi_24=0;
comorbi_25=0;
comorbi_26=0;
comorbi_27=0;
comorbi_28=0;
comorbi_29=0;
comorbi_30=0;
*end of intialize of 30 binary variables;
*add dementia and CAD;
dementia=0;
cad=0;

*do over dx;
	*Congestive Heart Failure;
	if (substr(dx,1,5)='39891' or
		substr(dx,1,5)='40211' or
		substr(dx,1,5)='40291' or
		substr(dx,1,5)='40411' or
		substr(dx,1,5)='40413' or
		substr(dx,1,5)='40491' or
		substr(dx,1,5)='40493' or
		substr(dx,1,3)='428') 
		and comorbi_1=0 
		then comorbi_1=1;*add one binary variables here.;
	*Cardiac Arrhythmias;
	if (substr(dx,1,5)='42610' or
		substr(dx,1,5)='42611' or
		substr(dx,1,5)='42613' or
		substr(dx,1,4)='4262' or
		substr(dx,1,4)='4263' or
		substr(dx,1,4)='4264' or
		substr(dx,1,5)='42650' or
		substr(dx,1,5)='42651' or
		substr(dx,1,5)='42652' or
		substr(dx,1,5)='42653' or
		substr(dx,1,4)='4266' or
		substr(dx,1,4)='4267' or
		substr(dx,1,4)='4268' or
		substr(dx,1,4)='4270' or
		substr(dx,1,4)='4272' or
		substr(dx,1,5)='42731' or
		substr(dx,1,5)='42760' or
		substr(dx,1,4)='4279' or
		substr(dx,1,4)='7850' or
		substr(dx,1,4)='V450' or
		substr(dx,1,4)='V533')
			and comorbi_2=0 
		then comorbi_2=1;
	* Valvular Disease ;
	if (substr(dx,1,5)='09320' or
		substr(dx,1,5)='09321' or
		substr(dx,1,5)='09322' or
		substr(dx,1,5)='09323' or
		substr(dx,1,5)='09324' or
		substr(dx,1,3)='394' or
		substr(dx,1,3)='395' or
		substr(dx,1,3)='396' or
		substr(dx,1,4)='3970' or
		substr(dx,1,4)='3971' or
		substr(dx,1,4)='4240' or
		substr(dx,1,4)='4241' or
		substr(dx,1,4)='4242' or
		substr(dx,1,4)='4243' or
		substr(dx,1,4)='4244' or
		substr(dx,1,4)='4245' or
		substr(dx,1,4)='4246' or
		substr(dx,1,4)='4247' or
		substr(dx,1,4)='4248' or
		substr(dx,1,5)='42490' or
		substr(dx,1,5)='42491' or
		substr(dx,1,4)='7463' or
		substr(dx,1,4)='7464' or
		substr(dx,1,4)='7465' or
		substr(dx,1,4)='7466' or
		substr(dx,1,4)='V422' or
		substr(dx,1,5)='V433')
			and comorbi_3=0 
		then comorbi_3=1;
	*Pulmonary Circulation Disorders;
	if (substr(dx,1,3)='416' or
		substr(dx,1,4)='4179')
			and comorbi_4=0 
		then comorbi_4=1;
	*Peripheral Vascular Disorders;
	if (substr(dx,1,3)='440' or
		substr(dx,1,4)='4412' or
		substr(dx,1,4)='4414' or
		substr(dx,1,4)='4417' or
		substr(dx,1,4)='4419' or
		substr(dx,1,4)='4431' or
		substr(dx,1,4)='4432' or
		substr(dx,1,4)='4438' or
		substr(dx,1,4)='4439' or
		substr(dx,1,4)='4471' or
		substr(dx,1,4)='5571' or
		substr(dx,1,4)='5579' or
		substr(dx,1,4)='V434')
			and comorbi_5=0 
		then comorbi_5=1;
	*Hypertension;
	if ((substr(dx,1,4)='4011' or
		substr(dx,1,4)='4019')) or
	   ((substr(dx,1,5)='40210' or
		substr(dx,1,5)='40290' or
		substr(dx,1,5)='40410' or
		substr(dx,1,5)='40490' or
		substr(dx,1,5)='40511' or
		substr(dx,1,5)='40519' or
		substr(dx,1,5)='40591' or
		substr(dx,1,5)='40599')) 
			and comorbi_6=0 
		then comorbi_6=1;
	*Paralysis;	
	if (substr(dx,1,4)='3420' or
		substr(dx,1,5)='34210' or
		substr(dx,1,5)='34211' or
		substr(dx,1,5)='34212' or
		substr(dx,1,4)='3429' or
		substr(dx,1,3)='343' or
		substr(dx,1,3)='344')
			and comorbi_7=0 
		then comorbi_7=1;
	*Other Neurological Disorders;
	if (substr(dx,1,4)='3319' or
		substr(dx,1,4)='3320' or
		substr(dx,1,4)='3334' or
		substr(dx,1,4)='3335' or
		substr(dx,1,3)='334' or
		substr(dx,1,3)='335' or
		substr(dx,1,3)='340' or
		substr(dx,1,4)='3411' or
		substr(dx,1,4)='3418' or
		substr(dx,1,4)='3419' or
		substr(dx,1,5)='34500' or
		substr(dx,1,5)='34501' or
		substr(dx,1,5)='34510' or
		substr(dx,1,5)='34511' or
		substr(dx,1,4)='3454' or
		substr(dx,1,5)='34550' or
		substr(dx,1,5)='34551' or
		substr(dx,1,4)='3458' or
		substr(dx,1,5)='34590' or
		substr(dx,1,5)='34591' or
		substr(dx,1,4)='3481' or
		substr(dx,1,4)='3483' or
		substr(dx,1,4)='7803' or
		substr(dx,1,4)='7843') 
			and comorbi_8=0 
		then comorbi_8=1;	
	*Chronic Pulmonary Disease;
	if (substr(dx,1,3)='490' or
		substr(dx,1,3)='491' or
		substr(dx,1,3)='492' or
		substr(dx,1,4)='4930' or
		substr(dx,1,4)='4931' or
		substr(dx,1,4)='4932' or
		substr(dx,1,4)='4938' or
		substr(dx,1,5)='49390' or
		substr(dx,1,5)='49391' or
		substr(dx,1,3)='494' or
		substr(dx,1,3)='495' or
		substr(dx,1,3)='496' or
		substr(dx,1,3)='497' or
		substr(dx,1,3)='498' or
		substr(dx,1,3)='499' or
		substr(dx,1,3)='500' or
		substr(dx,1,3)='501' or
		substr(dx,1,3)='502' or
		substr(dx,1,3)='503' or
		substr(dx,1,3)='504' or
		substr(dx,1,3)='505' or
		substr(dx,1,4)='5064') 
			and comorbi_9=0 
		then comorbi_9=1;	
	*Diabetes, uncomplicated;
	if (substr(dx,1,4)='2500' or
		substr(dx,1,4)='2501' or
		substr(dx,1,4)='2502' or
		substr(dx,1,4)='2503') 
			and comorbi_10=0 
		then comorbi_10=1;
	*Diabetes, complicated;
	if (substr(dx,1,4)='2504' or
		substr(dx,1,4)='2505' or
		substr(dx,1,4)='2506' or
		substr(dx,1,4)='2507' or
		substr(dx,1,4)='2509') 
			and comorbi_11=0 
		then comorbi_11=1;
	*Hypothyroidism;
	if (substr(dx,1,3)='243' or
		substr(dx,1,4)='2440' or
		substr(dx,1,4)='2441' or
		substr(dx,1,4)='2442' or
		substr(dx,1,4)='2448' or
		substr(dx,1,4)='2449') 	
			and comorbi_12=0 
		then comorbi_12=1;
	*Renal Failure;
	if (substr(dx,1,5)='40311' or
		substr(dx,1,5)='40391' or
		substr(dx,1,5)='40412' or
		substr(dx,1,5)='40492' or
		substr(dx,1,3)='585' or
		substr(dx,1,3)='586' or
		substr(dx,1,4)='V420' or
		substr(dx,1,4)='V451' or
		substr(dx,1,4)='V560' or
		substr(dx,1,4)='V568') 
			and comorbi_13=0 
		then comorbi_13=1;
	*Liver Disease;
	if (substr(dx,1,5)='07032' or
		substr(dx,1,5)='07033' or
		substr(dx,1,5)='07054' or
		substr(dx,1,4)='4560' or
		substr(dx,1,4)='4561' or
		substr(dx,1,5)='45620' or
		substr(dx,1,5)='45621' or
		substr(dx,1,4)='5710' or
		substr(dx,1,4)='5712' or
		substr(dx,1,4)='5713' or
		substr(dx,1,4)='5714' or
		substr(dx,1,4)='5715' or
		substr(dx,1,4)='5716' or
		substr(dx,1,4)='5718' or
		substr(dx,1,4)='5719' or
		substr(dx,1,4)='5723' or
		substr(dx,1,4)='5728' or
		substr(dx,1,4)='V427') 
			and comorbi_14=0 
		then comorbi_14=1;
	*Peptic Ulcer Disease excluding bleeding;
	if (substr(dx,1,5)='53170' or
		substr(dx,1,5)='53190' or
		substr(dx,1,5)='53270' or
		substr(dx,1,5)='53290' or
		substr(dx,1,5)='53370' or
		substr(dx,1,5)='53390' or
		substr(dx,1,5)='53470' or
		substr(dx,1,5)='53490' or
		substr(dx,1,5)='V1271') 
			and comorbi_15=0 
		then comorbi_15=1;
	*AIDS;
	if (substr(dx,1,3)='042' or
		substr(dx,1,3)='043' or
		substr(dx,1,3)='044') 
			and comorbi_16=0 
		then comorbi_16=1;
	*Lymphoma;
	if (substr(dx,1,3)='200' or
		substr(dx,1,4)='201' or
		substr(dx,1,4)='2020' or
		substr(dx,1,4)='2021' or
		substr(dx,1,4)='2022' or
		substr(dx,1,4)='2023' or
		substr(dx,1,4)='2025' or
		substr(dx,1,4)='2026' or
		substr(dx,1,4)='2027' or
		substr(dx,1,4)='2028' or
		substr(dx,1,4)='2029' or
		substr(dx,1,4)='2030' or
		substr(dx,1,4)='2038' or
		substr(dx,1,4)='2386' or
		substr(dx,1,4)='2733' or
		substr(dx,1,4)='V1071' or
		substr(dx,1,4)='V1072' or
		substr(dx,1,4)='V1079')
			and comorbi_17=0 
		then comorbi_17=1;
	*Metastatic Cancer;
	if (substr(dx,1,3)='196' or
		substr(dx,1,3)='197' or
		substr(dx,1,3)='198' or
		substr(dx,1,4)='199') 
			and comorbi_18=0 
		then comorbi_18=1;	
	*Solid Tumor without Metastisis;
	if (substr(dx,1,2)='14' or
		substr(dx,1,2)='15' or
		substr(dx,1,2)='16' or
		substr(dx,1,3)='170' or
		substr(dx,1,3)='171' or
		substr(dx,1,3)='172' or
		substr(dx,1,3)='174' or
		substr(dx,1,3)='175' or
		substr(dx,1,3)='179' or
		substr(dx,1,2)='18' or
		substr(dx,1,3)='190' or
		substr(dx,1,3)='191' or
		substr(dx,1,3)='192' or
		substr(dx,1,3)='193' or
		substr(dx,1,3)='194' or
		substr(dx,1,3)='195' or
		substr(dx,1,3)='V10')
			and comorbi_19=0 
		then comorbi_19=1;
	*Rheumatoid Arthritis/Collagen Vascular Diseases;
	if (substr(dx,1,4)='7010' or
		substr(dx,1,3)='710' or
		substr(dx,1,3)='714' or
		substr(dx,1,3)='720' or
		substr(dx,1,3)='725') 
			and comorbi_20=0 
		then comorbi_20=1;
	*Coagulopathy;
	if (substr(dx,1,3)='286' or
		substr(dx,1,4)='2871' or
		substr(dx,1,4)='2873' or
		substr(dx,1,4)='2874' or
		substr(dx,1,4)='2875') 
			and comorbi_21=0 
		then comorbi_21=1;
	*Obesity;
	if (substr(dx,1,4)='2780')  
			and comorbi_22=0 
		then comorbi_22=1;
	*Weight Loss;
	if (substr(dx,1,3)='260' or
		substr(dx,1,3)='261' or
		substr(dx,1,3)='262' or
		substr(dx,1,3)='263') 
			and comorbi_23=0 
		then comorbi_23=1;	
	*Fluid and Electrolyte Disorders;
	if (substr(dx,1,3)='276') 
			and comorbi_24=0 
		then comorbi_24=1;
	*Blood Loss Anemia;
	if (substr(dx,1,4)='2800') 
			and comorbi_25=0 
		then comorbi_25=1;
	*Deficiency Anemias;
	if (substr(dx,1,4)='2801' or
		substr(dx,1,4)='2808' or
		substr(dx,1,4)='2809' or
		substr(dx,1,4)='2859') 
			and comorbi_26=0 
		then comorbi_26=1;
	*Alcohol Abuse;
	if (substr(dx,1,4)='2911' or
		substr(dx,1,4)='2912' or
		substr(dx,1,4)='2915' or
		substr(dx,1,4)='2918' or
		substr(dx,1,4)='2919' or
		substr(dx,1,4)='3039' or
		substr(dx,1,4)='3050' or
		substr(dx,1,4)='V113') 
			and comorbi_27=0 
		then comorbi_27=1;
	*Drug Abuse;
	if (substr(dx,1,4)='2920' or
		substr(dx,1,5)='29282' or
		substr(dx,1,5)='29283' or
		substr(dx,1,5)='29284' or
		substr(dx,1,5)='29289' or
		substr(dx,1,4)='2929' or
		substr(dx,1,3)='304' or
		substr(dx,1,4)='3052' or
		substr(dx,1,4)='3053' or
		substr(dx,1,4)='3054' or
		substr(dx,1,4)='3055' or
		substr(dx,1,4)='3056' or
		substr(dx,1,4)='3057' or
		substr(dx,1,4)='3058' or
		substr(dx,1,4)='3059')
			and comorbi_28=0 
		then comorbi_28=1;	
	*Psychoses;
	if (substr(dx,1,3)='295' or
		substr(dx,1,3)='296' or
		substr(dx,1,3)='297' or
		substr(dx,1,3)='298' or
		substr(dx,1,4)='2991') 
			and comorbi_29=0 
		then comorbi_29=1;
	*Depression;
	if (substr(dx,1,4)='3004' or
		substr(dx,1,5)='30112' or
		substr(dx,1,4)='3090' or
		substr(dx,1,4)='3091' or
		substr(dx,1,3)='311')
			and comorbi_30=0 
		then comorbi_30=1;


	*Dementia;
	if (substr(dx,1,4) in ('3310','3311','3312','2900','2901',
             '2902','2903','2912','2948','2949') or
		substr(dx,1,5) in ('29410','29411','29040','29041','29042','29043')) 
		and dementia=0 
          then dementia=1;

	*CAD coronary artery disease;
	if (substr(dx,1,4) in ('4140','4142','4143','4148','4149') or 
		substr(dx,1,3) in ('410','411','412','413') or
		substr(dx,1,5) in ('V4581','V4582'))
		and cad=0 
          then cad=1;

/* CAD list
410.00-410.92
411.0-411.89
412
413.0-413.9
414.00-414.07
414.2
414.3
414.8
414.9
V45.81
V45.82 */

end;
run;


/*check sums of each comorbidity for each ID*/
proc sql;
create table com_test1_&range2 as
select distinct BID_hrs_21,
sum(comorbi_1) as com_1,
sum(comorbi_2) as com_2,
sum(comorbi_3) as com_3,
sum(comorbi_4) as com_4,
sum(comorbi_5) as com_5,
sum(comorbi_6) as com_6,
sum(comorbi_7) as com_7,
sum(comorbi_8) as com_8,
sum(comorbi_9) as com_9,
sum(comorbi_10) as com_10,
sum(comorbi_11) as com_11,
sum(comorbi_12) as com_12,
sum(comorbi_13) as com_13,
sum(comorbi_14) as com_14,
sum(comorbi_15) as com_15,
sum(comorbi_16) as com_16,
sum(comorbi_17) as com_17,
sum(comorbi_18) as com_18,
sum(comorbi_19) as com_19,
sum(comorbi_20) as com_20,
sum(comorbi_21) as com_21,
sum(comorbi_22) as com_22,
sum(comorbi_23) as com_23,
sum(comorbi_24) as com_24,
sum(comorbi_25) as com_25,
sum(comorbi_26) as com_26,
sum(comorbi_27) as com_27,
sum(comorbi_28) as com_28,
sum(comorbi_29) as com_29,
sum(comorbi_30) as com_30,
sum(dementia) as com_31,
sum(cad) as com_32
from dx_31_comor_&range2
group by BID_hrs_21;
quit;

/*define comorbidities as binary indicators*/
data comorbidity_&range2.(keep=BID_hrs_21 comorb_1-comorb_32 comorb_all);
set com_test1_&range2;
array list_com com_1-com_30 com_31 com_32;
array list_com_bin comorb_1-comorb_30 comorb_31 comorb_32;

/*note this defines comorbidity 31 = dementia & 32 = cad*/
do over list_com;
  list_com_bin=0;

  if list_com>0 then do;
    list_com_bin=1;
   end;

end;

/*define aggregate comorbidity as sum of 30 individual indicator vars.
note: CAD not included in this aggregate score*/
comorb_all=comorb_1+comorb_2+comorb_3+comorb_4+comorb_5+comorb_6+comorb_7+
comorb_8+comorb_9+comorb_10+comorb_11+comorb_12+comorb_13+comorb_14+
comorb_15+comorb_16+comorb_17+comorb_18+comorb_19+comorb_20+comorb_21+
comorb_22+comorb_23+comorb_24+comorb_25+comorb_26+comorb_27+comorb_28+
comorb_29+comorb_30+comorb_31;
run;


proc sort data=comorbidity_&range2. nodupkey;
by BID_hrs_21;
run;

/*merges with list of r's with xwalk id and dod
leaves blanks for comorbidities observations with no dx but with xwalk id*/
proc sql;
create table ids_w_xwalk_&range2._1 as
select a.r_bid_hrs,b.*
from r_dod_2 a 
left join
comorbidity_&range2. b
on trim(left(a.r_bid_hrs))=trim(left(b.BID_hrs_21));
quit;

/*if comorbidity=null, set to zero for this group with the xwalk present*/
data spo_int.elix_&range1._&range2;
set ids_w_xwalk_&range2._1;
array list comorb_1-comorb_32 comorb_all;
do over list;
	if list=. then list=0;
	end;

label comorb_1 ="Congestive Heart Failure";
label comorb_2 ="Cardiac Arrhythmias";
label comorb_3 ="Valvular Disease";
label comorb_4 ="Pulmonary Circulation Disorders";
label comorb_5 ="Peripheral Vascular Disorders";
label comorb_6 ="Hypertension";
label comorb_7 ="Paralysis";
label comorb_8 ="Other Neurological Disorders";
label comorb_9 ="Chronic Pulmonary Disease";
label comorb_10 ="Diabetes, uncomplicated";
label comorb_11 ="Diabetes, complicated";
label comorb_12 ="Hypothyroidism";
label comorb_13 ="Renal Failure";
label comorb_14 ="Liver Disease";
label comorb_15 ="Peptic Ulcer Disease excluding bleeding";
label comorb_16 ="AIDS";
label comorb_17 ="Lymphoma";
label comorb_18 ="Metastatic Cancer";
label comorb_19 ="Solid Tumor without Metastisis";
label comorb_20 ="Rheumatoid Arthritis/Collagen Vascular Diseases";
label comorb_21 ="Coagulopathy";
label comorb_22 ="Obesity";
label comorb_23 ="Weight Loss";
label comorb_24 ="Fluid and Electrolyte Disorders";
label comorb_25 ="Blood Loss Anemia";
label comorb_26 ="Deficiency Anemias";
label comorb_27 ="Alcohol Abuse";
label comorb_28 ="Drug Abuse";
label comorb_29 ="Psychoses";
label comorb_30 ="Depression";
label comorb_31 ="Dementia";
label comorb_32 ="Coronary Artery Disease";

/*drop extra bid field*/
drop BID_HRS_21;
run;

data test;
set spo_int.elix_&range1._&range2;
run;

/*calls rename macro*/
%rename(WORK,TEST,&range1._&range2);

/*rename r_BID_hrs_&range1._&range2=r_BID_hrs*/
data spo_int.elix_&range1._&range2._2(rename =(r_BID_hrs_&range1._&range2=r_BID_hrs));
set test;
keep r_bid_hrs_&range1._&range2 comorb:;
run;

proc sort data=spo_int.elix_&range1._&range2._2;
by r_bid_hrs;
run;

%mend;

/*run macro to get elixhauser comorbidities 12 months pre-death
resulting dataset is spo_int.elix_0d_n12m_2 which has r_bid_hrs to merge back to dataset*/
%elixhauser(range1=0d, range2=n12m);

proc freq data=spo_int.elix_0d_n12m;
table comorb:;
run;

/*merge comorbidities into HRS dataset
for observations with no mc xwalk, the comorbidities are left as null*/
proc sql;
create table spo_int.hrs_elix_n12m(drop=bid_hrs2)
as select a.*,b.*
from 
spo_int.add_los3 a 
left join
spo_int.elix_0d_n12m_2(rename=(r_bid_hrs=bid_hrs2)) b
on a.r_bid_hrs = b.bid_hrs2;
quit;

/*493 have no xwalk id or are missing dod so missing comorbidities*/
proc freq data=spo_int.hrs_elix_n12m;
table comorb: ;
run;


H="R's cc codes"
/*begin of chronic 21 conditions.
Determines presence of 21 chronic conditions 12 months pre-death

Note this pulls from a list of icd-9 codes associated with each of the chronic
conditions. The file path may need to be updated depending on the PC the
code is run from

Dataset created is spo_int.hrs_elix_cc_n12m
*/

/*export lists of diagnosis codes to Stata*/
proc export data=spo_int.dx_0d_n12m
outfile="E:\data\spouse_intensive\int_data\dx_0d_n12m.dta" replace;
run;

proc export data=spo_int.dx_6m_n12m
outfile="E:\data\spouse_intensive\int_data\dx_6m_n12m.dta" replace;
run;


/*******************************************************************/
/*put the sas data to stata in to dot format
This is STATA code*/
/*******************************************************************/
set more off
clear

//process diagnosis codes 12 months pre-surgery
clear
use "E:\data\spouse_intensive\int_data\dx_0d_n12m.dta",clear

// convert diagnosis codes to string variables, tostring diag,gen(icd9_c)
gen new=ltrim(diag)
icd9 check new,gen(icd9_c)
replace new="" if icd9_c>0 
// convert into dot format (ex 12.1 instead of 121)
icd9 clean new,dots 

replace diag=new
drop icd9_c new

save "E:\data\spouse_intensive\int_data\dx_0d_n12m_2.dta",replace
//save to csv so I can import into sas (sas won't import stata13 .dta files
outsheet using "E:\data\spouse_intensive\int_data\dx_0d_n12m_2.csv", comma replace
***********************************************
clear all

//process diagnosis codes 12 months pre-surgery
clear
use "E:\data\spouse_intensive\int_data\dx_6m_n12m.dta",clear

// convert diagnosis codes to string variables, tostring diag,gen(icd9_c)
gen new=ltrim(diag)
icd9 check new,gen(icd9_c)
replace new="" if icd9_c>0 
// convert into dot format (ex 12.1 instead of 121)
icd9 clean new,dots 

replace diag=new
drop icd9_c new

save "E:\data\spouse_intensive\int_data\dx_6m_n12m_2.dta",replace
outsheet using "E:\data\spouse_intensive\int_data\dx_6m_n12m_2.csv", comma replace

/*******************************************************************/
//Convert back to SAS
//This is SAS Code
/* to the cms 21 chronic comorbidity*/ /*******************************************************************/

/*bring in formatted Stata datasets of dx codes*/
proc import 
datafile="E:\data\spouse_intensive\int_data\dx_0d_n12m_2.csv" 
out=dx_0d_n12m_2 DBMS=csv replace;
getnames=yes;
run;

proc import 
datafile="E:\data\spouse_intensive\int_data\dx_6m_n12m_2.csv" 
out=dx_6m_n12m_2 DBMS=csv replace;
getnames=yes;
run;

/*bring in excel list of dx codes associated with each chronic condition*/
proc import datafile='E:\data\spouse\ref_data\chronic_21_condition_icd9.xls'
out=icd9_21_chronic dbms=xls replace;
run;

data icd9_21_chronic2;
set icd9_21_chronic;
/*create new variable of icd 9 code list NOT in dot format
Don't actually use this variable in the following code*/
icd9_wo_dot=compress(icd_9,".");
run;
proc contents data=icd9_21_chronic;
run;

/*creates macro variables of each of the chronic conditions listing of dx codes*/
proc sql;
select icd_9 into :chronic_desc1-:chronic_desc21 from icd9_21_chronic;
quit;
%put &chronic_desc10;
%put &chronic_desc5;

/*******************************************************************/
/*Generate chronic conditions indicator variables using dx
codes 12 months pre-death */
/*******************************************************************/

/*macro to create indicator variables for 21 chronic conditions
resulting file has chronic conditions using dx codes 12 months 
before death
predeath= n12m */

%macro cc(start=,predeath=);

/*initialize the chronic conditions variables*/
data list_&start._&predeath._dx;
set dx_&start._&predeath._2;
array list CC_1_AMI
CC_2_ALZH
CC_3_ALZHDMTA
CC_4_ATRIALFB
CC_5_CATARACT
CC_6_CHRNKIDN
CC_7_COPD
CC_8_CHF
CC_9_DIABETES
CC_10_GLAUCOMA
CC_11_HIPFRAC
CC_12_ISCHMCHT
CC_13_DEPRESSN
CC_14_OSTEOPRS
CC_15_RA_OA
CC_16_STRKETIA
CC_17_CNCRBRST
CC_18_CNCRCLRC
CC_19_CNCRPRST
CC_20_CNCRLUNG
CC_21_CNCREndM
;
do over list ;
list=0;
end;

diag_string=diag;

/* for dx codes that begin with numbers, process chronic cond variables*/
if anydigit(substr(trim(left(diag_string)),1,1))=1 then do;
diag=diag_string+0;

if diag in (&chronic_desc1) then CC_1_AMI=1;
if diag in (&chronic_desc2)  then CC_2_ALZH=1;
if diag in (&chronic_desc3)  then CC_3_ALZHDMTA=1;
if diag in (&chronic_desc4) then CC_4_ATRIALFB=1;
if diag in (&chronic_desc5) then CC_5_CATARACT=1;
if diag in (&chronic_desc6) then CC_6_CHRNKIDN=1;
if diag in (&chronic_desc7) then CC_7_COPD=1;
if diag in (&chronic_desc8) then CC_8_CHF=1;
if diag in (&chronic_desc9) then CC_9_DIABETES=1;
if diag in (&chronic_desc10) then CC_10_GLAUCOMA=1;
if diag in (&chronic_desc11) then CC_11_HIPFRAC=1;
if diag in (&chronic_desc12) then CC_12_ISCHMCHT=1;
if diag in (&chronic_desc13) then CC_13_DEPRESSN=1;
if diag in (&chronic_desc14) then CC_14_OSTEOPRS=1;
if diag in (&chronic_desc15) then CC_15_RA_OA=1;
if diag in (&chronic_desc16) then CC_16_STRKETIA=1;
if diag in (&chronic_desc17) then CC_17_CNCRBRST=1;
if diag in (&chronic_desc18) then CC_18_CNCRCLRC=1;
if diag in (&chronic_desc19) then CC_19_CNCRPRST=1;
if diag in (&chronic_desc20) then CC_20_CNCRLUNG=1;
if diag in (&chronic_desc21) then CC_21_CNCREndM=1;
end;

/*deal with dx codes that start with letters
Only two of them in the list we have to worry about*/
if anydigit(substr(trim(left(diag_string)),1,1))=0 then do;
if trim(left(diag_string)) in ("V431") then CC_5_CATARACT=1;
if trim(left(diag_string)) in ("V801") then CC_10_GLAUCOMA=1;
end;

run;

/*aggregate all chronic condition variables by bid*/
proc sql;
create table bid_dx_&start._&predeath.(rename=(bid_hrs_21=bid)) as
select distinct bid_hrs_21,
sum(CC_1_AMI) as CC_1_AMI,
sum(CC_2_ALZH) as CC_2_ALZH,
sum(CC_3_ALZHDMTA) as CC_3_ALZHDMTA,
sum(CC_4_ATRIALFB) as CC_4_ATRIALFB,
sum(CC_5_CATARACT) as CC_5_CATARACT,
sum(CC_6_CHRNKIDN) as CC_6_CHRNKIDN,
sum(CC_7_COPD) as CC_7_COPD,
sum(CC_8_CHF) as CC_8_CHF,
sum(CC_9_DIABETES) as CC_9_DIABETES,
sum(CC_10_GLAUCOMA) as CC_10_GLAUCOMA,
sum(CC_11_HIPFRAC) as CC_11_HIPFRAC,
sum(CC_12_ISCHMCHT) as CC_12_ISCHMCHT,
sum(CC_13_DEPRESSN) as CC_13_DEPRESSN,
sum(CC_14_OSTEOPRS) as CC_14_OSTEOPRS,
sum(CC_15_RA_OA) as CC_15_RA_OA,
sum(CC_16_STRKETIA) as CC_16_STRKETIA,
sum(CC_17_CNCRBRST) as CC_17_CNCRBRST,
sum(CC_18_CNCRCLRC) as CC_18_CNCRCLRC,
sum(CC_19_CNCRPRST) as CC_19_CNCRPRST,
sum(CC_20_CNCRLUNG) as CC_20_CNCRLUNG,
sum(CC_21_CNCREndM) as CC_21_CNCREndM

from list_&start._&predeath._dx group by bid_hrs_21;
quit;


/*merges with table r's with hrs dataset by id*/
 proc sql;
 create table bid_dx_&start._&predeath.2(drop=bid) as 
select a.r_bid_hrs,b.*
 from r_dod_2 a
 left join
  bid_dx_&start._&predeath. b 
 on trim(left(a.r_bid_hrs))=trim(left(b.bid));
 quit;

/*convert to chronic condition vars. to binary variables*/
 data bid_dx_&start._&predeath.3;
 set bid_dx_&start._&predeath.2;
 array list CC_1_AMI
CC_2_ALZH
CC_3_ALZHDMTA
CC_4_ATRIALFB
CC_5_CATARACT
CC_6_CHRNKIDN
CC_7_COPD
CC_8_CHF
CC_9_DIABETES
CC_10_GLAUCOMA
CC_11_HIPFRAC
CC_12_ISCHMCHT
CC_13_DEPRESSN
CC_14_OSTEOPRS
CC_15_RA_OA
CC_16_STRKETIA
CC_17_CNCRBRST
CC_18_CNCRCLRC
CC_19_CNCRPRST
CC_20_CNCRLUNG
CC_21_CNCREndM
;
do over list ;
if list>0 then list=1;
if list<=0 then list=0;
end;

/*create aggregated indicators*/
CC_AMI_isch=CC_1_AMI|CC_12_ISCHMCHT;
CC_alzheim=CC_2_ALZH|CC_3_ALZHDMTA;
CC_cncr_chronic=CC_17_CNCRBRST | CC_18_CNCRCLRC | CC_19_CNCRPRST | CC_20_CNCRLUNG | 
	CC_21_CNCREndM ;

/*label variables*/
label CC_1_AMI="AMI"
CC_2_ALZH="Alzheimer's disease"
CC_3_ALZHDMTA="Alzheimer's or Dementia"
CC_4_ATRIALFB="Atrial fibrillation"
CC_5_CATARACT="Cataract"
CC_6_CHRNKIDN="Chronic kidney disease"
CC_7_COPD="COPD"
CC_8_CHF="CHF"
CC_9_DIABETES="Diabetes"
CC_10_GLAUCOMA="Glaucoma"
CC_11_HIPFRAC="Hip fracture"
CC_12_ISCHMCHT="Ischemic heart disease"
CC_13_DEPRESSN="Depression"
CC_14_OSTEOPRS="Osteoporosis"
CC_15_RA_OA="Arthritis"
CC_16_STRKETIA="Stroke/TIA"
CC_17_CNCRBRST="Breast cancer"
CC_18_CNCRCLRC="Colorectal cancer"
CC_19_CNCRPRST="Prostate cancer"
CC_20_CNCRLUNG="Lung cancer"
CC_21_CNCREndM="Endometrial cancer"
CC_AMI_isch="AMI or Ischemic heart failure"
CC_alzheim="Alzheimer's or dementia"
CC_cncr_chronic="Cancer, all types"
;
run;


proc means;
var CC_1_AMI
CC_2_ALZH
CC_3_ALZHDMTA
CC_4_ATRIALFB
CC_5_CATARACT
CC_6_CHRNKIDN
CC_7_COPD
CC_8_CHF
CC_9_DIABETES
CC_10_GLAUCOMA
CC_11_HIPFRAC
CC_12_ISCHMCHT
CC_13_DEPRESSN
CC_14_OSTEOPRS
CC_15_RA_OA
CC_16_STRKETIA
CC_17_CNCRBRST
CC_18_CNCRCLRC
CC_19_CNCRPRST
CC_20_CNCRLUNG
CC_21_CNCREndM;
run;

%mend;

%cc(start=0d,predeath=n12m);
%cc(start=6m,predeath=n12m);

/*so resulting datastets are bid_dx_0d_n12m3 and bid_dx_6m_n12m3 with 
variable r_bid_hrs to merge*/

/************************************************************/
/*rename the 12 month pre-surgery chronic condition vars*/
/************************************************************/

/*creates dataset to use in the rename macro below*/
data test;
set bid_dx_0d_n12m3;
run;

/*rename macro to add _n12mn0 suffix to the chronic conditions variable names
Data file is still work.test but variables renamed after running this macro*/
%rename(WORK,TEST,n12mn0);

/*Changes name of bid_hrs variable so no _n12mn0*/
data spo_int.chronic_21_n12m_n0_0;
set test;
r_bid_hrs=r_bid_hrs_n12mn0;
drop r_bid_hrs_n12mn0;
run;

/*same for 6-12m dataset*/
data test;
set bid_dx_6m_n12m3;
run;
%rename(WORK,TEST,n12mn6m);
data spo_int.chronic_21_n12m_n6m_0;
set test;
r_bid_hrs=r_bid_hrs_n12mn6m;
drop r_bid_hrs_n12mn6m;
run;


proc freq data=spo_int.chronic_21_n12m_n0_0;
table cc_alzheim_n12mn0 cc_cncr_chronic_n12mn0;
run;
proc contents;
run;

proc freq data=spo_int.chronic_21_n12m_n6m_0;
table cc_alzheim_n12mn6m cc_cncr_chronic_n12mn6m;
run;

/************************************************************/
/*Merge into HRS dataset with elix already added */
/************************************************************/
/*merge chronic conditions into HRS dataset
again leave cc's blank if no hrs xwalk idto claims or dod  *917 missing*/

/*first merge the two cc datasets together*/
proc sql;
create table cc_6m12m_0m12m(drop=r_bid_hrs2) as select *
from
spo_int.chronic_21_n12m_n0_0 a
left join
spo_int.chronic_21_n12m_n6m_0(rename=(r_bid_hrs=r_bid_hrs2)) b
on a.r_bid_hrs=b.r_bid_hrs2;
quit;

proc sql;
create table spo_int.hrs_elix_cc_n12m(drop=bid_hrs2) as select a.*,
b.*
from 
spo_int.hrs_elix_n12m a 
left join
cc_6m12m_0m12m(rename=(r_bid_hrs=bid_hrs2)) b
on a.r_bid_hrs = b.bid_hrs2;
quit;

proc freq data=spo_int.hrs_elix_cc_n12m;
table cc_alzheim_n12mn0 cc_cncr_chronic_n12mn0 cc_alzheim_n12mn6m cc_cncr_chronic_n12mn6m;
run;




H="R's intensive procedures last year of life"
/*uses medpar claims to identify intensive procedures in the last
6 months of life for R
Intensive procedure definitions (6) from Evan's project, see 
"Procedure_0312_2014.txt" for code. Based on Bernato reference.

Indicator for intensive procedure is populated if R has a xwalk id
(FFS medicare status does not matter)

Adds to the chronic conditions dataset (spo_int.hrs_elix_cc_n12m)

Final dataset is spo_int.hrs_elix_cc_n12m_intens*/


/*get ip claims with admission within 6m of R's death for obs with dod and xwalk*/
%macro mp(month_n=,days_start=,days_bef_death=,source=,equ=);
%let source0=mp;

proc sql;
create table &source._meet_&days_bef_death as select a.*,b.r_death_date_e
from medi.&source0._2000_2012(where=(trim(left(SSLSSNF))&equ.="N")) a inner join
spo_int.r_sp_core_n1_p1_n2_ins b
on trim(left(a.bid_hrs_21))=trim(left(b.r_BID_hrs))
and &days_start<=b.r_death_date_e-a.admit_date<=&days_bef_death;
quit;

%mend;

%mp(month_n=6,days_start=0,days_bef_death=183,source=ip,equ=~ );
%mp(month_n=1,days_start=0,days_bef_death=30,source=ip,equ=~);

%macro claims(month_n=,days=);
/*restructures dataset so separate observation for each procedure*/
data proc_long(keep=bid_hrs_21 pro procedure_date r_death_date_e);
set ip_meet_183;
array list PRCDR_CD01-PRCDR_CD25;
array date PRCDR_DT01-PRCDR_DT25;
do over list;
if list~="" then do;
pro=list+0; *turns procedure code into number, missing if has letters;
if date=0000000 then date=.;
procedure_date=datejul(date);
output;
end;
end;
format procedure_date date10. death_date date10.;
run;

data proc_long1;
set proc_long;
if (r_death_date_e-procedure_date)<=&days;
run;

data check_miss_date;
set proc_long;
miss_date=0;
if procedure_date=. then miss_date=1;
run;

proc freq;
table miss_date;
run;

/*identify intensive procedures and the dates for those procedures*/
data proc_long_ba;
set proc_long1;
array list 
int_intubation
int_trach
int_gastro_tude
int_hemodia
int_enteral_nut
int_cpr;
do over list;
list=0;
end;

if length(trim(left(pro)))>=3 then do;

	if  substr(trim(left(pro)),1,3) in ("967")  then int_intubation =1;
	if  substr(trim(left(pro)),1,3) in ("311") then  int_trach=1;
	if  substr(trim(left(pro)),1,3) in ("432") then  int_gastro_tude=1;

	if substr(trim(left(pro)),1,3) in ("966") then  int_enteral_nut=1;

	if length(trim(left(pro)))>3 then do;
		if substr(trim(left(pro)),1,4) in ("9604","9605") or 
		  substr(trim(left(pro)),1,3) in ("967") then int_intubation =1;
		if substr(trim(left(pro)),1,4) in ("3121","3129") or 
		  substr(trim(left(pro)),1,3) in ("311") then int_trach=1;
		if substr(trim(left(pro)),1,4) in ("4311","4319","4432")  or 
		  substr(trim(left(pro)),1,3) in ("432") then int_gastro_tude=1;
		if substr(trim(left(pro)),1,4) in ("3995") then int_hemodia=1;
		if substr(trim(left(pro)),1,4) in ("9915") or 
		  substr(trim(left(pro)),1,3) in ("966") then int_enteral_nut=1;
		if substr(trim(left(pro)),1,4) in ("9960","9963") then int_cpr=1;
	end;

end;

if int_intubation|
int_trach|
int_gastro_tude|
int_hemodia|
int_enteral_nut|
int_cpr then date_proc=procedure_date;
run;

/*identify which procedure was first in 6 months before death
Just keeps that first procedure date and count of each type of procedure
(Data format is now one row per beneficiary) */
proc sql;
create table proc_sum_new as
select distinct bid_hrs_21,
min(date_proc) as first_proc_date_&month_n. format=date10.
label="first intensive procedure date in the last &month_n.,Barnato",
max(date_proc) as last_proc_date_&month_n. format=date10.
label="last intensive procedure date in the last &month_n.,Barnato",
sum(int_intubation) as int_intubation_&month_n.,
sum(int_trach) as int_trach_&month_n.,
sum(int_gastro_tude) as int_gastro_tude_&month_n.,
sum(int_hemodia) as int_hemodia_&month_n.,
sum(int_enteral_nut) as int_enteral_nut_&month_n.,
sum(int_cpr) as int_cpr_&month_n.
from proc_long_ba group by bid_hrs_21;
quit;

/*identify first & last procedure date, excluding the hemodial procedure category*/
data excl_hemodia_1;
set proc_long_ba;
if int_hemodia=0;
run;

proc sql;
create table excl_hemodia_2 as
select distinct bid_hrs_21,
min(date_proc) as first_proc_date_excl_hd_&month_n. format=date10.
label="first intensive procedure date in the last &month_n.,excluding hemodialysis proced.",
max(date_proc) as last_proc_date_excl_hd_&month_n. format=date10.
label="last intensive procedure date in the last &month_n.,excluding hemodialysis proced."
from excl_hemodia_1 group by bid_hrs_21;
quit;

/*add the first date excluding hemodialysis to the rest of the procedure info*/
proc sql;
create table proc_sum_new_2 as select a.*,b.first_proc_date_excl_hd_&month_n.,b.last_proc_date_excl_hd_&month_n. from
proc_sum_new a left join
excl_hemodia_2 b
on a.bid_hrs_21=b.bid_hrs_21;
quit;

/*convert counts to indicator variables, add variable labels*/
data proc_intensive_new;
set proc_sum_new_2 ;
array list int_intubation_&month_n.
int_trach_&month_n.
int_gastro_tude_&month_n.
int_hemodia_&month_n.
int_enteral_nut_&month_n.
int_cpr_&month_n.
;
do over list;
if list>0 then list=1;
if list=. then list=0;
end;
label int_intubation_&month_n.="intubation/mechanic ventilation,Barnato";
label int_trach_&month_n.="trachostomy,Barnato";
label int_gastro_tude_&month_n.="gastrostomy tube,Barnato";
label int_hemodia_&month_n.="hemodialysis,Barnato";
label int_enteral_nut_&month_n.="enteral/parenteral nutrition,Barnato";
label int_cpr_&month_n.="CPR,Barnato";

if int_intubation_&month_n.=1 |
int_trach_&month_n.=1 |
int_gastro_tude_&month_n.=1 |
int_hemodia_&month_n.=1 |
int_enteral_nut_&month_n.=1 |
int_cpr_&month_n.=1 then int_any_&month_n.=1;
else int_any_&month_n.=0;
label int_any_&month_n.="Any of 6 intensive procedures, 1=yes";
run;

data miss_date;
set proc_intensive_new;
miss_date=0;
if first_proc_date_&month_n.=. then miss_date=1;
run;

proc freq;
table int_any_&month_n.*miss_date;
run;

/*n=1389 have at least 1 intensive procedure with date not missing in the &month_n. preceding death*/
proc sql;
select count(*),count(first_proc_date_&month_n.)
from proc_intensive_new where (int_intubation_&month_n.
+int_trach_&month_n.
+int_gastro_tude_&month_n.
+int_hemodia_&month_n.
+int_enteral_nut_&month_n.
+int_cpr_&month_n.)>0;
quit;

proc freq data=proc_intensive_new;
table int:;
run;

/*merge with bid / death date list for those with xwalk id's*/
proc sql;
create table proc_intensive_&month_n.(drop=bid_hrs_21) as select a.r_bid_hrs,a.r_death_date_e,b.*
from spo_int.r_sp_core_n1_p1_n2_ins a 
left join 
proc_intensive_new b
on trim(left(a.r_bid_hrs))=trim(left(b.bid_hrs_21));
quit;

data proc_intensive_&month_n._2;
set proc_intensive_&month_n.; 
if r_bid_hrs~='';
run;

/*if had xwalk but no procedure, set int_ indicators=0*/
data spo_int.proc_intensive_&month_n._2;
set proc_intensive_&month_n._2;
array list int_intubation_&month_n.
int_trach_&month_n.
int_gastro_tude_&month_n.
int_hemodia_&month_n.
int_enteral_nut_&month_n.
int_cpr_&month_n.
int_any_&month_n.
;
do over list;
if list=. then list=0;
end;
days_1st_proc_death_&month_n.=r_death_date_e-first_proc_date_&month_n.;
if .<days_1st_proc_death_&month_n.<0 then days_1st_proc_death_&month_n.=0;
label days_1st_proc_death="the days from the first procedure date in the last &month_n. to death";
run;

%mend;

%claims(month_n=1m,days=30);
%claims(month_n=6m,days=183);
/****************************************************************/
/*merge into full dataset, keep missing if no xwalk id*/
/****************************************************************/
proc sql;
create table spo_int.proc_intensive_6m_2 as select *
from proc_intensive_6m_2 a
left join
proc_intensive_1m_2 b
on a.r_bid_hrs = b.r_bid_hrs;
quit;

proc sql;
create table spo_int.hrs_elix_cc_n12m_intens(drop=bid_hrs2) as select *
from 
spo_int.hrs_elix_cc_n12m a 
left join
spo_int.proc_intensive_6m_2(rename=(r_bid_hrs=bid_hrs2)) b
on a.r_bid_hrs = b.bid_hrs2;
quit;
/*
proc freq data=spo_int.hrs_elix_cc_n12m_intens;
table int_:;
run;



H="regional data"
/*Use Ling's processed, merged regional data file
Skip next heading section, this section should be revised
if we want to revisit the regional controls

starting datasets:
spo_int.exit_rest_r_s_core_n1_p1_ins
E:\data\Dartmouth_misc\zip_hrr_hci_bed_eol_3 - saved in E:/data/spouse/ref_data

Wage index 2012 file
E:\data\Dartmouth_misc\wage_index_2012 (SAS data file)
Original downloaded file is under FY_2012_FR_cbsaoccmix_nooccmix subfolder
File initial processing done in wage_index_setup.txt code 

starting hrs dataset spo_int.hrs_elix_cc_n12m_intens

Final dataset: spo_int.hrs_elix_cc_n12m_reg2

*/

libname ref "E:/data/spouse/ref_data";
proc contents data=ref.zip_hrr_hci_bed_eol_3;
run;

/*get r's zip code from exit interviews*/
data id_zip;
set spo_int.hrs_elix_cc_n12m_intens(rename=(r_ZIP10_2000_e=r_ZIP10_e));
/*use zip code variable from restricted dataset for year of exit interview*/
zip_exit=vvaluex("r_zip"||substr(trim(left(r_exit_year_x)),3,2)||"_E" );
run;

/*2 obs have missing zip in exit year
They have zip in previous wave so use that*/
data zztestzip1;
set id_zip;
if zip_exit = "";
run;

/*if no zip in exit year, then use zip from wave prior to exit*/
data id_zip_2;
set id_zip;
if zip_exit="" then zip_exit=vvaluex("r_zip"||substr(trim(left(r_exit_year_x-2)),3,2)||"_E"  );
run;

/*check to see if obs still have missing zip - none*/
data zztestzip2;
set id_zip_2;
if zip_exit = "";
run;

proc sql outobs=10;
select zip_exit  from id_zip_2;
quit;

/*convert zip to numeric variable*/
data id_zip_3;
set id_zip_2;
zip_exit_n=zip_exit+0;
drop zip_exit;
run;

proc contents data=ref.zip_hrr_hci_bed_eol_3; run;

/*merge in the region data by zip code*/
proc sql;
create table spo_int.hrs_elix_cc_n12m_reg as select a.*,b.hci_index, b.hospital_beds,
	b.physicians, b.specialists, b.wage_index_2008, b.hrrnum, b.hrrcity, b.hrrstate
from id_zip_3 a 
left join
ref.zip_hrr_hci_bed_eol_3 b
on a.zip_exit_n=b.zip;
quit;

/*2008 Wage index missing for 40% of the dataset so bring in separately*/
proc freq data=spo_int.hrs_elix_cc_n12m_reg; table wage_index_2008; run;

data hrs_add_wi;
set spo_int.hrs_elix_cc_n12m_reg(drop=wage_index_2008);
run;

/*bring in 2012 wage index file*/
libname da_ref "E:\data\Dartmouth_misc\Wage index";
data spo_int.wage_index;
set da_ref.wage_index_2012;
run;

proc means;
var wage_index_2012;
run;

/******************************************************************/
/* Link CBSA codes and zip codes from the WI file*/
/******************************************************************/
/*Bring in xwalk file between CBSA codes and zip codes
Note only keep variables needed from xwalk file because formats 
are missing for some of the other text variables*/

libname da "E:\data\Dartmouth_misc";
data zip_cb;
set da.xtract(keep=zip5 cbsa state);
zip_n=zip5+0;
/*If zip code is not missing, add state code*/
if zip_n~=.;
state_n=state+0;
run;

*Remove duplicate entries for zip5 and cbsa from xwalk file;
*Goes from 399045 to 49289 rows;
proc sort data=zip_cb out=zip_cb2 nodupkey;
by zip_n cbsa;
run;

/*note several zip codes have multiple cbsa*/
/*create dataset with just one entry for each zip code
8029 zip codes have more than one cbsa code
Just use the first one when sort*/
proc sort data=zip_cb2 out=cbsa_zip_final nodupkey;
by zip_n;
run;

/******************************************************************/
/* Create dataset with cbsa, wage index and zip code */
/******************************************************************/

/*for zip codes with no cbsa, wage index is left missing
there are also many cbsas with missing wage index*/
proc sql;
create table zip_cbsa_wage_index as
select a.*,b.wage_index_2012 from
cbsa_zip_final a
left join
spo_int.wage_index b
on a.cbsa=b.cbsa;
quit;

/*Check for and remove duplicates by zip, keep first entry*/
proc sort data=zip_cbsa_wage_index out=zip_cbsa_wage_index2 nodupkey;
by zip_n;
run;

/* 9 zip codes without an associated cbsa */
proc sql;
select count(distinct zip_exit_n) from hrs_add_wi
where zip_exit_n not in 
(select zip_n from zip_cbsa_wage_index2);
quit;

/******************************************************************/
/* Bring wage index and state code into main data file by zip-cbsa*/
/******************************************************************/
proc sql;
create table hrs_wage_index as
select a.*,b.wage_index_2012,b.state_n from 
hrs_add_wi a
left join 
zip_cbsa_wage_index2 b
on a.zip_exit_n=b.zip_n;
quit;

/*3830 observations do not have wage id by cbsa-zip*/
proc sql; 
select count(distinct r_id) from hrs_wage_index
where wage_index_2012 is null ;
quit;

/******************************************************************/
/* Bring wage index into cost file by state if missing above*/
/******************************************************************/
/*Get dataset with one wage index per state*/
proc sort data=spo_int.wage_index out=wage_index3 nodupkey;
by state_in_wage_index;
run;

data wage_index4;
set wage_index3;
if state_in_wage_index~='';
run;

proc freq; table state_in_wage_index; run;

/*Merges in wage index if there's one for the state but was missing for the zip*/
proc sql;
create table spo_int.hrs_elix_cc_n12m_reg2 
as select a.*,coalesce(a.wage_index_2012,b.wage_index_2012) as wage_index_2012_2
from
hrs_wage_index a
left join
wage_index4 b
on a.state_n=b.state_in_wage_index;
quit;

/*check for missing values*/
proc means;
var wage_index_2012 wage_index_2012_2;
run;

/*57 obs have missing state so can't backfill using state wage index*/
proc sql;
select distinct state_n ,count(*) from spo_int.hrs_elix_cc_n12m_reg2 
where wage_index_2012_2=. group by state_n;
quit;

/*who is missing wage index?
most don't have valid zip codes*/
data miss_wi;
set spo_int.hrs_elix_cc_n12m_reg2;
if wage_index_2012_2=.;
run;

proc freq; table state_n zip_exit_n;
run;

/******************************************************************/
/* Get rural/urban indicator from AHRF*/
/******************************************************************/
/*note raw 2013 ascii file read in to sas using the .sas file in DOC subfolder*/
libname ahrf 'E:\data\AHRF\DATA';

data ahrf_raw;
set ahrf.ahrf13_14;
fips_cnty=f00011||f00012;
run;

data ahrf_raw;
set ahrf.ahrf13_14;
fips_cnty=f00011||f00012;
run;

proc freq; table f0002013; run;

data ahrf_urban;
set ahrf_raw;
if f0002013=1 | f0002013=2 | f0002013=3 then urban_ind=1;
if f0002013=4 | f0002013=5 | f0002013=6 | f0002013=7 | f0002013=8 | f0002013=9 then urban_ind=0;
label urban_ind="Urban area, county level";
run;

proc freq; table urban_ind; run;

/*crosswalk between zip and county code*/
proc import datafile='E:\data\AHRF\ZIP_COUNTY_032010.xlsx'
DBMS=xlsx out=zip_county
replace;
run;

proc sql; create table zip_urban as select a.zip,a.county,b.urban_ind from
zip_county a left join
ahrf_urban b
on a.county=b.fips_cnty;
quit;

proc freq; table urban_ind /missprint; run;

/*get zip into number format*/
data zip_urban2;
set zip_urban;
zip_n=zip+0;
run;

proc sort data=zip_urban2 nodupkey;
by zip_n ;
run;

data sp_ds;
set spo_int.hrs_elix_cc_n12m_reg2;
run;

/*merge urban indicator into dataset by zip code*/
proc sql;
create table spo_int.hrs_elix_cc_n12m_reg3 as select a.*,b.urban_ind
from
spo_int.hrs_elix_cc_n12m_reg2 a left join
zip_urban2 b
on a.zip_exit_n=b.zip_n;
quit;

proc freq; table urban_ind; run;

H="add'l vars"
/*creates the following additional variables:
1. r_adl change between waves
2. age at death
3. female indicator
4. hs education
5. relig importance
6. live alone different waves
*/

proc freq data=spo_int.hrs_elix_cc_n12m_reg3;
table r_adl_cat_core_n1 r_adl_cat_core_n2 /missprint;
run;

data adl_change_1;
set spo_int.hrs_elix_cc_n12m_reg3;

/*initalize variable - stable ind = 1 if stays the same or improves (0 if declines)*/
r_adl_stable_ind_n1n2=0;
if ((r_adl_cat_core_n1=0) & (r_adl_cat_core_n2=0)) then r_adl_stable_ind_n1n2=1 ;
* to account from those who improved from moderate to independent (overlap with r_adl_improved_n1n2);
if ((r_adl_cat_core_n1=0) & (r_adl_cat_core_n2=1 | r_adl_cat_core_n2=2)) then r_adl_stable_ind_n1n2=1 ;

r_adl_stable_partial_n1n2=0;
if ((r_adl_cat_core_n1=1) & (r_adl_cat_core_n2=1)) then r_adl_stable_partial_n1n2=1 ;;
* to account from those who improved from severe to moderate (overlap with r_adl_improved_n1n2);
if ((r_adl_cat_core_n1=1) & (r_adl_cat_core_n2=2)) then r_adl_stable_partial_n1n2=1 ;

r_adl_stable_severe_n1n2=0;
 if ((r_adl_cat_core_n1=2) & (r_adl_cat_core_n2=2)) then r_adl_stable_severe_n1n2=1;

r_adl_change_i_m_n1n2=0;
if ((r_adl_cat_core_n1=1) & (r_adl_cat_core_n2=0)) then r_adl_change_i_m_n1n2=1 ;

r_adl_change_i_s_n1n2=0;
if ((r_adl_cat_core_n1=2) & (r_adl_cat_core_n2=0)) then r_adl_change_i_s_n1n2=1 ;

r_adl_change_m_s_n1n2=0;
if ((r_adl_cat_core_n1=2)& (r_adl_cat_core_n2=1)) then r_adl_change_m_s_n1n2=1 ;

r_adl_improved_n1n2=0;
 if ((r_adl_cat_core_n1=1) & (r_adl_cat_core_n2=2)) then r_adl_improved_n1n2=1;
if ((r_adl_cat_core_n1=0) & (r_adl_cat_core_n2=1 | r_adl_cat_core_n2=2)) then r_adl_improved_n1n2=1 ;

/*if n1 or n2 adl category is missing, new category for missing data so not dropped from analysis*/
array list r_adl_stable_ind_n1n2 r_adl_stable_partial_n1n2 r_adl_stable_severe_n1n2 r_adl_change_i_m_n1n2 r_adl_change_i_s_n1n2 r_adl_change_m_s_n1n2 r_adl_improved_n1n2;
do over list;
if r_adl_cat_core_n1=. or  r_adl_cat_core_n2=.  then list=0;
end;

r_adl_change_n1n2_miss=0;
if r_adl_cat_core_n1=. or  r_adl_cat_core_n2=.  then r_adl_change_n1n2_miss=1;


label r_adl_stable_ind_n1n2="R ADL Ind. stable or improving n2 to n1, 1=Yes";
label r_adl_stable_partial_n1n2="R ADL Partial Depend, stable n2 to n1, 1=Yes";
label r_adl_stable_severe_n1n2="R ADL Severe Depend, stable n2 to n1, 1=Yes";
label r_adl_change_i_m_n1n2="R ADL Indep. to Partial Depend n2 to n1, 1=Yes";
label r_adl_change_i_s_n1n2="R ADL Indep. to Severe Depend n2 to n1, 1=Yes";
label r_adl_change_m_s_n1n2="R ADL Partial to Severe Depend n2 to n1, 1=Yes";
label r_adl_improved_n1n2="R ADL Improvement n2 to n1, 1=Yes";
label r_adl_change_n1n2_miss="R ADL n2 to n1 unknown";

r_adl_stable_ind_xn1=0;
if ((r_adl_cat_x=0) & (r_adl_cat_core_n1=0)) then r_adl_stable_ind_xn1=1 ;
* to account from those who improved from moderate to independent (overlap with r_adl_improved_xn1);
if ((r_adl_cat_x=0) & (r_adl_cat_core_n1=1 | r_adl_cat_core_n1=2)) then r_adl_stable_ind_xn1=1 ;

r_adl_stable_partial_xn1=0;
if ((r_adl_cat_x=1) & (r_adl_cat_core_n1=1)) then r_adl_stable_partial_xn1=1 ;;
* to account from those who improved from severe to moderate (overlap with r_adl_improved_xn1);
if ((r_adl_cat_x=1) & (r_adl_cat_core_n1=2)) then r_adl_stable_partial_xn1=1 ;

r_adl_stable_severe_xn1=0;
 if ((r_adl_cat_x=2|r_adl_cat_x=3) & (r_adl_cat_core_n1=2)) then r_adl_stable_severe_xn1=1;

r_adl_change_i_m_xn1=0;
if ((r_adl_cat_x=1) & (r_adl_cat_core_n1=0)) then r_adl_change_i_m_xn1=1 ;

r_adl_change_i_s_xn1=0;
if ((r_adl_cat_x=2|r_adl_cat_x=3) & (r_adl_cat_core_n1=0)) then r_adl_change_i_s_xn1=1 ;

r_adl_change_m_s_xn1=0;
if ((r_adl_cat_x=2|r_adl_cat_x=3)& (r_adl_cat_core_n1=1)) then r_adl_change_m_s_xn1=1 ;

r_adl_improved_xn1=0;
 if ((r_adl_cat_x=1) & (r_adl_cat_core_n1=2)) then r_adl_improved_xn1=1;
if ((r_adl_cat_x=0) & (r_adl_cat_core_n1=1 | r_adl_cat_core_n1=2)) then r_adl_improved_xn1=1 ;

array list2 r_adl_stable_ind_xn1 r_adl_stable_partial_xn1 r_adl_stable_severe_xn1 r_adl_change_i_m_xn1 r_adl_change_i_s_xn1 r_adl_change_m_s_xn1 r_adl_improved_xn1;
do over list2;
if r_adl_cat_x=. or  r_adl_cat_core_n1=.  then list2=.;
end;

label r_adl_stable_ind_xn1="R ADL stable or improving n1 to exit, 1=Yes";
label r_adl_stable_partial_xn1="R ADL Partial Depend, stable n1 to exit, 1=Yes";
label r_adl_stable_severe_xn1="R ADL Severe Depend, stable n1 to exit, 1=Yes";
label r_adl_change_i_m_xn1="R ADL Indep. to Partial Depend n1 to exit, 1=Yes";
label r_adl_change_i_s_xn1="R ADL Indep. to Severe Depend n1 to exit, 1=Yes";
label r_adl_change_m_s_xn1="R ADL Partial to Severe Depend n1 to exit, 1=Yes";
label r_adl_improved_xn1="R ADL Improvement n1 to exit, 1=Yes";

*For spouse n2 to n1;
s_adl_stable_ind_n1n2=0;
if ((s_adl_cat_core_n1=0) & (s_adl_cat_core_n2=0)) then s_adl_stable_ind_n1n2=1 ;
* to account from those who improved from moderate to independent (overlap with s_adl_improved_n1n2);
if ((s_adl_cat_core_n1=0) & (s_adl_cat_core_n2=1 | s_adl_cat_core_n2=2)) then s_adl_stable_ind_n1n2=1 ;

s_adl_stable_partial_n1n2=0;
if ((s_adl_cat_core_n1=1) & (s_adl_cat_core_n2=1)) then s_adl_stable_partial_n1n2=1 ;;
* to account from those who improved from severe to moderate (overlap with s_adl_improved_n1n2);
if ((s_adl_cat_core_n1=1) & (s_adl_cat_core_n2=2)) then s_adl_stable_partial_n1n2=1 ;

s_adl_stable_severe_n1n2=0;
 if ((s_adl_cat_core_n1=2) & (s_adl_cat_core_n2=2)) then s_adl_stable_severe_n1n2=1;

s_adl_change_i_m_n1n2=0;
if ((s_adl_cat_core_n1=1) & (s_adl_cat_core_n2=0)) then s_adl_change_i_m_n1n2=1 ;

s_adl_change_i_s_n1n2=0;
if ((s_adl_cat_core_n1=2) & (s_adl_cat_core_n2=0)) then s_adl_change_i_s_n1n2=1 ;

s_adl_change_m_s_n1n2=0;
if ((s_adl_cat_core_n1=2)& (s_adl_cat_core_n2=1)) then s_adl_change_m_s_n1n2=1 ;

s_adl_improved_n1n2=0;
 if ((s_adl_cat_core_n1=1) & (s_adl_cat_core_n2=2)) then s_adl_improved_n1n2=1;
if ((s_adl_cat_core_n1=0) & (s_adl_cat_core_n2=1 | s_adl_cat_core_n2=2)) then s_adl_improved_n1n2=1 ;

/*if n1 or n2 adl category is missing, then set to missing*/
array slist s_adl_stable_ind_n1n2 s_adl_stable_partial_n1n2 s_adl_stable_severe_n1n2 s_adl_change_i_m_n1n2 s_adl_change_i_s_n1n2 s_adl_change_m_s_n1n2 s_adl_improved_n1n2;
do over slist;
if s_adl_cat_core_n1=. or  s_adl_cat_core_n2=.  then slist=.;
end;

label s_adl_stable_ind_n1n2="S ADL Ind. stable or improving n2 to n1, 1=Yes";
label s_adl_stable_partial_n1n2="S ADL Partial Depend, stable n2 to n1, 1=Yes";
label s_adl_stable_severe_n1n2="S ADL Severe Depend, stable n2 to n1, 1=Yes";
label s_adl_change_i_m_n1n2="S ADL Indep. to Partial Depend n2 to n1, 1=Yes";
label s_adl_change_i_s_n1n2="S ADL Indep. to Severe Depend n2 to n1, 1=Yes";
label s_adl_change_m_s_n1n2="S ADL Partial to Severe Depend n2 to n1, 1=Yes";
label s_adl_improved_n1n2="S ADL Improvement n2 to n1, 1=Yes";

r_age=year(r_death_date_e)-year(r_birth_date_e);
label r_age="R's Age at death";
if r_gender_e=1 then r_female=0;
if r_gender_e=2 then r_female=1; *from tracker;
label r_female="R Female";

s_age=year(r_death_date_e)-year(s_birth_date_e);
label s_age="S's Age at R's death";
if s_gender_e=1 then s_female=0;
if s_gender_e=2 then s_female=1; *from tracker;
label s_female="S Female";

if r_degree_e in (0) then r_hseduc=0;
if r_degree_e>0 then r_hseduc=1;
label r_hseduc="R HS degree +";
if s_degree_e in (0) then s_hseduc=0;
if s_degree_e>0 then s_hseduc=1;
label s_hseduc="S HS degree +";

r_imprelig_vimp_n1=r_imprelig_n1<=1;
if r_imprelig_n1=. then r_imprelig_vimp_n1=.;
label r_imprelig_vimp_n1="R Religion very important";

s_imprelig_vimp_n1=s_imprelig_n1<=1;
if s_imprelig_n1=. then s_imprelig_vimp_n1=.;
label s_imprelig_vimp_n1="S Religion very important";

/*live alone core n1, n2?
If household size = 0 and not nursing home resident, then yes*/
if r_hhm_n1=0 and r_nhres_n1~=1 then r_livealone_n1=1;
if r_hhm_n1>0 or r_nhres_n1=1 then r_livealone_n1=0;
if r_hhm_n2=0 and r_nhres_n2~=1 then r_livealone_n2=1;
if r_hhm_n2>0 or r_nhres_n2=1 then r_livealone_n2=0;

run;

proc freq; table r_female*s_female r_hseduc*s_hseduc; run;


data spo_int.spouse_data;
set adl_change_1;
run;

option fmterr=no;
proc export data=spo_int.spouse_data
outfile="E:\data\spouse_intensive\int_data\spouse_data_full.dta" replace;
run;


ods rtf body="E:\data\spouse_intensive\logs\spouse_2012_variable_lists.rtf" ;

proc contents data=spo_int.spouse_data; run;

ods rtf close;





H="redo define sample"


/*Full decedent sample (2002-2012 exit interviews) is restricted to:
1. Decedents with core interview at least 6m before death
2. With medicare xwalk id
3. With FFS medicare last 6 months of life
4. Married or partnered at time of death
5. With spouse p1 interview
6. With spouse core interview at least 6m before R's death
7. Spouse has full CES-D information both pre and post R's death
8. Decedent had at least one comorbidity = data warehouse cc's, excluding cataract and glaucoma
9. Decedent cause of death not accident, suicide, homicide or missing

Additional variables to consider for sensitivity analysis:
2. P1 interview within 90 days of R's death

Also creates table looking at rates of intensive procedures in the sample
*/

capture log close

clear all
mata: mata clear
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local origdata E:\data\spouse_intensive\int_data
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\1-HRS_Spouse_intensive_sample.txt", text replace

cd `datapath'

use `origdata'\spouse_data_full.dta
************************************************************
//create variables needed to define sample

//get indicator for any of 5 intensive procedures, excluding hemodialysis

foreach x in intubation trach gastro_tude enteral_nut cpr hemodia {
	foreach i in 1m 6m {
		replace int_`x'_`i'=0 if int_`x'_`i'==.
}
}

gen int_any_of5_6m = ( int_intubation_6m==1 | int_trach_6m==1 | ///
 int_gastro_tude_6m==1 | int_enteral_nut_6m==1 | int_cpr_6m==1 )
replace int_any_of5_6m = 0 if int_intubation_6m==0 & int_trach_6m==0 & ///
 int_gastro_tude_6m==0 & int_enteral_nut_6m==0 & int_cpr_6m==0
la var int_any_of5_6m "Any intensive pro last 6m, excl hemodial"
tab int_any_of5_6m, missing
tab int_any_of5_6m int_any_6m, missing
tab int_any_of5_6m int_hemodia_6m, missing


//check date of death for full decedent sample
tab r_exit_year_x if r_death_date_e==., missing
tab r_xwalk_yes if r_death_date_e==., missing
//if have xwalk, check if there is a dod present in the claims
gen r_ind_claims_dod = 0
replace r_ind_claims_dod=1 if r_claims_dod~=.
tab r_ind_claims_dod, missing
tab r_ind_claims_dod if r_death_date_e==., missing

//use the claims dod if the HRS dod is missing
gen r_death_date = r_death_date_e
replace r_death_date = r_claims_dod if  r_death_date_e==.
la var r_death_date "R DOD from HRS or claims"
gen r_use_claims_dod = 0
replace r_use_claims_dod = 1 if r_death_date_e==. & r_ind_claims_dod==1
tab r_use_claims_dod, missing

gen r_ind_dod = 0
replace r_ind_dod = 1 if r_death_date ~=.
la var r_ind_dod "Indicator R death date present"
tab r_ind_dod, missing

//Death date 2000-2011
gen r_death_year=year(r_death_date)
tab r_death_year, missing

gen r_ind_dod_00_12=(1999<r_death_year & r_death_year<2012 & r_death_year!=.)
tab r_death_year r_ind_dod_00_12, missing
la var r_ind_dod_00_12 "R DOD 2000 to 2011, 1=yes"
li r_death_date_e r_claims_dod r_xwalk_yes if r_death_year<1999

//Decedent has n1 core interview or n2 if n1 w/i 6m of death
gen r_days_n1_core_dead = r_death_date - r_c_ivw_date_n1
tab r_ind_dod if r_days_n1_core_dead==., missing
//missing days all have no core n1 interview
tab r_core_year_n1 if r_days_n1_core_dead==., missing

gen r_ind_n1_wi_6m_dead = .
replace r_ind_n1_wi_6m_dead=1 if r_days_n1_core_dead <183 & r_days_n1_core_dead!=.
replace r_ind_n1_wi_6m_dead=0 if r_days_n1_core_dead >=183 & r_days_n1_core_dead!=.
label var r_ind_n1_wi_6m_dead "r n1 core within 6m of death"
tab r_ind_n1_wi_6m_dead , missing

gen r_core_pre_ind=0
replace r_core_pre_ind=1 if r_core_year_n1!=. & r_ind_n1_wi_6m_dead==0
replace r_core_pre_ind=1 if r_core_year_n2!=. & r_ind_n1_wi_6m_dead==1
la var r_core_pre_ind "R has core interview gt 6m before death"
tab r_core_pre_ind, missing
tab r_core_pre_ind r_exit_year_x , missing

//Decedent had parts a and b coverage and no hmo 6m prior to death
gen byte ins_ind=.
replace ins_ind=1 if r_part_ab_6m==1 & r_hmo_d_6m==0
replace ins_ind=0 if r_part_ab_6m!=1 | r_hmo_d_6m!=0
la var ins_ind "FFS Medicare 6m pre-death"
tab ins_ind, missing

//married vs partnered
tab r_married_x r_married_or_part_v2_x, missing

//has spouse p1 interview
gen byte sp1core_ind=.
replace sp1core_ind=0 if s_core_year_p1==.
replace sp1core_ind=1 if s_core_year_p1!=.
tab sp1core_ind, missing
tab sp1core_ind r_exit_year_x , missing
tab s_core_year_p1 r_exit_year_x , missing

//has spouse n1 interview or n2 if n1 w/i 6m of R's death
gen s_days_n1_core_dead = r_death_date - s_c_ivw_date_n1
tab s_core_year_n1 if s_days_n1_core_dead==., missing
 
gen s_ind_n1_wi_6m_dead = .
replace s_ind_n1_wi_6m_dead=1 if s_days_n1_core_dead <183 & s_days_n1_core_dead!=.
replace s_ind_n1_wi_6m_dead=0 if s_days_n1_core_dead >=183 & s_days_n1_core_dead!=.
label var s_ind_n1_wi_6m_dead "S n1 core within 6m of death"
tab s_ind_n1_wi_6m_dead, missing

gen s_core_pre_ind=0
replace s_core_pre_ind=1 if s_core_year_n1!=. & s_ind_n1_wi_6m_dead==0
replace s_core_pre_ind=1 if s_core_year_n2!=. & s_ind_n1_wi_6m_dead==1
la var s_core_pre_ind "S has core interview gt 6m before death"
tab s_core_pre_ind, missing
tab s_core_pre_ind r_exit_year_x , missing

//for spouse cesd = use n2 ivw if n1 is within 6m of R's death
tab s_cesd_tot_n1 s_ind_n1_wi_6m_dead, missing
gen s_cesd_tot_n1n2 = s_cesd_tot_n1 if s_ind_n1_wi_6m_dead==0
replace s_cesd_tot_n1n2 = s_cesd_tot_n2 if s_ind_n1_wi_6m_dead==1
tab s_cesd_tot_n1n2 s_core_pre_ind, missing

gen byte cesd_miss_n1n2 = 0
replace cesd_miss_n1n2 =1 if s_cesd_tot_n1n2==.
gen byte cesd_miss_p1 = 0
replace cesd_miss_p1 =1 if s_cesd_tot_p1==.
tab cesd_miss_n1n2 cesd_miss_p1 , missing
gen byte cesd_miss_n1_p1 = 0
replace cesd_miss_n1_p1 =1 if cesd_miss_n1n2==1 | cesd_miss_p1 ==1
la var cesd_miss_n1_p1 "CESD missing either n1 or p1"
tab cesd_miss_n1_p1 , missing

//missing cesd b/c proxy interview - so not asked
gen s_proxy_n1n2 = s_proxy_core_n1 if s_ind_n1_wi_6m_dead==0
replace s_proxy_n1n2 = s_proxy_core_n2 if s_ind_n1_wi_6m_dead==1
tab s_proxy_n1n2 , missing
gen byte proxy_n1_or_p1 = 0
replace proxy_n1_or_p1 =1 if s_proxy_core_p1==1 | s_proxy_n1n2==1
la var proxy_n1_or_p1 "Ind. that s p1 or n1 ivw is via proxy"
tab proxy_n1_or_p1, missing

tab proxy_n1_or_p1 cesd_miss_n1_p1 if r_core_pre_ind==1 & r_xwalk_yes==1 & ///
	ins_ind==1 & r_married_or_part_v2_x==1 & sp1core_ind==1 & s_core_pre_ind==1 , missing

//cc's excluding cataract and glaucoma
gen cc_all_count_12m_2 = cc_1_ami_n12mn0 + cc_2_alzh_n12mn0 + cc_3_alzhdmta_n12mn0 + ///
cc_4_atrialfb_n12mn0 + /*cc_5_cataract_n12mn0 +*/ cc_6_chrnkidn_n12mn0 + ///
cc_7_copd_n12mn0 + cc_8_chf_n12mn0 + cc_9_diabetes_n12mn0 + /*cc_10_glaucoma_n12mn0 +*/ ///
cc_11_hipfrac_n12mn0 + cc_12_ischmcht_n12mn0 + cc_13_depressn_n12mn0 + ///
cc_14_osteoprs_n12mn0 + cc_15_ra_oa_n12mn0 + cc_16_strketia_n12mn0 + ///
cc_17_cncrbrst_n12mn0 + cc_18_cncrclrc_n12mn0 + cc_19_cncrprst_n12mn0 + ///
cc_20_cncrlung_n12mn0 + cc_21_cncrendm_n12mn0
la var cc_all_count_12m_2 "Count of cc's, excludes cataract and glaucoma"

tab cc_all_count_12m_2, missing

gen byte no_cc_12m_excl_cataract = .
replace no_cc_12m_excl_cataract =1 if cc_all_count_12m_2==0
replace no_cc_12m_excl_cataract =0 if (cc_all_count_12m_2>0 & cc_all_count_12m_2!=.)
la var no_cc_12m_excl_cataract "Ind. for no Chronic conditions 12m before death"
tab no_cc_12m_excl_cataract , missing

//cause of death = Accidents, Suicide, Homicide (var = 12)
tab r_cause_death_12_n_e, missing
replace r_cause_death_12_n_e=. if r_cause_death_12_n_e==14
gen byte accident_cause_death = .
replace accident_cause_death =1 if r_cause_death_12_n_e==12
replace accident_cause_death =0 if (r_cause_death_12_n_e!=12 & r_cause_death_12_n_e!=.)
la var accident_cause_death "Cause of death = accidents, suicide, homicide"
tab accident_cause_death r_exit_year_x, missing
gen _deathyear=year(r_death_date)
tab _deathyear accident_cause_death, missing

************************************************************
//set matrix for sample size determination table
mat sample=J(13,1,.)

//all decedents from 2002-2012 exit interviews
sum r_exit_year_x, detail
mat sample[1,1]=r(N)

//decedents with date of death 2000-2011 for full ndi information
sum r_exit_year_x if r_ind_dod_00_12==1, detail
mat sample[2,1]=r(N)

//decedents with pre-death core interview
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1, detail
mat sample[3,1]=r(N)

//decedents with n1 core + xwalk
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1, detail
mat sample[4,1]=r(N)

//decedents with n1 core + xwalk + ffs mc last 6 months of life
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1, detail
mat sample[5,1]=r(N)

//decedents with n1 core + xwalk + partnered
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1, detail
mat sample[6,1]=r(N)

//decedents with n1 core + xwalk + partnered + spouse p1 interview
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & sp1core_ind==1, detail
mat sample[7,1]=r(N)

//decedents with n1 core + xwalk + partnered + spouse p1 and n1 interview
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & sp1core_ind==1 & s_core_pre_ind==1, detail
mat sample[8,1]=r(N)

//full n1 p1 cesd interview?
//missing cesd b/c of proxy interview
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & /// 
sp1core_ind==1 & s_core_pre_ind==1 & proxy_n1_or_p1==0, detail
mat sample[9,1]=r(N)

//missing cesd for unknown reason (has interviews and not proxy interviews)
//decedents with n1 core + xwalk + partnered + spouse p1 interview 
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & /// 
sp1core_ind==1 & s_core_pre_ind==1 & proxy_n1_or_p1==0 & cesd_miss_n1_p1==0, detail
mat sample[10,1]=r(N)

//using chronic conditions 1 year prior to death, excluding cataract and glaucoma
//decedents with n1 core + xwalk + partnered + spouse p1 interview
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & /// 
sp1core_ind==1 & s_core_pre_ind==1 & proxy_n1_or_p1==0 & cesd_miss_n1_p1==0 & ///
no_cc_12m_excl_cataract==0, detail
mat sample[11,1]=r(N)

//cause of death = Accidents, Suicide, Homicide (var = 12)
//using ccs v2
//decedents with n1 core + xwalk + partnered + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & /// 
sp1core_ind==1 & s_core_pre_ind==1 & proxy_n1_or_p1==0 & cesd_miss_n1_p1==0 & ///
no_cc_12m_excl_cataract==0 & accident_cause_death==0, detail
mat sample[12,1]=r(N)
************************************************************

//p1 interview within 30, 90 days of r's death
gen days_p1_core_dead =  s_c_ivw_date_p1 -  r_death_date_e
gen p1_wi_90d = .
replace p1_wi_90d=1 if days_p1_core_dead<=90
replace p1_wi_90d=0 if (days_p1_core_dead>90 & days_p1_core_dead!=.)
la var p1_wi_90d "p1 interview w/i 90 days r death"
tab p1_wi_90d, missing

gen p1_wi_30d = .
replace p1_wi_30d=1 if days_p1_core_dead<=30
replace p1_wi_30d=0 if (days_p1_core_dead>30 & days_p1_core_dead!=.)
la var p1_wi_30d "p1 interview w/i 30 days r death"
tab p1_wi_30d, missing

//decedents with n1 core + xwalk + partnered + spouse p1 interview + p1 > 90 days post death
sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & /// 
sp1core_ind==1 & s_core_pre_ind==1 & no_cc_12m_excl_cataract==0 ///
& accident_cause_death==0 & cesd_miss_n1_p1==0 & p1_wi_90d==0, detail
mat sample[13,1]=r(N)

mat list sample

frmttable using `logpath'\1-spouse_intens_pro_sample , statmat(sample) ///
	title("2012 sample size estimate - requiring an n1 core interview") ///
	ctitle("","n") ///
	rtitle("All decedents from 2002-2012 exit interviews" \ ///
	"Date of death 2000-2011 for full ndi info" \ "With pre-death core interview" \ ///
	"With mc xwalk id" \ "With FFS mc last 6 months of life" \ "Partnered at time of death" \ ///
	"Spouse p1 core interview" \"Spouse pre-death core interview" \ ///
	"Not Proxy n1 or p1 s interview" \ "Full CESD interview n1 and p1" \ ///
	"No comorb 12m before death" \ "Accidents, Suicide, Homicide or Missing = cause of death" \ ///
	"p1 ivw 90+ days from r's death") ///
	note("Pre-death core interview defined as having core interview at least" \ ///
	"6m prior to R's death for both R and S. No comorb 12m before death uses data" \ ///
	"warehouse chronic conditions excluding cataract and glaucoma.") ///
	sdec(0) replace
**************************************************
//details re n1 vs n2 interviews and missingness
mat n1n2=J(14,2,.)

sum r_exit_year_x if r_ind_dod_00_12==1, detail //all 2002-2012 exit interviews with dod 2000 to 2011
mat n1n2[1,1]=r(N)

//number requiring n1
//the n=305 missing are all missing a pre-death core interview
tab r_core_year_n1 if r_ind_dod_00_12==1 & r_days_n1_core_dead==., missing
tab r_ind_n1_wi_6m_dead, missing matcell(n1)
mat n1n2[2,1]=n1[1,1]+n1[3,1] //require n1, do those missing and those with ivw before 6m
mat n1n2[2,2]=n1[2,1]

sum r_core_pre_ind if r_ind_dod_00_12==1 & (r_ind_n1_wi_6m_dead==0 | r_days_n1_core_dead==.)  //have n1
mat n1n2[3,1]=r(mean)*r(N)

sum r_core_pre_ind if r_ind_dod_00_12==1 & r_ind_n1_wi_6m_dead==1  //have n2
mat n1n2[3,2]=r(mean)*r(N)

sum r_exit_year_x if r_ind_dod_00_12==1 & r_core_pre_ind==1, detail //overall with pre-death core interview
mat n1n2[4,1]=r(N)

//with next set of requirements (xwalk, partner, s p1 core)
local req1 r_ind_dod_00_12==1 & r_core_pre_ind==1 & r_xwalk_yes==1 & ins_ind==1 &  r_married_or_part_v2_x==1 & sp1core_ind==1
sum r_exit_year_x if `req1', detail
mat n1n2[5,1]=r(N)

tab s_core_year_n1 if s_days_n1_core_dead==., missing
tab s_ind_n1_wi_6m_dead if `req1', missing matcell(n1)
mat n1n2[6,1]=n1[1,1]+n1[3,1] //require n1, do those missing and those with ivw before 6m
mat n1n2[6,2]=n1[2,1]

sum s_core_pre_ind if (s_ind_n1_wi_6m_dead==0 | s_ind_n1_wi_6m_dead==.) & `req1' //have n1
mat n1n2[7,1]=r(mean)*r(N)

sum s_core_pre_ind if s_ind_n1_wi_6m_dead==1 & `req1' //have n2
mat n1n2[7,2]=r(mean)*r(N)

sum r_exit_year_x if s_core_pre_ind==1 & `req1', detail //overall with pre-death core interview
mat n1n2[8,1]=r(N)

//not proxy n1 or p1, split by the n1 vs n2 interview groups
sum r_exit_year_x if `req1' & s_core_pre_ind==1 & proxy_n1_or_p1==0 & s_ind_n1_wi_6m_dead==0 , detail
mat n1n2[9,1]=r(N)

sum r_exit_year_x if `req1' & s_core_pre_ind==1 & proxy_n1_or_p1==0 & s_ind_n1_wi_6m_dead==1 , detail
mat n1n2[9,2]=r(N)

sum r_exit_year_x if `req1' & s_core_pre_ind==1 & proxy_n1_or_p1==0 , detail
mat n1n2[10,1]=r(N)

//missing ces-d, split by the n1 vs n2 interview
local req2 `req1' & s_core_pre_ind==1 & proxy_n1_or_p1==0
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 & s_ind_n1_wi_6m_dead==0, detail
mat n1n2[11,1]=r(N)
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 & s_ind_n1_wi_6m_dead==1, detail
mat n1n2[11,2]=r(N)
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 , detail
mat n1n2[12,1]=r(N)

//at least 1 comorbidity
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 & s_ind_n1_wi_6m_dead==0 & no_cc_12m_excl_cataract==0, detail
mat n1n2[13,1]=r(N)
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 & s_ind_n1_wi_6m_dead==1 & no_cc_12m_excl_cataract==0, detail
mat n1n2[13,2]=r(N)

//cause of death not accident, etc or missing
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 & s_ind_n1_wi_6m_dead==0  ///
 & no_cc_12m_excl_cataract==0 & accident_cause_death==0 , detail
mat n1n2[14,1]=r(N)
sum r_exit_year_x if `req2' & cesd_miss_n1_p1==0 & s_ind_n1_wi_6m_dead==1 ///
 & no_cc_12m_excl_cataract==0 & accident_cause_death==0 , detail
mat n1n2[14,2]=r(N)

mat list n1n2
	
frmttable using `logpath'\1-spouse_intens_pro_sample , statmat(n1n2) ///
	title("Sample details re n1 vs n2 interview required if n1 w/i 6m of R's death") ///
	ctitle("","n","n" \ "" "Use n1" "Use n2") ///
	rtitle("All decedents from 2002-2012 exit interviews and dod 2000-2011" \ "Where R n1 or n2 ivw is needed" \ ///
	"R has n1 or n2 ivw" \ "R has pre-death core ivw" \ "W/ FFS MC, partnered, S has p1 ivw" \ ///
	"S n1 or n2 ivw needed" \ "S has n1 or n2 ivw" \"S has pre-death core interview" \ ///
	"S Not proxy by n1 or n2" \ "S not proxy pre or post ivw" \ "S Full CESD by n1 or n2" \ ///
	"Full CESD interview n1 and p1" \ "R At least 1 comorbidity" \ "R cause death not missing or accident,etc.") ///
	note("Pre-death core interview defined as having core interview at least" \ ///
	"6m prior to R's death for both R and S.") ///
	sdec(0) addtable
	
**************************************************
/*drop observations not in the sample*/
drop if r_ind_dod_00_12!=1
drop if r_core_pre_ind==0
drop if r_xwalk_yes==0
drop if ins_ind==0 
drop if r_married_or_part_v2_x==0 
drop if sp1core_ind==0
drop if s_core_pre_ind==0
drop if cesd_miss_n1_p1==1
drop if no_cc_12m_excl_cataract==1
drop if accident_cause_death==1 | accident_cause_death==.

tab r_exit_year_x r_core_year_n1

la def r_cause_death_12_n_e 1 "Infectious disease" 2 "HIV/AIDS" ///
3 "Cardiovascular disease" 4 "Chronic lower respiratory disease" ///
5 "Other Respiratory disease" 6 "Diabetes" 7 "Alzheimers Disease" ///
9 "Neoplasms" 10 "Kidney Disease (not infectious)" ///
11 "Liver, Gallbladder, Stomach and/or Intestinal disease" ///
12 "Accidents, Suicide, Homicide" 13 "Other"

la val r_cause_death_12_n_e r_cause_death_12_n_e
tab r_cause_death_12_n_e, missing

li r_death_date_e r_claims_dod r_xwalk_yes if r_death_year<1999

**************************************************
//tables looking at intensive procedure use in the sample
//just do for those with spouse with full cesd information

//generate indicators hospice use
gen r_hs_1d_6m = .
replace r_hs_1d_6m = 1 if hs_los_6m>=1 & hs_los_6m!=.
replace r_hs_1d_6m = 0 if hs_los_6m<1 & hs_los_6m!=.

gen r_hs_3d_6m = .
replace r_hs_3d_6m = 1 if hs_los_6m>=3 & hs_los_6m!=.
replace r_hs_3d_6m = 0 if hs_los_6m<3 & hs_los_6m!=.

gen r_hs_7d_6m = .
replace r_hs_7d_6m = 1 if hs_los_6m>=7 & hs_los_6m!=.
replace r_hs_7d_6m = 0 if hs_los_6m<7 & hs_los_6m!=.

la var r_hs_1d_6m "1+ days hospice use vs 0 days"
la var r_hs_3d_6m "3+ days hospice use vs 0-2 days"
la var r_hs_7d_6m "7+ days hospice use vs 0-6 days"

//hospice and intensive procedure use overlap?
gen hs_and_intens_pro = .
replace hs_and_intens_pro = 1 if r_hs_3d_6m==1 & int_any_of5_6m==1
replace hs_and_intens_pro = 0 if r_hs_3d_6m==0 | int_any_of5_6m==0
la var hs_and_intens_pro "Hospice 3+ days and Intensive Proced"

*********************************************************
save spouse_intens_data_sample.dta, replace
*********************************************************

la var int_intubation_6m "Intubation and mechanical ventilation"
la var int_trach_6m "Tracheostomy"
la var int_gastro_tude_6m "Gastrostomy tube insertion"
la var int_hemodia_6m "Hemodialysis"
la var int_enteral_nut_6m "Enteral or parenteral nutrition"
la var int_cpr_6m "CPR"

//first, look at intensive procedures in the sample
local intvars int_intubation_6m int_trach_6m int_gastro_tude_6m ///
int_hemodia_6m int_enteral_nut_6m int_cpr_6m int_any_6m int_any_of5_6m ///
r_hs_1d_6m r_hs_3d_6m r_hs_7d_6m hs_and_intens_pro 

mat int_n=J(1,1,.)
sum r_exit_year_x 
mat int_n[1,1]=r(N)

mat rownames int_n="N"
frmttable, statmat(int_n) sdec(0) store(int1)

mat int_2=J(12,1,.)
local r = 1
foreach v in `intvars'{
	tab `v' , missing	
	sum `v' , detail
	mat int_2[`r',1]=r(mean)*100 //percent
	local r = `r'+1
}

mat list int_2

mat rownames int_2=`intvars'

frmttable, varlabels statmat(int_2) sdec(2) store(int2)

//looking at hospice LOS
mat int_3 = J(2,2,.)

//row 1 = los overall sample
local r = 1
sum hs_los_6m , detail
mat int_3[`r',1]=r(mean)
mat int_3[`r',2]=r(sd)

//row 2 = los if 3+ day hospice use
local r = 2
sum hs_los_6m if r_hs_3d_6m==1, detail
mat int_3[`r',1]=r(mean)
mat int_3[`r',2]=r(sd)

mat rownames int_3="Hospice LOS, mean (SD)" "LOS if 3+days use, mean (SD)"
mat list int_3

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(2,1,1)

frmttable, statmat(int_3) ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(int3) 	

outreg , replay(int1) append(int2) store(inta)

outreg using `logpath'\1-spouse_intens_pro_sample , ///
	replay(inta) append(int3) ///
	title("Intensive procedures") ///
	ctitle("","%") ///
	note("Decedents 2002-2012 exit interviews, with n1 core interview and ffs medicare" \ ///
	"last 6m of life, married at time of death with spouse with pre and post death core interview" \ ///
	"and pre and post death CES-D score complete." \ ///
	"Also excludes observations where cause of death = accidents, etc, or missing; or" \ ///
	"no comorb 12m before death excluding cataract and glaucoma." \ ///
	"Hospice use is based on claims in the last 6 months of R's life.") ///
	addtable
	
**************************************************
//cross tabulation of hospice use and intensive procedures
tab int_any_of5_6m r_hs_3d_6m  , missing

mat xtab=J(5,2,.)
sum r_exit_year_x  //sample 
mat xtab[1,1] = r(N)

sum r_exit_year_x if int_any_of5_6m==0 & r_hs_3d_6m==0
mat xtab[2,1]=r(N) //n
mat xtab[3,1]=r(N)/xtab[1,1]*100 //percent

sum r_exit_year_x if int_any_of5_6m==0 & r_hs_3d_6m==1
mat xtab[2,2]=r(N) //n
mat xtab[3,2]=r(N)/xtab[1,1]*100 //percent

sum r_exit_year_x if int_any_of5_6m==1 & r_hs_3d_6m==0
mat xtab[4,1]=r(N) //n
mat xtab[5,1]=r(N)/xtab[1,1]*100 //percent

sum r_exit_year_x if int_any_of5_6m==1 & r_hs_3d_6m==1
mat xtab[4,2]=r(N) //n
mat xtab[5,2]=r(N)/xtab[1,1]*100 //percent
**************************************************

mat list xtab

frmttable using `logpath'\1-spouse_intens_pro_sample , ///
	statmat(xtab) sdec(0\0\2\0\2) ///
	title("Crosstabulation of hospice use and intensive procedure use") ///
	ctitles("", "No Hospice Use", "Hospice Use") ///
	rtitles("N overall" \ "Intensive procedure No, n" \ "%" \ "Yes, n"\ "%") ///
	note("Hospice use = 3+ days in last 6m of life") addtable


**************************************************
log close



H="redo define new vars"
capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\2-Spouse_intensive_variablesetup.txt", text replace

cd `datapath'

use spouse_intens_data_sample.dta
*************************************************
tab r_exit_year_x, missing

*************************************************
//demographic variables
sum r_age, detail
sum s_age, detail

//gender
la var s_female "S Female"
la def fem 0 "Male" 1 "Female"
la val s_female r_female fem
tab r_female, missing
tab s_female, missing
tab r_female s_female

//race & ethnicity
tab r_race_e r_hisp_eth_e, missing
//gen race_categorical variable including hispanic
foreach g in r s {
gen `g'_race_cat = 0 if `g'_white_e==1 & `g'_hisp_eth_e==0
replace `g'_race_cat = 1 if `g'_black_e==1 & `g'_hisp_eth_e==0
replace `g'_race_cat = 2 if `g'_hisp_eth_e==1
replace `g'_race_cat = 3 if `g'_other_na_api_race_e==1 & `g'_hisp_eth_e==0
tab `g'_race_cat, missing
tab `g'_race_cat `g'_white_e, missing
tab `g'_race_cat `g'_black_e, missing
tab `g'_race_cat `g'_hisp_eth_e, missing
tab `g'_race_cat `g'_other_na_api_race_e, missing
la var `g'_race_cat "`g' race, categorical"
}

la def race_cat 0 "White, non-Hispanic" 1 "Black, non-Hispanic" ///
2 "Hispanic" 3 "Other race, non-Hispanic"
la val r_race_cat s_race_cat race_cat
tab r_race_cat, missing
tab s_race_cat, missing

tab s_white_e r_white_e, missing

foreach g in r s {
tab `g'_race_cat, gen(`g'_race_cat)
}

//education, from tracker file, degree variable
tab r_degree_e r_educ_n1, missing
label variable r_degree_e "R's Eduction, Highest Level, from Tracker file"
label define r_degree_e 0 "No degree" 1 "GED" 2 "High School" 3 "2yr college degree" ///
  4 "4yr College degree" ///
      5 "Master degree" 6"Professional degree" 9 "degree unknown/some college", modify
label values r_degree_e r_degree_e 
tab r_degree_e, missing

//create r hs degree variable
tab r_degree_e r_hseduc , missing
la var r_hseduc "R HS Degree, from tracker, 1=yes"

//code s-education variable from tracker file
label variable s_degree_e "S's Eduction, Highest Level, from Tracker file"
label values s_degree_e r_degree_e 
tab s_degree_e, missing

//create s hs degree variable
tab s_degree_e s_hseduc , missing
la var s_hseduc "S HS Degree, from tracker, 1=yes"

//marital status
tab r_married_x, missing

*************************************************
//additional respondant variables
tab r_nw_lowest_n1, missing
tab r_nw_midlow_n1, missing
tab r_nw_midhigh_n1, missing 
tab r_nw_highest_n1, missing

tab r_imprelig_vimp_n1, missing
tab s_imprelig_vimp_n1, missing

//adl indicator for needing assistance
gen s_adl_impair_n1 = 0 if  s_adl_independent_core_n1 == 1
replace s_adl_impair_n1 = 1 if s_adl_independent_core_n1 == 0
la var s_adl_impair_n1 "S ADL impairment n1"
tab s_adl_impair_n1 s_adl_independent_core_n1, missing

gen r_adl_impair_n1 = 0 if  r_adl_independent_core_n1 == 1
replace r_adl_impair_n1 = 1 if r_adl_independent_core_n1 == 0
la var r_adl_impair_n1 "R ADL impairment n1"
tab r_adl_impair_n1 r_adl_independent_core_n1, missing

gen r_adl_impair_n2 = 0 if  r_adl_independent_core_n2 == 1
replace r_adl_impair_n2 = 1 if r_adl_independent_core_n2 == 0
la var r_adl_impair_n2 "R ADL impairment n2"
tab r_adl_impair_n2 r_adl_independent_core_n2, missing

//insurance status
tab r_medicaid_n1 s_medicaid_n1, missing
tab r_medigap_n1 s_medigap_n1, missing
tab r_champus_n1 s_champus_n1, missing

//eol planning
tab r_advdir_x, missing
tab r_discuss_x, missing
tab r_eoldec_x, missing
tab r_eoldec_x int_any_of5_6m , missing 

//chronic conditions count, excluding glaucoma and cataract
gen cc_all_count_6m12m_2 = cc_1_ami_n12mn6m + cc_2_alzh_n12mn6m + cc_3_alzhdmta_n12mn6m + ///
cc_4_atrialfb_n12mn6m + /*cc_5_cataract_n12mn6m +*/ cc_6_chrnkidn_n12mn6m + ///
cc_7_copd_n12mn6m + cc_8_chf_n12mn6m + cc_9_diabetes_n12mn6m + /*cc_10m_glaucoma_n12mn6m +*/ ///
cc_11_hipfrac_n12mn6m + cc_12_ischmcht_n12mn6m + cc_13_depressn_n12mn6m + ///
cc_14_osteoprs_n12mn6m + cc_15_ra_oa_n12mn6m + cc_16_strketia_n12mn6m + ///
cc_17_cncrbrst_n12mn6m + cc_18_cncrclrc_n12mn6m + cc_19_cncrprst_n12mn6m + ///
cc_20_cncrlung_n12mn6m + cc_21_cncrendm_n12mn6m
la var cc_all_count_6m12m_2 "Count of cc's, 6-12m pre-death, excludes cataract and glaucoma"
tab cc_all_count_6m12m_2 , missing

//categorical spouse primary helper, duration'
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing
gen r_s_help_dur_cat = 0 if r_adl_sp_helper_x==0 & r_iadl_sp_helper_x==0
replace r_s_help_dur_cat = 1 if r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1
replace r_s_help_dur_cat = 2 if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) ///
 & ( r_adl_sp_helper_n1==1 | r_iadl_sp_helper_n1==1)
la def help 0 "S not primary helper x" 1 "S primary helper x only" 2 "S primary helper x+n1"
la val r_s_help_dur_cat help
tab r_s_help_dur_cat, missing

tab r_s_help_dur_cat, gen(r_s_help_dur_ind)

la var r_s_help_dur_ind1 "S not prim helper exit"
la var r_s_help_dur_ind2 "S prim helper exit only"
la var r_s_help_dur_ind3 "S prim helper exit and n1"

*************************************************
//hospice , intensive procedures timing variables
gen proc_to_hs_enrol = hs_enrol_dt - first_proc_date_excl_hd_6m 
tab proc_to_hs_enrol, missing

gen hs_enrol_to_death = r_death_date - hs_enrol_dt
tab hs_enrol_to_death , missing
tab hs_los_6m if hs_enrol_to_death>180 & hs_enrol_to_death~=.

*************************************************
//interview timeline variables
//note these use the dod from HRS if present and claims if HRS is missing
sum r_days_n1_core_dead, detail
sum s_days_n1_core_dead, detail

gen r_days_n2_core_dead = r_death_date-r_c_ivw_date_n2
gen s_days_n2_core_dead = r_death_date-s_c_ivw_date_n2
label var r_days_n2_core_dead "Days from R's n2 ivw to death"
label var s_days_n2_core_dead "Days from S's n2 ivw to R's death"

gen r_days_x_exit_dead = r_e_ivw_date_x - r_death_date
label var days_p1_core_dead "Days from R's death to S p1 interview"
sum r_days_x_exit_dead, detail
sum days_p1_core_dead, detail

//create categorical variable for 6m intervals for death to p1 ivw
//categorical variable for interview timing from r's death
gen days_p1_core_dod_cat = .
replace days_p1_core_dod_cat = 0 if 0<=days_p1_core_dead & days_p1_core_dead<183
replace days_p1_core_dod_cat = 1 if 183<=days_p1_core_dead & days_p1_core_dead<366
replace days_p1_core_dod_cat = 2 if 366<=days_p1_core_dead & days_p1_core_dead<548
replace days_p1_core_dod_cat = 3 if 548<=days_p1_core_dead & days_p1_core_dead<731
replace days_p1_core_dod_cat = 4 if 731<=days_p1_core_dead & days_p1_core_dead !=.
la def days_p1_core_dod_cat 0 "0-6 months" 1 "6-12 months" 2 "12-18 months" ///
3 "18-24 months" 4 "24+ months"
la var days_p1_core_dod_cat "Days from R death to p1 interview, categorical"
la val days_p1_core_dod_cat days_p1_core_dod_cat 
tab days_p1_core_dod_cat , missing

tab days_p1_core_dod_cat , gen(p1_ind)
rename p1_ind1 days_p1_core_dod_lt6m 
rename p1_ind2 days_p1_core_dod_6_12m 
rename p1_ind3 days_p1_core_dod_12_18m 
rename p1_ind4 days_p1_core_dod_18_24m 
rename p1_ind5 days_p1_core_dod_gt2yr 

la var days_p1_core_dod_lt6m "R death to P1 ivw lt 6m"
la var days_p1_core_dod_6_12m "R death to P1 ivw 6-12m"
la var days_p1_core_dod_12_18m "R death to P1 ivw 12-18m"
la var days_p1_core_dod_18_24m "R death to P1 ivw 18-24m"
la var days_p1_core_dod_gt2yr "R death to P1 ivw gt 2yr"

foreach v in days_p1_core_dod_lt6m days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr{
	sum days_p1_core_dead if `v'==1, detail
}

tab r_ind_n1_wi_6m_dead, missing
tab s_ind_n1_wi_6m_dead, missing

*************************************************
//variables that use n2 core if r n1 within 6m of death
local rvarn1n2 r_nhres r_rel_nb r_adl_impair r_srh_pf 
local svarn1n2 s_psych_overall_hrs s_cesd_tot_ge3 s_srh_pf s_adl_independent_core
//note s_cesd_tot_n1n2 created in previous section

foreach i in r s{
	foreach v in ``i'varn1n2'{
		tab `v'_n1 `i'_ind_n1_wi_6m_dead, missing
		gen `v'_n1n2 = `v'_n1 if `i'_ind_n1_wi_6m_dead==0
		replace `v'_n1n2 = `v'_n2 if `i'_ind_n1_wi_6m_dead==1
		tab `v'_n1n2, missing
	}
}

la var r_nhres_n1n2 "R NH Res at n1 or n2 core"
la var r_rel_nb_n1n2 "R Relatives nearby at n1 or n2 core"
la var r_adl_impair_n1n2 "R ADL Impaired at n1 or n2 core"
la var r_srh_pf_n1n2 "R SRH Fair/Poor n1 or n2 core"

la var s_psych_overall_hrs_n1n2 "S Psych condition n1 or n2 core"
la var s_cesd_tot_n1n2 "S CES-D score, n1 or n2 core"
la var s_cesd_tot_ge3_n1n2 "S Depressed CESD 3+, n1 or n2 core"
la var s_srh_pf_n1n2 "S SRH Poor/Fair, n1 or n2 core"
la var s_adl_independent_core_n1n2 "S ADL Independent, n1 or n2 core"

//timing pre to post interview
//first variable n1 to p1 for all 
gen s_days_n1_to_p1 = s_days_n1_core_dead + days_p1_core_dead
sum s_days_n1_to_p1, detail

//second is n1 or n2 if n1 within 6m of death to p1
gen s_days_n1n2_to_p1 = s_days_n1_to_p1 if s_ind_n1_wi_6m_dead==0
replace s_days_n1n2_to_p1 = s_days_n2_core_dead + days_p1_core_dead if s_ind_n1_wi_6m_dead==1
sum s_days_n1n2_to_p1, detail

label var s_days_n1_to_p1 "Days S n1 interview to p1 core"
label var s_days_n1n2_to_p1 "Days S n1 or n2 to p1 core (use n2 if n1 within 6m of death)"

*************************************************
//s comorb category indicators
tab s_comor_c_hrs_n1, missing
tab s_comor_c_hrs_n1, gen(scom)
rename scom1 s_hrs_comorb_none_n1
rename scom2 s_hrs_comorb_mild_n1
rename scom3 s_hrs_comorb_mod_n1
rename scom4 s_hrs_comorb_sev_n1

tab s_hrs_comorb_none_n1, missing
tab s_hrs_comorb_mild_n1, missing
tab s_hrs_comorb_mod_n1, missing
tab s_hrs_comorb_sev_n1, missing

//since only 1 obs has severe, categorize as mod
replace s_hrs_comorb_mod_n1=1 if s_hrs_comorb_sev_n1==1

*************************************************
//s cesd change variables from interview before 6m before R's death to p1 interview

//change cesd count n1 to p1?
gen s_cesdchange= s_cesd_tot_p1- s_cesd_tot_n1n2
tab s_cesdchange, missing
la var s_cesdchange "Change in S's CESD count n1 to p1"
*histogram s_cesdchange

//CESD improvement indicator
gen byte s_cesdbetter=.
replace s_cesdbetter= 1 if s_cesdchange <0
replace s_cesdbetter= 0 if (s_cesdchange >=0 & s_cesdchange !=.)
la var s_cesdbetter "S CESD Improvement n1 to p1"

//CESD decline indicator
gen byte s_cesdworse=.
replace s_cesdworse= 1 if (s_cesdchange >0 & s_cesdchange !=.)
replace s_cesdworse= 0 if s_cesdchange <=0 
la var s_cesdworse"S CESD Decline n1 to p1"

//CESD decline indicator
gen byte s_cesdsame=.
replace s_cesdsame= 1 if s_cesdchange ==0
replace s_cesdsame= 0 if (s_cesdchange !=0 & s_cesdchange !=.)
la var s_cesdsame "S CESD Stable n1 to p1"

tab s_cesdchange s_cesdbetter, missing
tab s_cesdchange s_cesdworse, missing
tab s_cesdchange s_cesdsame , missing

//cesd change categorical variable
gen s_cesdchange_3 =.
replace s_cesdchange_3 =1 if (s_cesdchange <0 & s_cesdchange!=.) // improvement
replace s_cesdchange_3 =-1 if (s_cesdchange >0 & s_cesdchange!=.) //decline
replace s_cesdchange_3 =0 if (s_cesdchange ==0) //no change
la var s_cesdchange_3 "S CESD change categories n1 to p1"
la def s_cesdchange_3 1 "Improvement" 0 "No change" -1 "Decline"
la val s_cesdchange_3 s_cesdchange_3 
tab s_cesdchange_3, missing

//cesd improved from >=3 to 3-  look at CESD 3 clin depression change 
//(three options compared to improved or not*
gen s_cesd_ge3_change= s_cesd_tot_ge3_p1- s_cesd_tot_ge3_n1n2

//cesd improved: 3 or higher in n1 to less than 3 in p1
gen byte s_cesd_ge3better = .
replace s_cesd_ge3better = 1 if s_cesd_ge3_change < 0
replace s_cesd_ge3better = 0 if (s_cesd_ge3_change >= 0 & s_cesd_ge3_change !=.)
la var s_cesd_ge3better "S CESD change from 3+ n1 to <3 p1"
tab s_cesd_ge3better s_cesd_ge3_change, missing

//cesd same or better: 2 or higher in n1 to less than 3 in p1 or no change
gen byte s_cesd_ge3betterorsame = .
replace s_cesd_ge3betterorsame = 1 if s_cesd_ge3_change<=0
replace s_cesd_ge3betterorsame = 0 if (s_cesd_ge3_change > 0 & s_cesd_ge3_change !=.)
la var s_cesd_ge3betterorsame "S CESD no change or change from 3+ n1 to <3 p1"
tab s_cesd_ge3betterorsame s_cesd_ge3_change, missing
*************************************************
//spouse primary caregiver per exit helper details?
tab r_adl_sp_helper_x r_iadl_sp_helper_x, missing

*************************************************
//regional variables
sum hci_index, detail
sum hospital_beds, detail
sum specialists, detail
*************************************************
//30 day indicator
gen proc_to_death=r_death_date-last_proc_date_excl_hd_6m
gen int_any_30d=proc_to_death<31

*************************************************
save spouse_intens_data_cleaned.dta, replace

*************************************************
log close


H="redo psmatch "
capture log close

clear all
set more off

local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\6-Spouse_intensive_ps_match.txt", text replace

cd `datapath'

use spouse_intens_data_cleaned.dta 
*******************************************************************

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local region hci_index hospital_beds specialists

local svars s_age s_female s_race_cat1  ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr

//drop observations that are missing in any of the variables
foreach v in `rvars' `svars'{
qui tab `v', missing
qui drop if `v'==.
}

qui tab int_any_of5_6m , missing

//save this dataset with no missing variables
save spouse_intens_data_ps_set.dta, replace
*******************************************************************
//look at some additional variables
*******************************************************************
label define decmaker 0 "N/A No EOL care decision made" 1 "Patient" ///
      2 "Spouse or Partner" 3 "Exit Interview Proxy"  ///
      4 "Child/Child-in-law/Grandchild" 5 "Other Relative" 6 "Friend" ///
      7 "Physician/Health Care Provider" 8 "Minister/Rabbi/Priest" ///
      9 "Other" 10 "Don't Know/Refused", modify
label values r_decmaker_x decmaker

tab r_decmaker_x, missing
tab r_eoldec_x, missing
tab r_eoldec_x int_any_of5_6m, missing
tab r_dexp_x, missing
tab r_capacity_x, missing
tab r_s_help_dur_cat, missing

*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x
drop x
//generate pscore variable hs_pscore
pscore int_any_of5_6m `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
local caliper cal_ps1
di `caliper'
//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  int_any_of5_6m,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates variable _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_of5_6m) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_of5_6m==1 & _support==1
gen `v'_comparison = `v' if int_any_of5_6m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v', replace
}

mat vr=J(34,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
sum `v' if int_any_of5_6m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if int_any_of5_6m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if int_any_of5_6m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if int_any_of5_6m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_of5_6m==1, missing //n=1 treated dropped, off comm support
tab _support if int_any_of5_6m==0, missing
tab _weight if int_any_of5_6m==1, missing
sum _weight if int_any_of5_6m==0 //n=2 control dropped, no weight assigned

rename _weight ip_weight

save spouse_intens_data_ps_matched.dta, replace

//run the doubly robust models
la var int_any_of5_6m "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_of5_6m `rvars' `svars' [pw=ip_weight], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_of5_6m `rvars' `svars' [pw=ip_weight], or
outreg using `logpath'\6_dr_est_results_ps_matched, replace ///
merge(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_of5_6m `rvars' `svars' [pw=ip_weight]
outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape 

logit s_cesdworse int_any_of5_6m `rvars' `svars' [pw=ip_weight], or
outreg, ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)


*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_of5_6m `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight]

outreg using `logpath'\6_dr_est_results_ps_matched, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  

*******************************************************************
log close



H="compare datasets"

/*the datasets match for all variables that don't have dod issues. */

capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local origdata E:\data\spouse_intensive\data
local datapath E:\data\spouse_intensive\int_data


cd `datapath'

use `origdata'\spouse_intens_data_ps_set.dta
gen source=1
append using `datapath'\spouse_intens_data_ps_set.dta
duplicates drop r_id source, force
drop if r_death_date_e!=r_death_date_e1 & r_death_date_e1!=.
duplicates tag r_id, gen(dup)
drop if dup==0
drop dup

foreach v of varlist * {
	if "`v'" !="r_id" {
		duplicates tag r_id `v', gen(dup)
		sum dup
		if r(sd)==0 & r(mean)==1 {
			drop `v'
}
		drop dup
}
}






H="propensity match - caregivers only"
capture log close

clear all
set more off

local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\6b-Spouse_intense_caregivers.txt", text replace

cd `datapath'

//use dataset with no missing variables, caregivers only
*******************************************************************
use spouse_intens_data_ps_set.dta if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) 

tab r_s_help_dur_cat, missing
//no one =0, not helper in exit so base for this model is helper exit only

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_female s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore int_any_of5_6m `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  int_any_of5_6m,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_of5_6m) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_of5_6m==1 & _support==1
gen `v'_comparison = `v' if int_any_of5_6m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}

mat vr=J(33,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
sum `v' if int_any_of5_6m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if int_any_of5_6m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if int_any_of5_6m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if int_any_of5_6m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_of5_6m==1, missing //n=4 treated dropped, off comm support
tab _support if int_any_of5_6m==0, missing
tab _weight if int_any_of5_6m==1, missing
sum _weight if int_any_of5_6m==0 //n=9 control dropped, no weight assigned

rename _weight ip_weight_cg

*******************************************************************
//run the doubly robust models
la var int_any_of5_6m "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_of5_6m `rvars' `svars' [pw=ip_weight_cg], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, Primary cargiver spouses only") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_of5_6m `rvars' `svars' [pw=ip_weight_cg], or
outreg , ///
merge(res1) store(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_of5_6m `rvars' `svars' [pw=ip_weight_cg]
outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape

logit s_cesdworse int_any_of5_6m `rvars' `svars' [pw=ip_weight_cg], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)

*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_of5_6m `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight_cg]

outreg using `logpath'\6b_ps_matched_caregivers_only, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  


*******************************************************************
//quick look at matched sample, outcomes univariate comparison
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, p1 core"
la var s_cesd_tot_ge3_p1 "S CES-D Score, p1 core"

mat t2_2m=J(3,4,.)

local r = 1
foreach v in s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_cg]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_of5_6m `v' [iw=ip_weight_cg]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(3,6,.)
local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_cg]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_of5_6m `v' [iw=ip_weight_cg]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\6b_ps_matched_caregivers_only, ///
replay(tab2_2m) append(tab2_3m) addtable ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value") ///
title("Matched sample, S CES-D before and after R's death")

*******************************************************************
log close


H="propensity match-non-hospice only"
capture log close

clear all
set more off

local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\6c-Spouse_intense_nonhospice.txt", text replace

cd `datapath'

//use dataset with no missing variables, nonhosp only
*******************************************************************
use spouse_intens_data_ps_set.dta 
tab r_hs_3d_6m int_any_of5_6m, missing

drop if r_hs_3d_6m==1

tab int_any_of5_6m, missing

tab r_s_help_dur_cat, missing

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_female s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore int_any_of5_6m `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit detail

psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1 

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2 int_any_of5_6m,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_of5_6m) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_of5_6m==1 & _support==1
gen `v'_comparison = `v' if int_any_of5_6m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
drop `v'_t `v'_c
}

mat vr=J(34,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
sum `v' if int_any_of5_6m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if int_any_of5_6m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if int_any_of5_6m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if int_any_of5_6m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_of5_6m==1, missing //n=3 treated dropped, off comm support
tab _support if int_any_of5_6m==0, missing
tab _weight if int_any_of5_6m==1, missing
sum _weight if int_any_of5_6m==0 //n=10 control dropped, no weight assigned

rename _weight ip_weight_nh

*******************************************************************
//run the doubly robust models
la var int_any_of5_6m "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_of5_6m `rvars' `svars' [pw=ip_weight_nh], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, Subsample with 0-2 day hospice use only") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_of5_6m `rvars' `svars' [pw=ip_weight_nh], or
outreg , ///
merge(res1) store(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_of5_6m `rvars' `svars' [pw=ip_weight_nh]
outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape

logit s_cesdworse int_any_of5_6m `rvars' `svars' [pw=ip_weight_nh], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)

*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_of5_6m `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight_nh]

outreg using `logpath'\6c_ps_matched_no_hospice_only, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  


*******************************************************************
//quick look at matched sample, outcomes univariate comparison
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, p1 core"
la var s_cesd_tot_ge3_p1 "S CES-D Score, p1 core"

mat t2_2m=J(3,4,.)

local r = 1
foreach v in s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_nh]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_of5_6m `v' [iw=ip_weight_nh]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(3,6,.)
local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_nh]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_of5_6m `v' [iw=ip_weight_nh]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\6c_ps_matched_no_hospice_only, ///
replay(tab2_2m) append(tab2_3m) addtable ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value") ///
title("Matched sample, S CES-D before and after R's death")

*******************************************************************
log close

*******************************************************************
//run the doubly robust models
la var int_any_of5_6m "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_of5_6m `rvars' `svars' [pw=ip_weight_nh], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, Primary cargiver spouses only") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_of5_6m `rvars' `svars' [pw=ip_weight_nh], or
outreg , ///
merge(res1) store(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_of5_6m `rvars' `svars' [pw=ip_weight_nh]
outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape

logit s_cesdworse int_any_of5_6m `rvars' `svars' [pw=ip_weight_nh], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)

*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_of5_6m `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight_nh]

outreg using `logpath'\6c_ps_matched_nonhosp_only, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  


*******************************************************************
//quick look at matched sample, outcomes univariate comparison
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, p1 core"
la var s_cesd_tot_ge3_p1 "S CES-D Score, p1 core"

mat t2_2m=J(3,4,.)

local r = 1
foreach v in s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_nh]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_of5_6m `v' [iw=ip_weight_nh]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(3,6,.)
local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_nh]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_of5_6m `v' [iw=ip_weight_nh]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\6c_ps_matched_nonhosp_only, ///
replay(tab2_2m) append(tab2_3m) addtable ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value") ///
title("Matched sample, S CES-D before and after R's death")

*******************************************************************
log close


H="bar graph cesd vs. time"
//use dataset where observations missing data for psmatched variables are dropped
capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\9-Spouse_intensive_bar_chart.txt", text replace

cd `datapath'

//use sample with full ces-d information
use spouse_intens_data_ps_matched.dta
***************************************************************
//set time variables
gen s_days_n_core_dead = s_days_n1_core_dead if s_ind_n1_wi_6m_dead==0
replace s_days_n_core_dead = s_days_n2_core_dead if s_ind_n1_wi_6m_dead==1

gen days_n_core_dod_cat = .
replace days_n_core_dod_cat = 0 if 0<=s_days_n_core_dead & s_days_n_core_dead <183
replace days_n_core_dod_cat = 1 if 183<=s_days_n_core_dead & s_days_n_core_dead <366
replace days_n_core_dod_cat = 2 if 366<=s_days_n_core_dead & s_days_n_core_dead <548
replace days_n_core_dod_cat = 3 if 548<=s_days_n_core_dead & s_days_n_core_dead <731
replace days_n_core_dod_cat = 4 if 731<=s_days_n_core_dead & s_days_n_core_dead !=.
la def days_n_core_dod_cat 0 "0-6 months" 1 "6-12 months" 2 "12-18 months" ///
3 "18-24 months" 4 "24+ months"
la var days_n_core_dod_cat "Days from pre-death core ivw to  R death, categorical"
la val days_n_core_dod_cat days_n_core_dod_cat 
tab days_n_core_dod_cat , missing

tab days_p1_core_dod_cat, missing 

//now create cesd variables for each of the time periods,
//leave missing if cesd not taking within the time window
gen cesd_1=s_cesd_tot_n1n2 if days_n_core_dod_cat==4 //n1 core 24+m
gen cesd_2=s_cesd_tot_n1n2 if days_n_core_dod_cat==3 //n1 core 18-24m
gen cesd_3=s_cesd_tot_n1n2 if days_n_core_dod_cat==2
gen cesd_4=s_cesd_tot_n1n2 if days_n_core_dod_cat==1
gen cesd_5=s_cesd_tot_n1n2 if days_n_core_dod_cat==0
gen cesd_6=s_cesd_tot_p1 if days_p1_core_dod_cat==0
gen cesd_7=s_cesd_tot_p1 if days_p1_core_dod_cat==1
gen cesd_8=s_cesd_tot_p1 if days_p1_core_dod_cat==2
gen cesd_9=s_cesd_tot_p1 if days_p1_core_dod_cat==3
gen cesd_10=s_cesd_tot_p1 if days_p1_core_dod_cat==4

//drop variables don't need
keep r_id cesd_* int_any_of5_6m ip_weight
drop cesd_miss*

//restructure dataset, 2 rows per person, one before death, one after death
reshape long cesd_, i(r_id) j(time)

save cesd_bar_graph.dta, replace
*****************************************************************
//do pre-match graph
collapse cesd_, by(time int_any_of5_6m)

//again restructure so have one obs per time, but two mean cesd
preserve
keep if int_any_of5_6m==1
rename cesd_ cesd_int
save int_1.dta, replace
restore

keep if int_any_of5_6m==0

merge 1:1 time using int_1.dta

graph bar cesd_ cesd_int,  over(time, relabel(1 "24+" 2 "18-24m" 3 "12-18" ///
	4 "6-12" 5 "Death" 6 "0-6" 7"6-12" 8"12-18" 9"18-24" 10"24+" )) ///
	legend(label(1 No intensive procedure) label(2 Intensive procedure)) ///
	ytitle("Mean CES-D score") ///
	title("Spouse Mean CES-D score by time of interview, not matched") ///
	subtitle("Months before & after death")
	
graph save `logpath'/mean_cesd_bar_6m_not_matched, replace

*****************************************************************
//now post-match graph
use cesd_bar_graph.dta, clear

collapse cesd_ [pw=ip_weight], by(time int_any_of5_6m)

preserve //again restructure so have one obs per time, but two mean cesd
keep if int_any_of5_6m==1
rename cesd_ cesd_int
save int_1.dta, replace
restore

keep if int_any_of5_6m==0

merge 1:1 time using int_1.dta

graph bar cesd_ cesd_int,  over(time, relabel(1 "24+" 2 "18-24m" 3 "12-18" ///
	4 "6-12" 5 "death" 6 "0-6" 7"6-12" 8"12-18" 9"18-24" 10"24+" )) ///
	legend(label(1 No intensive procedure) label(2 Intensive procedure)) ///
	ytitle("Mean CES-D score") ///
	title("Spouse Mean CES-D score by time of interview, matched") ///
	subtitle("Months before & after death")
	
graph save `logpath'/mean_cesd_bar_6m_matched, replace
***************************************************************

//a simple figure, this time mean before vs after by intense procedure groups
use spouse_intens_data_ps_matched.dta, clear

collapse s_cesd_tot_n1n2 s_cesd_tot_p1 [pw=ip_weight], by(int_any_of5_6m)

rename s_cesd_tot_n1n2 cesd1
rename s_cesd_tot_p1 cesd2

reshape long cesd, i(int_any_of5_6m) j(time)

la var int_any_of5_6m "Intensive procedure last 6m of life"
la def int_any_of5_6m 0 "No intensive procedure" 1"Intensive procedure"
la val int_any_of5_6m int_any_of5_6m

scatter cesd time, by(int_any_of5_6m, note("")) connect(direct) ///
ytitle("Mean CES-D Score") ///
xtitle("Interview relative to death") ///
xlabel(1 "Before" 2 "After") ///
xscale(range(.75 2.25))

graph save `logpath'/mean_cesd_by_proced_matched, replace

***************************************************************
log close


H="Create tables 1 & 2"
/*creates 3 tables:
Table 1: Overall sample characteristics, not matched
Table 2: Not matched / matched char by intensive procedure use, shows std differences
to demonstrate propensity score matched sample is well matched on all included covariates
Table 3: CES-D score before/after by intensive procedure use, matched and not matched
Table 4: Tabulation of rates of the 5 procedures
Table 5: Decedent age, race by intensive procedure use
*/

capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\10-Spouse_intensive_tables12.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_intens_data_ps_matched.dta
***************************************************************
tab int_any_of5_6m, missing


*************************************************************************************
*************************************************************************************
//create Table 1, overall sample characteristics, prior to matching
*************************************************************************************
*************************************************************************************
//Part 1 - Decedent char
local rvars r_female r_married_x r_race_cat1 r_hseduc r_nw_lowest_n1 ///
r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
r_nhres_n1n2 r_advdir_x r_dexp_x  r_discuss_x ///
r_adl_impair_n1n2 r_srh_pf_n1n2 int_any_of5_6m ///
cc_3_alzhdmta_n12mn6m ///
cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m cc_8_chf_n12mn6m ///
cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m cc_16_strketia_n12mn6m ///
cc_cncr_chronic_n12mn6m cc_4_atrialfb_n12mn6m cc_11_hipfrac_n12mn6m ///
cc_13_depressn_n12mn6m cc_14_osteoprs_n12mn6m cc_15_ra_oa_n12mn6m // r_loc_

//r cont vars
//r_age cc_all_count_6m12m_2 
 
la var r_age "Age at death, years, mean (SD)"
la var r_loc_ "Died in Hospital, %"
la var r_married_x "Married at death, %"
la var r_female "Female, %"
la var r_race_cat1 "Race, White, Non-Hispanic, %"
la var r_hseduc "Education, High School Deg, %"
la var r_nw_lowest_n1 "Net Worth, 1 (low) Quartile, %"
la var r_nw_midlow_n1  "Net Worth, 2 Quartile, %"
la var r_nw_midhigh_n1  "Net Worth, 3 Quartile, %"
la var r_nw_highest_n1  "Net Worth, 4 (high) Quartile, %"
la var r_medicaid_n1  "Medicaid, %"
la var r_champus_n1  "VA Insurance, %"
la var r_medigap_n1 "Medigap, %"
la var r_nhres_n1n2 "Nursing home resident pre-death, %**"
la var r_advdir_x "Had advanced directive, %"
la var r_dexp_x  "Death expected by family, %"
la var r_discuss_x "Discussion of EOL care, %"
la var r_adl_impair_n1n2 "ADL Impairment, %**"
la var r_srh_pf_n1n2 "SRH poor or fair, %**"
la var cc_all_count_6m12m_2 "Number of chronic conditions, mean (SD)"


mat rchar_1=J(1,2,.)

sum r_age, detail //age
mat rchar_1[1,1]=r(mean)
mat rchar_1[1,2]=r(sd)

sum s_age, detail //get overall sample n
local samplen=r(N)

mat rownames rchar_1=r_age

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(1,1,1)

frmttable, statmat(rchar_1) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_1) 	

mat rchar_2=J(31,1,.)
local r = 1
foreach v in `rvars'{
	sum `v'
	mat rchar_2[`r',1]=r(mean)*100 //percent
	local r = `r'+1
	}

mat rownames rchar_2 = `rvars'

frmttable, statmat(rchar_2) varlabels ///
	sdec(2) store(tab1_2) 	  

mat rchar_3=J(1,2,.)

sum cc_all_count_6m12m_2, detail //cc's count
mat rchar_3[1,1]=r(mean)
mat rchar_3[1,2]=r(sd)

mat rownames rchar_3=cc_all_count_12m_2

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(1,1,1)

frmttable, statmat(rchar_3) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_3) 	  

outreg, replay(tab1_1) append(tab1_2) store(tab1_a)

*** add the headings, notes, using file name etc. to this one
outreg using "`logpath'\10_spo_ip_tab1and2", ///
replay(tab1_a) append(tab1_3) ///
title("Table 1: Characteristics of Study sample (n=`samplen')") ///
ctitles("Decedent","") ///
note("Decedent chronic conditions from Medicare claims. 6-12m before death." \ ///
"Spouse chronic conditions from self report in HRS interviews." \ ///
"** From the pre-death interview at least 6m prior to death.") ///
landscape replace

**************************************************
//Part 2 - Spouse char

//just check no severe category
tab s_hrs_comorb_mod_n1 s_comor_c_hrs_n1, missing

local svars s_female s_race_cat1  s_hseduc ///
s_medicaid_n1 s_adl_independent_core_n1n2 s_srh_pf_n1n2 s_imprelig_vimp_n1 ///
s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 ///
s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 ///
s_psych_overall_hrs_n1n2 s_smoke_curr_n1 s_vig_phy_act_n1 ///
r_s_help_dur_ind1 r_s_help_dur_ind2 r_s_help_dur_ind3 ///
s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter s_cesd_ge3better 

la var s_age "Age at spouse's death, years, mean (SD)"
la var s_female "Female, %"
la var s_race_cat1 "Race, White, Non-Hispanic, %"
la var s_hseduc "Education, High School Degree, %"
la var s_medicaid_n1  "Medicaid, %"
la var s_adl_independent_core_n1n2 "ADL Independent pre-death, %**"
la var s_srh_pf_n1n2 "SRH poor or fair, %**"
la var s_imprelig_vimp_n1 "Religion very important, %"
la var s_cancer_hrs_n1 "Cancer, %"
la var s_lung_hrs_n1 "Lung disease, %"
la var s_heart_hrs_n1 "Heart disease, %"
la var s_chf_hrs_n1 "CHF, %"
la var s_stroke_hrs_n1 "Stroke, %"
la var s_memory_hrs_n1 "Memory disease, %"
la var s_htn_hrs_n1 "Hypertension, %"
la var s_dm_hrs_n1 "Diabetes, %"
la var s_hrs_comorb_none_n1 "Comorbidities, none, %"
la var s_hrs_comorb_mild_n1 "Comorbidities, Mild (1-3), %"
la var s_hrs_comorb_mod_n1 "Comorbidities, Moderate (4-6), %"
la var s_psych_overall_hrs_n1n2 "Psychological problems, %**"
la var s_smoke_curr_n1 "Currently smoker, %"
la var s_vig_phy_act_n1 "Vigorous physical activity, %"
la var r_s_help_dur_ind1 "Spouse not primary caregiver exit, %"
la var r_s_help_dur_ind2 "Spouse primary caregiver exit only, %"
la var r_s_help_dur_ind3 "Spouse primary caregiver exit + core, %"
la var s_cesd_tot_ge3_n1n2 "S Depressed CESD 3+, pre-death, %**"
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, post-death, %"
la var s_cesdbetter "S CES-D Improved n1 to p1,%"
la var s_cesd_ge3better "Clinical improvement n1 to p1,%"

la var s_cesd_tot_n1n2 "CESD score pre-death, mean(SD)**"
la var s_cesd_tot_p1 "CESD score post-death, mean(SD)"
la var s_cesdchange "Change CES-D Score n1 to p1, mean(SD)"
la var days_p1_core_dead "Days R death to p1 s interview, mean(SD)"

//convert days to months to report months in the table
gen s_months_n1_to_p1=s_days_n1_to_p1/30.5
gen s_months_n1n2_to_p1=s_days_n1n2_to_p1/30.5
la var s_months_n1_to_p1  "Months n1 to p1 s interview, mean(SD)"
la var s_months_n1n2_to_p1  "Months n1 or n2 to p1 s interview, mean(SD)"

mat schar_1=J(1,2,.)

sum s_age, detail //age
mat schar_1[1,1]=r(mean)
mat schar_1[1,2]=r(sd)

mat rownames schar_1=s_age

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(1,1,1)

frmttable, statmat(schar_1) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_1) 	

mat schar_2=J(28,1,.)
local r = 1
foreach v in `svars'{
	sum `v'
	mat schar_2[`r',1]=r(mean)*100 //percent
	local r = `r'+1
	}

mat rownames schar_2 = `svars'

frmttable, statmat(schar_2) varlabels ///
	sdec(2) store(tab1_2) 	  

mat schar_3=J(6,2,.)

local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange days_p1_core_dead ///
 s_months_n1_to_p1 s_months_n1n2_to_p1 {
	sum `v', detail //ces-d scores
	mat schar_3[`r',1]=r(mean)
	mat schar_3[`r',2]=r(sd)
	local r = `r'+1
	}

mat rownames schar_3=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange ///
 days_p1_core_dead s_months_n1_to_p1 s_months_n1n2_to_p1 

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(3,1,1)

frmttable, statmat(schar_3) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_3) 	  

outreg, replay(tab1_1) append(tab1_2) store(tab1_a)

*** add the headings, notes, using file name etc. to this one
outreg using "`logpath'\10_spo_ip_tab1and2", ///
replay(tab1_a) append(tab1_3) ///
title("Table 1: Characteristics of Study sample (n=`samplen')") ///
ctitles("Spouse","") ///
note("Decedent chronic conditions from Medicare claims. 6-12m before death." \ ///
"Spouse chronic conditions from self report in HRS interviews." \ ///
"** From the pre-death interview at least 6m prior to death.") ///
landscape addtable


*************************************************************************************
*************************************************************************************
//Create Table 2, Decedent and Spouse PS Score Matching Variables
//Col 1-3: Unweighted, unmatched sample
//Col 4-6: Weighted and matched sample
*************************************************************************************
*************************************************************************************

local t2vars1 r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 // r_loc_

local t2vars2 cc_all_count_6m12m_2 s_age 

local t2vars3 s_female s_race_cat1 ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr

la var r_nhres_n1n2 "Nursing home resident pre-death"
la var r_srh_pf_n1n2 "SRH poor or fair"
la var r_adl_impair_n1n2 "ADL Impairment"
la var s_srh_pf_n1n2 "SRH poor or fair"
la var s_psych_overall_hrs_n1n2 "Psychological problems"
	
//part 1, n unmatched
mat t2_1=J(1,3,.)
tab int_any_of5_6m , missing matcell(d1)
mat t2_1[1,2]=d1[1,1] //no procedures n
mat t2_1[1,1]=d1[2,1] //procedure n
mat rownames t2_1="Sample n"

frmttable, statmat(t2_1) varlabels ///
	sdec(0) store(tab2_1) 	

//part 2, decedent char, % and std difference
mat t2_2=J(18,5,.)

local r = 1
foreach v in `t2vars1'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m==`d', detail
		mat t2_2[`r',`c']=r(mean)*r(N) //n
		mat t2_2[`r',`c'+1]=r(mean)*100 //percent
		local c = `c'+2		
	}
	mat t2_2[`r',5]=(t2_2[`r',2]/100-t2_2[`r',4]/100)/sqrt((t2_2[`r',2]/100* ///
		(1-t2_2[`r',2]/100)+t2_2[`r',4]/100*(1-t2_2[`r',4]/100))/2)
	local r = `r'+1
}
mat rownames t2_2=`t2vars1'

mat dmat=(0,1,0,1,0)
mat ann=J(17,2,1)

frmttable, statmat(t2_2) varlabels ///
	sdec(1,1,2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_2) 	

//part 3, cont vars r & s, mean and std diff
mat t2_3=J(2,5,.)

local r = 1
foreach v in `t2vars2'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m==`d', detail
		mat t2_3[`r',`c']=r(mean)
		mat t2_3[`r',`c'+1]=r(sd)
		local c = `c'+2		
	}
	mat t2_3[`r',5]=(t2_3[`r',1]-t2_3[`r',3])/sqrt((t2_3[`r',2]^2+t2_3[`r',4]^2)/2) 
	local r = `r'+1
}

mat rownames t2_3=`t2vars2'

mat dmat=(0,1,0,1,0)
mat ann=(1,1,0\1,1,0)
mat list dmat
mat list ann

mat list t2_3

frmttable, statmat(t2_3) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3) 

//part 4, spouse char, %
mat t2_4=J(14,5,.)

local r = 1
foreach v in `t2vars3'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m==`d', detail
		mat t2_4[`r',`c']=r(mean)*r(N)
		mat t2_4[`r',`c'+1]=r(mean)*100
		local c = `c'+2		
	}
	mat t2_4[`r',5]=(t2_4[`r',2]/100-t2_4[`r',4]/100)/sqrt((t2_4[`r',2]/100* ///
		(1-t2_4[`r',2]/100)+t2_4[`r',4]/100*(1-t2_4[`r',4]/100))/2)

	local r = `r'+1
}
mat rownames t2_4=`t2vars3'

mat dmat=(0,1,0,1,0)
mat ann=J(12,2,1)

frmttable, statmat(t2_4) varlabels ///
	sdec(1,1,2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_4) 	

outreg, replay(tab2_1) append(tab2_2) store(tab2_a)
outreg, replay(tab2_a) append(tab2_3) store(tab2_b)
outreg, replay(tab2_b) append(tab2_4) store(tab2_c) //complete unmatched table w/ std diff

***************************************************************
//end of unmatched sample, start matched sample
***************************************************************
//part 1, n matched
mat t2_1m=J(1,3,.)
tab int_any_of5_6m if ip_weight!=., missing matcell(d1)
mat t2_1m[1,2]=d1[1,1] //no procedures n
mat t2_1m[1,1]=d1[2,1] //procedure n
mat rownames t2_1m="Sample n"

frmttable, statmat(t2_1m) varlabels ///
	sdec(0) store(tab2_1m) 	

//part 2, decedent char, % and std difference
mat t2_2m=J(18,3,.)

local r = 1
foreach v in `t2vars1'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m==`d' [iweight=ip_weight]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
	local r = `r'+1
}
mat rownames t2_2m=`t2vars1'
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 	

//part 3, cont vars r & s, mean and std diff
mat t2_3m=J(2,5,.)

local r = 1
foreach v in `t2vars2'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m==`d' [iweight=ip_weight]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2		
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	local r = `r'+1
}

mat rownames t2_3m=`t2vars2'

mat dmat=(0,1,0,1,0)
mat ann=(1,1,0\1,1,0)
mat list dmat
mat list ann

mat list t2_3

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

//part 4, spouse char, %
mat t2_4m=J(14,3,.)

local r = 1
foreach v in `t2vars3'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m==`d' [iweight=ip_weight]
		mat t2_4m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_4m[`r',3]=(t2_4m[`r',1]/100-t2_4m[`r',2]/100)/sqrt((t2_4m[`r',1]/100* ///
		(1-t2_4m[`r',1]/100)+t2_4m[`r',2]/100*(1-t2_4m[`r',2]/100))/2)

	local r = `r'+1
}

mat rownames t2_4m=`t2vars3'
frmttable, statmat(t2_4m) varlabels ///
	sdec(2) store(tab2_4m) 	

outreg, replay(tab2_1m) append(tab2_2m) store(tab2_am)
outreg, replay(tab2_am) append(tab2_3m) store(tab2_bm)
outreg, replay(tab2_bm) append(tab2_4m) store(tab2_cm) //complete matched table w/ std diff

//combine unmatched and match tables
outreg using "`logpath'\10_spo_ip_tab1and2", ///
 replay(tab2_c) merge(tab2_cm) ///
 title("Table 2: Decedent and spouse characteristics used in propensity score matching, by intensive procedure use status") ///
 ctitles("","Unmatched sample","","","Matched sample","","" \ ///
    "","Intensive procedure n (%)","No procedure n (%)","Standardized Difference", ///
    "Intensive procedure %","No procedure %","Standardized Difference") ///
 landscape addtable

*******************************************************************
*******************************************************************
//Table 3 - CES-D score pre/post death by intense procedures use
*******************************************************************
**************************************************************
la var s_cesd_tot_ge3_n1n2 "S Depressed CESD 3+, pre-death,%"
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, post-death,%"
la var s_cesdbetter "S CES-D Improved n1 to p1,%"
la var s_cesdsame "S CES-D No Change n1 to p1,%"
la var s_cesdworse "S CES-D Worsened n1 to p1,%"
la var s_cesd_ge3better "Clinical improvement n1 to p1,%"
la var s_cesd_tot_n1n2 "S CES-D Score, pre-death, mean(sd)"
la var s_cesd_tot_p1 "S CES-D Score, post-death, mean(sd)"
la var s_cesdchange "Change CES-D Score n1 to p1, mean(sd)"

la var days_p1_core_dead "Days death to p1, mean(sd)"

local ivars s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter s_cesdsame s_cesdworse  s_cesd_ge3better 
local cvars s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange days_p1_core_dead

//part 1 - prior to matching
mat t2_2m=J(6,4,.)

local r = 1
foreach v in `ivars' { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d'
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_of5_6m `v'
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m= `ivars' 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(4,6,.)
local r = 1
foreach v in `cvars'  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d', detail 
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_of5_6m `v'
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=`cvars' 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\10_spo_ip_tab1and2, ///
replay(tab2_2m) append(tab2_3m) addtable ///
title("Table 3a: Spouse CES-D score details, sample before matching") ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value")

//Part 2 - after matching
mat t2_2m=J(6,4,.)

local r = 1
foreach v in `ivars' { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_of5_6m `v' [iw=ip_weight]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=`ivars'
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(4,6,.)
local r = 1
foreach v in `cvars'  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_of5_6m `v' [iw=ip_weight]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=`cvars' 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\10_spo_ip_tab1and2, ///
replay(tab2_2m) append(tab2_3m) addtable ///
title("Table 3b: Spouse CES-D score details, matched sample") ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value")

//test pre-post cesd score difference, not matched, full sample
ttest s_cesd_tot_p1=s_cesd_tot_n1n2   //overall sample
ttest s_cesd_tot_p1=s_cesd_tot_n1n2 if ///
 (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) //caregiver sample
ttest s_cesdchange if  (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1), ///
 by(int_any_of5_6m)  //caregiver sample

tab r_female s_female, missing 
***************************************************************
//details re which procedures were done
mat t4=J(5,2,.)

local r=1
foreach v in int_intubation_6m int_trach_6m int_gastro_tude_6m ///
int_enteral_nut_6m int_cpr_6m {
		tab `v' , missing
		sum `v' , detail
		mat t4[`r',1]=r(mean)*100 //percent
		mat t4[`r',2]=r(mean)*r(N)
		local r = `r'+1
		}
		
mat list t4

frmttable using `logpath'\10_spo_ip_tab1and2, ///
addtable statmat(t4)  ///
sdec(2)  ///
title("Table 4: Procedure rates") ///
ctitles("" "percent of full sample" "n") ///
rtitles("Intubation, mech ventilation"\ "Trachostomy" \"Gastrostomy tube"\ ///
"Enteral/parenteral nutrition"\ "CPR")
***************************************************************
//r age, mean and sd

mat tab5=J(2,5,.)

	local c = 1
	foreach d in 1 0 {

	sum r_age if int_any_of5_6m==`d', detail //age
	mat tab5[1,`c']=r(mean)
	mat tab5[1,`c'+1]=r(sd)
	
	sum r_race_cat1 if int_any_of5_6m==`d', detail //race
	mat tab5[2,`c']=r(mean)*100 //percent
	
	local c = `c'+2
}

ttest r_age, by(int_any_of5_6m)
	mat tab5[1,5]=r(p)
	
tab int_any_of5_6m r_race_cat1, chi2
	mat tab5[2,5]=r(p)



mat rownames tab5="Age, mean, sd" "Race, white, percent"

frmttable using `logpath'\10_spo_ip_tab1and2, ///
addtable statmat(tab5)  ///
sdec(2)  ///
title("Table 5: Misc decedent characteristics, by procedure use") ///
ctitles("" "With procedure" "" "No procedure" "" "P-value") ///
varlabels

***************************************************************
log close


H="procedure to death"
capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\procedure_to_death.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_intens_data_ps_matched.dta

*rename r_bid_hrs bid_hrs_21
*merge 1:m bid_hrs_21 using "E:\data\surgery_hysterectomy\int_2012clms\death_date_2012", ///
 *keepusing(death_all) keep(match master) nogen

*gen proc_to_death=r_death_date-first_proc_date_e
/*gen procedure_to_death=death_all-first_proc_date_e

sum proc_to_death,d

sum procedure_to_death, d

tab proc_to_death if proc_to_death<0

tab proc_to_death if procedure_to_death<15
*/
gen died_1st_day=proc_to_death<2

gen died_1st_wk=proc_to_death<8

gen died_1st_fortnight=proc_to_death<15

gen died_1st_month=proc_to_death<31

gen died_after_2wks=died_1st_m==1 & died_1st_fortnight==0

gen died_after_1mo=int_any_of==1 & died_1st_mo==0
/*
gen d1_day=procedure_to_death<2

gen d1_wk=procedure_to_death<8

gen d1_fn=procedure_to_death<15
*/

mat cesd=J(7,9,.)

local r=1
local c=4

foreach x in 0 1 {
	
	sum s_cesdchange if int_any_of5==`x'
	mat cesd[`r',1]=r(mean)
	mat cesd[`r',2]=r(sd)
	mat cesd[`r',3]=r(N)
	foreach s in better worse same {
		sum s_cesd`s' if int_any_of5==`x'
		mat cesd[`r',`c']=r(mean)*100
		mat cesd[`r',`c'+1]=r(N)*r(mean)
		local c=`c'+2
}
	local r=`r'+1
	local c=4
}

foreach x in after_1mo after_2wks 1st_fortnight 1st_wk 1st_day {
	sum s_cesdchange if died_`x'==1
	mat cesd[`r',1]=r(mean)
	mat cesd[`r',2]=r(sd)
	mat cesd[`r',3]=r(N)
	foreach s in better worse same {
		sum s_cesd`s' if died_`x'==1
		mat cesd[`r',`c']=r(mean)*100
		mat cesd[`r',`c'+1]=r(N)*r(mean)
		local c=`c'+2
}
	local r=`r'+1
	local c=4
}

mat rownames cesd="No intensive procedure last 6m" "Intensive procedure last 6m" "Int proc 31-180 days" "Int proc 15-30 days" "Int proc last 2 wks" ///
"Int proc last week" "Int proc w/in 1 day"

frmttable, statmat(cesd) sdec(2,2,0,2,0,2,0,2,0) title("Surviving Spousal Depression and Intensive Procedure at EOL") ///
ctitles("" "mean CESD Change" "sd" "N" "% CESD Better" "n" "% CESD Worse" "n" "CESD Unchanged" ///
"n") store(cesd1) 

outreg using `logpath'\cesd_last_2wks.rtf, replay(cesd1) replace

label define location 1  "Hospital" 2 "Nursing Home" 3 "Home" 4 "Hospice" ///
      5 "Assisted Living/Retirement Home" 6 "Other/Don't Know "
label values *location* location

mat loc=J(7,4,.)


local c=1

foreach num in 1 0 {
	local r=1
	sum r_loc_ if int_any_of5==`num'
	mat loc[`r',`c']=r(mean)*100
	mat loc[`r',`c'+1]=r(mean)*r(N)
	local r=`r'+1
	mat loc[`r',`c']=(1-r(mean))*100
	mat loc[`r',`c'+1]=(1-r(mean))*r(N)
	local c=`c'+2
	local r=`r'+1
}
local c=1
foreach num in 1 0 {
	sum r_loca if int_any_of5==`num'
	scalar loc_n=r(N)
	tab r_loca if int_any_of5==`num', matcell(loca)
	forvalues i=2/6 {
		scalar loc_place = loca[`i',1]
		mat loc[`r',`c']=loc_place/loc_n*100
		mat loc[`r',`c'+1]=loca[`i',1]
		local r=`r'+1
}
	local c=3
	local r=3
}

mat loc[7,1]=loc[6,1]
mat loc[7,2]=loc[6,2]
mat loc[6,1]=0
mat loc[6,2]=0
mat rownames loc="Died in Hospital" "outside Hospital" "Nursing Home" "Home" ///
"Hospice" "LTCF/Retirement Home" "Other/DK"

frmttable, statmat(loc) sdec(2,0,2,0) title( "Location of Death by Intensive Procedure")  ///
ctitles("" "% with Procedure" "n" "% without" "n")

outreg using `logpath'\cesd_last_2wks.rtf, replay(loc) addtable
log close


H="split by gender"
capture log close

clear all
set more off

local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\14-Spouse_intense_gender.txt", text replace

cd `datapath'

//use dataset with no missing variables, by gender
*******************************************************************
foreach g in "0" "1" {

use spouse_intens_data_ps_set.dta, clear

tab r_female s_female, m

keep if s_female==`g' //0=male; 1=female

tab r_female s_female, m

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x
//generate pscore variable pscore0 (male) pscore1(female)
pscore int_any_of5_6m `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1`g'=r(sd)*0.02
di "S.D.*0.02"
di cal_ps1`g'

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  int_any_of5_6m,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(`=cal_ps1`g'') logit
//note this creates variable _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_of5_6m) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_of5_6m) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_of5_6m==1 & _support==1
gen `v'_comparison = `v' if int_any_of5_6m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_f`g', replace
}

mat vr=J(33,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
qui sum `v' if int_any_of5_6m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
qui sum `v' if int_any_of5_6m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
qui sum `v' if int_any_of5_6m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
qui sum `v' if int_any_of5_6m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_of5_6m==1, missing //n=4(M) treated dropped, off comm support
tab _support if int_any_of5_6m==0, missing
tab _weight if int_any_of5_6m==1, missing
sum _weight if int_any_of5_6m==0 //n=0 control dropped, no weight assigned

rename _weight ip_weight_f`g'

*******************************************************************
//run the doubly robust models
la var int_any_of5_6m "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_of5_6m `rvars' `svars' [pw=ip_weight_f`g'], or
qui outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, Female=`g' spouses only") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_of5_6m `rvars' `svars' [pw=ip_weight_f`g'], or
qui outreg , ///
merge(res1) store(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_of5_6m `rvars' `svars' [pw=ip_weight_f`g']
qui outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape

logit s_cesdworse int_any_of5_6m `rvars' `svars' [pw=ip_weight_f`g'], or
qui outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)

*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_of5_6m `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight_f`g']

qui outreg using `logpath'\14_ps_matched_female`g'_only, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  


*******************************************************************
//quick look at matched sample, outcomes univariate comparison
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, p1 core"
la var s_cesd_tot_ge3_p1 "S CES-D Score, p1 core"

mat t2_2m=J(3,4,.)

local r = 1
foreach v in s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter { //indicator variables
	local c = 1
	foreach d in 1 0 {
		qui sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_f`g']
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_of5_6m `v' [iw=ip_weight_f`g']
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter 
qui frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(3,6,.)
local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		qui sum `v' if int_any_of5_6m ==`d' [iweight=ip_weight_f`g']
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_of5_6m `v' [iw=ip_weight_f`g']
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

qui frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\14_ps_matched_female`g'_only, ///
replay(tab2_2m) append(tab2_3m) addtable ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value") ///
title("Matched sample, S CES-D before and after R's death")

*******************************************************************
}
log close


H="match 30 day instead"
capture log close

clear all
set more off

local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\6e-Spouse_intense_30d.txt", text replace

cd `datapath'

//use dataset with no missing variables
*******************************************************************
use spouse_intens_data_ps_set.dta 



tab r_s_help_dur_cat, missing
//no one =0, not helper in exit so base for this model is helper exit only

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_female s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore int_any_30d `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit detail

psgraph, treated(int_any_30d) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  int_any_30d,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_30d) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_30d) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_30d==1 & _support==1
gen `v'_comparison = `v' if int_any_30d==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}

mat vr=J(33,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
sum `v' if int_any_30d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if int_any_30d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if int_any_30d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if int_any_30d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_30d==1, missing //n=4 treated dropped, off comm support
tab _support if int_any_30d==0, missing
tab _weight if int_any_30d==1, missing
sum _weight if int_any_30d==0 //n=9 control dropped, no weight assigned

rename _weight ip_weight_30d

save spouse_intens_data_ps_matched_30d.dta, replace

*******************************************************************
//run the doubly robust models
la var int_any_30d "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_30d `rvars' `svars' [pw=ip_weight], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, int procedure last 30 days") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_30d `rvars' `svars' [pw=ip_weight], or
outreg , ///
merge(res1) store(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_30d `rvars' `svars' [pw=ip_weight]
outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape

logit s_cesdworse int_any_30d `rvars' `svars' [pw=ip_weight], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)

*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_30d `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight]

outreg using `logpath'\6e_ps_matched_30d, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  


*******************************************************************
//quick look at matched sample, outcomes univariate comparison
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, p1 core"
la var s_cesd_tot_ge3_p1 "S CES-D Score, p1 core"

mat t2_2m=J(3,4,.)

local r = 1
foreach v in s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d' [iweight=ip_weight]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_30d `v' [iw=ip_weight]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(3,6,.)
local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d' [iweight=ip_weight]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_30d `v' [iw=ip_weight]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\6e_ps_matched_30d, ///
replay(tab2_2m) append(tab2_3m) addtable ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value") ///
title("Matched sample, S CES-D before and after R's death")

*******************************************************************
log close


H="30 day caregivers"
capture log close

clear all
set more off

local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\6f-Spouse_intense_caregivers.txt", text replace

cd `datapath'

//use dataset with no missing variables, caregivers only
*******************************************************************
use spouse_intens_data_ps_set.dta if (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) 

tab r_s_help_dur_cat, missing
//no one =0, not helper in exit so base for this model is helper exit only

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_female s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore int_any_30d `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(int_any_30d) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  int_any_30d,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_30d) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_30d) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_30d==1 & _support==1
gen `v'_comparison = `v' if int_any_30d==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}

mat vr=J(33,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
sum `v' if int_any_30d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if int_any_30d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if int_any_30d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if int_any_30d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_30d==1, missing //n=4 treated dropped, off comm support
tab _support if int_any_30d==0, missing
tab _weight if int_any_30d==1, missing
sum _weight if int_any_30d==0 //n=9 control dropped, no weight assigned

rename _weight ip_weight_cg

*******************************************************************
//run the doubly robust models
la var int_any_30d "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_30d `rvars' `svars' [pw=ip_weight_cg], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, Primary cargiver spouses only") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_30d `rvars' `svars' [pw=ip_weight_cg], or
outreg , ///
merge(res1) store(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_30d `rvars' `svars' [pw=ip_weight_cg]
outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape

logit s_cesdworse int_any_30d `rvars' `svars' [pw=ip_weight_cg], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)

*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_30d `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight_cg]

outreg using `logpath'\6f_ps_matched_caregivers_only_30d, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  


*******************************************************************
//quick look at matched sample, outcomes univariate comparison
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, p1 core"
la var s_cesd_tot_ge3_p1 "S CES-D Score, p1 core"

mat t2_2m=J(3,4,.)

local r = 1
foreach v in s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d' [iweight=ip_weight_cg]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_30d `v' [iw=ip_weight_cg]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(3,6,.)
local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d' [iweight=ip_weight_cg]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_30d `v' [iw=ip_weight_cg]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\6f_ps_matched_caregivers_only_30d, ///
replay(tab2_2m) append(tab2_3m) addtable ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value") ///
title("Matched sample, S CES-D before and after R's death")

*******************************************************************
log close


H="30 day non-hospice"
capture log close

clear all
set more off

local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\6g-Spouse_intense_nonhospice.txt", text replace

cd `datapath'

//use dataset with no missing variables, nonhosp only
*******************************************************************
use spouse_intens_data_ps_set.dta 
tab r_hs_3d_6m int_any_30d, missing

drop if r_hs_3d_6m==1

tab int_any_30d, missing

tab r_s_help_dur_cat, missing

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_female s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore int_any_30d `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit detail

psgraph, treated(int_any_30d) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1 

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2 int_any_30d,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_30d) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_30d) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_30d==1 & _support==1
gen `v'_comparison = `v' if int_any_30d==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
drop `v'_t `v'_c
}

mat vr=J(34,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
sum `v' if int_any_30d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if int_any_30d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if int_any_30d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if int_any_30d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_30d==1, missing //n=3 treated dropped, off comm support
tab _support if int_any_30d==0, missing
tab _weight if int_any_30d==1, missing
sum _weight if int_any_30d==0 //n=10 control dropped, no weight assigned

rename _weight ip_weight_nh

*******************************************************************
//run the doubly robust models
la var int_any_30d "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_30d `rvars' `svars' [pw=ip_weight_nh], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, Subsample with 0-2 day hospice use only") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_30d `rvars' `svars' [pw=ip_weight_nh], or
outreg , ///
merge(res1) store(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_30d `rvars' `svars' [pw=ip_weight_nh]
outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape

logit s_cesdworse int_any_30d `rvars' `svars' [pw=ip_weight_nh], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)

*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_30d `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight_nh]

outreg using `logpath'\6g_ps_matched_no_hospice_only_30d, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  


*******************************************************************
//quick look at matched sample, outcomes univariate comparison
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, p1 core"
la var s_cesd_tot_ge3_p1 "S CES-D Score, p1 core"

mat t2_2m=J(3,4,.)

local r = 1
foreach v in s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d' [iweight=ip_weight_nh]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_30d `v' [iw=ip_weight_nh]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(3,6,.)
local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d' [iweight=ip_weight_nh]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_30d `v' [iw=ip_weight_nh]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\6g_ps_matched_no_hospice_only_30d, ///
replay(tab2_2m) append(tab2_3m) addtable ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value") ///
title("Matched sample, S CES-D before and after R's death")

*******************************************************************
log close



H="30 day gender"
capture log close

clear all
set more off

local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\14-Spouse_intense_gender_30d.txt", text replace

cd `datapath'

//use dataset with no missing variables, by gender
*******************************************************************
foreach g in "0" "1" {

use spouse_intens_data_ps_set.dta, clear

tab r_female s_female, m

keep if s_female==`g' //0=male; 1=female

tab r_female s_female, m

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x
//generate pscore variable pscore0 (male) pscore1(female)
pscore int_any_30d `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(int_any_30d) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1`g'=r(sd)*0.02
di "S.D.*0.02"
di cal_ps1`g'

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  int_any_30d,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(`=cal_ps1`g'') logit
//note this creates variable _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_30d) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_30d) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_30d==1 & _support==1
gen `v'_comparison = `v' if int_any_30d==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_f`g', replace
}

mat vr=J(33,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
qui sum `v' if int_any_30d==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
qui sum `v' if int_any_30d==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
qui sum `v' if int_any_30d==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
qui sum `v' if int_any_30d==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_30d==1, missing //n=4(M) treated dropped, off comm support
tab _support if int_any_30d==0, missing
tab _weight if int_any_30d==1, missing
sum _weight if int_any_30d==0 //n=0 control dropped, no weight assigned

rename _weight ip_weight_f`g'

*******************************************************************
//run the doubly robust models
la var int_any_30d "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_30d `rvars' `svars' [pw=ip_weight_f`g'], or
qui outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, Female=`g' spouses only") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_30d `rvars' `svars' [pw=ip_weight_f`g'], or
qui outreg , ///
merge(res1) store(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_30d `rvars' `svars' [pw=ip_weight_f`g']
qui outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape

logit s_cesdworse int_any_30d `rvars' `svars' [pw=ip_weight_f`g'], or
qui outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)

*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_30d `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight_f`g']

qui outreg using `logpath'\14_ps_matched_female`g'_only_30d, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  


*******************************************************************
//quick look at matched sample, outcomes univariate comparison
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, p1 core"
la var s_cesd_tot_ge3_p1 "S CES-D Score, p1 core"

mat t2_2m=J(3,4,.)

local r = 1
foreach v in s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter { //indicator variables
	local c = 1
	foreach d in 1 0 {
		qui sum `v' if int_any_30d ==`d' [iweight=ip_weight_f`g']
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_30d `v' [iw=ip_weight_f`g']
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter 
qui frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(3,6,.)
local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		qui sum `v' if int_any_30d ==`d' [iweight=ip_weight_f`g']
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_30d `v' [iw=ip_weight_f`g']
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

qui frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\14_ps_matched_female`g'_only_30d, ///
replay(tab2_2m) append(tab2_3m) addtable ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value") ///
title("Matched sample, S CES-D before and after R's death")

*******************************************************************
}
log close


H="30 day 1 & 2"
/*creates 3 tables:
Table 1: Overall sample characteristics, not matched
Table 2: Not matched / matched char by intensive procedure use, shows std differences
to demonstrate propensity score matched sample is well matched on all included covariates
Table 3: CES-D score before/after by intensive procedure use, matched and not matched
Table 4: Tabulation of rates of the 5 procedures
Table 5: Decedent age, race by intensive procedure use
*/

capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\10-Spouse_intensive_tables12.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_intens_data_ps_matched_30d.dta
***************************************************************
tab int_any_30d, missing


*************************************************************************************
*************************************************************************************
//create Table 1, overall sample characteristics, prior to matching
*************************************************************************************
*************************************************************************************
//Part 1 - Decedent char
local rvars r_female r_married_x r_race_cat1 r_hseduc r_nw_lowest_n1 ///
r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 r_medicaid_n1 r_champus_n1 r_medigap_n1 ///
r_nhres_n1n2 r_advdir_x r_dexp_x  r_discuss_x ///
r_adl_impair_n1n2 r_srh_pf_n1n2 int_any_30d r_hs_3d_6m r_loc_hosp_x ///
cc_3_alzhdmta_n12mn6m ///
cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m cc_8_chf_n12mn6m ///
cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m cc_16_strketia_n12mn6m ///
cc_cncr_chronic_n12mn6m cc_4_atrialfb_n12mn6m cc_11_hipfrac_n12mn6m ///
cc_13_depressn_n12mn6m cc_14_osteoprs_n12mn6m cc_15_ra_oa_n12mn6m

//r cont vars
//r_age cc_all_count_6m12m_2 
 
la var r_age "Age at death, years, mean (SD)"
la var r_loc_ "Died in Hospital, %"
la var r_married_x "Married at death, %"
la var r_female "Female, %"
la var r_race_cat1 "Race, White, Non-Hispanic, %"
la var r_hseduc "Education, High School Deg, %"
la var r_nw_lowest_n1 "Net Worth, 1 (low) Quartile, %"
la var r_nw_midlow_n1  "Net Worth, 2 Quartile, %"
la var r_nw_midhigh_n1  "Net Worth, 3 Quartile, %"
la var r_nw_highest_n1  "Net Worth, 4 (high) Quartile, %"
la var r_medicaid_n1  "Medicaid, %"
la var r_champus_n1  "VA Insurance, %"
la var r_medigap_n1 "Medigap, %"
la var r_nhres_n1n2 "Nursing home resident pre-death, %**"
la var r_advdir_x "Had advanced directive, %"
la var r_dexp_x  "Death expected by family, %"
la var r_discuss_x "Discussion of EOL care, %"
la var r_adl_impair_n1n2 "ADL Impairment, %**"
la var r_srh_pf_n1n2 "SRH poor or fair, %**"
la var cc_all_count_6m12m_2 "Number of chronic conditions, mean (SD)"
la var int_any_30d "Intensive Procedure last 30d"
la var r_hs_3d_6m "3+ days hospice use, %"

mat rchar_1=J(1,2,.)

sum r_age, detail //age
mat rchar_1[1,1]=r(mean)
mat rchar_1[1,2]=r(sd)

sum s_age, detail //get overall sample n
local samplen=r(N)

mat rownames rchar_1=r_age

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(1,1,1)

frmttable, statmat(rchar_1) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_1) 	

mat rchar_2=J(33,1,.)
local r = 1
foreach v in `rvars'{
	sum `v'
	mat rchar_2[`r',1]=r(mean)*100 //percent
	local r = `r'+1
	}

mat rownames rchar_2 = `rvars'

frmttable, statmat(rchar_2) varlabels ///
	sdec(2) store(tab1_2) 	  

mat rchar_3=J(1,2,.)

sum cc_all_count_6m12m_2, detail //cc's count
mat rchar_3[1,1]=r(mean)
mat rchar_3[1,2]=r(sd)

mat rownames rchar_3=cc_all_count_12m_2

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(1,1,1)

frmttable, statmat(rchar_3) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_3) 	  

outreg, replay(tab1_1) append(tab1_2) store(tab1_a)

*** add the headings, notes, using file name etc. to this one
outreg using "`logpath'\10_spo_ip_tab1and2_30d", ///
replay(tab1_a) append(tab1_3) ///
title("Table 1: Characteristics of Study sample (n=`samplen')") ///
ctitles("Decedent","") ///
note("Decedent chronic conditions from Medicare claims. 6-12m before death." \ ///
"Spouse chronic conditions from self report in HRS interviews." \ ///
"** From the pre-death interview at least 6m prior to death.") ///
landscape replace

**************************************************
//Part 2 - Spouse char

//just check no severe category
tab s_hrs_comorb_mod_n1 s_comor_c_hrs_n1, missing

local svars s_female s_race_cat1  s_hseduc ///
s_medicaid_n1 s_adl_independent_core_n1n2 s_srh_pf_n1n2 s_imprelig_vimp_n1 ///
s_cancer_hrs_n1 s_lung_hrs_n1 s_heart_hrs_n1 s_chf_hrs_n1 ///
s_stroke_hrs_n1 s_memory_hrs_n1 s_htn_hrs_n1 s_dm_hrs_n1 ///
s_hrs_comorb_none_n1 s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 ///
s_psych_overall_hrs_n1n2 s_smoke_curr_n1 s_vig_phy_act_n1 ///
r_s_help_dur_ind1 r_s_help_dur_ind2 r_s_help_dur_ind3 ///
s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter s_cesd_ge3better 

la var s_age "Age at spouse's death, years, mean (SD)"
la var s_female "Female, %"
la var s_race_cat1 "Race, White, Non-Hispanic, %"
la var s_hseduc "Education, High School Degree, %"
la var s_medicaid_n1  "Medicaid, %"
la var s_adl_independent_core_n1n2 "ADL Independent pre-death, %**"
la var s_srh_pf_n1n2 "SRH poor or fair, %**"
la var s_imprelig_vimp_n1 "Religion very important, %"
la var s_cancer_hrs_n1 "Cancer, %"
la var s_lung_hrs_n1 "Lung disease, %"
la var s_heart_hrs_n1 "Heart disease, %"
la var s_chf_hrs_n1 "CHF, %"
la var s_stroke_hrs_n1 "Stroke, %"
la var s_memory_hrs_n1 "Memory disease, %"
la var s_htn_hrs_n1 "Hypertension, %"
la var s_dm_hrs_n1 "Diabetes, %"
la var s_hrs_comorb_none_n1 "Comorbidities, none, %"
la var s_hrs_comorb_mild_n1 "Comorbidities, Mild (1-3), %"
la var s_hrs_comorb_mod_n1 "Comorbidities, Moderate (4-6), %"
la var s_psych_overall_hrs_n1n2 "Psychological problems, %**"
la var s_smoke_curr_n1 "Currently smoker, %"
la var s_vig_phy_act_n1 "Vigorous physical activity, %"
la var r_s_help_dur_ind1 "Spouse not primary caregiver exit, %"
la var r_s_help_dur_ind2 "Spouse primary caregiver exit only, %"
la var r_s_help_dur_ind3 "Spouse primary caregiver exit + core, %"
la var s_cesd_tot_ge3_n1n2 "S Depressed CESD 3+, pre-death, %**"
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, post-death, %"
la var s_cesdbetter "S CES-D Improved n1 to p1,%"
la var s_cesd_ge3better "Clinical improvement n1 to p1,%"

la var s_cesd_tot_n1n2 "CESD score pre-death, mean(SD)**"
la var s_cesd_tot_p1 "CESD score post-death, mean(SD)"
la var s_cesdchange "Change CES-D Score n1 to p1, mean(SD)"
la var days_p1_core_dead "Days R death to p1 s interview, mean(SD)"

//convert days to months to report months in the table
gen s_months_n1_to_p1=s_days_n1_to_p1/30.5
gen s_months_n1n2_to_p1=s_days_n1n2_to_p1/30.5
la var s_months_n1_to_p1  "Months n1 to p1 s interview, mean(SD)"
la var s_months_n1n2_to_p1  "Months n1 or n2 to p1 s interview, mean(SD)"

mat schar_1=J(1,2,.)

sum s_age, detail //age
mat schar_1[1,1]=r(mean)
mat schar_1[1,2]=r(sd)

mat rownames schar_1=s_age

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(1,1,1)

frmttable, statmat(schar_1) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_1) 	

mat schar_2=J(28,1,.)
local r = 1
foreach v in `svars'{
	sum `v'
	mat schar_2[`r',1]=r(mean)*100 //percent
	local r = `r'+1
	}

mat rownames schar_2 = `svars'

frmttable, statmat(schar_2) varlabels ///
	sdec(2) store(tab1_2) 	  

mat schar_3=J(6,2,.)

local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange days_p1_core_dead ///
 s_months_n1_to_p1 s_months_n1n2_to_p1 {
	sum `v', detail //ces-d scores
	mat schar_3[`r',1]=r(mean)
	mat schar_3[`r',2]=r(sd)
	local r = `r'+1
	}

mat rownames schar_3=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange ///
 days_p1_core_dead s_months_n1_to_p1 s_months_n1n2_to_p1 

//save the table in frmttable	
mat dmat=(0,1)
mat ann=J(3,1,1)

frmttable, statmat(schar_3) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab1_3) 	  

outreg, replay(tab1_1) append(tab1_2) store(tab1_a)

*** add the headings, notes, using file name etc. to this one
outreg using "`logpath'\10_spo_ip_tab1and2_30d", ///
replay(tab1_a) append(tab1_3) ///
title("Table 1: Characteristics of Study sample (n=`samplen')") ///
ctitles("Spouse","") ///
note("Decedent chronic conditions from Medicare claims. 6-12m before death." \ ///
"Spouse chronic conditions from self report in HRS interviews." \ ///
"** From the pre-death interview at least 6m prior to death.") ///
landscape addtable


*************************************************************************************
*************************************************************************************
//Create Table 2, Decedent and Spouse PS Score Matching Variables
//Col 1-3: Unweighted, unmatched sample
//Col 4-6: Weighted and matched sample
*************************************************************************************
*************************************************************************************

local t2vars1 r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 // r_loc_

local t2vars2 cc_all_count_6m12m_2 s_age 

local t2vars3 s_female s_race_cat1 ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind2 r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr

la var r_nhres_n1n2 "Nursing home resident pre-death"
la var r_srh_pf_n1n2 "SRH poor or fair"
la var r_adl_impair_n1n2 "ADL Impairment"
la var s_srh_pf_n1n2 "SRH poor or fair"
la var s_psych_overall_hrs_n1n2 "Psychological problems"
	
//part 1, n unmatched
mat t2_1=J(1,3,.)
tab int_any_30d , missing matcell(d1)
mat t2_1[1,2]=d1[1,1] //no procedures n
mat t2_1[1,1]=d1[2,1] //procedure n
mat rownames t2_1="Sample n"

frmttable, statmat(t2_1) varlabels ///
	sdec(0) store(tab2_1) 	

//part 2, decedent char, % and std difference
mat t2_2=J(18,5,.)

local r = 1
foreach v in `t2vars1'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d', detail
		mat t2_2[`r',`c']=r(mean)*r(N) //n
		mat t2_2[`r',`c'+1]=r(mean)*100 //percent
		local c = `c'+2		
	}
	mat t2_2[`r',5]=(t2_2[`r',2]/100-t2_2[`r',4]/100)/sqrt((t2_2[`r',2]/100* ///
		(1-t2_2[`r',2]/100)+t2_2[`r',4]/100*(1-t2_2[`r',4]/100))/2)
	local r = `r'+1
}
mat rownames t2_2=`t2vars1'

mat dmat=(0,1,0,1,0)
mat ann=J(17,2,1)

frmttable, statmat(t2_2) varlabels ///
	sdec(1,1,2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_2) 	

//part 3, cont vars r & s, mean and std diff
mat t2_3=J(2,5,.)

local r = 1
foreach v in `t2vars2'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d', detail
		mat t2_3[`r',`c']=r(mean)
		mat t2_3[`r',`c'+1]=r(sd)
		local c = `c'+2		
	}
	mat t2_3[`r',5]=(t2_3[`r',1]-t2_3[`r',3])/sqrt((t2_3[`r',2]^2+t2_3[`r',4]^2)/2) 
	local r = `r'+1
}

mat rownames t2_3=`t2vars2'

mat dmat=(0,1,0,1,0)
mat ann=(1,1,0\1,1,0)
mat list dmat
mat list ann

mat list t2_3

frmttable, statmat(t2_3) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3) 

//part 4, spouse char, %
mat t2_4=J(14,5,.)

local r = 1
foreach v in `t2vars3'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d', detail
		mat t2_4[`r',`c']=r(mean)*r(N)
		mat t2_4[`r',`c'+1]=r(mean)*100
		local c = `c'+2		
	}
	mat t2_4[`r',5]=(t2_4[`r',2]/100-t2_4[`r',4]/100)/sqrt((t2_4[`r',2]/100* ///
		(1-t2_4[`r',2]/100)+t2_4[`r',4]/100*(1-t2_4[`r',4]/100))/2)

	local r = `r'+1
}
mat rownames t2_4=`t2vars3'

mat dmat=(0,1,0,1,0)
mat ann=J(12,2,1)

frmttable, statmat(t2_4) varlabels ///
	sdec(1,1,2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_4) 	

outreg, replay(tab2_1) append(tab2_2) store(tab2_a)
outreg, replay(tab2_a) append(tab2_3) store(tab2_b)
outreg, replay(tab2_b) append(tab2_4) store(tab2_c) //complete unmatched table w/ std diff

***************************************************************
//end of unmatched sample, start matched sample
***************************************************************
//part 1, n matched
mat t2_1m=J(1,3,.)
tab int_any_30d if ip_weight!=., missing matcell(d1)
mat t2_1m[1,2]=d1[1,1] //no procedures n
mat t2_1m[1,1]=d1[2,1] //procedure n
mat rownames t2_1m="Sample n"

frmttable, statmat(t2_1m) varlabels ///
	sdec(0) store(tab2_1m) 	

//part 2, decedent char, % and std difference
mat t2_2m=J(18,3,.)

local r = 1
foreach v in `t2vars1'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d' [iweight=ip_weight]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
	local r = `r'+1
}
mat rownames t2_2m=`t2vars1'
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 	

//part 3, cont vars r & s, mean and std diff
mat t2_3m=J(2,5,.)

local r = 1
foreach v in `t2vars2'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d' [iweight=ip_weight]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2		
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	local r = `r'+1
}

mat rownames t2_3m=`t2vars2'

mat dmat=(0,1,0,1,0)
mat ann=(1,1,0\1,1,0)
mat list dmat
mat list ann

mat list t2_3

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

//part 4, spouse char, %
mat t2_4m=J(14,3,.)

local r = 1
foreach v in `t2vars3'{
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d==`d' [iweight=ip_weight]
		mat t2_4m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_4m[`r',3]=(t2_4m[`r',1]/100-t2_4m[`r',2]/100)/sqrt((t2_4m[`r',1]/100* ///
		(1-t2_4m[`r',1]/100)+t2_4m[`r',2]/100*(1-t2_4m[`r',2]/100))/2)

	local r = `r'+1
}

mat rownames t2_4m=`t2vars3'
frmttable, statmat(t2_4m) varlabels ///
	sdec(2) store(tab2_4m) 	

outreg, replay(tab2_1m) append(tab2_2m) store(tab2_am)
outreg, replay(tab2_am) append(tab2_3m) store(tab2_bm)
outreg, replay(tab2_bm) append(tab2_4m) store(tab2_cm) //complete matched table w/ std diff

//combine unmatched and match tables
outreg using "`logpath'\10_spo_ip_tab1and2_30d", ///
 replay(tab2_c) merge(tab2_cm) ///
 title("Table 2: Decedent and spouse characteristics used in propensity score matching, by intensive procedure use status") ///
 ctitles("","Unmatched sample","","","Matched sample","","" \ ///
    "","Intensive procedure n (%)","No procedure n (%)","Standardized Difference", ///
    "Intensive procedure %","No procedure %","Standardized Difference") ///
 landscape addtable

*******************************************************************
*******************************************************************
//Table 3 - CES-D score pre/post death by intense procedures use
*******************************************************************
**************************************************************
la var s_cesd_tot_ge3_n1n2 "S Depressed CESD 3+, pre-death,%"
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, post-death,%"
la var s_cesdbetter "S CES-D Improved n1 to p1,%"
la var s_cesdsame "S CES-D No Change n1 to p1,%"
la var s_cesdworse "S CES-D Worsened n1 to p1,%"
la var s_cesd_ge3better "Clinical improvement n1 to p1,%"
la var s_cesd_tot_n1n2 "S CES-D Score, pre-death, mean(sd)"
la var s_cesd_tot_p1 "S CES-D Score, post-death, mean(sd)"
la var s_cesdchange "Change CES-D Score n1 to p1, mean(sd)"

la var days_p1_core_dead "Days death to p1, mean(sd)"

local ivars s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter s_cesdsame s_cesdworse  s_cesd_ge3better 
local cvars s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange days_p1_core_dead

//part 1 - prior to matching
mat t2_2m=J(6,4,.)

local r = 1
foreach v in `ivars' { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d'
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_30d `v'
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m= `ivars' 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(4,6,.)
local r = 1
foreach v in `cvars'  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d', detail 
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_30d `v'
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=`cvars' 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\10_spo_ip_tab1and2_30d, ///
replay(tab2_2m) append(tab2_3m) addtable ///
title("Table 3a: Spouse CES-D score details, sample before matching") ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value")

//Part 2 - after matching
mat t2_2m=J(6,4,.)

local r = 1
foreach v in `ivars' { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d' [iweight=ip_weight]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_30d `v' [iw=ip_weight]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=`ivars'
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(4,6,.)
local r = 1
foreach v in `cvars'  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_30d ==`d' [iweight=ip_weight]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_30d `v' [iw=ip_weight]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=`cvars' 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\10_spo_ip_tab1and2_30d, ///
replay(tab2_2m) append(tab2_3m) addtable ///
title("Table 3b: Spouse CES-D score details, matched sample") ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value")

//test pre-post cesd score difference, not matched, full sample
ttest s_cesd_tot_p1=s_cesd_tot_n1n2   //overall sample
ttest s_cesd_tot_p1=s_cesd_tot_n1n2 if ///
 (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1) //caregiver sample
ttest s_cesdchange if  (r_adl_sp_helper_x==1 | r_iadl_sp_helper_x==1), ///
 by(int_any_30d)  //caregiver sample

tab r_female s_female, missing 
***************************************************************
//details re which procedures were done
/*mat t4=J(5,2,.)

local r=1
foreach v in int_intubation_6m int_trach_6m int_gastro_tude_6m ///
int_enteral_nut_6m int_cpr_6m {
		tab `v' , missing
		sum `v' , detail
		mat t4[`r',1]=r(mean)*100 //percent
		mat t4[`r',2]=r(mean)*r(N)
		local r = `r'+1
		}
		
mat list t4

frmttable using `logpath'\10_spo_ip_tab1and2_30d, ///
addtable statmat(t4)  ///
sdec(2)  ///
title("Table 4: Procedure rates") ///
ctitles("" "percent of full sample" "n") ///
rtitles("Intubation, mech ventilation"\ "Trachostomy" \"Gastrostomy tube"\ ///
"Enteral/parenteral nutrition"\ "CPR")*/
***************************************************************
//r age, mean and sd

mat tab5=J(2,5,.)

	local c = 1
	foreach d in 1 0 {

	sum r_age if int_any_30d==`d', detail //age
	mat tab5[1,`c']=r(mean)
	mat tab5[1,`c'+1]=r(sd)
	
	sum r_race_cat1 if int_any_30d==`d', detail //race
	mat tab5[2,`c']=r(mean)*100 //percent
	
	local c = `c'+2
}

ttest r_age, by(int_any_30d)
	mat tab5[1,5]=r(p)
	
tab int_any_30d r_race_cat1, chi2
	mat tab5[2,5]=r(p)



mat rownames tab5="Age, mean, sd" "Race, white, percent"

frmttable using `logpath'\10_spo_ip_tab1and2_30d, ///
addtable statmat(tab5)  ///
sdec(2)  ///
title("Table 5: Misc decedent characteristics, by procedure use") ///
ctitles("" "With procedure" "" "No procedure" "" "P-value") ///
varlabels

***************************************************************
log close


H="30 day proc to death"
capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\procedure_to_death_30d.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_intens_data_ps_matched_30d.dta

gen died_1st_day=proc_to_death<2

gen died_1st_wk=proc_to_death<8

gen died_1st_fortnight=proc_to_death<15

gen died_1st_month=proc_to_death<31

gen died_after_2wks_30d=died_1st_m==1 & died_1st_fortnight==0

gen died_after_1mo=int_any_of==1 & died_1st_mo==0

gen died_same_day=proc_to_death==0

mat cesd=J(9,9,.)

local r=1
local c=4

foreach x in 0 1 {
	
	sum s_cesdchange if int_any_of5==`x'
	mat cesd[`r',1]=r(mean)
	mat cesd[`r',2]=r(sd)
	mat cesd[`r',3]=r(N)
	foreach s in better worse same {
		sum s_cesd`s' if int_any_of5==`x'
		mat cesd[`r',`c']=r(mean)*100
		mat cesd[`r',`c'+1]=r(N)*r(mean)
		local c=`c'+2
}
	local r=`r'+1
	local c=4
}

foreach x in after_1mo 1st_mo after_2wks_30d 1st_fortnight 1st_wk 1st_day same_day {
	qui sum s_cesdchange if died_`x'==1
	mat cesd[`r',1]=r(mean)
	mat cesd[`r',2]=r(sd)
	mat cesd[`r',3]=r(N)
	foreach s in better worse same {
		qui sum s_cesd`s' if died_`x'==1
		mat cesd[`r',`c']=r(mean)*100
		mat cesd[`r',`c'+1]=r(N)*r(mean)
		local c=`c'+2
}
	local r=`r'+1
	local c=4
}

mat rownames cesd="No intensive procedure last 6m" "Intensive procedure last 6m" ///
"Int proc 31-183 days" "Int proc last 30 days" "Int proc 15-30 days" ///
"Int proc last 2 wks" "Int proc last week" "Int proc w/in 1 day" "Int proc same day"

frmttable, statmat(cesd) sdec(2,2,0,2,0,2,0,2,0) title("Surviving Spousal Depression and Intensive Procedure at EOL") ///
ctitles("" "mean CESD Change" "sd" "N" "% CESD Better" "n" "% CESD Worse" "n" "CESD Unchanged" ///
"n") store(cesd1) 

outreg using `logpath'\cesd_last_2wks_30d.rtf, replay(cesd1) replace

label define location 1  "Hospital" 2 "Nursing Home" 3 "Home" 4 "Hospice" ///
      5 "Assisted Living/Retirement Home" 6 "Other/Don't Know "
label values *location* location

mat loc=J(8,4,.)


local c=1

foreach num in 1 0 {
	local r=2
	sum r_loc_ if int_any_30d==`num'
	mat loc[1,`c']=100*r(N)/r(N)
	mat loc[1,`c'+1]=r(N)
	mat loc[`r',`c']=r(mean)*100
	mat loc[`r',`c'+1]=r(mean)*r(N)
	local r=`r'+1
	mat loc[`r',`c']=(1-r(mean))*100
	mat loc[`r',`c'+1]=(1-r(mean))*r(N)
	local c=`c'+2
	local r=`r'+1
}
local c=1
foreach num in 1 0 {
	qui sum r_loca if int_any_30d==`num'
	scalar loc_n=r(N)
	qui tab r_loca if int_any_30d==`num', matcell(loca)
	forvalues i=2/6 {
		scalar loc_place = loca[`i',1]
		mat loc[`r',`c']=loc_place/loc_n*100
		mat loc[`r',`c'+1]=loca[`i',1]
		local r=`r'+1
}
	local c=3
	local r=4
}

mat loc[8,1]=loc[7,1]
mat loc[8,2]=loc[7,2]
mat loc[7,1]=0
mat loc[7,2]=0
mat rownames loc="Total" "Died in Hospital" "outside Hospital" "Nursing Home" "Home" ///
"Hospice" "LTCF/Retirement Home" "Other/DK"

frmttable, statmat(loc) sdec(2,0,2,0) title( "Location of Death by Intensive Procedure, last 30 days")  ///
ctitles("" "% with Procedure" "n" "% without" "n")

outreg using `logpath'\cesd_last_2wks_30d.rtf, replay(loc) addtable

la var int_intubation_6m "Intubation and mechanical ventilation"
la var int_trach_6m "Tracheostomy"
la var int_gastro_tude_6m "Gastrostomy tube insertion"
la var int_hemodia_6m "Hemodialysis"
la var int_enteral_nut_6m "Enteral or parenteral nutrition"
la var int_cpr_6m "CPR"

mat proc=J(6,5,.)

preserve 
keep if int_any_of5==1
local ints int_intubation_6m int_trach_6m int_gastro_tude_6m ///
 int_enteral_nut_6m int_cpr_6m
local ints2 int_intubation_ int_trach_ int_gastro_tude_ ///
 int_enteral_nut_ int_cpr_

foreach x of local ints2 {
	replace `x'6m=`x'1m if int_any_30d==1
}
 
local r=2 
local c=1

foreach x of local ints {
	foreach if in 0 1 {
		qui sum `x' if int_any_30d==`if'
		mat proc[1,`c']=r(N)/r(N)*100
		mat proc[1,`c'+1]=r(N)
		mat proc[`r',`c']=r(mean)*100
		mat proc[`r',`c'+1]=r(mean)*r(N)
		local c=`c'+2
}
	ttest `x', by(int_any_30)
	mat proc[`r',5]=r(p)
	local r=`r'+1
	local c=1
}

mat rownames proc="Total" `ints'

frmttable, statmat(proc) sdec(2,0,2,0,3) title("Type of Intensive Procedure") ///
ctitles("Procedure" "% with procs 31d-6m" "n" "% with procs last 30 days" "n" "p") varlabels store(proc)

outreg using `logpath'\cesd_last_2wks_30d.rtf, replay(proc) addtable

log close


H="looking just at intubation & cpr"
/*this runs through the match and regressions for just intubation and cpr*/


capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

log using "`logpath'\Spouse_intensive_int_cpr.txt", text replace

cd `datapath'

//use sample with no missingness - saved when first round of psmatching done
use spouse_intens_data_ps_set.dta
***************************************************************
tab int_any_of5_6m, missing

gen int_any_of2_6m=int_intubation_6m==1 | int_cpr_6m==1

tab int_any_of2_6m, m

//where r&s highly correlated, use s
local rvars r_nw_midlow_n1 r_nw_midhigh_n1 r_nw_highest_n1 ///
r_nhres_n1n2 r_srh_pf_n1n2 r_advdir_x r_dexp_x  r_adl_impair_n1n2 ///
cc_3_alzhdmta_n12mn6m cc_6_chrnkidn_n12mn6m cc_ami_isch_n12mn6m ///
cc_8_chf_n12mn6m cc_9_diabetes_n12mn6m cc_7_copd_n12mn6m ///
cc_16_strketia_n12mn6m cc_cncr_chronic_n12mn6m cc_15_ra_oa_n12mn6m ///
cc_13_depressn_n12mn0 cc_all_count_6m12m_2

local svars s_age s_female s_race_cat1   ///
s_hseduc s_srh_pf_n1n2 s_imprelig_vimp_n1  ///
s_hrs_comorb_mild_n1 s_hrs_comorb_mod_n1 s_psych_overall_hrs_n1n2 ///
r_s_help_dur_ind3 days_p1_core_dod_6_12m days_p1_core_dod_12_18m ///
days_p1_core_dod_18_24m days_p1_core_dod_gt2yr
*******************************************************************
//propensity score generation

//first sort data randomly
set seed 2000
gen x=uniform()
sort x

//generate pscore variable hs_pscore
pscore int_any_of2_6m `rvars' `svars', pscore(ip_pscore) blockid(ip_block) logit

psgraph, treated(int_any_of2_6m) pscore(ip_pscore)

*******************************************************************
//implement radius matching
gen logitpscore=ln(ip_pscore/(1-ip_pscore))
sum logitpscore

sca cal_ps1=r(sd)*0.02
sca list cal_ps1
local caliper cal_ps1

//rule of thumb 0.2*sd, try 0.02* sd
psmatch2  int_any_of2_6m,outcome(s_cesdbetter) pscore(ip_pscore) radius caliper(`=`caliper'') logit
//note this creates varaible _weight

*******************************************************************
//look at balance of propensity score across variables
psgraph, treated(int_any_of2_6m) pscore(ip_pscore)

pstest `rvars' `svars' ,treated(int_any_of2_6m) both hist

//look at quantile-quantile plots for continuous variables
foreach v in r_age cc_all_count_6m12m_2{
gen `v'_treated = `v' if int_any_of2_6m==1 & _support==1
gen `v'_comparison = `v' if int_any_of2_6m==0 & _support==1
qqplot `v'_treated `v'_comparison
graph save `logpath'/qqplot_`v'_cg, replace
}

mat vr=J(33,6,.)
//compare variance of covariates before and after matching
local i=1
foreach v in `rvars' `svars'  {
sum `v' if int_any_of2_6m==1 //get variance treated before matching
mat vr[`i',1]=r(Var)
sum `v' if int_any_of2_6m==0 //get variance comparison before matching
mat vr[`i',2]=r(Var)
mat vr[`i',3]= vr[`i',1]/vr[`i',2] //ratio
sum `v' if int_any_of2_6m==1 & _support==1 //get variance treated after matching
mat vr[`i',4]=r(Var)
sum `v' if int_any_of2_6m==0 [iweight=_weight] //get variance comparison after matching
mat vr[`i',5]=r(Var)
mat vr[`i',6]= (vr[`i',4]) / (vr[`i',5]) //ratio
local i=`i'+1
}

mat rownames vr=`rvars' `svars'

mat list vr

//what gets dropped from sample using this match?
tab _support, missing
tab _support if int_any_of2_6m==1, missing //n=1 treated dropped, off comm support
tab _support if int_any_of2_6m==0, missing
tab _weight if int_any_of2_6m==1, missing
sum _weight if int_any_of2_6m==0 //n=37 control dropped, no weight assigned

rename _weight ip_weight_cg

*******************************************************************
//run the doubly robust models
la var int_any_of2_6m "Intensive procedure used"
la var r_nhres_n1n2 "R Nursing home resident"
la var r_srh_pf_n1n2 "R SRH Fair/Poor"
la var r_adl_impair_n1n2 "R ADL Impaired"
la var cc_all_count_6m12m_2 "R # Chronic conditions"
la var s_race_cat1 "S White, Non-Hispanic"
la var s_hseduc "S HS Degree"
la var s_srh_pf_n1n2 "S SRH Fair/Poor"
la var s_hrs_comorb_mild_n1 "S Mild comorb."
la var s_hrs_comorb_mod_n1 "S Moderate comorb."
la var s_psych_overall_hrs_n1n2 "S Psych condition"

logit s_cesdbetter int_any_of2_6m `rvars' `svars' [pw=ip_weight_cg], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, 6m Intubation and CPR only") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(1) Any improvement" ) ///
starlevels(10 5 1) store(res1) summstat(N)

logit s_cesd_ge3better int_any_of2_6m `rvars' `svars' [pw=ip_weight_cg], or
outreg , ///
merge(res1) store(res1) varlabels stats(e_b e_ci p) ///
ctitles("","(2) Clinical improvement") ///
summstat(N)

regress s_cesdchange int_any_of2_6m `rvars' `svars' [pw=ip_weight_cg]
outreg , ///
merge(res1) store(res1) varlabels stats(b ci p) ///
ctitles("","(3) Raw change in CES-D score") ///
summstat(N) landscape

logit s_cesdworse int_any_of2_6m `rvars' `svars' [pw=ip_weight_cg], or
outreg, ///
title("Impact of intensive procedure on spousal depression" \ ///
"Propensity matched sample, 6m Intubation and CPR only") ///
varlabels stats(e_b e_ci p)  ///
ctitles("","(4) Any increase in depressive symptoms" ) ///
starlevels(10 5 1) merge(res1) store(res1) summstat(N)

*******************************************************************
//run model on post-death cesd score, controlling for pre-death score
regress s_cesd_tot_p1 int_any_of2_6m `rvars' `svars' s_cesd_tot_n1n2  [pw=ip_weight_cg]

outreg using `logpath'\6i_ps_matched_int_cpr, ///
merge(res1) replace  varlabels stats(b ci p) ///
ctitles("","(5) Post-death CES-D score") ///
summstat(N) landscape  


*******************************************************************
//quick look at matched sample, outcomes univariate comparison
la var s_cesd_tot_ge3_p1 "S Depressed CESD 3+, p1 core"
la var s_cesd_tot_ge3_p1 "S CES-D Score, p1 core"

mat t2_2m=J(3,4,.)

local r = 1
foreach v in s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter { //indicator variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of2_6m ==`d' [iweight=ip_weight_cg]
		mat t2_2m[`r',`c']=r(mean)*100
		local c = `c'+1		
	}
	mat t2_2m[`r',3]=(t2_2m[`r',1]/100-t2_2m[`r',2]/100)/sqrt((t2_2m[`r',1]/100* ///
		(1-t2_2m[`r',1]/100)+t2_2m[`r',2]/100*(1-t2_2m[`r',2]/100))/2)
		
	logit int_any_of2_6m `v' [iw=ip_weight_cg]
	test `v'
	mat t2_2m[`r',4] = r(p)
	
	local r = `r'+1
}
mat rownames t2_2m=s_cesd_tot_ge3_n1n2 s_cesd_tot_ge3_p1 s_cesdbetter 
frmttable, statmat(t2_2m) varlabels ///
	sdec(2) store(tab2_2m) 

mat t2_3m=J(3,6,.)
local r = 1
foreach v in s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange  { //continuous variables
	local c = 1
	foreach d in 1 0 {
		sum `v' if int_any_of2_6m ==`d' [iweight=ip_weight_cg]
		mat t2_3m[`r',`c']=r(mean)
		mat t2_3m[`r',`c'+1]=r(sd)
		local c = `c'+2	
	}
	mat t2_3m[`r',5]=(t2_3m[`r',1]-t2_3m[`r',3])/sqrt((t2_3m[`r',2]^2+t2_3m[`r',4]^2)/2) 
	
	logit int_any_of2_6m `v' [iw=ip_weight_cg]
	test `v'
	mat t2_3m[`r',6] = r(p)
	
	local r = `r'+1
}
mat rownames t2_3m=s_cesd_tot_n1n2 s_cesd_tot_p1 s_cesdchange 

mat dmat=(0,1,0,1,0,0)
mat ann=(1,1,0,0\1,1,0,0\1,1,0,0)
mat list dmat
mat list ann

mat list t2_3m

frmttable, statmat(t2_3m) varlabels ///
	sdec(2) doubles(dmat) ///
	dbldiv(" (") annotate(ann) asymbol(")") ///
	store(tab2_3m) 

outreg using `logpath'\6i_ps_matched_int_cpr, ///
replay(tab2_2m) append(tab2_3m) addtable ///
ctitles("" "Intensive procedure" "No procedure" "Std Diff." "p-value") ///
title("Matched sample, S CES-D before and after R's death")

*******************************************************************
log close


H="30d bar graph cesd vs. time"
//this makes five charts on depression before and after

//note-this produces bar charts with confidence intervals for mean cesd score; for charts w/o ci 
//look to the previous iterations

//use dataset where observations missing data for psmatched variables are dropped

capture log close

clear all
set more off

//Amy's PC
local logpath E:\data\spouse_intensive\logs
local datapath E:\data\spouse_intensive\int_data

*log using "`logpath'\9-Spouse_intensive_bar_chart.txt", text replace

cd `datapath'

//use sample with full ces-d information
use spouse_intens_data_ps_matched.dta
***************************************************************
//set time variables
gen s_days_n_core_dead = s_days_n1_core_dead if s_ind_n1_wi_6m_dead==0
replace s_days_n_core_dead = s_days_n2_core_dead if s_ind_n1_wi_6m_dead==1

gen days_n_core_dod_cat = .
replace days_n_core_dod_cat = 0 if 0<=s_days_n_core_dead & s_days_n_core_dead <183
replace days_n_core_dod_cat = 1 if 183<=s_days_n_core_dead & s_days_n_core_dead <366
replace days_n_core_dod_cat = 2 if 366<=s_days_n_core_dead & s_days_n_core_dead <548
replace days_n_core_dod_cat = 3 if 548<=s_days_n_core_dead & s_days_n_core_dead <731
replace days_n_core_dod_cat = 4 if 731<=s_days_n_core_dead & s_days_n_core_dead !=.
la def days_n_core_dod_cat 0 "0-6 months" 1 "6-12 months" 2 "12-18 months" ///
3 "18-24 months" 4 "24+ months"
la var days_n_core_dod_cat "Days from pre-death core ivw to  R death, categorical"
la val days_n_core_dod_cat days_n_core_dod_cat 
tab days_n_core_dod_cat , missing

tab days_p1_core_dod_cat, missing 

//now create cesd variables for each of the time periods,
//leave missing if cesd not taking within the time window
gen cesd_1=s_cesd_tot_n1n2 if days_n_core_dod_cat==4 //n1 core 24+m
gen cesd_2=s_cesd_tot_n1n2 if days_n_core_dod_cat==3 //n1 core 18-24m
gen cesd_3=s_cesd_tot_n1n2 if days_n_core_dod_cat==2
gen cesd_4=s_cesd_tot_n1n2 if days_n_core_dod_cat==1
gen cesd_5=s_cesd_tot_n1n2 if days_n_core_dod_cat==0
gen cesd_6=s_cesd_tot_p1 if days_p1_core_dod_cat==0
gen cesd_7=s_cesd_tot_p1 if days_p1_core_dod_cat==1
gen cesd_8=s_cesd_tot_p1 if days_p1_core_dod_cat==2
gen cesd_9=s_cesd_tot_p1 if days_p1_core_dod_cat==3
gen cesd_10=s_cesd_tot_p1 if days_p1_core_dod_cat==4

forvalues i = 1/10 {
	gen cesd_dep_`i'=(cesd_`i'>=3)
	replace cesd_dep_`i'=. if cesd_`i'==.
}


forvalues i=1/10 {
	gen ulci_`i'=.
	gen llci_`i'=.
	foreach j in 0 1 {
		sum cesd_`i' if int_any_30d==`j'
		replace ulci_`i'=r(mean)+invttail(r(N)-1,0.025)*r(sd)/sqrt(r(N)) if int_any_30d==`j'
		replace llci_`i'=r(mean)-invttail(r(N)-1,0.025)*r(sd)/sqrt(r(N)) if int_any_30d==`j'
}
	gen w_ulci_`i'=.
	gen w_llci_`i'=.
	foreach j in 0 1 {
		sum cesd_`i' if int_any_30d==`j' [iw=ip_w]
		replace w_ulci_`i'=r(mean)+invttail(r(N)-1,0.025)*r(sd)/sqrt(r(N)) if int_any_30d==`j'
		replace w_llci_`i'=r(mean)-invttail(r(N)-1,0.025)*r(sd)/sqrt(r(N)) if int_any_30d==`j'
}
}


//drop variables don't need
keep r_id cesd_* ulci_* llci_* w_*lci* int_any_30d ip_weight
drop cesd_miss*

//restructure dataset, 2 rows per person, one before death, one after death
reshape long cesd_ cesd_dep_ ulci_ llci_ w_ulci_ w_llci_, i(r_id) j(time)

save cesd_bar_graph.dta, replace
*****************************************************************
//do pre-match graph
collapse cesd_ ulci_ llci_, by(time int_any_30d)

replace time=_n

foreach i in 2 5 7 9 11 13 16 18 20 {
	replace time=time+0.2 if time>`i'
}


gen mean=time+.5 if int_any==0


twoway 	(bar cesd_ time if int_any_30d==0) (bar cesd_ time if int_any_30d==1) ///
		(rcap ulci_ llci_ time), xlabel(1.5 "24+" 3.7 "18-24m" 5.9 "12-18" ///
	8.1 "6-12" 10.3 "Death" 12.5 "0-6" 14.7 "6-12" 16.9 "12-18" 19.1 "18-24" ///
	21.3 "24+", noticks) ///
	legend(row(1) order(1 "No intensive procedure" 2 "Intensive procedure")) ///
	ytitle("Mean CES-D score") xtitle("") ///
	title("Spouse Mean CES-D score by time of interview, not matched") ///
	subtitle("Months before & after death by int procedure use last 30d")  ///
	yscale(range(0 5))

graph save `logpath'/mean_cesd_bar_30d_ci_not_matched, replace

***************************************************************
//matched
use cesd_bar_graph.dta, clear

collapse cesd_ w_* [pw=ip_weight], by(time int_any_30d)

//creates the clinical depression threshold line.
gen clindep=3

replace time=_n

foreach i in 2 5 7 9 11 13 16 18 20 {
	replace time=time+0.2 if time>`i'
}


gen mean=time+.5 if int_any==0

/*note: this graph needs manual (could be done here-seems a pain)
color adjustment to the line to cranberry to match
the final version in paper*/

twoway 	(bar cesd_ time if int_any_30d==0) (bar cesd_ time if int_any_30d==1) ///
		(rcap w_ulci_ w_llci_ time) (line clindep time), xlabel(1.5 "24+" 3.7 "18-24" 5.9 "12-18" ///
	8.1 "6-12" 10.3 "Death" 12.5 "0-6" 14.7 "6-12" 16.9 "12-18" 19.1 "18-24" ///
	21.3 "24+", noticks) ///
	legend(row(2) order(1 "No intensive procedure" 2 "Intensive procedure" ///
	4 "CES-D Clinical Depression Threshold")) ///
	ytitle("Mean CES-D score") xtitle("") ///
	yscale(range(0 5))
	
graph save `logpath'/mean_cesd_bar_30d_ci_matched, replace
***************************************************************

//a simple figure, this time mean before vs after by intense procedure groups
use spouse_intens_data_ps_matched.dta, clear

collapse s_cesd_tot_n1n2 s_cesd_tot_p1 [pw=ip_weight], by(int_any_30d)

rename s_cesd_tot_n1n2 cesd1
rename s_cesd_tot_p1 cesd2

reshape long cesd, i(int_any_30d) j(time)

la var int_any_30d "Intensive procedure last 6m of life"
la def int_any_30d 0 "No intensive procedure" 1"Intensive procedure"
la val int_any_30d int_any_30d

scatter cesd time, by(int_any_30d, note("")) connect(direct) ///
ytitle("Mean CES-D Score") ///
xtitle("Interview relative to death") ///
xlabel(1 "Before" 2 "After") ///
xscale(range(.75 2.25))

graph save `logpath'/mean_cesd_by_proced_matched, replace

***************************************************************
//clinical depression

use spouse_intens_data_ps_matched.dta, clear
***************************************************************
//set time variables
gen s_days_n_core_dead = s_days_n1_core_dead if s_ind_n1_wi_6m_dead==0
replace s_days_n_core_dead = s_days_n2_core_dead if s_ind_n1_wi_6m_dead==1

gen days_n_core_dod_cat = .
replace days_n_core_dod_cat = 0 if 0<=s_days_n_core_dead & s_days_n_core_dead <183
replace days_n_core_dod_cat = 1 if 183<=s_days_n_core_dead & s_days_n_core_dead <366
replace days_n_core_dod_cat = 2 if 366<=s_days_n_core_dead & s_days_n_core_dead <548
replace days_n_core_dod_cat = 3 if 548<=s_days_n_core_dead & s_days_n_core_dead <731
replace days_n_core_dod_cat = 4 if 731<=s_days_n_core_dead & s_days_n_core_dead !=.
la def days_n_core_dod_cat 0 "0-6 months" 1 "6-12 months" 2 "12-18 months" ///
3 "18-24 months" 4 "24+ months"
la var days_n_core_dod_cat "Days from pre-death core ivw to  R death, categorical"
la val days_n_core_dod_cat days_n_core_dod_cat 
tab days_n_core_dod_cat , missing

tab days_p1_core_dod_cat, missing 

//now create cesd variables for each of the time periods,
//leave missing if cesd not taking within the time window
gen cesd_1=s_cesd_tot_n1n2 if days_n_core_dod_cat==4 //n1 core 24+m
gen cesd_2=s_cesd_tot_n1n2 if days_n_core_dod_cat==3 //n1 core 18-24m
gen cesd_3=s_cesd_tot_n1n2 if days_n_core_dod_cat==2
gen cesd_4=s_cesd_tot_n1n2 if days_n_core_dod_cat==1
gen cesd_5=s_cesd_tot_n1n2 if days_n_core_dod_cat==0
gen cesd_6=s_cesd_tot_p1 if days_p1_core_dod_cat==0
gen cesd_7=s_cesd_tot_p1 if days_p1_core_dod_cat==1
gen cesd_8=s_cesd_tot_p1 if days_p1_core_dod_cat==2
gen cesd_9=s_cesd_tot_p1 if days_p1_core_dod_cat>3
*gen cesd_10=s_cesd_tot_p1 if days_p1_core_dod_cat==4

forvalues i = 1/9 {
	gen cesd_dep_`i'=(cesd_`i'>=3)
	replace cesd_dep_`i'=. if cesd_`i'==.
}


forvalues i=1/9 {
	gen ulci_`i'=.
	gen llci_`i'=.
	foreach j in 0 1 {
		sum cesd_`i' if int_any_30d==`j'
		replace ulci_`i'=r(mean)+invttail(r(N)-1,0.025)*r(sd)/sqrt(r(N)) if int_any_30d==`j'
		replace llci_`i'=r(mean)-invttail(r(N)-1,0.025)*r(sd)/sqrt(r(N)) if int_any_30d==`j'
}
	gen w_ulci_`i'=.
	gen w_llci_`i'=.
	foreach j in 0 1 {
		sum cesd_`i' if int_any_30d==`j' [iw=ip_w]
		replace w_ulci_`i'=r(mean)+invttail(r(N)-1,0.025)*r(sd)/sqrt(r(N)) if int_any_30d==`j'
		replace w_llci_`i'=r(mean)-invttail(r(N)-1,0.025)*r(sd)/sqrt(r(N)) if int_any_30d==`j'
}
}


//drop variables don't need
keep r_id cesd_* ulci_* llci_* w_*lci* int_any_30d ip_weight
drop cesd_miss*

//restructure dataset, 2 rows per person, one before death, one after death
reshape long cesd_ cesd_dep_ ulci_ llci_ w_ulci_ w_llci_, i(r_id) j(time)


preserve

collapse cesd_dep_ , by(time int_any_30d)

replace time=_n

foreach i in 2 5 7 9 11 13 16 18 20 {
	replace time=time+0.2 if time>`i'
}


gen mean=time+.5 if int_any==0


twoway 	(bar cesd_ time if int_any_30d==0) (bar cesd_ time if int_any_30d==1) ///
	, xlabel(1.5 "24+" 3.7 "18-24m" 5.9 "12-18" ///
	8.1 "6-12" 10.3 "Death" 12.5 "0-6" 14.7 "6-12" 16.9 "12-18" 19.1 "18+" ///
	, noticks) ///
	legend(row(1) order(1 "No intensive procedure" 2 "Intensive procedure")) ///
	ytitle("Percentage 3+ CES_D") xtitle("") ///
	title("% Spouse 3+ CES-D score by time of interview, unmatched") ///
	subtitle("Months before & after death by int procedure use last 30d")  ///
	yscale(range(0 .75))

graph save `logpath'/mean_cesd_clin_dep_not_matched, replace

restore

collapse cesd_dep_ [pw=ip_w], by(time int_any_30d)

replace time=_n

foreach i in 2 5 7 9 11 13 16 18 20 {
	replace time=time+0.2 if time>`i'
}


gen mean=time+.5 if int_any==0


twoway 	(bar cesd_ time if int_any_30d==0) (bar cesd_ time if int_any_30d==1) ///
	, xlabel(1.5 "24+" 3.7 "18-24m" 5.9 "12-18" ///
	8.1 "6-12" 10.3 "Death" 12.5 "0-6" 14.7 "6-12" 16.9 "12-18" 19.1 "18+" ///
	, noticks) ///
	legend(row(1) order(1 "No intensive procedure" 2 "Intensive procedure")) ///
	ytitle("Percentage 3+ CES_D") xtitle("") ///
	title("% Spouse 3+ CES-D score by time of interview, matched") ///
	subtitle("Months before & after death by int procedure use last 30d")  ///
	yscale(range(0 .75))

graph save `logpath'/mean_cesd_clin_dep_matched, replace

log close
