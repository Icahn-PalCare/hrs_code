= V4 Outline MultiLine NoSorting TabWidth=30

H="Spouse with Medicare linkage"
Starts with dataset created for the spousal depression outcomes project
created in the file spouse_2010.txt
This ds is created in the "Create additional variables" tab of spouse_2010.txt

This has the Spouse Medicare xwalk id already linked in (s_bid_hrs and s_xwalk_yes)

But now this code adds variables derived from the spouse claims

/*data from spouse_2010.txt code - starting point for this work*/
libname spo_fnl 'E:\data\spouse\final_data';

/*data for this project with spouse medicare variables added in*/
libname spo_mc 'E:\data\spouse_claims\data';

/*2000-2010 medicare claims*/
libname medi 'E:\data\cms_DUA_25000_2010';

H="FFS determination for spouse"
/*determine ffs medicare 6 months before R's death using the 
claims denominator files*/

/*sort claims denominator file*/
proc sort data=medi.dn_2000_2010 out=dn_2000_20102  nodupkey;
by BID_HRS_19 year;
run;

/*assign death year using merged dataset with all r and s info
drop variables not needed for finding insurance status
just keep in those observations where s has a medicare xwalk id*/
data r_sp;
set spo_fnl.spouse_data(keep=r_death_date_e r_id r_bid_hrs r_xwalk_yes s_id s_bid_hrs s_xwalk_yes);
if s_xwalk_yes=1;
r_death_year=year(r_death_date_e);
r_death_month=month(r_death_date_e);
run;

proc sort data=r_sp nodupkey; by r_id; run;
proc freq; table s_xwalk_yes; run;

/*get denominator file for just death year for those with xwalk id only*/
proc sql;
create table s_dn_death_y as select
a.*,b.buyin12,b.year,b.HMOIND12
from r_sp a inner join
dn_2000_20102 b
on trim(left(a.s_bid_hrs))=trim(left(b.BID_hrs_19))
and a.r_death_year=b.year;
quit;

proc freq data=s_dn_death_y;
table r_death_year;
run;

/*1915 spouses have denominator file linked year of R's death
cases where spouse remarried after first r's death, and then in sample when 2nd r dies*/
proc sql;
select count(distinct s_bid_hrs) from s_dn_death_y;
quit;

/*note death month is from restricted file*/
data s_dn_death_y2;
set s_dn_death_y;
if length(trim(left(buyin12)))=12 and r_death_month>0 then do;
buyin_dy=substr(trim(left(buyin12)),1,r_death_month);
hmo_dy=substr(trim(left(HMOIND12)),1,r_death_month);
end;
else do;
buyin_dy=trim(left(buyin12));
hmo_dy=trim(left(HMOIND12));
end;
format r_death_date_e date9.;
run;
proc means n;
var r_death_month;
run;

/*Check year prior to death to backfill for death dates
in the first half of the year (since doing 6 mo look back)*/
/* 1756 have the -1 year dn file*/
proc sql;
create table s_dn_death_y_bef as select
a.r_bid_hrs,a.s_bid_hrs,a.year as death_year,
b.year as death_year_bef,
b.year,b.buyin12,b.HMOIND12
from s_dn_death_y a inner join
dn_2000_20102 b
on trim(left(a.s_bid_hrs))=trim(left(b.BID_hrs_19))
and 0<a.year-b.year<=1 order by s_bid_hrs,year;
quit;

proc sql;
create table s_all_insurance as select a.*,b.buyin12 as buyin_bef,b.HMOIND12 as hmo_bef from
s_dn_death_y2 a
left join
s_dn_death_y_bef b
on trim(left(a.s_bid_hrs))=trim(left(b.s_bid_hrs)) and trim(left(a.r_bid_hrs))=trim(left(b.r_bid_hrs));
quit;

/*merge death year and year before death buy-in and hmo variables
Trim so the final variable _6m is 6 months pre-death
Note: indicator variables for parts a and b and hmo are null if don't
have information for full 6 months pre-death*/
data s_all_insurance2;
set s_all_insurance;
buyin_2y=trim(left(buyin_bef))||trim(left(buyin_dy));
hmo_2y=trim(left(hmo_bef))||trim(left(hmo_dy));

buyin_2y_r=reverse(trim(buyin_2y));
hmo_2y_r=reverse(trim(hmo_2y));

/*create 6 month variable*/
if length(buyin_2y_r)>5 then buyin_6m_r=substr(trim(left(buyin_2y_r)),1,6);
if length(hmo_2y_r)>5 then hmo_6m_r=substr(trim(left(hmo_2y_r)),1,6);

if length(buyin_2y_r)<6 then buyin_6m_r="";
if length(hmo_2y_r)<6 then hmo_6m_r="";

buyin_6m=reverse(trim(buyin_6m_r));
hmo_6m=reverse(trim(hmo_6m_r));

/*create indicator variable for mc coverage 6 mo. 0=no, 1=yes*/
if length(buyin_6m)=6 then do;
if indexc(buyin_6m,"0","1","2","A","B") then part_ab_6m=0;
if indexc(buyin_6m,"0","1","2","A","B")=0 then part_ab_6m=1;
end;
if length(hmo_6m)=6 then do;
if index(hmo_6m,"00000") then hmo_d_6m=0;
if index(hmo_6m,"00000")=0 then hmo_d_6m=1;
end;

run;

/*36 observations don't have full denominator data re insurance status
either died Before July 2000 or are missing year -1 dn file*/
proc freq;
table part_ab_6m hmo_d_6m;
run;

data zzzztest;
set s_all_insurance2;
if part_ab_6m=.;
run;

/*bring in insurance indicators to full decedent/spouse dataset*/
proc sql;
create table spo_mc.r_sp_ins as select
a.*, b.part_ab_6m as s_part_ab_6m , b.hmo_d_6m as s_hmo_d_6m 
from spo_fnl.spouse_data a
left join s_all_insurance2 b
on trim(left(a.r_BID_hrs))=trim(left(b.r_BID_hrs));
quit;

proc freq;
table s_part_ab_6m*s_hmo_d_6m;
run;


/*export to stata to get sample size estimate table*/
option fmterr=no;
proc export data=spo_mc.r_sp_ins
outfile="E:\data\spouse_claims\data\r_sp_ins.dta" replace;
run;


H="Sample size requiring xwalk only"
capture log close

clear all
set mem 500m
set more off

//Amy's PC
local logpath E:\data\spouse_claims\logs
local projdatapath E:\data\spouse_claims\data

log using "`logpath'\1-HRS_Spouse_claims_xwalk_sample.txt", text replace

cd "`projdatapath'"
use r_sp_ins.dta

//set matrix for sample size determination table
mat deced_core=J(6,1,.)

//all decedents from 2002-2010 exit interviews
sum r_exit_year_x, detail
mat deced_core[1,1]=r(N)

//check of married decedents
tab r_married_x, missing

gen n1core_ind=.
replace n1core_ind=0 if  r_core_year_n1==.
replace n1core_ind=1 if  r_core_year_n1!=.
tab n1core_ind, missing

//decedents with xwalk
sum r_exit_year_x if r_xwalk_yes==1, detail
mat deced_core[2,1]=r(N)

//with ffs mc last 6 months of life
//have parts a and b coverage and no hmo
gen byte r_ins_ind=.
replace r_ins_ind=1 if r_part_ab_6m==1 & r_hmo_d_6m==0
replace r_ins_ind=0 if r_part_ab_6m!=1 | r_hmo_d_6m!=0
tab r_ins_ind, missing

//decedents with xwalk + ffs mc last 6 months of life
sum r_exit_year_x if r_xwalk_yes==1 & r_ins_ind==1, detail
mat deced_core[3,1]=r(N)

//decedents with xwalk + married
sum r_exit_year_x if r_xwalk_yes==1 & r_ins_ind==1 &  r_married_x==1, detail
mat deced_core[4,1]=r(N)

//with spouse xwalk id
sum r_exit_year_x if r_xwalk_yes==1 & r_ins_ind==1 &  r_married_x==1 & ///
	s_xwalk_yes==1, detail
mat deced_core[5,1]=r(N)

//add spouse has ffs medicare 6 months prior to r's death
//have parts a and b coverage and no hmo
gen byte s_ins_ind=.
replace s_ins_ind=1 if s_part_ab_6m==1 & s_hmo_d_6m==0
replace s_ins_ind=0 if s_part_ab_6m!=1 | s_hmo_d_6m!=0
tab s_ins_ind, missing

//with spouse ffs medicare
sum r_exit_year_x if r_xwalk_yes==1 & r_ins_ind==1 &  r_married_x==1 & ///
	s_xwalk_yes==1 & s_ins_ind==1, detail
mat deced_core[6,1]=r(N)

mat list deced_core
	
frmttable using `logpath'\2010_sample_est , statmat(deced_core) ///
	title("2010 sample size estimate - Spouse requires Medicare link") ///
	ctitle("","n") ///
	rtitle("All decedents from exit interviews" \ "With mc xwalk id" \ ///
	"With FFS mc last 6 months of life" \ "Married at time of death" \ ///
 	"Spouse has mc xwalk id" \ "S has ffs medicare 6 months before R's death") ///
	sdec(0) replace

**********************************************************
log close
